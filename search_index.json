{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["bug没改好就不要去睡觉！","介绍","鬼雕のblog"],"Java/":["java"],"Java/Java基础/":["java基础"],"Java/Java基础/数据类型.html":["!=","&&","(","(i","(integercachehighpropvalu","+","//","0;","1","1);","123","123;","127","127);","127;","128","128;","128~127。","1];","2;","8",":","=","==",">=","\\u0000","\\u007f","array","between","bit","boolean","boolean/~","byte","byte/8位/1字节","cach","cache[];","catch(","char","char/16位/2字节","configur","data","differ","double/64位/8字节","fals","false。jvm","final","float/32位/4字节","for(int","h","h;","high","high;","i)","ignor","int","int,","int/32位/4字节","integ","integer(123)","integer(123),","integer(123);","integer.max_valu","integer.valueof(123)","integer.valueof(123);","integer[(high","integercache.low","integercachehighpropvalu","int，使用","it.","j","java","java®","k","k);","long/64位/8字节","low","low)","low;","m","machin","math.max(i,","math.min(i,","maximum","n","n);","new","nfe)","null)","numberformatexcept","pars","parseint(integercachehighpropvalue);","primit","properti","public","rang","short","short/16位/2字节","size","specif","stackoverflow","static","string","sun.misc.vm.getsavedproperty(\"java.lang.integer.integercache.high\");","system.out.println(m","system.out.println(x","system.out.println(z","tri","true","true，0","type","valu","valueof()","valueof(int","virtual","x","x;","y","y);","z","{","}","与","中，integ","会使用缓存池中的对象，多次调用会取得同一个对象的引用。","会在编译时期将","包装类型","只有两个值：true、false，可以使用","在","在使用这些基本类型对应的包装类型时，就可以直接使用缓冲池中的对象。","基本类型","基本类型对应的缓冲池如下：","基本类型都有对应的包装类型，基本类型与其对应的包装类型之间的赋值使用自动装箱与拆箱完成。","实例使用自动装箱来创建并且值相同，那么就会引用相同的对象。","并不支持","拆箱","数据类型","数组来表示","数组来表示。","数组，而是使用","方法的实现比较简单，就是先判断值是否在缓存池中，如果在的话就直接返回缓存池的内容。","方法，因此多个","来存储，但是具体大小没有明确规定。jvm","来表示","每次都会新建一个对象；","的区别在于：","类型的数据转换为","缓存池","缓存池的大小默认为","编译器会在自动装箱过程调用","表示","装箱"],"Java/Java基础/String.html":["\"abc\"","\"abc\"，#3","\"bbb\"","\"bbb\";","#18","#19","#2","#3","#4","([ljava/lang/string;)v","(permgen)。而在","*/","...","/**","//","0:","1.","2.","3.","3:","4.","4:","6:","7","7，string","8","9","9:",":","=","==","abc","acc_public,","acc_stat","args)","args_size=1","astore_1","byte","byte[]","char","charact","charsequ","class","code:","coder","coder;","comparable,","constant","creek","descriptor:","dup","encod","equals()","fals","final","final，因此它不可被继承。","final，这意味着","flags:","hash","hashmap","identifi","immut","implement","intern()","interning?","invokespeci","java","java.io.serializable,","java/lang/str","java/lang/string.\"\":(ljava/lang/string;)v","java?","javap","key。不可变的特性可以使得","ldc","locals=2,","main","main(java.lang.string[]);","main(string[]","method","new","newstringtest","original)","original.hash;","original.value;","outofmemoryerror","pool","pool:","pool。","pool）保存着所有字符串字面量（liter","pool，即字符串常量池中取得引用。只有","privat","program","public","s","s1","s1.intern()","s1.intern();","s2","s2);","s3","s4","s4);","s5","s6","s6);","stack=3,","stackoverflow","static","storage.","string","string#intern","string(\"aaa\");","string(\"abc\")","string(\"abc\");","string()","string(str","string,","stringbuff","stringbuffer,","stringbuild","strings），这些字面量在编译时期就确定。不仅如此，还可以使用","synchron","system.out.println(s1","system.out.println(s3","system.out.println(s5","this.hash","this.valu","true","us","utf8","valu","value;","value[];","value}.","verbos","void","{","{@code","}","下面示例中，s1","不可变","不可变。","不可变性可以保证参数不可变。例如在作为网络连接参数的情况下如果","不可变性天生具备线程安全，可以在多个线程中安全地使用。","不可变的好处","不可变，因此是线程安全的","不是线程安全的","中。","中创建一个字符串对象，指向这个","中字符串的引用；否则，就会在","中已经存在一个字符串和该字符串值相等（使用","中添加一个新的字符串，并返回这个新字符串的引用。","中的字符串对象作为","中还没有","中，#19","中，string","中，然后返回这个字符串引用。因此","之前，string","之后，string","以下是","使用","使用这种方式一共会创建两个字符串对象（前提是","值","值也不可变，因此只需要进行一次计算。","值经常被使用，例如","内部使用","内部没有改变","创建一个测试类，其","可以缓存","可变","可变性","和","因为","在","在堆中创建一个字符串对象，并且使用","如果一个","如果是采用","字符串字面量；","字符串对象）。","字符串常量池（string","存储字符串字面量","安全性","对象已经被创建过了，那么就会从","对象的那一方以为现在连接的是其它主机，而实际情况却不一定是。","将","属于字符串字面量，因此编译时期会在","引用的字符串放到","引用的是同一个字符串。","当一个字符串调用","数组。","数组内容，而是都会指向同一个","数组初始化之后就不能再引用其它数组。并且","数组存储字符串，同时使用","数组存储数据。","数组的方法，因此可以保证","数组被声明为","方法中使用这种方式来创建字符串对象。","方法中，0:","方法取得一个字符串引用。intern()","方法在运行过程中将字符串添加到","方法时，如果","方法进行确定），那么就会返回","是","是不可变的，才可能使用","是可变的，那么在网络连接过程中，string","是线程安全的，内部使用","是通过","来标识使用了哪种编码。","构造函数的参数。","构造函数的源码，可以看到，在将一个字符串对象作为另一个字符串对象的构造函数参数时，并不会完全复制","概览","深入解析","用做","的","的字符串对象，它指向","的方式会在堆中创建一个字符串对象。","的方式新建了两个不同字符串，而","的需要","类的实现改用","线程安全","经常作为参数，string","而使用","行使用","被声明为","被改变，改变","被放在运行时常量池中，它属于永久代","被移到堆中。这是因为永久代的空间有限，在大量使用字符串的场景下会导致","这个字符串字面量。在","这种字面量的形式创建字符串，会自动地将字符串放入","进行反编译，得到以下内容：","进行同步","采用","错误。","首先把"],"Java/Java基础/参数传递.html":["//","=","args)","b","class","clipboarderrorcopi","dog","dog(\"a\");","dog(\"b\");","dog(str","dog)","dog.setname(\"b\");","dog@4554617c","dog@74a14482","func(dog","func(dog);","getname()","getobjectaddress()","java","main(string[]","name)","name;","new","passbyvalueexampl","privat","public","reference”","return","setname(str","stackoverflow:","static","string","super.tostring();","system.out.println(dog.getname());","system.out.println(dog.getobjectaddress());","this.nam","this.name;","value”?","void","{","}","}copi","“pass","以下代码中","参数传递","如果在方法中改变对象的字段值会改变原对象该字段值，因为改变的是同一个地址指向的内容。","是一个指针，存储的是对象的地址。在将一个参数传入一个方法时，本质上是将对象的地址以值的方式传递到形参中。因此在方法中使指针引用其它对象，那么这两个指针此时指向的是完全不同的对象，在一方改变其所指向对象的内容时对另一方没有影响。","的","的参数是以值传递的形式传入方法中，而不是引用传递。"],"Java/Java基础/抽象类和接口.html":["'abstractclassexample'","'interfaceexample'","'private'","'protected'","'public'","'y'","(如果子类的方法重写了父类的方法，那么子类中该方法的访问级别不允许低于父类的访问级别，这也是满足里式替换原则以确保可以使用父类实例的地方都可以使用子类实例)，即子类对象必须能够替换掉所有父类对象。而接口更像是一种","+","//","0;","1.","123;","2.","3.","4.","8","=","@overrid","abstract","abstract;","abstractclassexampl","abstractclassexample();","abstractextendclassexampl","abstractextendclassexample();","ac1","ac2","ac2.func1();","allow","class","compar","compareto()","default","extend","field","final","fun3();","func1()","func1();","func2()","func2(){","here","ie1","ie2","ie2.func1();","implement","initi","instanti","int","interfac","interfaceexampl","interfaceexample();","interfaceimplementexampl","interfaceimplementexample();","java","k","l","modifi","new","privat","protect","protected。","public","public。","redund","static","system.out.println(\"func1\");","system.out.println(\"func2\");","system.out.println(interfaceexample.x);","us","variabl","void","x","x;","y;","z","{","}","之前，如果一个接口想要添加新的方法，那么要修改所有实现了该接口的类。","之前，它可以看成是一个完全抽象的类，也就是说它不能有任何的方法实现。","从","从使用上来看，一个类可以实现多个接口，但是不能继承多个抽象类。","从设计层面上看，抽象类提供了一种","使用抽象类：","使用接口：","使用选择","关系。","关系，它只是提供一种方法实现契约，并不要求接口和实现接口的类具有","关系，那么就必须满足里式替换原则","关键字进行声明。抽象类一般会包含抽象方法，抽象方法一定位于抽象类中。","和","在很多情况下，接口优先于抽象类。因为接口没有抽象类严格的类层次结构要求，可以灵活地为一个类添加行为。并且从","开始，接口也可以拥有默认的方法实现，这是因为不支持默认方法的接口的维护成本太高了。在","开始，接口也可以有默认的方法实现，使得修改接口的成本也变的很低。","或者","抽象类","抽象类与接口","抽象类和抽象方法都使用","抽象类和接口","抽象类和普通类最大的区别是，抽象类不能被实例化，需要继承抽象类才能实例化其子类。","接口","接口中的","接口是抽象类的延伸，在","接口的字段只能是","接口的字段默认都是","接口的成员只能是","接口的成员（字段","方法）默认都是","方法；","比较","深入理解","的。","的，并且不允许定义为","的，而抽象类的成员可以有多种访问权限。","类型的，而抽象类的字段没有这种限制。","需要使用多重继承。","需要在几个相关的类中共享代码。","需要继承非静态和非常量字段。","需要能控制继承来的成员的访问权限，而不是都为","需要让不相关的类都实现一个方法，例如不相关的类都可以实现"],"Java/Java基础/Object类中的方法.html":["!=","&&","'clone()'","'java.lang.object'","(cloneexample)super.clone();","(clonenotsupportedexcept","(equalexample)","(int","(o","(thi","(x","(x.equals(y)","(x，编译器会自动进行这个优化。","(y","*","+","//","0;","1);","1,","1.","17","17;","2","2.","222","222);","3.","31","31，因为它是一个奇素数，如果是偶数的话，当出现乘法溢出，信息就会丢失，因为与","4.","=","==","@overrid","a;","access","arr","arr;","b;","boolean","catch","class","clone()","clone()，其它类就不能直接去调用该类实例的","clone()，可以使用拷贝构造函数或者拷贝工厂来拷贝一个对象。","cloneabl","cloneconstructorexampl","cloneconstructorexample()","cloneconstructorexample();","cloneconstructorexample(e1);","cloneexampl","cloneexample();","clonenotsupportedexcept","clonenotsupportedexception。","clonenotsupportedexception，这是因为","deepcloneexampl","deepcloneexample()","deepcloneexample();","e)","e.printstacktrace();","e1","e1.clone();","e1.set(2,","e2","equalexampl","equalexample(1,","equalexample(int","equals()","equals(object","fals","false;","false；","final","finalize()","getclass()","hascode()","hashcode()","hashset","hashset<>();","implement","int","int[10];","int[]","integ","integer(1);","interruptedexcept","java","java.lang.clonenotsupportedexception:","nanos)","nativ","new","notify()","notifyall()","null","null;","o)","o.getclass())","o;","obj)","object","object类中的方法","privat","protect","public","public，一个类不显式去重写","r","result","result;","return","set","set.add(e1);","set.add(e2);","shallowcloneexampl","shallowcloneexample()","shallowcloneexample();","string","super.clone();","system.out.println(e1.equals(e2));","system.out.println(e2.get(2));","system.out.println(set.size());","system.out.println(x","system.out.println(x.equals(y));","that.x)","that.y)","that.z;","this.i","this.x","this.z","throw","throwabl","timeout)","timeout,","tostring()","tri","true","true;","true；","void","wait()","wait(long","x","x,","x.equals(null)","x.equals(null);","x.equals(x);","x.equals(y)","x.equals(y);","x.equals(z);","x;","y","y);","y,","y.equals(x);","y.equals(z))","y;","z","z)","z;","{","{}","|","||","|括起来的部分表示r进制整数中的一位。","|，|","}","ⅰ","ⅱ","ⅲ","ⅳ","ⅴ","一个数与","一致性","一般取","下面是对","下面的代码中，新建了两个等价的对象，并将它们添加到","与","中hashcode()","中。我们希望将这两个对象当成一样的，只在集合中添加一个对象，但是因为","书上讲到，最好不要去使用","以上抛出了","传递性","使用","判断两个值是否相等，基本类型没有","判断两个变量是否引用同一个对象，而","判断引用的对象是否等价。","判断每个关键域是否相等。","在覆盖","多次调用","实现","对于基本类型，==","对于引用类型，==","对任何不是","对称性","对象进行转型；","将","应该注意的是，clone()","得到以下实现：","拷贝对象和原始对象的引用类型引用不同对象。","拷贝对象和原始对象的引用类型引用同一个对象。","接口。","接口又调用了","接口只是规定，如果一个类没有实现","接口的方法，而是","方法。","方法。cloneabl","方法并不是","方法时应当总是覆盖","方法来拷贝一个对象即复杂又有风险，它会抛出异常，并且还需要类型转换。effect","方法的重写，r取31，r进制整数的第一位取17，因此该r进制整数可以看作|","方法结果不变","方法，保证等价的两个对象散列值也相等。","方法，因此这两个对象的散列值是不同的，最终导致集合添加了两个等价的对象。","方法，它不是","方法，就会抛出","是","是用来判断两个对象是否等价。等价的两个对象散列值一定相同，但是散列值相同的两个对象不一定等价。","检查是否为同一个对象的引用，如果是直接返回","检查是否是同一个类型，如果不是，直接返回","概览","没有实现","浅拷贝","深拷贝","理想的散列函数应当具有均匀性，即不相等的对象应当均匀分布到所有可能的散列值上。这就要求了散列函数要把所有域的值都考虑进来。可以将每个域都当成","的","的一个","的对象","的替代方案","的比较","相乘可以转换成移位和减法：31*x","相乘相当于向左移一位。","等价与相等","等价关系","结果都为","自反性","调用","返回散列值，而","进制的整数。r","进制的某一位，然后组成一个","重写"],"Java/Java基础/final和static.html":["\"实例变量\";","\"静态变量\";","'a.this'","'abstract'","'outerclass.this'","'static'","'x'","'y'","//","1.","123","2.","3.","4.","5.","6.","=","a();","a.x;","a.y;","a1","a2","abstract","args)","b","class","classname，从而简化代码，但会大大降低可读性。","com.xxx.classname.*","combin","context","field","final","final和stat","final，如果在子类中定义的方法和基类中的一个","func1(){","func2();","illeg","import","initialordertest()","innerclass","innerclass();","int","main(string[]","modifiers:","new","non","outerclass","outerclass();","outerclass.new","privat","public","referenc","static","staticfield","staticinnerclass","staticinnerclass();","string","super","system.out.println(\"123\");","system.out.println(\"普通语句块\");","system.out.println(\"构造函数\");","system.out.println(\"静态语句块\");","this.y;","void","x","x;","y","y;","{","}","使引用不变，也就不能引用其它对象，但是被引用的对象本身是可以修改的。","使数值不变；","关键字。","初始化顺序","和","在使用静态变量和方法时不用再指明","声明数据为常量，可以是编译时常量，也可以是在运行时被初始化后不能被改变的常量。","声明方法不能被子类重写。","声明类不允许被继承。","子类（实例变量、普通语句块）","子类（构造函数）","子类（静态变量、静态语句块）","存在继承的情况下，初始化顺序为：","实例变量","实例变量：每创建一个实例就会产生一个实例变量，它与该实例同生共死。","对于基本类型，final","对于引用类型，final","数据","方法","方法签名相同，此时子类的方法不是重写基类方法，而是在子类中定义了一个新的方法。","方法隐式地被指定为","最后才是构造函数的初始化。","父类（实例变量、普通语句块）","父类（构造函数）","父类（静态变量、静态语句块）","类","静态内部类","静态内部类不能访问外部类的非静态的变量和方法。","静态变量","静态变量和静态语句块优先于实例变量和普通语句块，静态变量和静态语句块的初始化顺序取决于它们在代码中的顺序。","静态变量：又称为类变量，也就是说这个变量属于类的，类所有的实例都共享静态变量，可以直接通过类名来访问它。静态变量在内存中只存在一份。","静态导包","静态方法","静态方法只能访问所属类的静态字段和静态方法，并且方法中不能有","静态方法在类加载的时候就存在了，它不依赖于任何实例。所以静态方法必须有实现，也就是说它不能是抽象方法。","静态语句块","静态语句块在类初始化时运行一次。","非静态内部类依赖于外部类的实例，而静态内部类不需要。"],"Java/Java基础/异常.html":["0","arithmet","error","exception。其中","exception，此时程序崩溃并且无法恢复。","java","java异常处理框架只能处理运行时错误，编译错误不在其考虑范围之内。","java异常的层级结构","jvm","throwabl","try...catch...","什么是java异常","会引发","入门之异常处理","分为两种：","受检异常","只要在java语句执行中产生了异常，一个异常对象就会被创建，jre就会试图寻找异常处理程序来处理异常。如果有合适的异常处理程序，异常对象就会被异常处理程序接管，否则，将引发运行环境异常，jre终止程序执行。","可以用来表示任何可以作为异常抛出的类，分为两种：","和","异常","异常是发生在程序执行过程中阻碍程序正常执行的错误事件。比如：用户输入错误数据、硬件故障、网络阻塞等都会导致出现异常。","无法处理的错误，而except","用来表示","语句捕获并进行处理，并且可以从异常中恢复；","非受检异常","：是程序运行时错误，例如除","：需要用"],"Java/Java容器/":["1.","2.","3.","arraylist","arraylist：基于动态数组实现，支持随机访问。","collect","concurrenthashmap","hashmap","hashmap：基于哈希表实现。","hashset","hashset，hashset","hashset：基于哈希表实现，支持快速查找，但不支持有序性操作。并且失去了元素的插入顺序信息，也就是说使用","hashtabl","hashtable：和","iter","java容器","linkedhashmap：使用双向链表来维护元素的顺序，顺序为插入顺序或者最近最少使用（lru）顺序。","linkedhashset：具有","linkedlist：可以用它来实现队列或双向队列。","linkedlist：基于双向链表实现，只能顺序访问，但是可以快速地在链表中间插入和删除元素。不仅如此，linkedlist","list","map","o(1)，treeset","o(logn)。","priorityqueue：基于堆结构实现，可以用它来实现优先队列。","queue","set","synchron","treemap：基于红黑树实现。","treeset：基于红黑树实现，支持有序性操作，例如根据一个范围查找元素的操作。但是查找效率不如","vector：和","两种，collect","关键字修饰，因此是线程安全的。","则为","和","存储着对象的集合，而","存储着键值对（两个对象）的映射表。","容器主要包括","并且不会导致数据不一致。它是遗留类，不应该去使用它。现在可以使用","引入了分段锁。","得到的结果是不确定的。","来支持线程安全，并且","查找的时间复杂度为","概览","的效率会更高，因为","的查找效率，且内部使用双向链表维护元素的插入顺序。","类似，但它是线程安全的，这意味着同一时刻多个线程可以同时写入","类似，但它的每个方法都用","还可以用作栈、队列和双向队列。","遍历","都是接口，collect"],"Java/Java容器/ArrayList.html":["(elementdata","(int","(mincapac","(newcapac","(nummov","(oldcapac","+","//","0)","1);","1)，也就是旧容量的","1.","1.5","10。","1;","2.","3.","4.","=","==",">",">>","add(","arraylist","arrays.copyof()","arrays.copyof(elementdata,","behaviour","boolean","capac","clear","clone()","close","code","compat","concurrentmodificationexception。","consciou","count,","defaultcapacity_empty_elementdata)","e","e)","e;","element","elementdata","elementdata(index);","elementdata,","elementdata.length","elementdata.length;","elementdata[","elementdata[size++]","ensurecapacityinternal()","ensurecapacityinternal(int","ensurecapacityinternal(s","ensureexplicitcapacity(int","ensureexplicitcapacity(mincapacity);","expectedmodcount","fail","fast","gc","grow()","grow(int","grow(mincapacity);","hidden","hugecapacity(mincapacity);","i=0;","increment","index","index)","index+1","index+1,","index,","int","java.io.ioexception{","math.max(default_capacity,","mincapac","mincapacity)","mincapacity);","modcount","modcount!!","modcount++;","modcount;","newcapac","newcapacity);","null;","nummov","nummoved);","o(n)，可以看出","oldcapac","oldvalu","oldvalue;","order.","out","overflow","privat","proper","public","randomaccess","rangecheck(index);","remove(int","return","s)","s.defaultwriteobject();","s.writeint(size);","size","size,","size]","stuff","system.arraycopy()","system.arraycopy(elementdata,","throw","true;","usual","void","win:","work","write","writeobject(java.io.objectoutputstream","{","}","位置上，该操作的时间复杂度为","倍。","删除元素","删除元素的代价是非常高的。","后面的元素都复制到","在进行序列化或者迭代等操作时，需要比较操作前后","实现了","对象时就指定大概的容量大小，减少扩容操作的次数。","将","扩容","扩容操作需要调用","把原数组整个复制到新数组中，这个操作代价很高，因此最好在创建","接口，因此支持随机访问。","数组的默认大小为","方法来保证容量足够，如果不够时，需要使用","方法进行扩容，新容量的大小为","是否改变，如果改变了需要抛出","概览","添加元素时使用","用来记录","结构发生变化的次数。结构发生变化是指添加或者删除至少一个元素的所有操作，或者是调整内部数组的大小，仅仅只是设置元素的值不算结构发生变化。","需要调用"],"Java/Java容器/ConcurrentHashMap.html":["!=","(;;)","(c","(int","(retries++","(seg","*","*/","+=","/**","//","0;","0l;","1","1.","1.7","1.8","16","16，也就是说默认创建","1;","1，因此尝试次数为","2.","2249069246763182397l;","2;","2，retri","3","3.","32","3。","64",":","=","==",">","?","access","accur","async","avoid","befor","bit","boolean","c","ca","chang","class","concurrenthashmap","containsvalu","continu","count","count.","count;","due","elements.","entri","extend","failur","few","final","first","float","hash;","hashentri","hashentry[]","hashmap","implement","imposs","int","isn't","iter","j","j);","jdk","k","key;","last","loadfactor;","lock","locking.","long","maintain","make","max_scan_retri","method","modcount","modcount;","modif","next","next;","null)","number","obtain","overflow","overflow;","previou","privat","public","read","reentrantlock","reentrantlock。","reentrantlock，并发度与","resort","result.","retri","retries_before_lock","retries_before_lock)","runtime.getruntime().availableprocessors()","seg","seg.count;","seg.modcount;","segment","segment[]","segmentat(segments,","segments;","segment。","segment，它继承自重入锁","serializ","serialversionuid","size","size()","size;","size操作","static","sum","sum;","synchronized，jdk","synchronized，而且1.8","tabl","table,","table;","this.segments;","threshold;","time","transient","tri","true","unbound","undergo","unsynchron","us","v","valu","value;","visibility.","volatil","within","{","}","个","中的","中的键值对个数。","也作了很多优化。","使用了","使用分段锁机制来实现并发更新操作，核心类为","修饰的，保证了获取时的可见性。","初始值为","加锁","加锁。","变量来统计该","和","在执行","如果尝试的次数超过","存储结构","定义，该值为","实现上类似，最主要的差别是","对synchron","尝试次数使用","操作失败时使用内置锁","操作时先尝试不加锁，如果连续两次不加锁操作得到的结果一致，那么可以认为这个结果是正确的。","操作时，需要遍历所有","操作来支持更高的并发度，在","数量相等。","次，就需要对每个","每个","然后把","的个数）。","的实现也在链表过长时会转换为红黑树。","的改动","的结构","类似，唯一的区别就是其中的核心数据如","累计起来。","继承自","维护了一个","超过尝试次数，则对每个","都是用","采用了分段锁（segment），每个分段锁维护着几个桶（hashentry），多个线程可以同时访问不同分段锁上的桶，从而使其并发度更高（并发度就是","默认的并发级别为","，以及"],"Java/Java容器/CopyOnWriteArrayList.html":["(e)","+","1);","1.","2.","=","@suppresswarnings(\"unchecked\")","a)","a,","a;","a[index];","add(","array","arrays.copyof(elements,","boolean","copyonwritearraylist","e","e)","e;","element","elements.length;","final","get(object[]","getarray();","index)","int","len","lock","lock.lock();","lock.unlock();","newel","newelements[len]","object[]","privat","public","reentrantlock","return","setarray(newelements);","setarray(object[]","this.lock;","tri","true;","void","{","}","不适合内存敏感以及对实时性要求很高的场景。","但是","内存占用：在写操作时需要复制一个新的数组，使得内存占用为原来的两倍左右；","写操作在一个复制的数组上进行，读操作还是在原始数组中进行，读写分离，互不影响。","写操作结束之后需要把原始数组指向新的复制数组。","写操作需要加锁，防止并发写入时导致写入数据丢失。","在写操作的同时允许读操作，大大提高了读操作的性能，因此很适合读多写少的应用场景。","所以","数据不一致：读操作不能读取实时性的数据，因为部分写操作的数据还未同步到读数组中。","有其缺陷：","读写分离","适用场景"],"Java/Java容器/HashMap.html":["!=","\"=\"","\"v1\");","\"v2\");","\"v3\");","&","&&","(!(o","((k","((size","(*)","(0","(approxim","(e","(e.hash","(e.key","(entri","(h","(int","(int)(newcapac","(k1","(key","(length","(map.entry)o;","(n","(null","(oldcapac","(size++","(tabl","(v1","*","+","+16。","//","0","0);","00000010","00001111","00010000","00100000","0;","0，那么取模得到的结果和之前一样；","1","1)","1);","1.","1.7","1.8","100000000","10010000","10010000，它的掩码为","10110010","11011000","11111110","11111111","11111111，可以使用以下方法得到：","115%16=3。","115，使用除留余数法得到所在的桶下标","118%16=6。","118%16=6，插在","118，使用除留余数法得到所在的桶下标","12);","16;","16。需要注意的是","16，扩容之后","16；","1;","1，那么得到的结果为原来的结果","2","2.","20)","2;","3.","32：","4","4);","4.","4.1","4.2","4;","5","5.","6.","7)","7.","8","8.","8;","9.",":","=","==",">=",">>",">>>","?","^","^=","addentry(0,","addentry(hash,","addentry(int","bit","boolean","bound","bucketindex","bucketindex)","bucketindex);","cap","cap)","capac","class","collis","constant","createentry(hash,","createentry(int","default","default_initial_capac","differ","e","e);","e.getkey();","e.getvalue();","e.key)","e.next","e.next)","e.next;","e.recordaccess(this);","e.valu","e.value;","e;","each","empty_table)","ensur","entri","entry(int","entry<>(hash,","entry[]","entry[newcapacity];","entry。","equals(object","factor).","fail","false;","fast","final","function","getkey()","getkey();","getvalue()","getvalue();","h","h,","h;","hash","hash(key)","hash(key);","hash(object","hash,","hash;","hashcod","hashcode()","hashmap","hashmap<>();","hashmap，默认大小为","hashseed;","hashtabl","i);","implement","indexfor(e.hash,","indexfor(hash,","indexfor(int","inflatetable(threshold);","instanceof","int","integer.max_value;","j","jdk","k","k)","k);","k,","k.hashcode();","k1","k1.equals(k2)))","k2","k3","k;","key","key)","key,","key.equals(k)))","key;","key，","length)","load","load_factor。","loadfactor","loadfactor);","loadfactor。","m","map","map.entri","map.entry))","map.put(\"k1\",","map.put(\"k2\",","map.put(\"k3\",","mask","mask+1","maximum_capac","maximum_capacity)","modcount++;","multipl","m，需要存储的键值对数量为","n","n)","n/m","n/m，因此平均查找次数的复杂度为","n;","new","newcapac","newcapacity)","newcapacity);","newtabl","newtable)","newtable.length;","newtable;","newtable[i]","newtable[i];","newvalue)","newvalue;","next","next;","null","null)","null);","null,","null;","num","number","n，如果哈希函数满足均匀性的要求，那么每条链表的长度大约为","o(n/m)。","o)","object","objects.hashcode(getkey())","objects.hashcode(getvalue());","objects.hashcode(key)","objects.hashcode(value);","oldcapac","oldtabl","oldtable.length;","oldvalu","oldvalue;","posit","privat","public","put(k","putfornullkey(v","putfornullkey(value);","put操作","resize()","resize(2","resize(int","return","return;","setvalue(v","size","size++;","src","src[j]","src[j];","static","string","string)","sun.misc.hashing.stringhash32((string)","synchron","tabl","table.length);","table;","table[0];","table[bucketindex]","table[bucketindex]))","table[bucketindex];","table[i];","tablesizefor(int","table。","threshold","threshold)","tostring()","transfer(entry[]","transfer(newtable);","transient","true;","v","v,","v1","v1.equals(v2)))","v2","v;","valu","value)","value,","value;","void","x","y","y%x","y&(x","{","|=","||","}","不是插在","不能保证随着时间的推移","不过这里为什么要","与","个桶存放键为","中的元素次序是不变的。","中计算数组容量的代码：","中，因此这一步是很费时的。","为","为主。","为了便于理解，以下源码分析以","为了让查找的成本降低，应该尽可能使得","为原来的两倍。","从","从下面的添加元素代码中可以看出，当需要扩容时，令","令","令一个数","以下是","位上为","位以上数：","位级表示的第","使用","使用了一个特殊的机制，可以降低重新计算桶下标的操作。","使用拉链法来解决冲突，同一个链表中存放哈希值相同的","使用第","使用链表的头插法，也就是新的键值对插在链表的头部，而不是链表的尾部。","值对桶个数取模：hash%capacity，如果能保证","值来调整","值，使得空间效率和时间效率都能得到保证。","假设原数组长度","做与运算，可以去除","允许插入键为","先于","先找出是否已经存在键为","先考虑如何求一个数的掩码，对于","内部包含了一个","前面。","单独处理","参数","取模","取模效果是一样的：","可以插入键为","后面，而是插入在链表头部。","含义","呢？","和","和hashtable的比较","和扩容相关的参数主要有：capacity、size、threshold","在进行扩容时，需要把键值对重新放到对应的桶上。hashmap","在链表上顺序查找，时间复杂度显然和链表的长度成正比。","大于等于","头插法，链表头部指向新的键值对","如果为","字段我们可以看出","存储着键值对。它包含了四个字段，从","存储结构","它的哈希值如果在第","实现，需要注意的是，扩容操作同样需要把","对","对于一个","就必须进行扩容操作。","尽可能大，也就是说","尽可能小，因此需要保证","应该注意到链表的插入是以头插法方式进行的，例如上面的","开始，一个桶存储的链表长度大于","很多操作都需要先确定一个键值对所在的桶下标。","必须保证为","我们知道，位运算的代价比求模运算小的多，因此在进行这种计算时用位运算的话能带来更高的性能。","执行","扩容","扩容使用","拉链法的工作原理","插入","插入新键值对","新建一个","方法，也就无法确定该键值对的桶下标，只能通过强制指定一个桶下标来存放。hashmap","时会将链表转换为红黑树。","是一个链表。即数组中的每个位置被当成一个桶，一个桶存放一个链表。hashmap","是大于原始数字的最小的","来进行同步。","构造函数允许用户传入的容量不是","查找需要分成两步进行：","次方。","次方，因为它可以自动地将传入的容量转换为","次方，那么就可以将这个操作转换为位运算。","的","的临界值，当","的容量大小，默认为","的所有键值对重新插入","的迭代器是","的键值对。","的键值对。但是因为无法调用","的键值对，如果存在的话就更新这个键值对的值为","确定桶下标","确定桶下标的最后一步是将","类型的数组","能够使用的比例，threshold","装载因子，tabl","要尽可能大。hashmap","计算hash值","计算数组容量","计算键值对所在的桶；","设","这个性质和","迭代器。","采用动态扩容来根据当前的","重新计算桶下标","链表转红黑树","键为","键值对数量。","键值对，先计算","长度为"],"Java/Java容器/LinkedHashMap.html":["!=","\"a\");","\"b\");","\"c\");","\"d\");","&&","(a","(accessord","(b","(eldest)","(evict","(first","(last","(linkedhashmap.entry)e,","(youngest)","*","*/","++modcount;","/**","//","0.75f,","1.","2.","3.","3;","3；","4.","=","==",">","a.befor","a;","accessord","accessorder;","afternodeaccess()","afternodeaccess(nod","afternodeinsertion()","afternodeinsertion(boolean","args)","b","b.after","b;","boolean","cach","cache.get(1);","cache.put(1,","cache.put(2,","cache.put(3,","cache.put(4,","class","doubli","e)","eldest","eldest)","evict","evict)","extend","false,","false;","false，在这里为","false，如果需要让它为","false，此时维护的是插入顺序，当设置为","final","first.key;","first;","first。","hashmap","hashmap，因此具有和","head","head)","head;","implement","int","k","key","key,","last","last.aft","last;","link","linkedhashmap","linkedhashmap.entri","list.","lru","lrucach","lrucache()","lrucache<>();","lru缓存","main(string[]","map","max_entri","max_entries;","move","new","node","null","null)","null,","null;","p","p)","p.after","p.after;","p.befor","p.before,","p;","possibl","privat","protect","public","put","put、get","remov","removeeldestentry()","removeeldestentry(first))","removeeldestentry(map.entri","removenode(hash(key),","return","size()","static","super(max_entries,","system.out.println(cache.keyset());","tail","tail)","tail;","transient","true","true);","true。","true，则会将该节点移到链表尾部。也就是说指定为","true，开启","true，需要继承","void","{","}","一样的快速查找特性。","为","以下是使用","使用","内部维护了一个双向链表，用来维护插入顺序或者","决定了顺序，默认为","只有在构建","在","存储结构","实现的一个","就会将最近最久未使用的数据移除。","并且覆盖这个方法的实现，这在实现","当一个节点被访问时，如果","方法实现，在节点多于","方法返回","时会移除最晚的节点，也就是链表首部节点","时，表示维护的是","最重要的是以下用于维护顺序的函数，它们会在","的时候才为","的构造函数将","的缓存中特别有用，通过移除最近最久未使用的节点，从而保证缓存空间足够，并且缓存的数据都是热点数据。","等操作之后执行，当","等方法中调用。","继承自","缓存：","覆盖","设定最大缓存空间","设置为","顺序。","顺序之后，在每次访问一个节点时，会将这个节点移到链表尾部，保证链表尾部是最近访问的节点，那么链表首部就是最近最久未使用的节点。","顺序；","默认为"],"Java/Java容器/LinkedList.html":["1.","2.","arraylist","class","e","first","first;","item;","last","last;","linkedlist","next;","node","prev;","privat","static","transient","{","}","不支持；","与arraylist的比较","和","在任意位置添加删除元素更快。","基于动态数组实现，linkedlist","基于双向链表实现，使用","基于双向链表实现；","存储链表节点信息。","指针：","支持随机访问，linkedlist","概览","每个链表存储了"],"Java/Java容器/Vector.html":["(index","+","1);","1.","1.5","2","2.","3.","=",">=","add(","arrayindexoutofboundsexception(index);","arraylist","arraylist<>();","arraylist。","boolean","collections.synchronizedlist();","collections.synchronizedlist(list);","concurr","copyonwritearraylist","copyonwritearraylist<>();","e","e)","e;","elementcount)","elementdata(index);","elementdata[elementcount++]","ensurecapacityhelper(elementcount","get(int","index)","list","modcount++;","new","public","return","synchron","synlist","throw","true;","vector","vector，因为同步操作完全可以由程序员自己来控制；","{","}","与arraylist的比较","也可以使用","倍。","倍空间，而","可以使用","同步","它的实现与","并发包下的","得到一个线程安全的","是","是同步的，因此开销就比","替代方案","每次扩容请求其大小的","类。","类似，但是使用了","而不是","要大，访问速度更慢。最好使用","进行同步。"],"Java/Java容器/WeakHashMap.html":["!=","(*)","(this.eden.size()","(v","(而hashmap","1.","2.","=","==",">=","class","concurrentcach","concurrentcache(int","concurrenthashmap","concurrenthashmap<>(size);","eden","eden;","entri","extend","final","get()","get(k","implement","int","jvm","k)","k,","longterm","longterm;","longterm，longterm","map","map.entri","new","null)","privat","public","put()","put(k","return","size)","size;","size，那么就将","static","this.eden","this.eden.clear();","this.eden.get(k);","this.eden.put(k,","this.longterm","this.longterm.get(k);","this.longterm.putall(this.eden);","this.siz","tomcat","v","v)","v);","v;","void","weakhashmap","weakhashmap<>(size);","weakrefer","weakreference，被","{","}","不常用的对象放入","中由于每个元素都有一个桶去引用，因此不会被垃圾回收器回收)。","中的","中的所有对象都放入","中，eden","中，从而保证经常被访问的节点不容易被回收。","中，利用虚拟机回收掉一部分不经常使用的对象。","主要用来实现缓存，通过使用","使用","使用了","关联的对象在下一次垃圾回收时会被回收","区获取，如果没有找到的话再到","存储结构","实现，不用担心会被回收（伊甸园）；","实现，这些老对象会被垃圾收集器回收。","对这部分缓存进行回收。","当调用","方法时，会先从","方法时，如果","来实现缓存功能。","来引用缓存对象，由","的","的大小超过了","经常使用的对象放入","继承自","获取到就把对象放入","获取，当从","采取的是分代缓存："],"Java/Java并发/":["java并发"],"Java/Java并发/线程基础.html":["(!interrupted())","(blocking)","(int","(interruptedexcept","(new)","(runnable)","(terminated)","(time","(waiting)","..","...","/","//","0;","1","1.","123;","2.","3.","=",">","@overrid","args)","cachedthreadpool：一个任务创建一个线程；","call()","callabl","cancel(true)","catch","class","cpu","daemon","e)","e.printstacktrace();","end","end\");","executionexception,","executor","executorinterruptexample$$lambda$1/1160460865.run(unknown","executorinterruptexample.lambda$main$0(executorinterruptexample.java:9)","executors.newcachedthreadpool();","executorservic","executorservice.execute(()","executorservice.shutdownnow();","executor：","extend","fixedthreadpool。","fixedthreadpool：所有任务只能使用固定大小的线程；","ft","futur","futuretask","futuretask<>(mc);","i/o","implement","instanc","integ","interrupt","interrupt()","interrupted()","interruptedexcept","interruptedexception，从而提前结束线程，不执行之后的语句。","interruptedexception，从而提前结束该线程。但是不能中断","interruptedexception，因为异常不能跨线程传播回","interruptexampl","interruptexample$$lambda$1/713338599.run(unknown","interruptexample.lambda$main$0(interruptexample.java:5)","java","java.lang.interruptedexception:","java.lang.thread.run(thread.java:745)","java.lang.thread.sleep(n","java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)","java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)","lambda","locksupport.park()","locksupport.parknanos()","locksupport.parkuntil()","locksupport.unpark(thread)","main","main()","main(string[]","mc","method)","mt","mt.start();","mycal","mycallable();","myrunn","myrunnable());","myrunnable();","mythread","mythread();","mythread1","mythread1();","mythread2","mythread2();","new","object.notify()","object.notifyall()","object.wait()","privat","public","ready。","return","run","run\");","run()","runabl","runnabl","setdaemon()","shutdown()","shutdownnow()","singlethreadexecutor：相当于大小为","sleep","sleep()","source)","start()","static","submit()","synchron","system.out.println(\"main","system.out.println(\"thread","system.out.println(ft.get());","thread","thread(ft);","thread(instance);","thread(new","thread.join()","thread.setdaemon(true);","thread.sleep()","thread.sleep(2000);","thread.sleep(3000);","thread.sleep(millisec)","thread.start();","thread.yield()","thread.yield();","thread1","thread1.interrupt();","thread1.start();","thread2","thread2.interrupt();","thread2.start();","throw","timeout","tri","true。因此可以在循环体中使用","void","vs","waiting)","xecutor","yield()","{","}","});","一、线程状态转换","一个线程执行完毕之后会自动结束，如果在运行过程中发生异常也会提前结束。","三、基础线程机制","不支持多重继承，因此继承了","与","中启动一个线程之后再中断它，由于线程中调用了","中的一个线程，可以通过使用","中，因此必须在本地进行处理。线程中抛出的其它异常也同样需要在本地进行处理。","主要有三种","二、使用线程","以下使用","但是调用","使用","关于线程的具体介绍参加","创建后尚未启动。","创建线程，相当于创建了一个匿名内部线程。","包含了操作系统线程状态中的","单位为毫秒。","参数的","可以是线程结束任务之后自己结束，或者产生了异常而结束。","可以有返回值，返回值通过","可能会抛出","可能正在运行，也可能正在等待","可运行","同样也是需要实现","和","四、中断","如果一个线程的","如果只想中断","守护线程是程序运行时在后台提供服务的线程，不属于程序中不可或缺的部分。","实现","实现callable接口","实现runnable接口","实现接口","实现接口会更好一些，因为：","对于以下代码，在","对象，通过调用该对象的","对静态方法","属于非守护线程。","当所有非守护线程结束时，程序也就终止，同时会杀死所有守护线程。","当调用","接口。","接口的类只能当做一个可以在线程中运行的任务，不是真正意义上的线程，因此最后还需要通过","接口；","新建","方法","方法。","方法会休眠当前正在执行的线程，millisec","方法会等待线程都执行完毕之后再关闭，但是如果调用的是","方法会设置线程的中断标记，此时调用","方法会返回","方法使线程进入限期等待或者无限期等待时，常常用“挂起一个线程”进行描述。","方法使线程进入限期等待状态时，常常用“使一个线程睡眠”进行描述。","方法启动一个线程时，虚拟机会将该线程放入就绪队列中等待被调度，当一个线程被调度时会执行该线程的","方法将一个线程设置为守护线程。","方法就可以中断线程。","方法就无法使线程提前结束。","方法执行一个无限循环，并且没有执行","方法来判断线程是否处于中断状态，从而提前结束线程。","方法来启动线程。","方法来提交一个线程，它会返回一个","方法，则相当于调用每个线程的","方法，因为","方法，因此会抛出一个","无限期等待","无需等待其它线程显式地唤醒，在一定时间之后会被系统自动唤醒。","时间片。","时间结束","有三种使用线程的方法：","来中断该线程，如果该线程处于阻塞、限期等待或者无限期等待状态，那么就会抛出","来调用。可以说任务是通过线程驱动从而执行的。","死亡","没有设置","的","的中断操作","的操作，那么调用线程的","的调用声明了当前线程已经完成了生命周期中最重要的部分，可以切换给其它线程来执行。该方法只是对线程调度器的一个建议，而且也只是建议具有相同优先级的其它线程可以运行。","相比，callabl","睡眠和挂起是用来描述行为，而阻塞和等待用来描述状态。","等会抛出","等待其它线程显式地唤醒，否则不会被分配","等待获取一个排它锁，如果其线程释放了锁就会结束此状态。","等方法进入。","管理多个异步任务的执行，而无需程序员显式地管理线程的生命周期。这里的异步是指多个任务的执行互不干扰，不需要进行同步操作。","类。","类也实现了","类可能只要求可执行就行，继承整个","类就无法继承其它类，但是可以实现多个接口；","类开销过大。","线程基础","线程池","继承","继承thread类","被调用的线程执行完毕","设置了","调用","进入方法","进行封装。","退出方法","通过","通过调用一个线程的","锁阻塞。","阻塞","阻塞和","阻塞和等待的区别在于，阻塞是被动的，它是在等待获取一个排它锁。而等待是主动的，通过调用","限期等待","需要实现"],"Java/Java并发/线程池.html":["!=","(new","(task","(具体过程略，需要查阅可以参考文末给出的博文)","...","//任务拒绝策略","//任务缓存队列，用来存放等待执行的任务","//分钟","//创建一个缓冲池，缓冲池容量大小为integer.max_valu","//创建固定容量大小的缓冲池","//创建容量为1的缓冲池","//天","//小时","//微妙","//是否允许为核心线程设置存活时间","//核心池的大小（即线程池中的线程数目大于这个参数时，提交的任务会被放进任务缓存队列）","//毫秒","//用来存放工作集","//用来记录已经执行完毕的任务个数","//用来记录线程池中曾经出现过的最大线程数","//秒","//纳秒","//线存活时间","//线程工厂，用来创建线程","//线程池中当前的线程数","//线程池最大能容忍的线程数","//线程池的主要状态锁，对线程池状态（比如线程池大小、runstate等）的改变都要使用这个锁","0;","0l,","1,","1.","1;","2.","2;","3.","3;","4.","5.","6.","60l,","7.","=",">=","abstractexecutorservic","abstractexecutorservice。","allowcorethreadtimeout(boolean)","allowcorethreadtimeout;","arrayblockingqueu","arrayblockingqueue;","arrayblockingqueue：基于数组的先进先出队列，此队列创建时必须指定大小；","blockingqueu","blockingqueue，通常可以取下面三种类型：","boolean","class","completedtaskcount;","corepools","corepoolsize,int","corepoolsize;","corepoolsize。但是如果调用了","corepoolsize，则每来一个任务，会尝试将其添加到任务缓存队列当中，若添加成功，则该任务会等待空闲线程将其取出去执行；若添加失败（一般来说是任务缓存队列已满），则会尝试创建新的线程去执行这个任务；","corepoolsize，则每来一个任务，就会创建一个线程去执行这个任务；","corepoolsize：核心池的大小，这个参数跟后面讲述的线程池的实现原理有非常大的关系。在创建了线程池后，默认情况下，线程池中并没有任何线程，而是等待有任务到来才创建线程去执行任务，除非调用了","corepoolsize；如果允许为核心池中的线程设置存活时间，那么核心池中的线程空闲时间超过","doc","execute()","execute(runnable)，返回值为","executor","executors.newcachedthreadpool();","executors.newfixedthreadpool(int);","executors.newsinglethreadexecutor();","executorservic","extend","final","finalizabledelegatedexecutorservic","firsttask","firsttask;","firsttask，在调用","futur","gettask()","gettask())","handler);","handler;","handler：表示当拒绝处理任务时的策略，有以下四种取值：","hashset","hashset();","int","integer.max_value,","integer.max_value，使用的synchronousqueue，也就是说来了任务就创建线程运行，当线程空闲超过60秒，就销毁线程。","java","java.uitl.concurrent.threadpoolexecutor","java中的threadpoolexecutor类","java并发编程：线程池的使用","keepalivetim","keepalivetime,timeunit","keepalivetime;","keepalivetime，则会终止，直到线程池中的线程数不超过","keepalivetime，线程也会被终止。","keepalivetime：表示线程没有任务执行时最多保持多久时间会终止。默认情况下，只有当线程池中的线程数大于","largestpools","largestpoolsize;","linkedblockingqueu","linkedblockingqueue()));","linkedblockingqueue());","linkedblockingqueue;","linkedblockingqueue：基于链表的先进先出队列，如果创建时没有指定此队列大小，则默认为integer.max_value；","long","mainlock","maximumpools","maximumpoolsize,long","maximumpoolsize;","maximumpoolsize，则会采取任务拒绝策略进行处理；","maximumpoolsize，如果还有任务到来就会采取任务拒绝策略，通常有以下四种策略：","maximumpoolsize：线程池最大线程数，这个参数也是一个非常重要的参数，它表示在线程池中最多能创建多少个线程；","new","newcachedthreadpool","newcachedthreadpool()","newfixedthreadpool","newfixedthreadpool(int","newsinglethreadexecutor","newsinglethreadexecutor()","nthreads)","nthreads,","null","null)","null;","poolsize;","prestartallcorethreads()","prestartallcorethreads()：初始化所有核心线程","prestartcorethread()","prestartcorethread()：初始化一个核心线程；","priorityblockingqueu","privat","public","reentrantlock","reentrantlock();","rejectedexecutionhandl","return","run","run()","runnabl","runnable类型，从字面意思可以理解，就是用来执行传进去的任务的；","runstat","runstate;","runtask()","runtask(task);","setcorepoolsize：设置核心池大小","setmaximumpoolsize()，","setmaximumpoolsize：设置线程池最大能创建的线程数目大小","shutdown","shutdown()","shutdown()：不会立即终止线程池，而是要等所有任务缓存队列中的任务都执行完后才终止，但再也不会接受新的任务","shutdownnow()","shutdownnow()，其中：","shutdownnow()：立即终止线程池，并尝试打断正在执行的任务，并且清空任务缓存队列，返回尚未执行的任务","static","stop","submit()","synchronousqueue());","synchronousqueue;","synchronousqueue：这个队列比较特殊，它不会保存提交的任务，而是将直接新建一个线程来执行新来的任务。","synchronous。线程池的排队策略与blockingqueue有关。","task","termin","threadfactori","threadfactory);","threadfactory,rejectedexecutionhandl","threadfactory;","threadfactory：线程工厂，主要用来创建线程；","threadpoolexecutor","threadpoolexecutor(0,","threadpoolexecutor(1,","threadpoolexecutor(int","threadpoolexecutor(nthreads,","threadpoolexecutor.abortpolicy:丢弃任务并抛出rejectedexecutionexception异常。","threadpoolexecutor.callerrunspolicy：由调用线程处理该任务","threadpoolexecutor.discardoldestpolicy：丢弃队列最前面的任务，然后重新尝试执行任务（重复此过程）","threadpoolexecutor.discardpolicy：也是丢弃任务，但是不抛出异常。","threadpoolexecutor，abstractexecutorservice，executorservice和executor的继承关系","threadpoolexecutor，只不过参数都已配置好了。","timeunit","timeunit.days;","timeunit.hours;","timeunit.microseconds;","timeunit.milliseconds,","timeunit.milliseconds;","timeunit.minutes;","timeunit.nanoseconds;","timeunit.seconds,","timeunit.seconds;","tri","unit,","unit：参数","void","void，参数为","volatil","worker","workerdone(this);","workqueu","workqueue);","workqueue,rejectedexecutionhandl","workqueue,threadfactori","workqueue;","workqueue，它用来存放等待执行的任务。","workqueue：一个阻塞队列，用来存储等待执行的任务，这个参数的选择也很重要，会对线程池的运行过程产生重大影响，一般来说，这里的阻塞队列有以下几种选择：","{","||","}","下面我们来看一下任务从提交到最终执行完毕经历了哪些过程：","下面是这三个静态方法的具体实现：","下面的几个","下面解释下一下构造器中各个参数的含义：","个线程或者一个线程。默认情况下，在创建了线程池后，线程池中的线程数为0，当有任务来之后，就会创建一个线程去执行任务，当线程池中的线程数目达到","中声明的所有方法；","中声明的方法，在","中定义了一个volatile变量，另外定义了几个","中并没有对其进行重写，这个方法也是用来向线程池提交任务的，但是它和","中进行了具体的实现，这个方法是threadpoolexecutor","中，并不提倡我们直接使用threadpoolexecutor，而是使用","之后，在","从","从上面的代码可以得知，threadpoolexecutor","从它们的具体实现来看，它们实际上也是调用了","以及shutdown","任务拒绝策略","任务的执行","任务缓存队列及排队策略","使用","使用较少，一般使用","值是相等的，它使用的linkedblockingqueue；","其中","其次，要知道","创建的线程池","到这里，大部分朋友应该对任务提交给线程池之后到被执行的整个过程有了一个基本的了解，下面总结一下：","前面我们对","去取新的任务来执行，那么去哪里取呢？自然是从任务缓存队列里面去取，因此一个","参数也会起作用，直到线程池中的线程数为0；","变量用来保证线程之间的可见性；","变量表示","变量表示线程池的各个状态：","只是一个用来起记录作用的变量，用来记录线程池中曾经有过的最大线程数目，跟线程池的容量没有任何关系。","可以被重复使用以执行不同的任务，节省了频繁创建和销毁线程的成本。而且，这里有一个非常巧妙的设计方式，假如我们来设计线程池，可能会有一个任务分派线程，当发现有线程空闲时，就从任务缓存队列中取一个任务交给空闲线程执行。但是在这里，并没有采用这样的方式，因为这样会要额外地对任务分派线程进行管理，无形地会增加难度和复杂度，这里直接让执行完任务的线程去任务缓存队列里面取任务来执行。","可能的几个取值。","后，就会把到达的任务放到缓存队列当中；","和","在","在了解将任务提交给线程池到任务执行完毕整个过程之前，我们先来看一下","在前面我们多次提到了任务缓存队列，即","在实际中如果需要线程池创建之后立即创建线程，可以通过以下两个方法办到：","如果当前线程池中的线程数目","如果当前线程池中的线程数目小于","如果当前线程池中的线程数目达到","如果线程池中的线程数量大于","如果调用了","实现了","实际中，如果","将","就已经有了具体的实现，在threadpoolexecutor","当上述参数从小变大时，threadpoolexecutor","当创建线程池后，初始时，线程池处于","当线程池处于","当线程池的任务缓存队列已满并且线程池中的线程数目达到","循环里面不断通过","或","或者","才会起作用，直到线程池中的线程数不大于","执行完firsttask","抽象类","接口继承了executor接口，并声明了一些方法：submit、invokeall、invokeani","接口，其","接口，基本实现了","提供了两个方法，用于线程池的关闭，分别是","提供了动态调整线程池容量大小的方法：setcorepoolsize()","提供的三个静态方法能满足要求，就尽量使用它提供的三个方法，因为自己去手动配置threadpoolexecutor","方法不同，它能够返回任务执行的结果，去看","方法实际上是","方法是在","方法源码如下：","方法的实现可以看出，它首先执行的是通过构造器传进来的任务","方法的实现，会发现它实际上还是调用的","方法，从这2个方法的名字就可以看出，是预创建线程的意思，即在没有任务到来之前就创建","方法，则线程池处于","方法，只不过它利用了","方法，在线程池中的线程数不大于","时，keepalivetim","时，如果一个线程空闲的时间达到","时，如果某线程空闲时间超过","是一个顶层接口，在它里面只声明了一个方法","是用来关闭线程池的。","是用来起到什么作用的；","来获取任务执行结果。","深入剖析线程池实现原理","然后","状态。","状态，并且所有工作线程已经销毁，任务缓存队列已经清空或执行结束后，线程池被设置为","状态，此时线程池不能够接受新的任务，它会等待所有任务执行完毕；","状态，此时线程池不能接受新的任务，并且会去尝试终止正在执行的任务；","状态；","的参数有点麻烦，要根据实际任务的类型和数量来进行配置。","的含义；","的时间单位，有7种取值，在","的核心方法，通过这个方法可以向线程池提交一个任务，交由线程池去执行。","的类型为","等；","类中其他的一些比较重要成员变量：","类中提供了四个构造方法：","类中提供的几个静态方法来创建线程池：","类中有7种静态属性：","类中有几个非常重要的方法：","类实现了","类是线程池中最核心的一个类，因此如果要透彻地了解java中的线程池，必须先了解这个类。下面我们来看一下","类的具体实现源码。","类的对象，worker","类，并提供了四个构造器，事实上，通过观察每个构造器的源码具体实现，发现前面三个构造器都是调用的第四个构造器进行的初始化工作。","线程池","线程池中的线程初始化","线程池容量的动态调整","线程池的关闭","线程池的状态","继承了abstractexecutorservic","继承了类","表示当前线程池的状态，它是一个","要知道任务提交给线程池之后的处理策略，这里总结一下主要有4点：","设置为","设置为0，将","进行了详细地介绍，不过在","进行线程赋值，还可能立即创建新的线程来执行任务。","都设置为1，也使用的linkedblockingqueue；","需要注意的几点是，线程池中每一个工作线程被包装成一个","首先，要清楚","默认情况下，创建线程池之后，线程池中是没有线程的，需要提交任务之后才会创建线程。","，即当线程池中的线程数大于","，线程将被终止，直至线程池中的线程数目不大于"],"Java/Java并发/互斥同步.html":["()","(int","(synchronizedexample.class)","(this)","...","//","0","0;","1","1.","2","2.","3","3.","4","4.","5","5.","6","7","8","9","=",">","args)","class","condit","e1","e1.func1());","e1.func2());","e2","e2.func1());","e2.func2());","executors.newcachedthreadpool();","executorservic","executorservice.execute(()","fun()","func","func()","func1()","func2()","java","java.util.concurrent（j.u.c）包中的锁。","jdk","jvm","lock","lock.lock();","lockexampl","lockexample();","lockexample.func());","main(string[]","new","privat","public","reentrantlock","reentrantlock();","reentrantlock。","static","synchron","synchronizedexampl","synchronizedexample();","synchronized。这是因为","synchronized，而另一个是","tri","void","{","}","一个","不是所有的","不用担心没有释放锁而导致死锁问题，因为","不行。","与","中的锁是非公平的，reentrantlock","互斥同步","会确保锁的释放。","作用于整个类。","作用于整个类，也就是说两个线程调用同一个类的不同对象上的这种同步语句，也会进行同步。","使用选择","公平锁","公平锁是指多个线程在等待同一个锁时，必须按照申请锁的时间顺序来依次获得锁。","原生地支持它，而","可中断，而","可以同时绑定多个","同步一个代码块","同步一个方法","同步一个类","同步一个静态方法","大致相同。","它只作用于同一个对象，如果调用两个对象上的同步代码块，就不会进行同步。","它和同步代码块一样，作用于同一个对象。","实现的","实现的。","实现的一种锁机制，jvm","实现的，而","对","对于以下代码，两个线程调用了不同对象的同步代码块，因此这两个线程就不需要同步。从输出结果可以看出，两个线程交叉执行。","对于以下代码，使用","对象。","当持有锁的线程长期不释放锁的时候，正在等待的线程可以选择放弃等待，改为处理其他事情。","性能","执行了两个线程，由于调用的是同一个对象的同步代码块，因此这两个线程会进行同步，当一个线程进入同步语句块时，另一个线程就必须等待。","提供了两种锁机制来控制多个线程对共享资源的互斥访问，第一个是","新版本","是","比较","版本都支持。并且使用","的高级功能，否则优先使用","等待可中断","进行了很多优化，例如自旋锁等，synchron","锁的实现","锁绑定多个条件","除非需要使用","默认情况下也是非公平的，但是也可以是公平的。"],"Java/Java并发/线程之间的协作.html":["(interruptedexcept","=",">","@overrid","a();","a)","a.join();","a.start();","a;","after()","args)","await()","await()/signal()/signalall()","awaitsignalexampl","awaitsignalexample();","b","b(a","b(a);","b.start();","befor","before()","catch","class","condit","condition.await();","condition.signalall();","e)","e.printstacktrace();","exampl","example.after());","example.before());","example.test();","executors.newcachedthreadpool();","executorservic","executorservice.execute(()","extend","final","illegalmonitorstateexception。","java.util.concurr","join()","joinexampl","joinexample();","lock","lock.lock();","lock.newcondition();","lock.unlock();","main(string[]","new","notify()","notifyall()","notifyall();","object","privat","public","reentrantlock();","run()","signal()","signalall()","sleep()","static","synchron","system.out.println(\"a\");","system.out.println(\"after\");","system.out.println(\"b\");","system.out.println(\"before\");","test()","this.a","thread","thread。","tri","void","wait()","wait()/notify()/notifyall()","wait();","waitnotifyexampl","waitnotifyexample();","{","}","上调用","不会。","会释放锁，sleep()","使得线程等待某个条件满足，线程在等待时会被挂起，当其他线程的运行使得这个条件满足时，其它线程会调用","使用","只能用在同步方法或者同步控制块中使用，否则会在运行时抛出","可以指定等待的条件，因此更加灵活。","和","在线程中调用另一个线程的","它们都属于","对于以下代码，虽然","对象。","当多个线程可以一起工作去解决某个问题时，如果某些部分必须在其它部分之前完成，那么就需要对线程进行协调。","或","或者","挂起期间，线程会释放锁。这是因为，如果没有释放锁，那么其它线程就无法进入对象的同步方法或者同步控制块中，那么就无法执行","方法使线程等待，其它线程调用","方法唤醒等待的线程。","方法，b","方法，会将当前线程挂起，而不是忙等待，直到目标线程结束。","是","来唤醒挂起的线程。","来唤醒挂起的线程，造成死锁。","来获取一个","的一部分，而不属于","的区别","的方法，而","的静态方法；","相比于","类库中提供了","类来实现线程之间的协调，可以在","线程中调用了","线程之间的协作","线程会等待","线程先启动，但是因为在","线程的","线程的输出。","线程的输出先于","线程结束才继续执行，因此最后能够保证","调用","这种等待方式，await()"],"Java/Java并发/J.U.C组件.html":["\"","\");","(int","(interruptedexcept","(last","(parti","+","0","0;","0，所有调用","1","10000);","10;","10。","1，减到","1，并进行等待，直到计数器为","2","3","3;","4950","5;","=","@overrid","abstractexecutorservic","args)","arrayblockingqueue<>(5);","await()","barrieraction)","before..before..before..before..before..before..before..before..before..before..after..after..after..after..after..after..after..after..after..after..","blockingqueu","brokenbarrierexcept","call()","callabl","callable()","catch","class","clientcount","cnt，每次调用","compute()","consum","countdown()","countdownlatch","countdownlatch(totalthread);","countdownlatch.await();","countdownlatch.countdown();","countdownlatchexampl","cpu","cyclicbarri","cyclicbarrier(int","cyclicbarrier(totalthread);","cyclicbarrier.await();","cyclicbarrierexampl","e)","e.printstacktrace();","exampl","except","executionexception,","executors.newcachedthreadpool();","executorservic","executorservice.shutdown();","extend","fifo","final","first","first,","first;","forkjoin","forkjoinexampl","forkjoinexample(1,","forkjoinexample(int","forkjoinpool","forkjoinpool();","forkjoinpool.submit(example);","futur","futuretask","futuretask(new","futuretaskexampl","implement","int","integ","interruptedexcept","j.u.c","j.u.c组件","java.util.concurrent.blockingqueu","java.util.concurrent（j.u.c）大大提高了并发性能，aq","last)","last;","main(string[]","mapreduc","new","otherthread.start();","parti","parties,","privat","produc","produce..produce..consume..consume..produce..consume..produce..consume..produce..consume..","producerconsum","product","protect","public","put()","queue","queue.put(\"product\");","queue.take();","recursivetask","reset()","result","run()","run..run..run..run..run..run..run..run..run..run..end","runnabl","runnablefutur","running...","running...\");","semaphor","semaphore(clientcount);","semaphore.acquire();","semaphore.release();","semaphoreexampl","static","string","system.out.print(\"after..\");","system.out.print(\"before..\");","system.out.print(\"consume..\");","system.out.print(\"produce..\");","system.out.print(\"run..\");","system.out.print(semaphore.availablepermits()","system.out.println(\"end\");","system.out.println(\"oth","system.out.println(futuretask.get());","system.out.println(result.get());","take()","task","task1","task2","this.first","this.last","thread","thread.sleep(1000);","thread1","threshold","throw","totalrequestcount","totalthread","tri","void","{","|","}","});","个客户端同时访问，请求总数为","主要用于并行计算中，和","从","以下代码模拟了对某个服务的并发请求，每次只能有","任务，thread1","优先级队列","会拿出","使用","原理类似，都是把大的计算任务拆分成多个小任务并行计算。","可用于异步获取执行结果或取消执行任务的场景。当一个计算任务需要执行很长时间，那么就可以用","和","在介绍","在所有线程都到达屏障的时候会执行一次。","实现了","实现了工作窃取算法来提高","实现生产者消费者问题","将阻塞，直到队列中有内容；如果队列为满","将阻塞，直到队列有空闲位置。","指示计数器的初始值，barrieract","接口有以下阻塞队列的实现：","接口，该接口继承自","接口，这使得","提供了阻塞的","方法之后计数器会减","方法会让计数器的值减","方法可以循环使用，所以它才叫做循环屏障。","方法而在等待的线程就会被唤醒。","方法而在等待的线程才能继续执行。","方法：如果队列为空","既可以当做一个任务执行，也可以有返回值。","时我们知道它可以有返回值，返回值通过","有两个构造函数，其中","来启动，它是一个特殊的线程池，线程数量取决于","来封装这个任务，主线程在完成自己的任务之后再去获取结果。","来执行，这样就避免发生竞争。但是如果队列中只有一个任务时还是会发生竞争。","核数。","用来控制一个线程等待多个线程。","用来控制多个线程互相等待，只有当多个线程都到达时，这些线程才会继续执行。","的一个区别是，cyclicbarri","的利用率。每个线程都维护了一个双端队列，用来存储需要执行的任务。工作窃取算法允许空闲的线程从其它线程的双端队列中窃取一个任务来执行。窃取的任务必须是最晚的任务，避免和队列所属线程发生竞争。例如下图中，thread2","的时候，那些因为调用","的核心。(aqs源码暂时没看...)","的计数器通过调用","的队列中拿出最晚的","相似，都是通过维护计数器来实现的。线程执行","类似于操作系统中的信号量，可以控制对互斥资源的访问线程数。","维护了一个计数器","被认为是","进行封装。futuretask","队列","：linkedblockingqueue、arrayblockingqueue（固定长度）","：priorityblockingqueu"],"Java/Java并发/Java内存模型.html":["\"","\"半个变量\"","(happen","(int","//","0;","1","1.","1000","1000;","1000。","2.","2。","3","3.","32","4.","5.","6.","64","7.","8","8.","997","=","add()","args)","assign","assign：把一个从执行引擎接收到的值赋给工作内存的变量","atomicexampl","atomicexample();","atomicinteg","atomicinteger();","atomicsynchronizedexampl","atomicsynchronizedexample();","b","before原则)","b，操作","class","cnt","cnt++;","cnt.get();","cnt.incrementandget();","cnt;","countdownlatch","countdownlatch(threadsize);","countdownlatch.await();","countdownlatch.countdown();","c。","c，那么操作","doubl","exampl","example.add();","executors.newcachedthreadpool();","executorservic","executorservice.shutdown();","final","finalize()","final，被","get()","int","interrupt","interrupt()","interrupted()","interruptedexcept","java","java内存模型","join","join()","load、assign、stor","load、store、read","load：在","lock","lock：作用于主内存的变量，把一个变量标识为一条线程独占的状态","long","main(string[]","monitor","monitorent","monitorexit。","new","privat","public","read","read、load、use、assign、store、write、lock","read：把一个变量的值从主内存传输到工作内存中","return","rule","singl","start","start()","static","store","store：把工作内存的一个变量的值传送到主内存中","synchron","synchronized，对一个变量执行","system.out.println(example.get());","t1","thread","threadsiz","threadunsafeexampl","threadunsafeexample();","throw","transit","unlock","unlock，在虚拟机实现上对应的字节码指令为","unlock：作用于主内存的变量，把一个处于锁定状态的变量释放出来","use：把工作内存中一个变量的值传递给执行引擎","variabl","void","volatil","write","write：在","{","}","});","一个","一个对象的初始化完成（构造函数执行结束）先行发生于它的","上面提到了可以用","下图演示了两个线程同时对","个操作来完成主内存和工作内存的交互操作。","个线程同时对","个线程对它进行自增操作之后，得到的值为","个：load、assign、store。","为了方便讨论，将内存间的交互操作简化为","主内存和工作内存","主要有有三种实现可见性的方式：","之后执行，把","也可以通过","互斥锁来保证操作的原子性。它对应的内存间交互操作为：lock","传递性","位数据（long，double）的读写操作划分为两次","位的操作来进行，即","使用","依然可以读入旧值。可以看出，这两个线程虽然执行了两次自增运算，但是主内存中","修改","修饰的","修饰，不能解决线程不安全问题，因为","先行发生于操作","先行发生原则","关键字修饰的字段在构造器中一旦初始化完成，并且没有发生","关键字通过添加内存屏障的方式来禁止指令重排，即重排序时不能把后面的指令放到内存屏障之前。","内存模型中，允许编译器和处理器对指令进行重排序，重排序过程不会影响到单线程程序的执行，却会影响到多线程并发执行的正确性。","内存模型保证了","内存模型允许虚拟机将没有被","内存模型定义了","内存模型是通过在变量修改后将新值同步回主内存，在变量读取前从主内存刷新变量值来实现可见性的。","内存模型的三大特性","内存模型约定：所有的变量都存储在主内存中，每个线程还有自己的工作内存，工作内存存储在高速缓存或者寄存器中，保存了该线程使用的变量的主内存副本拷贝。","内存模型试图屏蔽各种硬件和操作系统的内存访问差异，以实现让","内存间交互操作","前面的线程不安全示例代码中，cnt","加入高速缓存带来了一个新的问题：缓存一致性。如果多个缓存共享同一块主内存区域，那么多个缓存的数据可能会不一致，需要一些协议来解决这个问题。","半个变量\"","单一线程原则","原子性","变量使用","变量的","变量规则","只修改这条语句","可以保证可见性，但是对前面的线程不安全示例中的","可见性","可见性指当一个线程修改了共享变量的值，其它线程能够立即得知这个修改。java","和","在一个线程内，在程序前面的操作先行发生于后面的操作。","处理器上的寄存器的读写的速度比内存快几个数量级，为了解决这种速度矛盾，在它们之间加入了高速缓存。","如果操作","字段的值。","对一个","对线程","对象的","对象的结束先行发生于","对象终结规则","属于","并不能保证操作的原子性。","并且还没有将修改后的值写入主内存，t2","引用访问到初始化了一半的对象），那么其它线程就能看见","得到的值放入主内存的变量中","得到的值放入工作内存的变量副本中","或","执行自增操作，操作结束之后它的值有可能小于","操作。","操作之前，必须把变量值同步回主内存。","操作先行发生于后面对同一个锁的","操作先行发生于后面对这个变量的","操作具有原子性，例如对一个","操作可以不具备原子性。如果有多个线程共享一个并未声明为","方法检测到是否有中断发生。","方法的开始。","方法的调用先行发生于被中断线程的代码检测到中断事件的发生，可以通过","方法调用先行发生于此线程的每一个动作。","方法返回。","有一个错误认识就是，int","有序性","有序性是指：在本线程内观察，所有操作都是有序的。在一个线程观察另一个线程，所有操作都是无序的，无序是因为发生了指令重排序。在","来保证有序性。除此之外，jvm","来保证有序性，它保证每个时刻只有一个线程执行同步代码，相当于是让线程顺序执行同步代码。","的","的值最后为","的情况非常罕见，在目前商用","的数值。(不过这种读取到","程序在各种平台下都能达到一致的内存访问效果。","等原子性的类型在多线程环境中不会出现线程安全问题。以下代码演示了","管程锁定规则","类型变量，1000","类型的变量执行","类型的变量，并且同时对它们进行读取和修改操作，那么某些线程可能会读取到一个既非原值，也不是其他线程修改值的代表了","线程","线程中断规则","线程只能直接操作工作内存中的变量，不同线程之间的变量值传递需要通过主内存来完成。","线程启动规则","而不是","能保证多个线程修改的原子性。","虚拟机中不会出现。因为在实际开发中，目前各种平台下的商用虚拟机几乎都选择把64位数据的读写操作作为原子操作来对待。)","虽然","规则","赋值操作，这个操作就是原子性的。但是","还规定了先行发生原则，让一个操作无需任何同步控制就能先于另一个操作完成。","这一系列操作整体上看不具备原子性，那么在","这些单个操作具备原子性，但是","进行操作，虽然","逃逸（其它线程通过","重写之前线程不安全的代码之后得到以下线程安全实现：","除了使用原子类之外，也可以使用"],"Java/Java并发/线程安全.html":["!=","\"main\"","(e","(int","(interruptedexcept","(map","(reentrant","(t)e.value;","(尤其是使用线程池)","*","*/","+","/*","0;","1","1)","1);","1.","100","1;","1。通过","1，不受","1，而","2.","2。过了一段时间之后，thread1","3","3.","=",">",">valu","@suppresswarnings(\"unchecked\")","aba","add()","add100()","args)","atomicinteg","atomicinteger();","atomiclong","atomicstampedrefer","a，才将","a，那","bigdecim","b。","b。当执行操作时，只有当","b，后来又被改回为","ca","catch","class","class.","cnt","cnt.incrementandget();","code)","code），可以在代码执行的任何时刻中断它，转而去执行另外一段代码（包括递归调用它本身），而在控制权返回后，原来的程序不会出现任何错误。","collections.unmodifiablemap(map);","collections.unmodifiablexxx()","compareandswapint()","createmap(t,","doubl","e","e)","e.printstacktrace();","exampl","example.add100());","except","executors.newcachedthreadpool();","executorservic","executorservice.execute(()","executorservice.shutdown();","final","get()","getandaddint()","getandaddint(object","getintvolatile(var1,","getmap(t);","hashmap<>();","immutableexampl","immutableexample.main(immutableexample.java:9)","incrementandget()","int","j.u.c","java.lang.threadloc","java.lang.unsupportedoperationexcept","java.util.collections$unmodifiablemap.put(collections.java:1457)","key,","long","main(string[]","maintain","map","map.getentry(this);","map.set(this,","new","null)","null;","number","per","pertain","privat","public","put(k","reentrantlock。","remove()，以避免出现","request）的处理方式，这种处理方式的广泛应用使得很多","result","result;","return","set(t","setinitialvalue();","stackclosedexampl","stackclosedexample();","static","string","swap，cas）。ca","synchron","system.out.println(threadlocal.get());","t","this.getintvolatile(var1,","thread","thread(()","thread.","thread.currentthread();","thread.sleep(1000);","thread1","thread1.start();","thread2","thread2.start();","threadloc","threadlocal();","threadlocal.remove();","threadlocal.set(1);","threadlocal.set(2);","threadlocal.threadlocalmap","threadlocal1","threadlocal1.set(1);","threadlocal1.set(2);","threadlocal2","threadlocal2.set(1);","threadlocal2.set(2);","threadlocalexampl","threadlocalexample1","threadlocalmap","threadlocalmap.entri","threadlocal，先看以下代码：","throw","tri","unmodifiablemap","unmodifiablemap.put(\"a\",","unsaf","unsafe.getandaddint(this,","unsupportedoperationexception();","v","valu","value)","value);","valueoffset,","var1+var2","var1,","var2)","var2);","var2,","var4)","var4));","var5","var5+var4。","var5,","var5;","var5，那么就更新内存地址为","void","v、旧的预期值","web","while(!this.compareandswapint(var1,","{","}","});","。","下，由于","不可变","不可变的类型：","不可变（immutable）的对象一定是线程安全的，不需要再采取任何的线程安全保障措施。只要一个不可变的对象被正确地构建出来，永远也不会看到它在多个线程之中处于不一致的状态。多线程环境下，应当尽量使对象成为不可变，来满足线程安全。","个操作数，分别是内存地址","中。","中设置","为","为了理解","乐观锁需要操作和冲突检测这两个步骤具备原子性，这里就不能再使用互斥同步来保证了，只能靠硬件来完成。硬件支持的原子性操作最典型的是：比较并交换（compar","互斥同步","互斥同步属于一种悲观的并发策略，总是认为只要不去做正确的同步措施，那就肯定会出现问题。无论共享数据是否真的会出现竞争，它都要进行加锁（这里讨论的是概念模型，实际上虚拟机会优化掉很大一部分不必要的加锁）、用户态核心态转换、维护锁计数器和检查是否有被阻塞的线程需要唤醒等操作。","互斥同步最主要的问题就是线程阻塞和唤醒所带来的性能问题，因此这种同步也称为阻塞同步。","交互模型中的“一个请求对应一个服务器线程”（thread","从理论上讲并不是用来解决多线程并发问题的，因为根本不存在多线程竞争。","以下代码使用了","以下代码是","依然是","值，它的值被改成了","先对原始的集合进行拷贝，需要对集合进行修改的方法都直接抛出异常。","关于","关键字修饰的基本数据类型","则是可变的。","包提供了一个带有标记的原子引用类","包里面的整数原子类","可以使用","可以看到","可重入代码","可重入代码有一些共同的特征，例如不依赖存储在堆上的数据和公用的系统资源、用到的状态量都由参数中传入、不调用非可重入的方法等。","后手动调用","和","和新值","在一个循环中进行，发生冲突的做法是不断的进行重试。","在一些场景","多个线程访问同一个方法的局部变量时，不会出现线程安全问题，因为局部变量存储在虚拟机栈中，属于线程私有的。","如果一个变量初次读取的时候是","如果一段代码中所需要的数据必须与其他代码共享，那就看看这些共享数据的代码是否能保证在同一个线程中执行。如果能保证，我们就可以把共享数据的可见范围限制在同一个线程之内，这样，无须同步也能保证线程之间不出现数据争用的问题。","它所对应的底层结构图为：","对于以下代码，thread1","对于集合类型，可以使用","对象。","对象，然后将","当调用一个","得到旧的预期值，通过调用","执行了自增的操作。","指令需要有","指示对象内存地址，var2","指示操作需要加的数值，这里为","指示该字段相对对象内存地址的偏移，var4","操作。","操作就会误认为它从来没有被改变过。","方法时，先得到当前线程的","方法来获取一个不可变的集合。","方法类似。","无同步方案","有内存泄漏的情况，应该尽可能在每次使用","服务端应用都可以使用线程本地存储来解决线程安全问题。","来解决这个问题，它可以通过控制变量值的版本来保证","来进行","枚举类型","栈封闭","每个","比较，如果该字段内存地址中的值等于","消费者”模式）都会将产品的消费过程尽量在一个线程中消费完。其中最重要的一个应用实例就是经典","源码，var1","的","的值更新为","的值等于","的原子类","的变量为","的底层数据结构导致","的影响。","的方法调用了","的正确性。大部分情况下","的深入解析见","的源码，它调用了","符合这种特点的应用并不少见，大部分使用消费队列的架构模式（如“生产者","等大数据类型。但同为","等数值包装类型，biginteg","类来实现线程本地存储功能。","类的","类的对象都有一个","线程安全","线程安全指的是：多个线程不管以何种方式访问某个类，并且在主调代码中不需要进行同步，都能表现正确的行为。","线程安全有以下几种实现方式：","线程本地存储","经典的内存泄漏甚至是造成自身业务混乱的风险。","要保证线程安全，并不是一定就要进行同步。如果一个方法本来就不涉及共享数据，那它自然就无须任何同步措施去保证正确性。","设置","读取","这种代码也叫做纯代码（pure","部分子类，如","键值对插入到该","问题不会影响程序并发的正确性，如果需要解决","问题，改用传统的互斥同步可能会比原子类更高效。","随着硬件指令集的发展，我们可以使用基于冲突检测的乐观并发策略：先进行操作，如果没有其它线程争用共享数据，那操作就成功了，否则采取补偿措施（不断地重试，直到成功为止）。这种乐观的并发策略的许多实现都不需要将线程阻塞，因此这种同步操作称为非阻塞同步。","非阻塞同步"],"Java/Java并发/ThreadLocal .html":["!=","&","&&","(!cleansomeslots(i,","(e","(e.g.,","(entri","(k","(len","(map","(t)e.value;","(unless","(via","*/","++size;","/**","1);","8","=","==",">=","@suppresswarnings(\"unchecked\")","access","accessible;","aliv","associ","away,","class","collect","concurrenthashmap","copi","counterpart","createmap(t,","differ","e","e.get();","e.valu","each","entri","entry(key,","entry(threadloc","entry[]","entry。该方法中的","exist).","expungestaleentri","extend","field","garbag","get()","getmap(t);","getmap(thread","goe","hashmap","hold","i);","id","id).","implicit","independ","initi","initialvalue();","instanc","int","java进阶（七）正确理解thread","jdk","k","k,","key)","key,","key.threadlocalhashcod","len","len)])","local","local的原理与适用场景","long","map","map.getentry(this);","map.set(this,","map。如果该","map，但它或多或少都需要锁来保证线程的安全性","map，故需保证该","map，那就不存在多线程写的问题，也就不需要锁。该方案如下图所示。","map，键是","method)","new","nextindex(i,","normal","null","null)","null;","null。所以典型用法中常常重载该方法。上例中即在内部匿名类中将其重载。","null，从","null，从而使得该值可被回收。另外，会在","null，则先创建该","null，则直接将该","null，则通过setinitialvalue()方法设置该","null，该","object","on","own,","privat","provid","public","refer","rehash","rehash();","replacestaleentri","replacestaleentry(key,","result","result;","return","return;","set","set(t","set(threadloc","setinitialvalue()","setinitialvalue();","state","static","static修饰。当一个线程结束时，它所使用的所有","string","stringbuidl","subject","super(k);","synchron","sz","sz)","t","t)","t.threadlocals;","tab","tab.length;","tab[i","tab[i]","tab[i];","table;","this）与目标实例的映射添加进","thread","thread.currentthread();","threadloal","threadloc","threadlocal.","threadlocalmap","threadlocalmap.entri","threadlocalmap。从如下该方法的定义可见，该","threadlocalmap与内存泄漏","threadlocalmap中。若为","threadlocalmap，也即该对象不会在多个线程中共享，也就不存在线程安全的问题。","threadlocal为解决多线程程序的并发问题提供了一种新的思路","threadlocal的介绍","threadlocal的目的是为了解决多线程访问资源时的共享问题","threadlocal，为表述方便，后文用","thread，值是它在该","threshold)","transact","typic","user","v)","v;","valu","value)","value);","value,","value;","variabl","variable.","variables.","void","weakreference>","wish","{","}","上述方案中，出现锁的问题，原因在于多线程访问同一个","上面描述的问题在于，threadloc","不为","不可访问，那就不存在多线程间共享的问题","不同的是，threadlocalmap","不恰当的理解","不能被回收而造成的内存泄漏的问题。","不能被回收，可能会造成内存泄漏。后文会介绍","与","与具体实例的映射。与","与实例的映射","中。当然，如果映射已经存在，就直接覆盖。另外，如果获取到的","中取出值即为所需访问的本线程对应的实例。如果获取到的","中对应的","中对应的映射均删除，否则可能会引起内存泄漏。（后面会介绍避免内存泄漏的方法）","中找出对应的实例即可。该方案如下图所示","中有不同的副本（实际是不同的实例，后文会详细阐述）。这里有几点需要注意","中添加一个映射，而每个线程结束时，应该清除该映射。这里就有两个问题：","中的实现","为","从而使得该","代表","代表具体类型（如","但是，这里又可能出现另外一种内存泄漏的问题。threadlocalmap","使得代码耦合度更低，且实现更优雅。","使得实现更简洁。","使用。这是也是","使用弱引用的原因在于，当没有强引用指向","值","共享","其中锁的问题，是","内有自己的实例副本，且该副本只能由当前","内的实例。线程通过该","内维护该","到底解决了什么问题，又适用于什么样的场景？","即当前访问的","原理","变量","变量与具体实例的映射，如果不删除这些引用（映射），则这些","变量与具体实例的映射，当","变量后，都会在自己的","变量在该线程中对应的具体实例的初始值。","变量时，它可被回收，从而避免上文所述","变量的线程都有自己的一个“本地”实例副本。一个可能的方案是","变量的问题。既然变量不共享，那就更谈不上同步的问题。","变量被回收后，该映射的键变为","变量通常被privat","变量，它的基本原理是，同一个","只访问自己的","可以以非常方便的形式满足该需求。","可被回收。通过这种方式，threadloc","可防止内存泄漏。","合理的理解","后，通过map.getentry(this)方法获取该","命名的由来","因为每个","在","在当前线程的","增加线程与减少线程均需要写","如上文所述，threadloc","如何解决该问题。","如果单看其中某一点，替代方法很多。比如可通过在线程内创建局部变量可实现每个线程有自己的实例，使用静态变量可实现变量在方法间的共享。但如果要同时满足变量在线程间的隔离与方法间的共享，threadlocal再合适不过。","如果获取到的","实例","实例需要在多个方法中共享，但不希望被多线程共享","实现线程安全的","对","对于已经不再被使用且已被回收的","对于第一点，每个线程拥有自己实例，实现它的方式很多。例如可以在线程内部构建一个单独的实例。threadloc","对于第二点，可以在满足第一点（每个线程有自己的实例）的条件下，通过方法间引用传递的形式实现。threadloc","对象。","对象与具体实例的映射，该","对象与具体实例的映射，这一点与上文分析一致。","对象与对应实例初始值的映射添加进该线程的","对象再将映射添加其中。","对象无法被回收的问题","对象本身从而防止内存泄漏","对象的值（即为具体实例）以及","对象（即代码中的","对象，它在每个线程内对应的实例由于被线程的","对象，并且只有该线程自己可以访问它，其它线程不会访问该","对象，然后直接将","对象，若该对象不为","并不解决多线程","并不解决线程间共享数据的问题","并维护了","引用而无法被回收造成内存泄漏。","强引用，无法被回收，可能会造成内存泄漏。","总的来说，threadloc","总结","所包含的对象（对threadlocal而言即为","提供。该类的实例维护某个","提供了线程本地的实例。它与普通变量的区别在于，每个使用该变量的线程都会初始化一个完全独立的实例副本。threadloc","支持范型，如","方案获取实例时，只需要以线程为键，从","方法中通过","方法中，通过","方法回收键为","方法将所有键为","方法将键和值为","方法设置线程内实例的值，如下所示。","方法通过调用","方法，且默认返回","方法，无法被重载。","无法被移除。从而使得实例被该","既无共享，何来同步问题，又何来解决同步问题一说？","既然每个","既然每个访问","时，需要向","有很多关于","有自己的实例副本，且其它","未采用该方案的一个原因。","本身，而用","核心意思是","每个线程持有一个","每个线程需要有自己单独的实例","注：entry虽然是弱引用，但它是","然后拿到该线程对应的","由","由于","由于只被持有它的线程访问，故不存在线程安全以及锁的问题","的","的值设置为","的实例是","的异同。既然是作比较，那应该是认为这两者解决相同或类似的问题。","的引用为弱引用，避免了","的弱引用），而非具体实例的的弱引用，所以无法避免具体实例相关的内存泄漏。","的弱引用，这一点从super(k)可看出。另外，每个","的强引用。","的每个","的线程安全问题。因为每个线程有且只有一个","的适用场景以及解决的问题，描述的并不清楚，甚至是错的。下面是常见的对于","相对的实例副本都可被回收。","类型变量），在不同的","类型的弱引用（也即上文所述它是对","类的一个字段，即由","类的静态内部类","线程安全。虽然可以用","线程结束时，需要保证它所访问的所有","维护","维护一个","维护，从而使得每个","获取到","解决什么问题","设置为","设置初始值","设置初始值方法如下","设置实例","该方案中，map","该方案可满足上文提到的每个线程内一个独立备份的要求。每个新线程访问该","该方案虽然没有锁的问题，但是由于每个线程访问某","该方法为","该方法先获取该线程的","读取实例","读取实例方法如下所示","读取实例时，线程首先通过getmap(t)方法获取自身的","还有很多文章在对比","这里并不需要考虑","适用于变量在线程间隔离且在方法间共享的场景","适用于如下两种场景","适用于每个线程需要自己独立的实例且该实例需要在多个方法中被使用，也即变量在线程间隔离而在方法或类间共享的场景。后面会通过实例详细阐述该观点。另外，该场景下，并非必须使用","适用场景","通过隐式的在不同线程内创建独立实例副本避免了实例线程安全的问题","那","都包含了一个对","都是一个对","针对该问题，threadlocalmap","键","防止内存泄漏","除了通过initialvalue()方法设置实例的初始值，还可通过","首先，通过initialvalue()方法获取初始值。该方法为","）的实例。","，其它方式完全可以实现同样的效果，只是"],"Java/Java并发/锁优化.html":["(*)","(lock","(tag","(保存旧","(因为","+","0","00，表示该对象处于轻量级锁状态。","01)","01。同时使用","01，说明锁对象的锁处于未锁定（unlocked）状态。此时虚拟机在当前线程的虚拟机栈中创建","1","1.5","1.6","25bit","32bit","=","append()","bias）后恢复到未锁定状态或者轻量级锁状态。","bit","ca","concatstring()","concatstring(str","cpu","hotspot","id","java轻量级锁简介","jdk","jvm","lock","locked）和重量级锁状态（inflated）。","mark","new","public","record","record)","return","s1","s1,","s2","s2,","s3)","s3;","sb","sb.append(s1);","sb.append(s2);","sb.append(s3);","sb.tostring();","sb，很快就会发现它的动态作用域被限制在","state","static","string","stringbuff","stringbuffer();","synchron","tag","word","word)，然后使用","word。mark","word。而右侧就是一个锁对象，包含了","{","}","上一节的示例代码中连续的","下图左侧是一个线程的虚拟机栈，其中有一部分称为","中引入了自适应的自旋锁。自适应意味着自旋的次数不再固定了，而是由前一次在同一个锁上的自旋次数及锁的拥有者的状态来决定。","中，如果","为0","为00)，mark","之前，会转化为","互斥同步进入阻塞状态的开销都很大，应该尽量避免。在许多应用中，共享数据的锁定状态只会持续很短的一段时间。自旋锁的思想是让一个线程在请求一个共享数据的锁时执行忙循环（自旋）一段时间，如果在这段时间内能获得锁，就可以避免进入阻塞状态。","以下是","偏向锁","偏向锁的思想是偏向于让第一个获取锁对象的线程，这个线程在之后获取该锁就不再需要进行同步操作，甚至连","关于轻量级锁的简介见","和其它信息。","固定为0。当对象处于轻量级锁状态时","在","失败了再改用互斥量进行同步。","如果","如果一系列的连续操作都对同一个对象反复加锁和解锁，频繁的加锁操作就会导致性能损耗。","存储指向锁记录","对","对于一些看起来没有加锁的代码，其实隐式的加了很多锁。例如下面的字符串拼接代码就隐式加了锁：","对应了五个状态，这些状态在右侧的","对象的连续","引入了偏向锁和轻量级锁，从而让锁拥有了四个状态：无锁状态（unlocked）、偏向锁状态（biasble）、轻量级锁状态（lightweight","当尝试获取一个锁对象时，如果锁对象标记为","当有另外一个线程去尝试获取这个锁对象时，偏向状态就宣告结束，此时撤销偏向（revok","当锁对象第一次被线程获得的时候，进入偏向状态，标记为","指针。如果","操作之前直至最后一个","操作之后，这样只需要加锁一次就可以了。","操作也不再需要。","操作失败了，虚拟机首先会检查对象的","操作将对象的","操作将线程","操作成功了，那么线程就获取了该对象上的锁，并且对象的","操作成功，这个线程以后每次进入这个锁相关的同步块就不需要再进行任何同步操作。","操作来避免重量级锁使用互斥量的开销。对于绝大部分的锁，在整个同步周期内都是不存在竞争的，因此也就不需要都使用互斥量进行同步，可以先采用","操作进行同步，如果","操作：","方法中都有一个同步块。虚拟机观察变量","方法之外","方法内部。也就是说，sb","方法就属于这类情况。如果虚拟机探测到由这样的一串零碎的操作都对同一个对象加锁，将会把加锁的范围扩展（粗化）到整个操作序列的外部。对于上一节的示例代码就是扩展到第一个","时间，它只适用于共享数据的锁定状态很短的场景。","是","是一个不可变的类，编译器会对","是否指向当前线程的虚拟机栈，如果是的话说明当前线程已经拥有了这个锁对象，那就可以直接进入同步块继续执行，否则说明这个锁对象已经被其他线程线程抢占了。如果有两条以上的线程争用同一个锁，那轻量级锁就不再有效，要膨胀为重量级锁。","更新为","每个","用于存储对象分代年龄，2bit","用于存储对象哈希码，4bit","用于存储锁标志位，1bit","的","的优化。","的区域，这是在轻量级锁运行过程创建的，用于存放锁对象的","的局部变量)，其他线程无法访问到它，因此可以进行消除。","的所有引用永远不会逃逸到","的拼接自动优化。在","的指针。","的数据结构并非固定，根据不同的状态会有不同的结构。其中","的状态下，mark","的锁标记变为","空间中的","自旋锁","自旋锁虽然能避免进入阻塞状态从而减少开销，但是它需要进行忙循环操作占用","虚拟机中对象未被锁定","虚拟机对象头的内存布局，这些数据被称为","表格中给出。比如在32位的","记录到","轻量级锁","轻量级锁是相对于传统的重量级锁而言，它使用","这里的锁优化主要是指","锁优化","锁消除","锁消除主要是通过逃逸分析来支持，如果堆上的共享数据不可能逃逸出去被其它线程访问到，那么就可以把它们当成私有数据对待，也就可以将它们的锁进行消除。","锁消除是指对于被检测出不可能存在竞争的共享数据的锁进行消除。","锁粗化"],"Java/Java并发/Best Practices.html":["best","blockingqueu","bug。","concurrenthashmap","cyclicbarrier,","exchang","hashtable。","jdk","notify()","notify()。首先，countdownlatch,","practic","semaphor","synchronized，应该尽量使用同步块而不是同步方法。","wait()","中还会不断优化和完善。","使用","使用本地变量和不可变类来保证线程安全。","使用线程池而不是直接创建线程，这是因为创建线程代价很高，线程池可以有效地利用有限的线程来启动任务。","和","多用同步工具少用","多用并发集合少用同步集合，例如应该使用","多线程开发的良好实践","实现生产者消费者问题。","很难实现复杂控制流；其次，这些同步类是由最好的企业编写和维护，在后续的","给线程起个有意义的名字，这样可以方便找","缩小同步范围，从而减少锁争用。例如对于","而不是","这些同步类简化了编码操作，而用"],"JianZhiOffer/":["剑指offer","终于刷完《剑指offer》啦！！！这里整理一下自己的题解。原书中的代码是用c++实现的，由于自己对java更熟悉一些，因此这里我选择用java实现。在刷的过程中，除了参考并用java再现了书上的解法外，对于一些题目我也补充了一些我在其他地方，比如leetcode，《算法竞赛入门经典》等看到的一些比较有意思的解法，比如对于“两个链表的第一个公共节点”这道题，用一个“两次迭代”的解法要比书上的解法更加直观，效率更高，对于“正则表达式匹配”这道题，书上的解法对于一些字符串长度很长的case效果会很差，而选用一种动态规划的方法则会大大提升程序的性能。此外，对于“数组中出现次数超过一半的数字”这道题，在使用书上第一种解法的时候要注意partition函数的选取。如果在partition函数中每次只选取第一个元素作为基准元素，那么在某些数组中的重复数字比较多的case下可能会产生死循环。为了避免产生死循环，我们应该随机地选取基准元素。","虽然刷是刷了一遍，但是自我感觉对于某些题目的理解还是不够深，等以后有时间了再刷一遍吧！^_^"],"JianZhiOffer/Array/":["array"],"JianZhiOffer/Array/把数组排成最小的数.html":["\"\";","()","(int","(num","(string","+","//","0)","0;","32,","321}，则打印出这三个数字能排成的最小数字为321323。",":","=","==","@overrid","combination1","combination1.compareto(combination2);","combination2","compare(str","int","m","m,","m;","mn","n","n)","n;","new","null","nums)","nums.length","printminnumber(int[]","public","return","sb","sb.append(str);","sb.tostring();","str","string","string[]","string[nums.length];","stringbuild","stringbuilder();","strs)","{","{3,","||","}","});","两个数字，如果","和","思路","把数组排成最小的数","由于需要将m,n两个数字拼接得到mn，因此这里将数组中的每个数字转换为字符串","自定义比较规则，对于","输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。例如输入数组","题目"],"JianZhiOffer/Array/丑数.html":["(n","*","...]。假设当前数组中最大的丑数是","1","2,","2，找到第一个大于","3,","3和5的数称作丑数","4,","5,","5中找到一个最小的数作为下一个丑数。但是这样需要把","5同理。","5，其实这并不是必须的，由于数组是排好序的，对于乘以2而言，数组中肯定存在一个数","6,","8,","8都是丑数，但14不是，因为它包含质因子7。","[1,","getuglynumber(int","int","m","m之前的丑数分别","m，小于","n","n)","number。例如6,","public","t2","t2，在它之前的丑数乘以2都小于已有的最大丑数，而它之后的丑数乘以2又太大，我们只需要记录这个丑数的位置并且在每次求出当前数组的最大丑数时更新这个","ugli","{","丑数","个丑数。约定1是第一个丑数。","中每个数是不是丑数的方法，因为那样对每个数即使是非丑数都要进行求余和除法的操作，时间效率很低。可以事先求出","之前的所有丑数都乘以2,","习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第","即可。对于3,","思路","把只包含质因子2,","的下一个丑数是多少。我们可以将","的丑数已经求出，我们需要求出","的数，对于3和5同理，然后再从2,","的每个丑数并将其排好序存在一个数组里，例如","题目","首先摒弃逐一判断"],"JianZhiOffer/Array/和为s的两个数字.html":["();","(1","(int","(lo","(num","(small","(sum","+","/","0","0;","11,","11]。","15]","15，所以结果打印出3个连续序列1","1;","2","2,","2;","2。","3","4","4,","5","5,","6","6,","7","7,","8","8。","=","==",">","[1,","[4,","array[hi]","array[lo]","arraylist<>();","big","big;","big以让序列包含更多的数；如果小于","currsum","findcontinuoussequence(int","findnumberswithsum(int[]","hi","hi；当","int","list","list>","lo","mid","new","null","nums,","nums.length","public","result","result)","s","s)","small","small;","sum","sum)","sum，我们增大","sum，打印出所有和为","sum：如果小于","s。如果有多对数字的和等于s，输出任意一对即可。例如输入数组","s，在数组中查找两个数，使得他们的和正好是","temp","{","||","两个指针指示正数序列，small","以减小序列的和；如果等于","和","和为","和为s的两个数字","和数字15，输出","思路","我们则将当前序列打印出来。由于序列至少需要包含2个数，因此","我们可以用","扩展","指示序列的最后一个数。初始时","指示序列的第一个数，big","指示数组的第一个数，hi指示数组的最后一个数，当","时，减小","时，即找到了这两个数。","由于数组是递增排序的，初始时用","的连续正数序列。输入一个正数","的连续正数序列（至少含有两个数）。例如输入15，由于1","置为1，big","置为2，然后，我们判断当前序列的和是大于还是小于","至多只能增加到","输入一个递增排序的数组和一个数字","题目"],"JianZhiOffer/Array/数值的整数次方.html":["&&","(2","(isequal(base,","/","//","0.0)","1)","1)，以此类推，注意当","1。之后我们需要判断","2)","2)，而2","2只能得到2，所以此时我们还要再乘一个","2可以看成是(2","4可以看成是(2","5","=","^","base","base,","base。","doubl","exp","exp)","expon","exp。求","helper()","int","power(doubl","public","re","{","不为负数的前提下我们调用","为奇数时，例如当","为负数，在我们求出","之后还要求其倒数。在","和","思路","数值的整数次方","时，5","是否为负数，如果","来求","次方。","次方。虽然我们可以采用连乘的方法去求，但那不是最优的。这里我们采用递归的方法去求。例如2","的","类型的整数","类型的浮点数","给定一个","题目","首先我们需要处理一些无效的输入，例如0"],"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":["!=","(e.getvalue()","(index","(int","(map.entri","(num","(nums.length","+","/","//","0)","0;","1)","1);","1;","1，num","2","2)","2,","2;","2];","2]，1,","2]，由于2在数组中出现了5次，因此输出2。假设数组中出现次数大于","2中1和2的出现次数相互抵消，3,","2中3和2的出现次数相互抵消，2,","2，则找到该数；当","2，即为数组中出现次数最多的数。","2，说明中位数在右半部分，继续在右半部分找；当","2，说明中位数在左半部分，继续在左半部分找。","3,","4,","4中2和5,","4的出现次数相互抵消，最后","5,",":","=","==",">","[1,","arrays.sort(nums);","count","e","e.getkey();","hashmap<>();","hi","hi);","index","int","lo","lo,","majorityelement(int[]","map","map.entryset())","map.getordefault(num,","map.put(num,","map，找到出现次数大于","mid","mid)","mid！为此我们应该采用更为科学的","n","new","null","num","nums)","nums.length","nums.length;","nums[0];","nums[n","partit","partition(nums,","public","return","{","||","}","下面这个方法是书中该题的第一个方法。数组中有一个数字出现的次数超过数组长度的一半，也就是说它出现的次数比其他所有数字出现次数的和还要多。因此我们在遍历数组的时候用一个变量","下面这个方法是书中该题的第一个方法，我们称它为","不同，则","保存它的出现次数和其他数的出现次数抵消后的值。如果当前数和","保存当前出现次数最多的数，用另一个变量","减为0，则将","函数。partit","函数应用于该题中则在某些测试用例下会产生死循环，当数组中存在大量重复元素时，partit","函数的思路是：每次我们从数组中选择一个数作为基准，将数组中所有比该数小的数排在它的左边，将数组中所有比该数大的数排在它的右边。由此，我们便确定了该数在排序数组中的正确位置。但是一般的数据结构书中对于","函数的设计。我们当时在学习数据结构这门课程时，都会学习快速排序，而快速排序的关键就是","函数的设计默认都为将数组中第一个数作为基准，但是如果将这种","函数的设计，即在当前数组中随机选取一个数作为基准。","函数返回的","即为该数。例如对于","可能永远不等于","如果我们将数组按从小到大进行排序，那么数组中出现次数超过一半的数字就是数组的中位数，直接返回排序后数组中间位置的那个数即可。","思路1","思路2:","思路3","思路4","找到出现次数大于n/2的元素返回","数组中出现次数超过一半的数字","方法。它的思路是由于","方法每次可以确定一个数在排序数组中的正确位置，因此当","时间复杂度：o(n)","时间复杂度：o(nlogn)","注意，这种方法能够得到正确结果的关键在于","用一个","的元素。假设数组非空并且出现次数大于","的元素一定存在。","的数并返回。","的数总是存在。例如给定一个长度为9的数组","的整数数组，找到出现次数大于","相同，则count++；如果当前数和","空间复杂度：o(1)","空间复杂度：o(1)（取决于所用的排序算法）","空间复杂度：o(n)","给定一个大小为","统计数组中每个数字的出现次数","统计数组中每个数字的出现次数，然后遍历","置为1。遍历结束后如果数组中超过一半的数字确实存在，那么","置为当前数字并将","返回的值大于","返回的值小于","返回的值是","题目","；如果"],"JianZhiOffer/Array/数组中的逆序对.html":["&&","(;","(aux[i]","(hi","(int","(j","(lo","(num",")","+","+=","...,","/","//","0)","0,","0;","1)","1);","1,","1;","2;","4]","4],[5,","4],[6,","4]。","4]，我们可以首先可以得到","5,","5],[7,","6,","6]","6],[7,","6]，逆序对数目为1。接着再将","6，所以7大于6前面所有的元素包括6，因此逆序对数目+","7]","7]，逆序对数目为1；[6],","=","==",">",">=","[4,","[4,6]","[4]","[5,","[5]","[5],","[6],","[7,","[7]","[7],","]","];","aux","aux;","aux[i","aux[i];","aux[j","aux[j])","aux[j];","count","count;","hi)","hi);","hi]拷贝给aux，nums用来承载排序后的结果","index","int","int[]","int[nums.length];","inversepairs(int[]","inversepairscore(int[]","inversepairscore(nums,","j","left","lo","lo)","lo,","lo;","mid","mid);","mid)，之后我们将7放到","mid;","new","null","nums)","nums,","nums.length","nums[index","o(n^2)，显然效率很低。可以利用归并排序的思想。对于","privat","public","p。如果前一个数字大于后一个数字，则这两个数字组成一个逆序对。输入一个数组，求出在这个数组中的逆序对的总数。例如，在数组","return","right","special","{","||","}","一次性分配辅助数组的空间","中，aux","中，一共存在5个逆序对，分别是","向前移动一个单位。接着判断5和6，因为5","和","在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组,求出这个数组中的逆序对的总数","处，同时","如果顺序遍历数组，对于每个元素向后继续遍历数组统计其逆序对的数目，那么时间复杂度是","对右半部分数组进行排序并统计逆序对的数目","对左半部分数组进行排序并统计逆序对的数目","将nums[lo,","归并之后得","思路","指向","指向的元素7和6，同时将较大的元素保存到一个辅助数组","指示这个辅助数组，初始时","指针指向两个子数组中间的元素，也就是第一个数组的最后一个元素7，比较","数组中的逆序对","的","的最后一个元素6，mid","的最后一个元素7，另一个指针","的最后一个元素。因为7","的长度等于两个数组的长度之和，我们用","辅助数组","这4个子数组，然后将相邻的两个子数组归并成一个数组，同时统计逆序对的数目。比如","进行归并并统计逆序对的数目。我们首先用一个指针","题目"],"JianZhiOffer/Array/数组中重复的数字.html":["(int","(num","(用","(该数字在下标为","0","0)","0,","0;i","1,","1;","2,","3,","3]，那么对应的输出是重复的数字2或3。","5,","=","==","[2,","false。备注：代码中尽管有一个两重循环，但是对于每个数字最多只需要进行一次交换和一次遍历就能找到其正确的位置，因此总的时间复杂度是","findduplicatednumber(int[]","int","i，如果是，说明","m","n","null","nums)","nums.length","n，因此我们可以根据下标来重排这个数组。从头到尾扫描这个数组，当扫描到下标为","o(1)。注意到题目中说所有数字的范围都在","o(n)。","o(n)。接下来我们看看能不能把空间复杂度优化为","o(n)，空间复杂度为","o(nlogn)。也可以用一个","public","return","set","true，否则，数组中没有重复数字并且算法结束后所有的数字都放置了它正确的位置上个，返回","{","||","个数字和第","个数字进行交换，把","保存已经扫描过的数字，如果当前数字已经包含在了","可以先对数组进行排序，然后从头到尾遍历数组找到重复的数字，时间复杂度为","和","在一个长度为","已经被放在了正确的位置上，接着扫描下一个数字。如果不是，拿它和下标为","思路","放到它正确的位置上去。接下来重复这个过程，直到我们找到了一个重复的数字，返回","数组中重复的数字","是不是等于","的位置都出现了)。如果它和下标为","的数字不等，就把第","的数字时，首先比较这个数字","的数字相等，我们就找到了一个重复的数字","的数字进行比较，如果它和下标为","的数组中，所有的数字都在","的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。找出数组中任意一个重复的数字。例如如果输入长度为7的数","表示)","里，那么就找到了一个重复的数字，时间复杂度为","题目"],"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":["&","&&","((num","(int","(lo","(num","(nums[hi]","+","/","0","0)","0;","1)","1;","2",":",";","=","==",">=","?","evennum","evennum++;","hi","hi，lo","int","int[]","int[nums.length];","lo","new","null","num","num;","nums)","nums.length","oddnum","oddnum++;","p1","p2","p2，然后向新数组中按照顺序放入奇数和偶数。","public","reorderarray(int[]","return;","temp","temp[p1++]","temp[p2++]","void","{","||","}","为止。","从头开始找到第一个偶数，hi","从尾开始找到第一个奇数，然后交换","可以将原数组中的奇数和偶数按照一定的顺序放入一个新数组中。先遍历一遍原数组，求出奇数和偶数的个数，确定新数组中指示奇数的下标","和","和指示偶数的下标","如果要求调整后奇数和奇数，偶数和偶数之间的相对顺序保持不变，应该怎么做呢？","思路","扩展","指示的这两个数，重复进行直到","用两个指针","调整数组顺序使奇数位于偶数前面","输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，并保证奇数和奇数。","题目"],"JianZhiOffer/Backtracking/":["backtrack"],"JianZhiOffer/Backtracking/机器人的运动范围.html":["%","&&","(0,","(threshold","+=","//","/=","0","0)","0,","0};","1,","10;","1};","5,","7,","7，返回21。","=","col","cols)","count++","dir_i","dir_x","final","int","int[]","j","k","m","movingcount(int","n","num","privat","public","return","row","rows,","static","sum","sum;","threshold,","true。","{","{0,","}","列的方格。一个机器人从坐标","回溯法。在进入一个新的格子之前先判断是否能进入，如果能进入则","地上有一个","并且置访问标记为","思路","机器人的运动范围","的格子。请问问该机器人能够到达多少个格子。例如给定threshold","的格子开始移动，它每次可以向左、右、上、下移动一格，但不能进入行坐标和列坐标的数位之和大于","行","表示上、下、左、右4个方向","题目"],"JianZhiOffer/Backtracking/矩阵中的路径.html":["!=","&&","(int","(matrix","+","//","0","0)","0,","0;","0};","1)。此外，由于在寻找路径的过程中已经访问过的格子不能重复进入，因此我们还需要定义一个访问数组","1,","1};","=","=0","==","boolean","col","dir_i","dir_x","false;","final","haspath(char[][]","int","int[]","j","matrix,","matrix.length()","matrix.length;","matrix.length[0];","matrix[0].length","matrix[i][j]，说明当前字符能够构成路径，我们继续从当前字符出发分别沿着上、下、左、右4个方向继续寻找路径中的下一个字符str(curr","matrix[i][j]，说明矩阵中的当前字符不能构成路径，需要进行回溯。如果str(curr)","null","privat","public","return","row","static","str","str)","str.length()","string","vis。","{","{0,","||","一个可以用回溯法解决的典型题。首先在矩阵中任选一个格子作为路径的起点。设矩阵中的当前字符为matrix[i][j]，路径字符串的当前字符为str(curr)。如果str(curr)","思路","矩阵中的路径","矩阵的列数","矩阵的行数","表示上、下、左、右4个方向","设计一个函数，用来判断一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。","题目"],"JianZhiOffer/Binary Search/":["binari","search"],"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":["&&","(first","(lo","(num","+","//","0)","0;","1","1)","1;","2,","3,","3，输出4。","4,","5]，k","=","==",">","[1,","first","getfirstk(int[]","getfirstk(nums,","getlastk(nums,","getnumberofk(int[]","hi","int","k","k)","k);","k。因为要查找的数字在长度为","k最后一次出现的位置","k第一次出现的位置","k，我们从当前位置出发分别沿左，右两个方向顺序地寻找","k，我们继续在前半部分中用二分查找寻找","k，由于","last","lo","n","null","nums,","nums.length","o(n)。我们来看看有没有更好的方法。","privat","public","return","{","||","}","了，那么这个","在数组中出现的次数，也可以先用二分查找找到一个","在数组中的出现次数了。","就是","当我们用二分查找在数组中找到一个","当然，我们可以顺序遍历数组来统计","思路","数字在排序数组中出现的次数","时，如果前面没有","最后一次出现的位置。找到了","次，所以上面两种方法的时间复杂度都是","的左边和右边也有可能有","的数组中有可能出现","第一次出现的位置和最后一次出现的位置，我们就可以算出","第一次出现的位置；同理，我们可以得到","第一次出现的位置；如果前面还有","统计数字k在排序数组中出现的次数。例如输入数组","返回k在数组中第一次出现的位置","题目"],"JianZhiOffer/Binary Search/旋转数组的最小数字.html":["&&","(hi","(int","(num","(nums[lo]","(nums[mid]","+","...,","/","//","0)","0;","1)","1,","1;","2,","2;","2]","3,","4,","5,","5]","=","==",">=","[1,","[3,","array[lo]，说明最小的数在","array[mid]","helper(int[]","helper(nums,","hi","hi)","hi);","hi,","hi]中的最小数字","int","lo","lo)","lo,","mid","mid;","mid指向的数字相同时，此时无法判断mid指向的数字属于前一个子数组还是后一个子数组，此时需要用顺序遍历找到nums[lo,","min","minnumberinrotatearray(int[]","note：给出的所有元素都大于0，若数组大小为0，请返回0。","null","nums)","nums,","nums.length","nums[0];","nums[hi]","nums[hi])","nums[hi];","nums[lo])","nums[lo];","nums[mid]","privat","public","return","{","||","}","中间的数。如果","为","之间，移动","到","和","和hi","在后半数组中继续查找；如果","在我们的循环不变式中，lo指向前一个递增子数组，hi指向后一个递增子数组，因此这里循环条件是nums[lo]","如果数组本身已经是排好序的，第一个数字是最小的数字","当lo,","思路1","思路2","把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。","指示","指示数组的最后一个数，mid","指示数组的第一个数，hi","旋转之后的数组可以看做是由两个递增的子数组所构成，而这个最小的数就是这两个子数组的分界点。可以借助二分查找的思想去寻找这个最小的数。初始时用","旋转数组的最小数字","时间复杂度：o(logn)","时间复杂度：o(n)","的一个旋转，该数组的最小值为1。","输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。例如数组","遍历数组，找到第一个当前数字比前一个数字小的数字，该数字就是数组中最小的数字。","题目"],"JianZhiOffer/Bit Manipulation/":["bit","manipul"],"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":["!=","&","(int","(n","0)","0;","1)","1;","=",">=","count","count++;","count++，之后将最后一位移出继续判断余下的数。","count;","int","java","n","n)","n;","numberof1(int","n操作可以将n的二进制表示中最右边的1变成0”","public","return","{","}","“(n","中一个","二进制中1的个数","和1进行位与运算判断其最后一位是不是1，如果是1则","思路1","思路2","根据","由于","类型的数有4个字节，共32位，因此循环32次，每次用","输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。","这个结论，我们可以写出如下代码进一步提高运算效率。","题目"],"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":["&","((num","(int","(isbitone(num,","(num","(因为一个数和自己异或的结果为0，因此所有出现两次的数都抵消掉了)，最后得到的结果就是那个只出现一次的数。现在我们考虑数组中恰有两个数出现1次，其他数都是出现两次。首先，从头到尾遍历数组，对每个数求异或，得到数","//","0)","0;","1)","1;",":","=","==",">=",">>","^=","boolean","findfirstbitone(int","findfirstbitone(temp);","findnumsappearonce(int[]","index","index)","index))","index++;","index;","int","int[2];","int[]","int[]{};","isbitone(int","n","new","null","num","num)","num,","num;","nums)","nums.length","o(1)。","o(n)，空间复杂度是","privat","public","result","result;","result[0]","result[1]","return","temp","temp。在异或的过程中，由于所有出现2次的数都抵消掉了，所以","{","||","}","一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是","位为1。我们根据数组中每个数的二进制中的第","位是否为1,可以把原数组分成两个数组，可知，出现2次的数一定被分到了一个数组当中。接着，我们分别对两个数组按照开始的思路求异或，即可得到两个出现1次的数。","先考虑一种简单的情况，数组中只有一个数出现1次，其他数都是出现2次。我们可以从头到尾遍历数组，对每个数求异或，","思路","数组中只出现一次的两个数字","是数组中那两个只出现1次的数异或的结果。由于这两个数不相同，所以","的二进制表示中一定有一位为1。假设其第","肯定不为0，即","返回num的二进制表示中从右向左第一个1的位置","返回num的二进制表示的第index位是不是1","题目"],"JianZhiOffer/Dynamic Programming/":["dynam","program"],"JianZhiOffer/Dynamic Programming/斐波那契数列.html":["(n","+","...，现在要求输入一个整数","0)","0;","1","1)","1,","1;","1]","2","2)","2);","2,","2]。","2级台阶跳1次，1次跳2级得到，因此跳上","3,","5,","8,","=","==","dp[n","dp[n]","dp。","dp。我们先来分析跳上2级台阶总共有多少种跳法。可以跳2次，1次跳1级，也可以一次跳2级，这样就有2种跳法。现在假设跳上","fibonacci(int","fibonacci(n","int","jumpingstairs(int","n","n)","n，请你输出斐波那契数列的第","public","return","{","||","}","一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个","大家都知道斐波那契数列，即1,","思路","思路1","思路2","扩展","斐波那契数列","种跳法，n","级台阶从","级台阶总共有","级台阶的跳法数和跳上","级台阶的跳法数的和，即","级台阶的跳法数等于跳上","级台阶跳1次，1次跳1级得到，也可以从","级的台阶总共有多少种跳法。","递归。","项（从0开始，第0项为0）。n","题目"],"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":["(int","(num","+","...","...,","//","0)","0;","1,","15,","1;","1]","1。","2,","2]，最大的子序列为","3,","7,","7]，输出8。","=","==","[6,","a1","a2","ai","ai+1","ai，则","aj","dp","dp[0]","dp[i","dp[i]","dp。dp[i]","findgreatestsumofsubarray(int[]","i]","i]中每个元素累加的和","int","int[]","int[nums.length];","integer.min_value;","max{nums[i],","new","null","nums)","nums.length","nums[0,","nums[0];","nums[i]","nums[i]}","public","result","return","s","s[0]","s[i]表示s[0,","si","sj","{","||","“连续子序列之和等于两个前缀和之差”，即设","中包含","思路1","思路2","时间复杂度：o(n)","时间复杂度：o(n^2)","根据结论","的最大连续子序列的和，状态转移方程如下：","给定一个数组，返回它的最大连续子序列的和，子序列的长度至少为1。例如给定数组","表示","连续子数组的最大和","题目"],"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":["!=","&&","'*')","'.'));","(!s.isempty()","(first_match","(i","(int","(p.isempty())","(p.length()","(p2","(s","(s.charat(0)",")","+","//","0);","0,","0;","1","1;","1];","1][p.length()","1开始，这是因为当s为空时也需要进行判断，比如s=\"\",p=\"a*\"，s和p也是匹配的","=","==",">",">=","boolean","boolean[][]","boolean[s.length()","dp","dp[i][j]表示s(i:)和p(j:)是否匹配","dp[s.length()][p.length()]","false;","first_match","int","ismatch(s,","ismatch(s.substring(1),","ismatch(str","ismatchcore(s,","ismatchcore(str","j","new","null","null)","p","p)","p));","p,","p.charat(0)","p.charat(1)","p.length","p.length()","p.substring(1));","p.substring(2))","p1","p1,","p2)","privat","public","p的下一个字符是'*'","p，实现一个支持.和*的正则匹配。模式中的字符.表示任意一个字符，而*表示它前面的字符可以出现任意次（含0次）。在本题中，匹配是指字符串的所有字符匹配整个模式。例如字符串\"aaa\"与模式\"a.a\"和\"ab*ac*a\"匹配，但与“aa.a”和\"ab*a\"均不匹配。","return","s","s,","s.isempty();","s.length())","s.length();","string","true;","{","||","}","《剑指offer》的解法。当没有*的时候，情况比较简单，我们只需要从左到右依次判断","上述思路的","中*前面的字符还和","中余下的字符和","中去掉1个字符，判断","余下的字符；如果是*，或者匹配0个，即忽略","初始化dp，当s和p同时到达末尾时匹配成功","判断s的当前字符和p的当前字符是否匹配","匹配0个","匹配1个","匹配1个或多个","和","和一个模式","思路1","思路2","思路3","是否匹配。和上一个思路把匹配分为匹配0个，匹配1个，匹配多个相比，这里把匹配1个和匹配多个在逻辑上统一成匹配多个了。","是否匹配；要么匹配多个，即从","正则表达式匹配","注意这里i是从s.length()开始，j是从p.length()","版本。","的下一个字符是不是*，如果不是*，继续判断","的当前字符和*，继续看","的当前字符是否匹配即可。如果有*并且","的当前字符是否匹配，接着看","的当前字符相同，我们分为三种情况去处理：匹配0个、匹配1个和匹配多个。","给定一个字符串","该方法对上述方法的逻辑做了简化。首先判断","题目"],"JianZhiOffer/LinkedList/":["linkedlist"],"JianZhiOffer/LinkedList/从尾到头打印链表.html":["!=","(!stack.isempty())","(curr","(head","=","==","curr","curr.next;","head)","head;","listnod","new","node","null)","printlistfromtailtohead(head.next);","printlistfromtailtohead(listnod","public","return;","stack","stack.pop();","stack.push(curr);","stack<>();","system.out.println(head.val);","system.out.println(node.val);","void","{","}","从尾到头打印链表","使用一个辅助栈即可。","思路1","思路2","输入一个链表的头结点，从尾到头反过来打印出每个节点的值。","递归。","题目"],"JianZhiOffer/LinkedList/反转链表.html":["!=","(curr","(head","//","=","==","curr","curr.next","curr.next;","curr;","head","head)","head.next","head.next;","head;","listnod","new_head","new_head;","next","next.next","next;","null","null)","null;","null。当","null，说明链表中只剩下一个节点，直接返回该节点即可。","null，返回","null；当","prev","prev;","public","return","reverselist(listnod","reverselist(next);","special","{","||","}","中，因为反转会修改","为","反转链表","后面的部分已经反转完成了，考虑如何反转当前节点。我们需要把next","循环。curr","思路1","思路2","指向。","指示当前节点的下一个节点。依次反转每个节点并向前移动指针。注意，反转时首先保存原链表中当前节点的下一个节点到","指示当前节点的前一个节点，next","指示当前节点，prev","指针为","指针指向当前节点，并且将","指针置为","的","的next","的下一个节点","输入一个链表，反转链表后，输出新链表的表头。","递归。假设当前节点","题目"],"JianZhiOffer/LinkedList/复杂链表的复制.html":["!=","(clonedhead","(curr","(curr.random","(currclon","(int","(map.containskey(curr))","(map.containskey(curr.random))","(phead","(randomlistnod","//","//复制原链表的每个节点，并用next链接起来","//设置复制链表的random","=","==","class","clone","clonedcurr","clonedcurr.next","clonedcurr.next;","clonedhead","clonedhead;","clonednod","clonednode);","clonednode.next","clonednode.next;","clonednode.random","clonednode;","clonenod","clonenodes(phead);","connectnod","connectnodes(phead);","curr","curr.next","curr.next;","curr.random.next;","currclon","currcloned.random","currcloned=null;","hashmap<>();","head)","head;","int","key，复制节点作为","label)","label;","map","map.get(curr);","map.get(curr.random);","map.put(curr,","map。将复杂链表的复制分为两步，第一步，复制原链表的每个节点，并用","n","n1","n1.random","new","next","next;","null)","null;","o(1)","phead)","phead;","privat","public","random","random;","randomclon","randomcloned;","randomcloned=null;","randomlistnod","randomlistnode(curr.label);","random。","random。若","reconnectnod","reconnectnodes(phead);","return","s","s1","s1。","s1，设置","s，则","s，则通过","this.label","value）；第二步，设置复制链表中每个节点的","void","{","}","中（原节点作为","为","之间的映射关系，这次我们直接在原链表上完成复制。","即可。","原链表的当前节点","可以在","同样是用空间换时间的思想，但是不同于上一个思路中用额外的存储空间存储节点和节点的","和","复制链表中每个节点，将复制节点直接链接到原节点的后面","复制链表中的每个节点并将复制的节点直接链接到原节点的后面，此时不设置每个节点的","复制链表的头结点","复制链表的当前节点","复杂链表的复制","将复制后的链表拆分成原链表和复制链表并返回复制链表的头结点","就是","思路1","思路2","我们将复杂链表的复制过程分为三个步骤：","指向下一个节点，另一个指针","指向链表中任意一个节点），返回结果为复制后的复杂链表的头结点。","指针。遍历原链表，如果节点","时间内找到","时间复杂度：o(n)。","是","此时该链表中奇数位置的节点构成原链表，偶数位置的节点构成复制链表，将其拆分出来即可。","的","的下一个节点","空间复杂度：o(1)。","空间复杂度：o(n)。","设置clonedhead","设置复制节点的","设置复制节点的random","输入一个复杂链表（每个节点中有节点值以及两个指针，一个指针","链接起来，同时将原节点和复制节点存到","题目"],"JianZhiOffer/LinkedList/合并两个排序的链表.html":["(head1","(head1.val","(head2","=","==","curr","head1","head1,","head1;","head2","head2)","head2;","listnod","merge(listnod","null)","null;","public","return","{","中的较小者作为当前结点，之后递归构造下一个节点。","合并两个排序的链表","和","思路","每次选取","输入两个单调递增的链表，输出两个链表合成后的链表，合成后的链表也要求单调递增。","题目"],"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":["!=","(curr","(head","(int","0;","1","=","==","curr","curr.next;","fast","fast移动到链表的最后一个节点时，slow","findkthtotail(listnod","head,","head;","int","k","k)","length(head))","listnod","new","null","null)","null;","pop","public","return","slow","stack","stack.push(curr);","stack<>();","{","||","}","不能大于链表的长度，为此需要先求出链表的长度。","个结点。","个节点","个节点。注意，这种方法要求","个节点，之后两个指针再一起移动，当","中，将","从表头开始先向后移动","先遍历一遍链表，将每一个节点都压入一个","思路1","思路2","指示的刚好是链表中倒数第","指针和一个","指针，fast","次即可得到倒数第","用一个","输入一个链表，输出该链表中倒数第","链表中倒数第k个节点","题目"],"JianZhiOffer/LinkedList/链表中环的入口节点.html":["!=","&&","(1)","(1)，同时由于","(2)","(2)。联立","(curr.next","(fast","(head","(int","(meetingnod","(p","(slow","+","//","0;i","1;","2a","2b","=","==","b","break;","b，其中","curr","curr.next;","entri","entrynodeofloop(listnod","entry的路程，b","fast","fast)","fast.next","fast.next.next;","findmeetingnode(head);","head","head)","head.next","head;","int","listnod","meetingnod","meetingnode)","meetingnode;","n","nodesinloop","nodesinloop++;","null","null)","null;","n，所以相遇节点到","p","p.next;","p;","privat","public","return","set","slow","slow)","slow.next;","{","||","}","一个链表中包含环，找到环的入口节点。","个单位，然后两个指针再一起走，每次走一个单位。当两个指针相遇时，相遇节点就是环的入口节点。关键是如何求出环中的节点个数。借由上一题的分析，我们可以让","个节点，先让第一个指针从链表头开始在链表上走","中时，说明链表中有环并且当前节点就是环的入口节点。","为","为环的入口节点。当","为环的长度。由于相遇时","书上的方法。定义两个指针，设环中有","从头开始遍历链表，用一个","从相遇的地方继续向前走，每次也走1步，当","从相遇节点处继续向前走，并记录走过的节点个数，当再次回到这个节点时，即可得出环中的节点个数。","从链表的第一个节点开始向前走，每次走1步，slow","代码略。","保存已经走过的节点。当当前节点已经存在于","到","同时从链表的第一个节点开始向前走，fast","和","和一个慢指针","在环中走过的路程，n","多走了一圈，因此","得","思路1","思路2：","思路3","我们先来分析这样一个问题：如何判断一个链表中是否存在环？我们可以让一个快指针","每次走1步。如果两个指针相遇则说明链表中存在环，如果","每次走1步，fast","每次走2步，slow","每次走2步，所以","比","环中的节点个数","的距离和","的距离是相同的。","相遇时，相遇节点就是环的入口节点。","相遇时，设","证明：设","走到链表的末尾两个指针还没有相遇则说明链表中不存在环。现在我们再设置一个指针","走过的路程为","走过的路程又可以表示为","链表中没有环","链表中环的入口节点","题目"],"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":["!=","(curr1","(head1","(int","(len2","(listnod","(没有公共结点)","//","0;",":","=","==",">","?","curr1","curr1.next;","curr1;","curr2","curr2)","curr2.next;","curr2;","curr_long","curr_short","diff","diff。之后，先在长链表上走","findfirstcommonnod","getlength(head1);","getlength(head2);","head1","head1,","head1;","head2","head2)","head2;","int","len1","len1)","len1，短链表的长度","len2","len2);","len2，两个链表的长度差","listnod","math.abs(len1","null","null)","null;","public","return","{","||","}","“两次迭代”法，即通过两次迭代即可找出两个链表的第一个公共节点。用两个指针分别指示两条链表，第一次迭代时如果第一条链表的指针到达第一条链表的末尾时，将其置为第二条链表的头结点；如果第二条链表的指针到达第二条链表的末尾时，将其置为第一条链表的头结点。这样经过一轮迭代后就消除了两个链表之间的长度差，之后两个指针每次向前前进一个节点，最终到达两个链表的第一个公共节点。采用这种方法免去了分别计算两个链表长度的麻烦。","两个链表的第一个公共节点","先在长链表上走diff步","先求出长链表的长度","思路1","思路2","或者找到第一个公共节点。","步，然后两个链表再一起走，直到或者两个链表中有一个为","输入两个链表，找出它们的第一个公共节点。","题目"],"JianZhiOffer/LinkedList/删除链表的节点.html":["!=","&&","(!isduplicated)","(curr","(curr.next","(curr.val","(head","(next","(node","(node.next","(prev","(temp","//","=","==",">2",">3",">4",">5。",">5，删除值为3的节点后的链表为1",">5，删除重复节点后的链表为1","boolean","curr","curr,","curr.next","curr.next;","curr.val","curr.val)","curr;","deleteduplicatednodes(listnod","deletenode(listnod","deletenodes(listnod","false;","head","head)","head,","head.next","head;","head。","int","isdupl","listnod","listnode。我们从头开始遍历整个链表，用","next","next.next;","next.val)","next.val;","next;","next，让","node","node)","node.next","node.next;","node.v","node，然后令nod","null","null)","null;","null，说明头结点是需要删除的节点，将","null，这说明头结点是重复节点，此时我们需要把","o(1)","prev","prev,","prev.next","public","return","target","target)","target，移动","temp","temp.next;","temp.val","temp;","true;","{","||","}","不是链表的尾节点时，我们可以先把该节点的下一个节点","为","以作为新的头节点。","以删除当前节点，如果","便于被gc发现","分别表示前一个节点，当前节点和下一个节点。遍历链表，如果当前节点的值不等于","删除链表的节点","即删除了所有和","即可。当要删除的节点是链表的尾节点时，我们就不能这么做了，需要从从链表头开始顺序地查找该节点并删除。","可能为","否则，将prev指向next","和","在一个排序的链表中，删除重复的结点。例如给定链表1","大体思路同上，用","大的节点并把该节点赋值给","如果curr和next不是重复节点，继续判断下一个节点","如果curr和next是重复节点，找到第一个比curr的值大的节点并将其赋值给next","如果node不是链表的尾节点","如果node是链表的尾节点","如果头节点是重复节点，将next作为新的头节点","当要删除的节点","思路","扩展1","扩展2","指向","指示curr和next是否是重复节点","指示当前节点的下一个节点，如果curr","指示当前节点的前一个节点，next","指示当前节点，prev","时间内删除该节点。输入保证要删除的节点在链表中。","时，prev","是重复节点，由于链表是排好序的，因此重复节点是连续的，我们找到第一个比","的","的值不同，我们移动只需要移动","的值相同的重复节点。注意在将","的值赋给","的节点，返回删除后链表的头节点。例如给定链表1","相同，说明curr","给定一个单链表，删除链表中所有节点值为","给定单向链表的头指针和一个节点指针，定义一个函数在","继续判断下一个节点即可；当","继续判断下一个节点；否则，我们需要将","赋值给","赋给","题目","首先注意到头结点也有可能是重复节点，也有可能被删除，因此函数的返回值应该为"],"JianZhiOffer/Matrix/":["matrix"],"JianZhiOffer/Matrix/二维数组中的查找.html":["(matrix","(matrix[row][col]","(row","0","0)","0;","1;","=","==","boolean","col","false;","int","matrix,","matrix.length","matrix.length;","matrix[0].length","matrix[0].length;","null","public","return","row","row++；如果该数字大于","searchmatrix(int[][]","target)","target，则该数字所在列的所有数字都大于","target，则该数字所在行的所有数都小于","target，剔除该列，即","target，剔除该行，即","target，我们就找到了这个数；如果该数字小于","true;","{","||","}","。","二维数组中的查找","以二维数组矩阵中右上角的数字为基准，如果该数字等于","在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。","思路","题目"],"JianZhiOffer/Matrix/顺时针打印矩阵.html":["&&","(int","(matrix","(row","(start",")","*","+","//","0","0)","0;","1","1,","10,","10。","11,","12,","13,","14,","15,","16","16,","1;","2","2)","2,","3,","4,","4矩阵：","5,","6,","7,","8,","9,","=","==",">","[","[][]","]","arraylist<>();","col","endi","endx","int","list","matrix)","matrix.length","matrix.length;","matrix[0].length","matrix[0].length;","new","null","printmatrix(int","public","result","result.add(matrix[endy][i]);","result.add(matrix[i][start]);","result;","return","row","start","start++;","start;","{","||","}","从下向上（至少要有三行两列）","从左向右","思路","每次从矩阵的左上角开始一轮打印，每轮打印包括从左向右、从上向下、从右向左以及从下向上四个方向，每个方向的打印都有相应的前提条件，从上向下打印需要当前打印的矩阵至少包含两行，从右向左打印需要当前打印的矩阵至少包含两行两列，从下向上打印需要当前打印的矩阵至少包含三行两列。","输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。例如输入如下4","输出结果为：1,","顺时针打印矩阵","题目"],"JianZhiOffer/Stack & Queue & PriorityQueue/":["&","priorityqueu","queue","stack"],"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":["(stack_min.isempty()","//","=","class","min","mystack","new","num","num)","o(1)。","public","push(int","stack","stack<>();","stack_data","stack_data.push(num);","stack_min","stack_min，栈顶元素记录当前栈中所有元素的最小值。入栈时，如果入栈元素","void","{","||","中；出栈时，原栈和","入栈","函数","加入","包含min函数的栈","同时执行出栈。","定义栈的数据结构，实现一个能够得到栈中最小元素的","小于stack_min","思路","用一个辅助栈","的栈顶元素，则同时将","题目","，要求时间复杂度为"],"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":["&&","(!deque.isempty()","(int","(num","(调用deque.pollfirst)。由于队列头部和尾部都有可能删除数字，因此这也是我们需要双端队列的原因。","(调用deque.polllast())。同时，如果队列头部的数字已经从窗口中滑出，滑出的数字也需要从队列的头部删除","//","0","0;","1]","2,","3,","4,","5,","5]。","6,","=","==",">=","[2,","[4,","arraylist<>();","dequ","deque.offer(i);","deque.peekfirst()","deque.pollfirst();","deque.polllast();","deque保存有可能是滑动窗口最大值的数字的下标。在存入一个数字的下标之前，首先要判断队列里已有数字是否小于待存入的数字。如果已有数字小于待存入的数字，说明这些数字已经不可能是滑动窗口的最大值，因此它们会依次从队列的尾部删除","int","k","k，数组的大小为","linkedlist<>();","list","maxinwindows(int[]","new","null","nums,","nums.length","nums.length)","nums[deque.peeklast()])","n，则这种方法时间复杂度为","o(1)","o(kn)，显然不是最优的。实际上，一个滑动窗口可以看成是一个队列。当窗口滑动时，处于窗口的第一个数字被删除，同时在窗口的末尾添加一个新的数字。这符合队列先进先出的特性。正常情况下我们需要扫描整个队列才能找到队列中的最大数，我们看看能不能在","public","result","result.add(nums[deque.peekfirst()]);","result;","return","size","size)","size;","{","||","}","个元素加入到队列中时，由于此时窗口还没有开始滑动，我们只需要在队列中保存前","个数字中最大的数即可，此时队列的队头就是当前窗口中最大的数。当窗口开始滑动时，一方面我们需要将当前数字和队列中的数字进行比较，如果当前数字比队列中的数字大，则队列中比当前数字小的元素不可能成为窗口的最大值，将其从队列中移除，另一方面，我们需要判断代表当前窗口最大值的队头元素是否已经滑出窗口，如果已经滑出窗口，我们也需要将其进行移除。那么如何判断当前窗口是否包含一个数字呢？我们需要在队列里存入数字在数组中的下标，而不是数值。当队头元素的下标与当前处理的数字的下标之差大于等于窗口的大小时，说明这个数字已经从窗口中滑出了。在实现上，我们使用一个双端队列","从头部删除队列中已经滑出窗口的元素","从尾部删除队列中等于或小于当前元素的元素，因为这些元素不可能成为滑动窗口的最大值","作用等同于deque.offerlast()","及滑动窗口的大小3，那么一共存在6个滑动窗口，它们的最大值分别是","如果采用暴力法，可以扫描每一个滑动窗口中的所有数字找出其中的最大值，如果滑动窗口的大小为","思路","滑动窗口的最大值","的时间内找到队列中的最大数。我们并不把滑动窗口里的每一个数都存入队列中，而是只把有可能成为滑动窗口最大值的数存入到一个双端队列中。我们使用队列的队头保存当前滑动窗口的最大值。当把数组前","给定一个数组和滑动窗口的大小，请找出所有滑动窗口里的最大值。例如如果输入数组","题目"],"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":["&","&&","((size","(max.peek()","(max.size()","(根节点的值或根节点和左子节点或右子节点的值的平均值)。但是大部分的编程语言没有实现我们定义的这种","+","...","/","//","0","0)","1","1)","2;","=","==",">","@overrid","avl","class","comparator()","compare(integ","dynamicarray","dynamicarray()","getmedian()","insert(int","int","integ","max","max.offer(num);","max.size()","max;","min","min.offer(num);","min.peek())","min.peek();","min.poll();","min.size();","min;","n1","n2","n2m","n2m+1","new","nm","nm+1","nm+2","num","num)","o(1)","o(1)。","o(1)。如果数组是无序的，插入数据的时间复杂度是","o(1)，读取中位数可以使用","o(logn)，读取中位数的平均时间复杂度为o(logn)，但是在最坏情况下，即二叉搜索树退化为一个单链表时，插入和读取的时间复杂度是","o(logn)，读取中位数的时间复杂度为","o(n)。我们可以使用一个改进的","o(n)（关于","o(n)，读取中位数时由于数组是有序的因此直接读就可以了，时间复杂度是","o1,","o1;","o2","o2)","p1","p1,","p2","partit","priorityqueu","priorityqueue<>();","priorityqueue<>(new","privat","public","return","size","void","{","}","});","两个指针指向的数得到。如果容器中数据的数目是奇数，则中位数由","假设数据在容器中已经排好序，中位数可以由","共同指向；如果容器中数据的数目是偶数，则中位数是","函数，时间复杂度为","分别指向最大堆和最小堆的堆顶。","向数据流中插入一个数据","和","因此我们可以用一个最大堆保存左边部分的数据，用一个最小堆保存右边部分的数据，p1","在插入数据时我们需要确保数据被平均分配到两个堆中，即两个堆中数据的数目之差不能超过1。为了实现实现平均分配，我们约定在数据的总数目是偶数时把数据插入到最小堆中，否则插入到最大堆中。同时，我们还要保证最大堆中的所有数据都要小于最小堆中的数据。当数据的总数目是偶数时，按照我们的约定会把数据插入到最小堆中，如果这个数据比最大堆中的一些数据要小该怎么办呢？我们可以先把数据插入到最大堆中，然后拿出此时最大堆中最大的元素，即堆顶元素，将其插入到最小堆中，这样就保证了最小堆中的所有数字都大于最大堆中的数字。当需要把一个数据插入到最大堆但是这个数据比最小堆中的一些数据要大时同理进行分析。","如何得到一个数据流中的中位数？如果从数据流中读出奇数个数值，那么中位数就是所有数值排序之后位于中间的数值。如果从数据流中读出偶数个数值，那么中位数就是所有数值排序之后中间两个数值的平均值。","如果当前数据流中数据的总数是偶数，将其插入到最小堆中","如果数据流中数据的总数为偶数，返回中间的两个数的平均值","如果数据流中数据的总数为奇数，返回中间的数","如果采用二叉搜索树作为数据容器的话，插入数据的平均时间复杂度是","容易想到的是用一个数组保存数据流中的所有数据，如果数据是有序的，则我们在插入一个新数据到数据流时需要移动其他数据以保持数据的有序性，时间复杂度为","当前数据流中数据的总数","思路","指向的数据是右边部分最小的数，见下图：","指向的数据是左边部分最大的数，p2","指向的数的平均值。注意到整个数据容器被我们分成了两部分，左边部分的数据比右边部分的数据小，并且","数据流中的中位数","最大堆","最小堆","树作为数据容器，将平衡因子定义为左右子树节点数据之差，这样插入的时间复杂度为o(logn)，读取的时间复杂为","树，因此我们需要再分析其他的方法。","注意，虽然在前面的分析中，如果数据流中数据的总数是奇数，p1和p2同时指向数据流中间的那个数，这里无论是返回最小堆的堆顶元素还是最大堆的堆顶元素应该都是可以的。但是在实现上只有最小堆的堆顶才指示中间的那个数，因此这里只能返回最小堆的堆顶元素","由于我们需要从一个数据流中读出数据并计算中位数，因此我们需要用一个数据容器存储数据流中的所有数据并同时考虑插入数据和读取中位数这两个操作的时间复杂度。","的时间复杂度分析比较复杂，详见《算法导论》）。","获取当前数据流中所有数据的中位数","采用最大堆和最小堆作为数据容器时，插入数据的时间复杂度为","题目"],"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":["(!queue1.isempty())","(!stack1.isempty())","(queue1.isempty())","(queue1.size()","(queue2.size()","(stack2.isempty())","1","1)","2","3","=",">","class","int","int。","linkedlist<>();","myqueu","myqueue()","mystack","mystack()","new","num)","offer()","offer(int","poll()","pop","pop()","pop。","pop到","pop，由于栈的后进先出特性可知出栈元素应该是3，然而直接操作","public","push","push()","push(int","queue","queue1","queue1.offer(num);","queue1.offer(queue2.poll());","queue1.poll();","queue1;","queue1，第二列表示","queue2","queue2.offer(num);","queue2.offer(queue1.poll());","queue2.poll();","queue2。现在我们向栈中依次","queue2，此时两个","return","stack","stack1","stack1.push(num);","stack1;","stack1中，pop","stack2","stack2.pop();","stack2.push(stack1.pop());","stack2;","stack<>();","void","{","}","中","中pop，如果","中元素的情况如下图所示：","中再从","中删除1。","中删除3。执行出栈后两个","中的1,2插入到","中的1插入到","中的所有数","中，再从","中，然后从","中；如果两个队列一个未空，另一个不为空，我们将元素插入到那个非空的队列中。当执行","为空，则先将","到","和","和出栈","和出队","如果再执行一次","思路","总结上述过程我们可以得到以下结论：整个过程中我们保持两个队列中至少一个队列为空。当执行","我们通过一系列栈的","扩展","操作。","操作来分析两个队列模拟一个栈的过程。表格的第一列表示","时将数","时，从","时，如果两个队列均为空，我们约定将元素插入到","时，我们不断将非空的那个队列中的元素出队，直到该队列只含有一个元素，此时该元素即为出栈的元素，我们将该元素出队并返回。","栈中的元素类型为","现在我们对栈执行","用两个栈实现一个队列，完成队列的入队","用两个栈实现队列","用两个队列实现一个栈，完成栈的入栈","的话会从队头删除元素，也就是删除1。此时我们可以先把","的话，我们就把","进1,2,3三个数，由于初始时","都可以。我们不妨将1,2,3依次插入到","都是空的，因此插入哪个queue","队列中的元素类型为","题目"],"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":["(p2","(push","//","0","0)","0;","1,","1是该入栈序列对应的一个出栈序列，但4,","2,","2就不可能是该入栈序列的出栈序列。两个序列的长度相等。","3,","4,","5,","5是某栈的入栈顺序，序列4,","=","==","boolean","false;","int","ispoporder(int[]","new","null","p1","p2","pop","pop)","pop.length","public","push,int[]","push.length","return","stack","stack<>();","stack。如果出栈序列中的当前元素刚好是栈顶元素，那么直接弹出。否则，我们把入栈序列中还没有入栈的数字压入","stack，直到把下一个需要出栈的元素压入栈为止。如果入栈序列中所有的数字都入栈了仍然没有找到下一个需要出栈的数字，那么该序列不可能是一个出栈序列。","{","||","使用一个辅助栈","思路","指示入栈序列中的元素","指示出栈序列中的元素","栈的压入、弹出序列","输入两个整数序列，第一个序列表示栈的入栈顺序，请判断第二个序列是否可能为该栈的出栈顺序。假设压入栈的所有数字均不相等。例如序列1,","题目"],"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":["!=","(index","(int","(num","+",",hi);","//","0","0;","1","1)","1,","1;","2,","3,","4。","5,","6,","7,","8]，则最小的","=","==","@overrid","[4,","arraylist<>();","arraylist<>(pq);","comparator()","compare(integ","getleastknumbers(int[]","hi","index","int","integ","k","k)","list","lo","n","new","null","nums,","nums.length","nums.length)","o(n)","o(nlogk)","o1,","o1;","o2","o2)","partit","partition(nums,","pq","priorityqueu","priorityqueue<>(new","public","result","result;","return","{","||","}","});","“数组中出现次数超过一半的数字”","个数。","个数。代码略。","个数字。例如输入","个数字不一定是排好序的）。","个数字就是最小的","个数字是1,","个数字来进行调整，使得所有小于第","个数字的数都排在它的右边。这样调整之后，位于数组左边的","个数字的数都排在它的左边，所有大于第","个数字（但是这","个数就是最小的","个数，之后从","个数，我们可以先用一个大顶堆保存数组的前","个整数，","中我们可以得到启发，我们同样可以用","从","函数来解决这个问题。我们基于数组的第","创建一个大顶堆","否","基于partition函数的解法","基于堆或红黑树的解法","开始遍历数组中剩下的数，如果当前数比堆顶元素小，将堆顶元素出堆，同时将当前元素进堆。遍历完成后堆中保存的即是最小的","思路1","思路2","思路3","找出其中最小的","把数组进行排序，排在最前面的","时间复杂度","时间复杂度：o(nlogk)","时间复杂度：o(nlogn)","是","是否适用于海量数据","是否需要修改输入数组","最小的k个数","注意，java","由于是找最小的","解法比较","输入","题目","默认创建的是小顶堆。"],"JianZhiOffer/String/":["string"],"JianZhiOffer/String/表示数值的字符串.html":["\"","\"+","\"+100\",","\"1.2.3\",","\"12e\",","\"12e+5.4\"","\"1a3.14\",","\"3.1416\",","\"5e2\",","&&","'","')","'+'","'0'","(curr","(str","(str.charat(curr)","(包括整数和小数)。例如，字符串","//","0)","0;","123\",","16\"","1e","5\",","9中的数字，isexponential()","9的数位。如果是一个小数，则会遇到小数点。此外，如果是用科学计数法表示的数值，在整数或者小数的后面还有可能遇到","=","==","boolean","c++","curr","curr++;","e","e(...)","e。函数","false;","int","isnumeric(str","java","null","privat","public","return","scandigits()","scandigits(str);","str)","str.charat(curr)","str.length()","str.length())","{","||","书上","代码的","函数用来判断","思路","或","指示字符串str的当前字符","指示当前字符。判断的过程是，首先看第一个字符是不是正负号。如果是，在字符串上移动一个字符，继续扫描剩余的字符串中0","改写。用变量","是不是合法的。","用来扫描0","表示数值的字符串","请实现一个函数用来判断字符串是否表示数值","都不是。","都表示数值，但","题目"],"JianZhiOffer/String/打印从1到最大的n位数.html":["\"000\"","'0'","(curr","(i","(n",")","+","+=","...","...,","...，我们发现每一位上其实都是执行一个0","0,","001,","002,","009,","010,","011,","019,","0;","0}","1","1)","1;","2","2,","3","3一直到999。","4","5","9的全排列，因此我们可以用递归解决这个问题。","=","==","carry;","curr","int","long","n","n)","number","number，然后用一个循环打印出从1到","n，按顺序打印出从1到最大的","print(temp),","printtomaxdigits(int","public","sb.charat(i)","sb.length()","temp","void","{","{0,","上述代码虽然思路很简洁，但是代码比较繁琐。观察数字产生的规律：000,","也会打印出来，这个空行是由","产生的。","但是当","位数","位数。比如输入3，则打印出1,","位数时，程序会产生溢出，因此我们需要尝试其他的方法。","先求出最大的","和","在1前面会多打印出来一个空行，这是因为","思路1","思路2","思路3","我们可以用字符串表示大数，进而我们需要在字符串上模拟整数的加1操作。","打印从1到最大的n位数","注意：上述代码的运行结果为：","的每一个数。","输入数字","都不能表示最大的","非常大导致","题目"],"JianZhiOffer/String/第一个只出现一次的字符.html":["(0","(int","(str","0)","0;","1;","=","==","char[256];","char[]","firstnotrepeatingchar(str","int","map","new","null","public","return","str)","str.length()","{","||","先遍历一遍字符串，用一个","在一个字符串","思路","第一个只出现一次的字符","统计每个字符的出现次数，接着再遍历一遍字符串，找到第一个出现次数为1的字符，并返回它的位置。","题目"],"JianZhiOffer/String/翻转字符串.html":["!=","\"","\"\";","\");","\",","\"abcdefg\"","\"cdefgab\"。","\"i","\"student.","(end","(int","(isfirst)","(s","(str","(words.length",")","+","//","//反转字符串","0","0)","0;","1)","1;","=","==","==0",">=","boolean","end","end));","end+1;","false;","i\"。","int","isfirst","left","left;","leftrotatestring(str","left，取余下的部分作为子串","n","n)","n);","new","null","privat","public","return","reverse(reverse(left)","reverse(right));","reverse(str","reverse(str);","reverse(temp.substring(start));","reverse(temp.substring(start,","reversesentence(str","right","right，将","s)","s,","s.length()","s.length())","s.substring(0,","s.substring(n);","sb","sb.append(\"","sb.append(word);","sb.append(words[i]);","sb.tostring();","start","start);","str)","str.length()","str.split(\"","str;","string","string[]","stringbuild","stringbuilder();","stringbuilder(s).reverse().tostring();","student\"，则输出","temp","temp.indexof(\"","true;","word","word);","words.length","words[i]);","{","||","}","个字符，再反转字符串的后面部分，再反转整个字符串，即可得到字符串左旋转","位作为子串","位的结果。","先反转字符串的前","先对整个句子作一个翻转，再依次将句子中的每个单词作一个翻转，即得到结果。","先将句子划分成一个个单词，然后从后向前构造出结果。注意，如果原先的句子中没有单词，则直接返回原先的句子即可。","反转字符串","取字符串的前","和","和数字2，该函数将返回左旋转两位得到的结果","左旋转字符串。字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的末尾。请定义一个函数实现字符串的左旋转操作。例如输入字符串","思路1","思路2","扩展","指示当前单词是不是要构造的第一个单词","翻转字符串","翻转整个句子，将结果保存到temp中","输入一个英文句子，翻转句子中单词的顺序，但单词内字符的顺序不变。为简单起见，标点符号和普通字母一样处理。例如输入字符串","进行拼接即可。","题目"],"JianZhiOffer/String/替换空格.html":["\"\";","\"%20\");","\"%20\"，由于是把1个字符替换为2个字符，所以其后所有的字符都需要向后移动2位，效率不高。可以先求出原字符串中空格的总数，据此计算出替换后的字符串的新的长度，利用两个指针","\",","\"we","\"we%20are%20happy\"。","&&","(int","(str","0","0)","0;","=","==","happy\"，则经过替换之后的字符串为","int","java","null","p1","p2，p1","public","replaceall()。","replacespace(stringbuild","return","str)","str.length()","str.tostring().replaceall(\"","string","totalblank","{","||","}","“%20”。例如，当字符串为","和","容易想到的做法是每遇到一个空格，将其替换为","思路1","思路2","指示新的字符串的末尾，从后向前进行替换。","指示旧的字符串的末尾，p2","替换空格","的库函数","直接使用","请实现一个函数，将一个字符串中的每个空格替换成","题目"],"JianZhiOffer/String/字符串的排列.html":["\"abc\",","\"acb\",","\"bac\",","\"bca\",","\"cab\"","\"cba\"。","'a',","'b',","'c'","(begin","(curr","(int","(str","0)","0,","0;","=","==","arraylist<>();","begin,","begin;","boolean[]","boolean[str.length()],","ch","char[]","char[str.length()],","chs,","chs.length)","curr,","dfs(str,","dfs(string","helper(char[]","helper(chs,","int","list","new","null","permutation(str","privat","public","result","result)","result);","result.add(string.valueof(chs));","result.add(string.valueof(selected));","result;","return","selected,","str)","str,","str.length()","str.length())","str.tochararray();","vis,","void","{","||","}","书上的思路。求字符串的排列可以分成两步：首先求所有可能出现在第一个位置的字符，即把第一个字符和后面的字符依次交换（也可以和它自己交换）；第二步固定第一个字符，求后面所有字符的排列。这个时候仍把后面的所有字符分成两部分，后面字符的第一个字符以及这个字符之后的所有字符，然后把第一个字符逐一和它后面的字符交换。这是一个递归的过程。为了方便交换，我们在代码中将字符串转换为字符数组。","则打印出由字符","和","回溯法。","字符串的排列","思路1","思路2","所能排列出来的所有字符串","输入一个字符串,按字典序打印出该字符串中字符的所有排列。例如输入字符串","题目"],"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":["\"go\"","\"google\"","&&","'#';","'g'；当从该字符流中读出前6个字符","'l'。","(int","//","0","0)","0;","0：ascii","1，表示所有的字符都还未出现过。之后每次","1：ascii","2","2;","2赋给","2：ascii","=",">=","append。当需要找出字符流中第一个不重复的字符时，根据题目","ascii","c","ch","char","characterstream","characterstream()","class","firstappearingonce()","index","index;","insert","int","int[256];","int[]","integer.max_value;","i，如果当前字符还未出现过，则将当前字符在字符流中的下标","map","minindex","new","occurr","occurrence;","occurrence[c]","occurrence[i]","occurrence[i]。在函数","occurrence，并用","privat","public","sb","sb，根据","sb，用一个","stringbuild","{","}","“第一个只出现一次的字符”","一个字符时，设当前字符的","中","中每个字符的出现次数，然后再遍历一遍","中的方法，先遍历一遍","中的每个元素置为","中，我们遍历","即可。","可以在类中使用一个","各个值的含义如下：","和","如果当前字符已经出现过，将occurrence[c]赋为","字符流中字符的个数","字符流中第一个只出现一次的字符","思路","总结","找到第一个不重复的字符。但是使用这种方法，当字符流中的字符很多时，每次调用","找当前字符流中第一个不重复的字符时都要遍历一遍字符流，那么时间开销会很大。更好的做法是用一个数组","时向","时，第一个只出现一次的字符是","的大小为256。初始时，occurr","的字符出现了一次，第一次出现的位置为","的字符出现了多次","的字符还未出现过","码为","记录","记录字符流中每个字符的出现情况","记录字符流，每次","记录当前字符流中各个字符的出现情况，occurr","记录第一个只出现一次的字符和它的下标。遍历结束返回","请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符","赋给occurrence[i]；如果当前字符已经出现过，则我们就不需要考虑这个字符了，约定把","题目"],"JianZhiOffer/Tree/":["tree"],"JianZhiOffer/Tree/从上到下打印二叉树.html":["!=","!stack2.isempty())","(!queue.isempty())","(!stack1.isempty()","(!stack1.isempty())","(!stack2.isempty())","(curr","(int","(node.left","(node.right","(root","//","0","0)","0;","1",":","=","==","arraylist<>();","curr","curr;","int","levelorder(treenod","linkedlist<>();","list","list>","new","node","null)","print(treenod","privat","public","queue","queue.offer(root);","queue.size();","result","result.add(temp);","result;","return","return;","root)","size","stack","stack1","stack1.pop();","stack1.push(node.left);","stack1.push(node.right);","stack1.push(root);","stack2","stack2.pop();","stack2.push(node.left);","stack2.push(node.right);","stack<>();","temp","temp.add(node.val);","treenod","void","{","||","}","二叉树的层次遍历。","从上到下打印二叉树","从上往下打印出二叉树的每个节点，同层节点从左至右打印。","保存偶数层的节点","保存奇数层的节点","当前是偶数层","当前是奇数层;","思路","扩展","按之字形顺序打印二叉树。实现一个函数按照之字形顺序打印二叉树，即第一层按照从左向右的顺序打印，第二层按照从右向左的顺序进行打印，第三层再按照从左向右的顺序进行打印，以此类推。","按之字形顺序打印二叉树需要两个栈。我们在打印某一行节点的时候，把下一层的节点保存到相应的栈里。如果当前打印的是奇数层，由于奇数层是从左往右打印，其下一层需要从右往左打印，根据栈后进先出的特性，我们在保存下一层节点的时候应该先保存左子节点，再保存右子节点。同理，如果当前打印的是偶数层，则保存下一层节点的时候先保存右子节点，再保存左子节点。","由于下一层是偶数层需要从右往左打印，因此先加入左子节点，再加入右子节点","由于下一层是奇数层需要从左往右打印，因此先加入右子节点，再加入左子节点","题目"],"JianZhiOffer/Tree/对称的二叉树.html":["!=","&&","(left","(left.val","(root","==","boolean","false;","helper(left.left,","helper(left.right,","helper(root.left,","helper(treenod","issymmetrical(treenod","left,","null","null)","privat","public","return","right","right)","right.left);","right.right)","right.val)","root)","root.right);","treenod","true;","{","||","}","实现一个函数，判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。","对称的二叉树","思路","见代码。","题目"],"JianZhiOffer/Tree/二叉树的镜像.html":["&&","(root","(root.left","/","10","11","5","6","7","8","9","=","==","\\","mirror(root.left);","mirror(root.right);","mirror(treenod","null","null)","public","return;","root)","root.left","root.left;","root.right","root.right;","temp","temp;","treenod","void","{","}","二叉树的镜像","前序遍历该树，对每个非叶节点交换其左右两个子节点。","思路","输入一棵二叉树，输出它的镜像。例如输入二叉树如下：","输出：","题目"],"JianZhiOffer/Tree/二叉树的深度.html":["(diff","(root","(含根、叶结点)","+","0;","1)","1;","=","==",">","boolean","depth(root.right))","depth(treenod","diff","false;","int","isbalanc","isbalanced()","isbalanced;","isbalancedtree(treenod","isbalancedtreecore(root);","isbalancedtreecore(root.left);","isbalancedtreecore(root.right);","isbalancedtreecore(treenod","left","math.abs(left","math.max(depth(root.left),","math.max(left,","null)","privat","public","return","right","right)","right);","right，判断","root)","true;","{","}","二叉树的深度","后序遍历该二叉树，求出当前节点左子树的深度","和","和右子树的深度","平衡二叉树。输入一棵二叉树，判断该二叉树是否是平衡二叉树。一个二叉树是平衡二叉树指的是树中所有节点的左子树的深度和右子树的深度差的绝对值不超过1。","当根节点为空时，返回0；否则，返回左子树的深度和右子树的深度的最大值并加1。","形成树的一条路径，最长的路径的长度为树的深度。","思路","扩展","的差的绝对值是否大于1，如果是，说明该二叉树不是平衡二叉树。下面的代码中函数","输入一棵二叉树，求该树的深度。从根结点到叶结点依次经过的结点","返回当前节点的深度。","题目"],"JianZhiOffer/Tree/二叉树的下一个节点.html":["!=","&&","(curr","(node","(node.right","(parent","//","=","==","class","curr","curr.left;","curr;","getnextnode(nod","int","left;","next","next;","node","node)","node.parent;","node.right;","node;","null","null)","null;","parent","parent.parent;","parent.right)","parent;","public","return","right;","val;","{","}","二叉树的下一个节点","保存当前节点的中序遍历的下一个节点","思路","指向当前节点的父节点","由于中序遍历是从左子树开始的，因此为了找出当前节点中序遍历的下一个节点，我们只需要在当前节点的右子树和父节点中寻找即可。如果当前节点的右子树不为空，则当前节点的下一个节点是右子树中最左边的那个节点；如果当前节点的右子树为空，则我们需要从当前节点的父节点中寻找当前节点的下一个节点。如果当前节点是其父节点的左子树，则当前节点的下一个节点就是其父节点；如果当前节点是父节点的右子树，则我们需要继续从当前的父节点的父节点中寻找，直到找到当前节点是其父节点的左子树，或者父子树为空，即当前节点没有下一个节点。","给定一个二叉树和其中的一个节点，找到中序遍历的下一个节点。树中的节点除了有两个分别指向左右子节点的指针以外，还有一个指向父节点的指针。","题目"],"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":["&&","(root","(root.left","/","//注意，这里不能直接写成\"result.add(path)\"，那样相当于把path的引用传过去了，然而我们在下面遍历的过程中会改变path中的值，这样会导致之前加入result中的路径的内容也会跟着改变。应该用一个新的arraylist来承载path的值。","0","0)","1);","10","12","12]]","4","5","5,","7","7],","=","==","[10,","[[10,","\\","arraylist<>(),","arraylist<>();","arraylist<>(path));","findpath(treenod","helper(root,","helper(root.left,","helper(root.right,","helper(treenod","int","list","list>","new","null","null)","path","path,","path.add(root.val);","path.remove(path.size()","privat","public","result","result)","result);","result.add(new","result;","return","return;","root,","root.right","root.val;","root.val，同时将当前节点加入到","target","target)","target,","void","{","}","中。在函数回退的时候记得在","中。当遍历到叶节点并且","中删除当前节点。","二叉树中和为某一值的路径","加到","思路","时，将","由于前序遍历是先从根节点开始访问，因此采用前序遍历处理。每遍历一个节点将当前节点的值进行累加，即target","的所有路径。路径和为路径中所有节点的和，路径定义为从根结点向下到某个叶结点所经过的结点形成的一个序列。例如给定二叉树如下：","输入一颗二叉树的根节点和一个整数，打印出二叉树中所有路径和为","返回该二叉树中所有路径和为22的路径，则返回结果应该为：","题目"],"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":["(k","(root","+","/","//","0;","1)","1);","2","3","4","5","6","7","8","=","==",">","\\","if(root==null)","index;","int","k","k)","kthnode(treenod","kthnodecore()","kthnodecore(root,","kthnodecore(root.right,","kthnodecore(treenod","k，说明当前节点就是第","k，说明第","null","null)","null;","privat","public","result;","return","root){","root,","root,int","root;","size(root.left)+size(root.right)+1;","size(root.left);","size(treenod","t","t)","treenod","t，如果","{","||","}","《algorithm》中的方法。要求的是树中第","二叉搜索树的第k大节点","从1开始计数。例如给定如下二叉搜索树：","大的节点。","如果以","小的节点在根节点的左子树中，因此需要继续在左子树中寻找第","小的节点，假设我们把树中的节点按节点值从小到大排列并从0开始编号，首先求出根节点左子树的节点数","小的节点；如果","应相应修改为：","思路1","思路2","指示当前中序遍历到的节点的编号，从1开始","按节点数值大小排序，第三个的节点应该是4。","时即找到了第","由于二叉搜索树的中序遍历序列是递增的，因此模拟一遍二叉搜索树的中序遍历，每次记录当前节点的编号，当前节点的编号等于","第k大的节点","给定一棵二叉搜索树，请找出其中第k大的节点，k","返回root中的节点总数","这种方式调用，则","题目"],"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":["(;","(int","(lo","(num","/","//","//左子树序列和右子树序列的分界点，表示右子树序列的第一个元素，同时也表示左子树序列中元素的个数","0)","0,","1);","10","10,","11","11,","4,","5","5]，由于没有哪棵二叉搜索树的后序遍历结果是这个序列，因此返回","6","6,","7","7,","8","8]，返回","9","9,","=","==",">","[5,","[7,","\\","boolean","break;","false;","false。","false。接着递归得在左子树序列和右子树序列中继续判断。","hi)","hi，说明当前子数组中只有一个元素，直接返回tru","int","lo,","lo;","mid","mid;","null","nums)","nums,","nums.length","nums[hi];","privat","public","return","rootvalu","rootvalue)","special","true;","true，因为这个整数序列是下图所示二叉搜索树的后序遍历结果。","verifysequenceofbst(int[]","verifysequenceofbstcore(int[]","verifysequenceofbstcore(nums,","{","||","}","二叉搜索树的后序遍历序列","在二叉搜索树的后序遍历序列中，最后一个是根节点，在根节点前所有小于根节点的数构成根节点的左子树，所有大于根节点的数构成根节点的右子树。据此可以在原数组中划分出左子树序列和右子树序列，其中左子树序列中的所有数都比根节点的值小，右子树序列中所有数的值都比根节点的值大。如果在右子树序列中出现小于根节点值的数，说明该序列不是二叉搜索树的后序遍历结果，返回","如果lo","如果输入数组是","思路","根节点的值","输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。假设输入的数组的任意两个数字都互不相同。例如输入数组","题目"],"JianZhiOffer/Tree/二叉搜索树与双向链表.html":["!=","&&","(prev","(root","/","//","10","12","14","16","4","46810121416null","6","8","=","==","\\","convert(treenod","convertcore(root);","convertcore(root.left);","convertcore(root.right);","convertcore(treenod","null","null)","null;","prev","prev.left","prev.left;","prev.right","prev;","privat","public","return","return;","root","root)","root.left","root;","treenod","void","{","}","之间的双向链接关系即可。","二叉搜索树与双向链表","保存中序遍历的前一个节点，在处理当前节点","函数执行完后prev指向的是双向链表的尾节点","思路","时，建立当前节点和","由于需要转换成一个排序的双向链表，而二叉搜索树的中序遍历序列是排序的，因此可以采用中序遍历处理原二叉搜索树。处理时用一个变量","转换后的结果为：","输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。例如对于如下的二叉搜索树：","题目"],"JianZhiOffer/Tree/树的子结构.html":["!=","&&","(!isfound)","(root1","(root1.val","(root2","/","//","0","1","2","3","4","5","572。和该题不同的是，这里要求树","7","8","9","=","==","\\","a，b判断","a：","b","boolean","b：","false;","false。","hassubtree(root1.left,","hassubtree(root1.right,","hassubtree(treenod","helper()","helper(root1,","helper(root1.left,","helper(root1.right,","helper(treenod","isfound","isfound;","leetcod","null","null)","null，也可以返回tru","null，借由上一条语句知root2","null，所以root1和root2的结构不相同，返回fals","null，说明root1和root2之前的结构完全相同，这时就算root1","privat","public","return","root","root1","root1,","root1和root2同时访问到null才返回true，一个为null一个不为null或者两个节点的val值不相同都返回fals","root2","root2)","root2);","root2.left)","root2.right);","root2.val)","treenod","true;","true。而给定树","{","||","}","上一题中假设在","中找到了和","中找到和","中的某个子树完全相同。例如给定树","具有相同的结构。","函数的不同。","及其所有后继节点都要和","可知","后，只要求","和树","如果roo1","如果root2","完全一样。两者的区别在","完全一样，即","思路","所代表的子树中包含和","所代表的子树和","扩展","是","是不是","树","树的子结构","的子结构。","的子结构。我们约定空树不是任意一个树的子结构。例如给定树","的根节点的值一样的节点，然后判断该节点所代表的子树是不是和","的根节点的值相同的节点","的结构完全一样的结构即可。而这里要求","约定当root1和root2均为null，root2是root1的子结构，返回tru","输入两棵二叉树","返回","题目","首先在"],"JianZhiOffer/Tree/序列化二叉树.html":["\"\";","(isfirst)","(root","(str","(val.equals(\"$\"))","+","/","//","0)","0;","1","2","3","4","5","6","=","==","\\","boolean","curr","deserialize(str","deserializecore(string[]","deserializecore(strs);","false;","int","isfirst","new","null","null)","null;","privat","public","return","root","root)","root,","root.left","root.right","root.val);","root;","sb","sb)","sb);","sb.append(\"$\");","sb.append(\",\"","sb.append(\",$\");","sb.append(root.val);","sb.tostring();","serialize(treenod","serializecore(root,","serializecore(root.left,","serializecore(root.right,","serializecore(treenod","str","str)","str.length()","str.split(\",\");","string","string[]","stringbuild","stringbuilder();","strs)","strs[curr++];","treenod","treenode(integer.parseint(val));","true;","val","void","{","||","}","例如给定如下的二叉树：","反序列化","实现两个函数，分别用来序列化和反序列化二叉树。","序列化","序列化二叉树","序列化结果为：1,2,4,$,3,5,$,$,6,$,$","思路","我们知道，如果给定一棵二叉树的前序遍历序列和中序遍历序列，我们可以从中构造出一棵二叉树。因此我们可以先把一棵二叉树序列化成一个前序遍历序列和一个中序遍历序列，然后在反序列化时通过这两个序列重构出原二叉树。但是这个思路有两个缺点，一是二叉树中不能有数值重复的节点，否则我们无法通过这种方法构造出原二叉树。二是只有当两个序列中的数据都读出后才能开始反序列化。如果两个序列是从一个流中读出来的，那么可能就需要等待很长的时间。实际上如果二叉树的序列化是从根节点开始的话，那么相应的反序列化在根节点的数值读出来后就可以开始了。因此我们可以根据前序遍历来序列化和反序列化二叉树。在序列化时，如果当前节点不为空，我们在字符串中加入当前节点的值；如果当前节点为空，我们在字符串中加入一个特殊字符，比如$。在反序列化时，我们每次从字符流中读入一个字符，如果当前字符不是$，我们创建一个新节点，并继续构建该节点的左子树和右子树；否则，返回空。","指示序列化字符串中当前正在反序列的字符的下标","指示当前正在序列化的节点是不是第一个节点","题目"],"JianZhiOffer/Tree/重建二叉树.html":["(preorder","(rootinord","(startpreord","//","0","0)","0,","1);","1,","2,","3,","4,","5,","6,","6]，则重建二叉树并返回。","7,","8,","8]","=","==",">","[1,","[4,","endinord","endinorder)","endpreord","endpreorder,","helper(int[]","helper(preorder,","inord","inorder)","inorder,","inorder.length","int","int[]","new","null","null;","preorder,","preorder.length","preorder[startpreorder];","privat","public","reconstructbinarytree(int[]","return","root","rootinord","rootvalu","startinord","startinorder,","startinorder;","startpreord","startpreorder,","treenod","treenode(rootvalue);","{","||","}","两个变量确定。","两个变量确定，中序序列可以用","先根据前序序列的第一个数字创建根节点，接下来在中序序列中找到根节点的位置，这样就能确定左右子树节点的数量，然后在新的前序序列和中序序列中递归地构建其左子树和右子树。前序序列用","和","和endpreord","和中序遍历序列","当前节点在中序序列中的位置","思路","输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列","重建二叉树","题目"],"LeetCode/":["leetcod"],"LeetCode/1. Two Sum.html":["(int","(lo","(num","+","0)","0;","1.","11,","15],","1;","1].","2","7","7,","9,","=","==","[0,","[2,","add","array","assum","each","element","exactli","example:","given","hashmap<>();","hi","indic","input","int","int[]","int[]{};","integers,","lo","map","map。这里也可以将数组排序后用双指针法做，但是由于题目要求返回两个数的下标，排序后会打乱元素的下标，因此这里用这个方法不合适。","new","null","num","number","nums,","nums.length","nums[0]","nums[1]","nums[i]","on","public","return","same","solution,","specif","such","sum","target","target)","target.","twice.","two","twosum(int[]","up","us","{","||","两个指针分别指向数组的开头和结尾，当两个指针指向的元素的和等于","中，如果在，我们就找到了这两个数，如果不在，我们把当前元素和它的下标值加入","从头开始遍历数组，同时用一个","以减小和。","以增大和；当和大于","保存遍历过的元素和它的下标。每遍历一个元素时，我们先判断","和","如果不要求返回两个数在数组中的下标而是两个数的值的话可以用双指针法做。先对数组进行排序，用","思路","扩展","时我们向前移动","时，即找到了这两个数；当和小于target","时，我们向后移动","是否在","题目"],"LeetCode/2. Add Two Numbers.html":["!=","%","(2","(5","(carri","(l1","(p1","(p2","+","/","//","0","0;","1)","10","10);","10;","10，创建一个值为","1，说明在最高位上发生了进位，此时需要再额外创建一个值为1的节点并将其链接到新链表中。","2.","3)","342","4","4)","465","6","7","8","807.",":","=","==",">","?","add","addtwonumbers(listnod","assum","carri","carry;","contain","curr","curr.next","curr.next;","digit","digit.","dummyhead","dummyhead.next;","dummyhead;","each","empti","example:","except","explanation:","given","input:","int","integers.","itself.","l1,","l1;","l2","l2)","l2;","lead","link","list","list.","listnod","listnode(0);","listnode(1);","listnode(sum","neg","new","node","non","null","null)","null,","null;","null，即一个链表已经遍历到了末尾，另一个链表还没有遍历末尾，此时需要把","number","order","output:","p","p1","p1.next;","p1.val;","p2","p2.next;","p2.val;","public","q","repres","return","revers","singl","store","sum","sum，如果sum","two","x","y","zero,","{","||","}","为1。由于两个链表的长度可能不同，因此遍历两个链表的指针可能不是同时到达各自链表的末尾。若","创建一个新的链表用来保存相加后的结果。同时遍历两个链表，将两个链表当前节点的值相加得到","思路","新链表的虚拟头结点","的节点并将其链接到新链表中，同时需要设置进位","表示的数当做0再和","表示的数相加。此外，如果两个链表都已经遍历完了但是","题目"],"LeetCode/3. Longest Substring Without Repeating Characters.html":["\"abc\",","\"abcabcbb\"","\"b\",","\"bbbbb\"","\"pwke\"","\"pwwkew\"","\"wke\",","(i","(j","(s","(在最坏情况下，字符串中的每个字符都要分别被i和j访问一次)","+","0)","0,","0;","1","1);","1.","1:","2:","3","3.","3:","=","==","[i,","answer","charact","characters.","exampl","explanation:","find","given","hashmap<>();","hashset<>();","i)","input:","int","i，我们只需要将","i，我们对所有","j","j'","j'，我们没有必要一点点地去移动","j)","j++;","j，如果","j，直到","length","lengthoflongestsubstring(str","longest","map","map.put(s.charat(j),","math.max(result,","new","nextpo","nextpos;","note","null","output:","public","repeat","result","result;","return","s)","s.length","s.length()","s[j]","s[j]不在","set","string,","subsequ","substr","substring,","substring.","without","{","||","}","中的所有字符，然后我们向右移动","中，我们继续移动","中，此时，我们找到了以","为起点的子串的最大长度，即","保存当前窗口","即可。我们使用一个","和","在","思路1","思路2","思路3","我们可以对思路2进一步进行优化。当","指示的窗口中的某个字符重复时，假设这个字符的下标为","时间复杂度：o(2n)","时间复杂度：o(n)","时间复杂度：o(n^3)","滑动窗口。使用","的下一个位置","移动到","穷举所有的子串，分别判断每个子串中是否含有重复字符，记录不含重复字符的最长子串的长度。代码略。","表示窗口。我们用一个","记录字符串中每个字符的下一个字符的位置。","重复执行上述步骤以求得最后的结果。","题目"],"LeetCode/5. Longest Palindromic Substring.html":["\"\";","\"aba\"","\"abba\"，两个","\"bab\"","\"babad\"","\"bb\"","\"cbbd\"","&&","(int","(len","(lo","(s",")","+","...,","/","//","0","0)","0;","1","1)","1);","1,","1000.","1:","1;","2:","2;","2n","5.","=","==",">=","answer.","assum","b","boolean[][]","boolean[n][n];","dp","dp[i][j]表示s(i,","dp。dp[i,","end","exampl","expandaroundcenter(str","find","given","hi","hi)","i;","input:","int","j","j)","j)构成的子串是否是回文的","j]","len","length","lo,","longest","longestpalindrome(str","maximum","n","new","note:","null","output:","palindrom","privat","public","result","result.length()))","result;","return","s","s(i","s(i)","s(i,","s(j)","s)","s,","s.","s.length()","s.length();","s.substring(i,","s.substring(start,","start","string","substr","true。同时，当我们找到一个回文子串时，检查它的长度是否是最大的。","valid","{","||","}","个这样的中心。为什么是","为","之间可以作为一个中心。我们遍历每一个中心并对其进行扩展，在得到一个回文子串时检查它的长度是否是最大的。","呢？这是因为除了每个字符可以作为一个中心外，每两个字符中间的位置也可以作为中心，比如","并且","当前最长回文子串","思路1","思路2","我们不难发现一个回文子串是围绕着它的中心进行扩展的，对于一个长度为","时间复杂度：o(n^2)","是否可以构成一个回文子串。如果","是回文子串，dp[i,","最长回文子串的开始","最长回文子串的结尾","的字符串，我们可以找到","空间复杂度：o(1)","空间复杂度：o(n^2)","表示","这里对于start和end值的取定不太好想，需要找几个例子算一下","题目"],"LeetCode/7. Reverse Integer.html":["!=","%","&&","(result","(x","*","+","/","0","0)","0;","10","10;","120","123","1:","1].","21","2147483647，因此在进行","2147483648","231","2:","32","321","3:","7))","7.","=","==",">","[−231,","assum","bit","deal","digit","digit可能会发生溢出，由于32位","digit，用","environ","exampl","function","given","input:","int","integ","integer,","integer.","integer.max_valu","note:","output:","overflows.","problem,","public","purpos","range:","result","return","revers","reverse(int","sign","store","within","x","x)","{","||","−","思路","更新结果。但是要注意，result","最后一位数","每次取出","类型的范围是","运算前也应该先判断是否可能发生溢出。可以参考下面这种写法。","题目"],"LeetCode/11. Container With Most Water.html":["(blue","(height","(i,",",","...,","0).","11.","2.","49","49.","==","[1,8,6,2,5,4,8,3,7]","[1,8,6,2,5,4,8,3,7].","a1,","a2,","abov","ai)","ai).","area","array","axi","case,","contain","container,","coordin","drawn","each","endpoint","example:","find","form","given","height)","height.length","hi，lo","input:","int","integ","line","lines,","lo","max","maxarea(int[]","maxarea，之后使较短的","n","neg","non","note:","null","output:","point","public","repres","section)","slant","such","togeth","two","vertic","water","water.","x","{","||","之间的宽度。我们使用两个指针","初始指向数组的开头，hi","初始指向数组的结尾，这样初始我们便拥有了最大的宽度，然后我们求出当前的","和","思路","暴力法可以做但是显然不是最优的。我们可以发现要想使得所盛水的容量最大，我们一方面可以增加","朝着另一个","的高度，另一方面可以增加两个","移动，虽然在移动的过程中我们的宽度会减小，但是我们可能会得到更大的高度，因此是可取的。","题目"],"LeetCode/13. Roman to Integer.html":["\"iii\"","\"iv\"","\"ix\"","\"lviii\"","\"mcmxciv\"","(10)","(100)","(1000)","(5)","(50)","(500)","(p","(s","+","0)","0;","1","10","100","1000","1000,","13.","1994","1:","2:","3","3.","3999.","3:","4","4.","40","400","4:","5","5,","50","50,","500","58","5:","9","9.","90","90.","900,","900.","=","==","ad","appli","as,","befor","c","c,","cm","convert","d","differ","exampl","example,","explanation:","five","four","four.","given","guarante","however,","i,","ii","ii.","iii","iiii.","input","input:","instanc","instead,","int","integ","integer.","iv","iv.","ix.","l","l,","largest","left","m","m.","make","nine,","null","number","numer","numeral,","on","one'","output:","p","place","principl","public","rang","re","repres","return","right.","roman","romantoint(str","s)","s.length()","same","seven","simpli","six","smallest","subtract","symbol","symbols:","together.","twelv","twenti","two","used:","usual","v","v,","v=","valu","within","written","x","x,","xc","xii,","xx","xxvii,","{","||","从头遍历字符串，依次转换每个罗马数字即可。注意对","思路","的判断还要再看它们后面的一位。","题目"],"LeetCode/14. Longest Common Prefix.html":["!=","\"\"","\"\".","\"fl\"","(int","(isequal)","(str","(strs.length","0)","0;","1)","14.","1:","2:","=","==","[\"dog\",\"racecar\",\"car\"]","[\"flower\",\"flow\",\"flight\"]","amongst","array","break;","c","common","empti","exampl","explanation:","false;","find","function","given","input","input:","isequ","letter","longest","longestcommonprefix(string[]","lowercas","new","note:","null","output:","prefix","prefix,","public","return","sb","sb.append(c);","sb.tostring();","string","stringbuild","stringbuilder();","strings.","strs)","strs.length","strs[0];","strs[j].charat(i))","strs[j].length()","write","z.","{","||","}","思路","我们以第一个字符串为基准，从头开始比较其余字符串和第一个字符串的相应位上的字符是否相同。","题目"],"LeetCode/15. 3Sum.html":["(1),","(2)","(int","(num","+","0","0)","0,","0;","0?","1,","15.","1],","2,","2]","3sum","4],","=","==","[","]","a,","array","arraylist<>();","arrays.sort(nums);","b","b,","c","contain","duplic","element","example:","find","give","given","hi","integers,","is:","list>","lo","n","new","note:","null","num","nums)","nums.length","nums，找到所有","o(n)，总的时间复杂度为","o(n^2)。注意题目要求不能包含重复的三元组，因此当找完三元组的第一个元素之后，需要将指针移动到和上一个元素不同的地方。其次，在找到剩下的两个元素时，也要进行指针的移动，具体见代码的","public","result","return","set","solut","such","sum","threesum(int[]","triplet","triplets.","uniqu","zero.","{","||","个整数的数组","先对数组进行一个排序，然后遍历数组中的每个元素，将其作为三元组的第一个元素，之后找其余的两个数，即用一个","处。","思路","指针和一个","指针的方法。这样搜索剩下两个数的时间复杂度为","的三元组。要求三元组不能重复。","给定一个包含","题目","题目大意"],"LeetCode/17. Letter Combinations of a Phone Number.html":["\"\",","\"23\"","\"23\"，返回","\"abc\",","\"abc\"，2表示","\"ae\",","\"af\",","\"bd\",","\"be\",","\"bf\",","\"cd\",","\"ce\",","\"cf\"]","\"cf\"].","\"def\"","\"def\"。返回该字符串表示的所有可能的字母的组合。例如对于","\"ghi\",","\"jkl\",","\"mno\",","\"pqrs\",","\"tuv\",","\"wxyz\"};","'0';","(curr","(digit","(int","(just",",","//","0)","0,","0;","1","17.","2","9","9，每个数字表示手机九宫格键盘上的字母，比如1表示","=","==","[\"ad\",","abov","although","answer","arraylist<>();","below.","buttons)","combin","contain","curr,","curr，当前正在构造的字符串","dfs(digits,","dfs(string","digit","digits)","digits,","digits.charat(curr)","digits.length()","digits.length())","digits，当前选取的","example:","final","given","inclusive,","input:","int","letter","lettercombinations(str","letters.","lexicograph","list","map","new","note","note:","null","number","order","order,","output:","phone","possibl","privat","public","represent.","result","result)","result);","result.add(selected.tostring());","result;","result。","return","select","selected,","special","static","str","string","string[]","stringbuild","stringbuilder(),","telephon","values={\"\",","values[digit];","void","want.","{","||","}","典型的递归的思路。每次从当前数字所表示的字母集合中选取一个数加到当前正在构造的字符串中，然后递归地构造后面的字符。在递归函数中需要传入原始字符串","和结果集合","思路","的数字的位置","给定一个字符串，其中包含数字2","题目","题目大意"],"LeetCode/19. Remove Nth Node From End of List.html":["(head","(int","(即fast","0;","1","19.","2.","=","==",">2",">3",">4",">5,",">5.","alway","becom","end","end,","example:","fast","fast，fast","follow","given","head","head,","head.","head;","int","link","list","list,","list:","listnod","n","n)","node","note:","nth","null)","null)，slow","null;","on","pass?","prev","public","remov","removenthfromend(listnod","return","second","slow","th","up:","valid.","{","一起走时用","一起走，每次走1步。当","个节点。n","个节点。由于这里需要将链表的倒数第","个节点删除，因此我们可以在","个节点时即可利用","个节点，我们可以定义两个指针","为了求链表中倒数第","从","从head","先开始走","删除该节点。注意考虑删除节点为链表的第一个节点这种特殊情况。","删除链表中倒数第","和","开始再和","思路","总是有效的。","指向的就是链表的倒数第","步，接着","的前一个节点，这样当找到倒数第","记录slow","走到链表的末尾时","题目","题目大意"],"LeetCode/20. Valid Parentheses.html":["\"()\"","\"()[]{}\"","\"([)]\"","\"(]\"","\"{[]}\"","'(',","')',","'['","']',","']'的字符串，判断该字符串是不是有效的。一个有效的字符串满足下面两个条件：","'{',","'}',","(int","(s","(s.length()","0)","0;","1:","20.","2:","3:","4:","5:","=","==","boolean","bracket","brackets.","charact","close","consid","contain","correct","determin","empti","exampl","fals","false;","foreach","given","if:","input","input:","isvalid(str","new","note","null)","open","order.","output:","parenthes","public","return","s)","same","stack","stack<>();","string","true","true;","type","valid","valid.","{","思路","注意，空的字符串也被认为是有效的。","注意：不能将","用于","类型的对象！","给定一个包含'(',","题目","题目大意"],"LeetCode/21. Merge Two Sorted Lists.html":["(l1","(l1.val","(l2","1","21.","=","==",">1",">2",">3",">4",">4,","curr","example:","first","input:","l1,","l1;","l2)","l2;","link","list","list.","listnod","lists.","made","merg","mergetwolists(listnod","new","node","null","null)","null;","output:","public","return","sort","splice","togeth","two","{","可以用递归的思想解决这个问题。比较两个链表当前节点的值，将较小的节点作为新节点，同时递归构造新节点的下一个节点，最后将新节点返回即可。按照这种方法，当两个链表中的任意为","合并两个排序的链表。","思路","时，将另一个链表的头结点作为新节点返回。","题目","题目大意"],"LeetCode/22. Generate Parentheses.html":["\"\",","\"((()))\",","\"(()())\",","\"(())()\",","\"()(())\",","\"()()()\"","'('；当","')'。","();","(curr.length()","(n","(open","*","0,","2)","22.","3,","=","==","[","]","arraylist<>();","close","close,","combin","curr","curr,","dfs(int","dfs(n,","example,","form","function","gener","generateparenthesis(int","given","int","is:","list","n","n)","n,","new","open","open,","pair","parenthes","parentheses,","parentheses.","privat","public","result","result)","result);","result.add(curr);","result;","return","set","solut","string","void","well","write","{","}","中开括号和闭括号的数量。当","和","对圆括号，生成所有有效的括号组合。","思路","看到这种生成某个集合类的题目首先想到递归。这里我们不能盲目地生成括号组合，如果那样的话还要判断每一个组合是否有效。我们应该只生成有效的组合。我们把'('叫做开括号，把')'叫做闭括号，并在递归函数中分别用","给定","记录当前已经生成的字符串","题目","题目大意"],"LeetCode/23. Merge k Sorted Lists.html":["!=","(!pq.isempty())","(curr","(head","(hi","(int","(k","(l1","(l1.val","(l2","(list","(listnod","(listnode","(lo","(n","(node.next","(n是节点总数)","(创建一个含n个节点的新链表的空间复杂度为o(n))","(要构造含n个节点的新链表，构造每个节点需要o(logk))","+","/","//","0)","0,","1","1)","1);","1,","2","23.","2;",":","=","==",">",">1",">2",">3",">4",">4,",">5",">5,",">6","@overrid","[","]","analyz","arraylist<>();","collections.sort(nodes_val);","comparator()","compare(listnod","complexity.","curr","curr.next","curr.next;","describ","dummyhead","dummyhead.next;","dummyhead;","example:","head","head;","hi)","hi);","input:","int","k","l1","l1,","l1;","l2","l2)","l2);","l2;","link","list","list.","listnod","listnode(0);","listnode(node.val);","listnode(val);","lists)","lists,","lists.length","lists[lo];","lists”","lo","lo)","lo,","merg","merge(l1,","merge(listnod","mergeklists(listnode[]","mid","mid);","n","new","node","nodes_v","nodes_val)","nodes_val.add(curr.val);","node，这个节点即是当前","null","null)","null;","o(k)，我们可以利用堆将比较的时间复杂度降到","o(logk)。首先将","o1,","o1.val","o2)","o2.val;","offer","on","output:","partition(listnode[]","partition(lists,","poll","pq","pq.offer(head);","pq.offer(node.next);","pq.poll();","priorityqueu","priorityqueue<>(new","privat","public","return","sort","special","two","val","{","||","}","});","“21.","个合并后的链表，然后对这","个头结点加入到堆中，当堆不为空为执行以下操作：从堆中","个排序的链表。","个节点)","个节点中选取一个最小值，如果采用顺序遍历的话时间复杂度为","个链表的","个链表的头结点的值进行比较，将较小的节点加入到新链表中，然后再依次比较各个链表剩下的节点。每次比较我们需要从","个链表的头结点的最小值，把它加入到新链表中，接着将","个链表继续进行划分和合并。","个链表配成","中依次取出每个值构建节点来扩展新链表。","中的思想，我们每次对","保存所有节点的值；","保存所有链表的所有节点的值","出一个节点","创建一个新的链表，从","可以借助","合并","对","对，每次合并一对，合并完成后得到","思路1","思路2","思路3","思路4","我们可以对上述方法做一个优化，其实没有必要每次按顺序合并两个链表，我们可以采用分治法，每一轮将","我们可以每次合并2个链表，合并","排序；","新链表的虚拟头结点，这样做可以免去单独处理头结点的麻烦","时间复杂度：o(kn)","时间复杂度：o(nlogk)","时间复杂度：o(nlogn)","是节点总数，选取每个节点需要比较","最小堆","次。代码略。","次，总共需要选取","的下一个节点","空间复杂度：o(1)","空间复杂度：o(n)","进堆中。","遍历所有链表并用一个","题目","题目大意"],"LeetCode/26. Remove Duplicates from Sorted Array.html":["(i.e.,","(int","(num","//","0,","0;","1","1,","1:","2","2,","26.","2:","3,","4","5,","=","==","[0,0,1,1,1,2,2,3,3,4],","[1,1,2],","alloc","anoth","answer","appear","array","array,","array?","be","beyond","caller","caller.","clarification:","confus","copy)","doesn't","duplic","each","element","elements.","exampl","extra","first","five","function","function,","given","input","int","integ","intern","j","known","leav","len","length","length.","make","matter","mean","memory.","modif","modifi","n","new","note","null","num","nums)","nums,","nums.length","n，系统只检查数组前","o(1)","onc","pass","place","print","public","reference,","reference.","remov","removeduplicates(int[]","removeduplicates(nums);","respectively.","return","set","sort","space","such","think","this:","two","us","valu","well.","without","{","||","两个指针，i","个元素。","到达数组的末尾，此时","向前移动一个位置。重复上述过程直到","和","思路","找到第一个和","指向的元素的不同的元素，把它放到","指向的就是删除后数组的最后一个元素。","指示删除后的数组，j","指示当前数组，初始时两个指针都指向数组的第一个元素。由于数组是排好序的，因此重复元素都集中在一起，我们移动","的下一个位置，再将","给定一个排序的数组，删除数组中的重复元素使得每个元素在数组中只出现一次。要求直接在原数组上修改，不能创建新的数组。函数返回删除后数组的长度。设删除后数组的长度为","设","题目","题目大意"],"LeetCode/33. Search in Rotated Sorted Array.html":["%","(hi","(i.e.,","(index","(lo","(num","(nums[lo]","(nums[mid]","(本题与它不同的地方是，本题数组中不包含重复的元素)，在第二步对数组进行二分查找时，我们只需要在二分查找的过程中变换一下下标即可。","+","/","//","0","0)","0,","0;","1","1)","1,","1.","1:","1;","1。数组中不包含重复的元素。时间复杂度要求为","2","2,","2:","2;","2]","2]。","3","33.","4","4,","5","5,","6","6,","7","7,","7]，其旋转后的数组可以为","=","==",">",">=","[0,","[0,1,2,4,5,6,7]","[4,","[4,5,6,7,0,1,2]).","[4,5,6,7,0,1,2],","algorithm'","array","array.","ascend","assum","becom","beforehand.","bia","bias)","bias，然后再用二分查找查找","break;","complex","duplic","exampl","exist","found","given","hi","hi;","index","index,","index，那么其在旋转后数组中的下标为","input:","int","length","length，其中","lo","lo)","mid","mid;","n).","null","num","nums,","nums.length","nums[hi])","nums[lo])","nums，从中找到值为","o(log","o(logn)。对于数组","o(logn)，那么想到题目应该是用二分查找去求解，但是二分查找要求数组是有序的，这里旋转后的数组不一定有序，那么怎么去求解呢？其实旋转后的数组我们仍然可以把它看成是有序的，只不过我们需要把原有序数组中每个元素的下标做一个变换。比如原有序数组：","order","otherwis","output:","pivot","public","return","rotat","runtim","search","search(int[]","search.","sort","suppos","target","target)","target。在第二步查找","unknown","valu","{","||","}","为偏移值，而这个偏移值恰好是旋转后数组中最小元素的下标，在上例中","为数组的长度，bia","使用二分查找查找target","依然按照元素值从小到大的排列的话，那么可以写为：","即为旋转后数组中0的下标。","如果我们把它旋转后的数组","如果数组已经是排好序的，那么第一个元素即数组的最小元素","如此以来我们的思路就清晰了，我们需要先求出旋转后数组中最小元素的下标","对当前元素的下标做一个变换。在求解第一步中最小元素的下标时，我们可以利用","思路","旋转数组的最小数字","时，我们需要利用","查找数组中最小元素的下标，并将其赋给bia","的元素，如果找到了返回其下标，如果没有找到返回","给定一个旋转后的排序数组","观察后可以发现，如果设某个元素在原排序数组的下标为","里的方法","题目","题目大意","首先看到时间复杂度要求为"],"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":["&&","(first","(lo","(num","+","//","0","0)","0;","1,","1:","1;","1]","1].","1]。","1};","2:","34.","6","8","=","==",">=","[","[3,4]","[5,7,7,8,8,10],","algorithm'","array","array,","ascend","complex","element","end","exampl","find","first","found","getfirst(int[]","getfirst(nums,","getlast(int[]","getlast(nums,","given","hi","input:","int","int[]","int[]{","int[]{first,","integ","last","last};","lo","mid","n).","new","null","num","nums,","nums,int","nums.length","nums[mid","o(log","o(logn)，如果","order","order,","output:","posit","privat","public","return","runtim","searchrange(int[]","sort","start","target","target)","target);","target){","value.","{","||","}","。首先利用二分查找找到","不在数组中返回","中的最后一个位置。","中的第一个位置，当nums[mid]","同","在","就是","思路","找到target在nums中的最后一个位置","找到target在nums中的第一个位置","数字在排序数组中出现的次数","时，我们判断","是不是target，如果是，说明","的第一个位置和最后一个位置。要求时间复杂度为","第一次出现的位置还在左边，继续在左边寻找；否则，mid","第一次出现的位置，返回。同理可以找到","给定一个有序的整数数组，找到","题目","题目大意"],"LeetCode/36. Valid Sudoku.html":["\"(4)7\".","\"0(4)2\".","\"7(4)\".","'.'.","'4'","(board","(int","(partial","(sub","*","0)","0;","1","1,","1:","2:","36.","3x3","3的子板","5","7","8'","8.","9","9x9","9x9.","9不重复的数字","9的数独板是不是有效的。一个数独板是有效的要求：","=","==","[","[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]","[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],","[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],","[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],","[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],","[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],","[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],","[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],","[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],","[\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],","]","accord","alway","be","block","board","board)","board.length","boolean","box","box,","boxes)","cell","charact","column","contain","corner","determin","digit","each","empti","encod","exampl","except","explanation:","fals","false;","false。","fill","filled)","filled,","follow","given","grid","hashset<>();","input:","invalid.","isvalidsudoku(char[][]","left","mention","modifi","necessarili","need","new","note:","null","output:","partial","public","repetition.","return","right","row","rules.","rules:","same","set","size","solvable.","sub","sudoku","top","true","two","valid","valid.","without","{","||","中出现了，set.add(...)","中，规则如下：","会返回","判断一个9","判断是否有重复数字。虽然逻辑很简单但是代码有点长，并且同一个元素可能会被访问多次。代码略。","必须包含1","思路1","思路2","每一个3","每一列必须包含1","每一行必须包含所有1","这样一来，当某个数已经在之前的某一行、某一列或某个","逐行逐列逐","遍历矩阵中的每一个数，我们按照我们定义的规则将该数编码为一个字符串放入","题目","题目大意"],"LeetCode/38. Count and Say.html":["\"1\"","\"1211\"","\"one","\"two","(n","1","1\"","1.","11","11.","111221","1211","1211.","1:","1s\"","2,","2.","21","21.","2:","3.","30,","38.","4","4.","5.","count","countandsay(int","each","exampl","first","five","following:","gener","given","input:","integ","n","n)","note:","nth","on","output:","public","read","repres","sequenc","sequence.","string","string.","term","{","≤","个序列，构造的规律是：遍历前一个序列，如果当前数字和前一个数字不同，将前一个数字出现的个数和前一个数字的值添加到序列中。例如当前一个序列是\"1211\"，遍历该序列，发现1出现了1次，2出现了1次，1出现了2次，因此当前序列为\"111221\"。","依次构造从1到","很难描述，不过感觉很无聊...","思路","的","题目","题目大意"],"LeetCode/41. First Missing Positive.html":["!=","(i","(num","(nums[i]","+","...,","//","0)","0;","1","1)","1);","1,1]","1:","1;","1。","1。现在我们按照这种规则对数组进行重组，即将每个元素交换到其正确的位置上，忽略元素值为0和元素值大于","1，即找到了数组中缺失的最小的正整数，即","2","2,","2:","3","3,","3:","41.","=","==","[1,","[1,2,0]","[3,4,","[7,8,9,11,12]","algorithm","array,","constant","continue;","exampl","extra","find","first","firstmissingpositive(int[]","given","i++;","i,","input:","int","integ","integer.","miss","n","n]，即","note:","null","nums)","nums.length","nums.length)","nums[i]","n，那么这个数组应该是","o(1)。","o(n)","output:","posit","public","return","run","smallest","space.","swap(nums,","time","unsort","us","{","||","}","。设想一个没有缺失正整数的数组应该是怎样的？设数组长度是","思路","思路同","数组中重复的数字","的元素。重组后，我们从头开始遍历数组，若当前位置的元素不满足","给定一个未排序的整数数组，返回数组中缺失的最小的正整数。要求时间复杂度为","题目","题目大意","，空间复杂度为"],"LeetCode/42. Trapping Rain Water.html":["(blue","(height","(height[right]","(int","(left",")","+","+=","//","0)","0,","0;","1,","1;","1]","1],","1];","42.","6",";","=","==",">",">=","[0,1,0,2,1,0,1,3,2,1,2,1]","[0,1,0,2,1,0,1,3,2,1,2,1].","abov","an","ans;","ans，之后将","array","bar","be","case,","comput","contribut","each","elev","example:","given","height","height)","height.length","height[0];","height[height.length","height[i]);","height[i]。","height[i]求出。","height[j]);","height[left]","height[left];","height[right];","height[right]时，说明当前位置的蓄水量取决于右边，同理进行处理。","i;","image!","input:","int","int[]","int[height.length];","integ","i，从","j","left","left++;","left_max","left_max)","left_max[0]","left_max，否则，累加","left_max，更新","map","marco","math.max(left_max,","math.max(right_max[i","max_left，向右求出右边最大的高度","max_right)","max_right，那么位置","min(left_max[i],","min(max_left,","much","n","neg","new","non","null","o(1)。我们分别使用两个指针","output:","public","rain","raining.","repres","return","right","right_max","right_max)","right_max[height.length","right_max[i]","right_max[i])","right_max，left_max[i]","section)","thank","trap","trap(int[]","trapped.","unit","water","width","{","||","}","以求出相对于该位置左边最大的高度和右边最大的高度。我们可以把相对于每个位置左边最大的高度和右边最大的高度事先保存起来，即利用动态规划的思想。建立两个数组","分别表示当前位置右边最大的高度和左边最大的高度。当","向前移动一个单位；反之，当height[left]","和","开始向左求出左边最大的高度","思路1","思路2","思路3","我们发现在暴力法中对于每一个可能蓄水的位置我们都要遍历一遍","我们可以进一步将上述方法的空间复杂度优化为","指向","暴力法。遍历每一个可能蓄水的位置","求上图下雨后能盛水的容积。","注意初始条件是j","的右边最大的高度。分别求出这两个数组后，每个位置","的左边最大的高度，right_max[i]","的第一个元素和最后一个元素，并用","的蓄水量就为","的蓄水量就可以用","表示相对于","题目","题目大意"],"LeetCode/80. Remove Duplicates from Sorted Array II.html":["(i.e.,","(in","(int","(num","//","0)","0,","0;","1,","1:","2","2,","2:","2]","2])","3","5,","7,","80.","=","==","[0,0,1,1,1,1,2,3,3],","[1,1,1,2,2,3],","alloc","anoth","answer","appear","array","array,","array?","array”","be","beyond","caller","caller.","clarification:","confus","copy)","doesn't","duplic","element","elements.","exampl","extra","first","five","function","function,","given","i;","ii","input","int","integ","intern","j","known","leav","len","length","length.","make","matter","mean","memory.","modif","modifi","new","note","null","num","nums)","nums,","nums.length","nums[i","nums[i++]","nums[j];","nums。为了保证新数组中每个元素至多出现2次，我们只需要判断当前元素是否大于","nums，就地","o(1)","pass","place","place)","print","public","reference,","reference.","remov","removeduplicates(int[]","removeduplicates(nums);","respectively.","return","set","seven","sort","space","such","think","this:","twice","us","valu","well.","without","{","||","}","“26.","两个指针，i","中的思路，设","删除数组中的重复元素使得每个元素至多出现2次，返回删除后数组的长度。要求不能分配额外的数组空间。","即可。","和","就地删除要求我们在原数组上进行操作而不能分配额外的数组。我们还是按照","思路","指示删除后的数组，j","指示当前数组，初始时两个指针都指向数组的第一个元素。我们遍历","给定一个排序的数组","题目","题目大意"]},"length":117},"tokenStore":{"root":{"0":{"0":{"0":{"0":{"0":{"0":{"1":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{}},"docs":{}},"docs":{}},"1":{"1":{"1":{"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"0":{"0":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"0":{"0":{"0":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}},"2":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}},"9":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}},"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"处":{"docs":{},"于":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}},"1":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}},"1":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}},"9":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}},"docs":{},")":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"处":{"docs":{},"于":{"docs":{},"未":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"（":{"docs":{},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"）":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"此":{"docs":{},"时":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"创":{"docs":{},"建":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.022535211267605635},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.028985507246376812},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.02564102564102564},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.03614457831325301},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.020100502512562814},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.022321428571428572},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.013392857142857142},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.008450704225352112},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.014522821576763486},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.011494252873563218},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.02158273381294964},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.034482758620689655},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.02727272727272727},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.018518518518518517},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.05},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.02608695652173913},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.03389830508474576},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.037037037037037035},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.016129032258064516},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02247191011235955},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.03468208092485549},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.020100502512562814},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01694915254237288},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.014150943396226415},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.022222222222222223},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.013392857142857142},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.01818181818181818},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.03875968992248062},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.020512820512820513}},"i":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.014423076923076924},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.017985611510791366},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.020689655172413793},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.02564102564102564},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.03278688524590164},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.011538461538461539},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.011560693641618497},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.008522727272727272},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.011627906976744186},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}},".":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}},"l":{"docs":{},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},",":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"取":{"docs":{},"模":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"和":{"docs":{},"之":{"docs":{},"前":{"docs":{},"一":{"docs":{},"样":{"docs":{},"；":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}},".":{"0":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}},"7":{"5":{"docs":{},"f":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"docs":{}},"docs":{}},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.02564102564102564},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024096385542168676},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.011560693641618497},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.019417475728155338},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.023255813953488372},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.008928571428571428},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.007751937984496124},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}}},"}":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}},";":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}}},"：":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}},"?":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}},"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}},"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},";":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931}}},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287}}},".":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}},",":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"1":{"0":{"0":{"0":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"掩":{"docs":{},"码":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}},"1":{"1":{"0":{"0":{"1":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.0423728813559322},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},"。":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.006224066390041493},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.02564102564102564},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}},",":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}},")":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}},"，":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"为":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}}}}},"1":{"0":{"1":{"1":{"0":{"0":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"1":{"1":{"1":{"1":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"以":{"docs":{},"下":{"docs":{},"方":{"docs":{},"法":{"docs":{},"得":{"docs":{},"到":{"docs":{},"：":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"2":{"2":{"1":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}},"docs":{}},"docs":{}},"docs":{}},"5":{"docs":{},"%":{"1":{"6":{"docs":{},"=":{"3":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"docs":{}}},"docs":{}},"docs":{}},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"除":{"docs":{},"留":{"docs":{},"余":{"docs":{},"数":{"docs":{},"法":{"docs":{},"得":{"docs":{},"到":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}},"8":{"docs":{},"%":{"1":{"6":{"docs":{},"=":{"6":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"，":{"docs":{},"插":{"docs":{},"在":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"docs":{}}},"docs":{}},"docs":{}},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"除":{"docs":{},"留":{"docs":{},"余":{"docs":{},"数":{"docs":{},"法":{"docs":{},"得":{"docs":{},"到":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}}}}}}}}}}}},"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.024390243902439025}},",":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}},"]":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}},".":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":3.333333333333333},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}},"2":{"0":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}},"1":{"1":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}},".":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}},"docs":{}},"3":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01694915254237288}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}},"\"":{"docs":{},",":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}},"7":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}},")":{"docs":{},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}}}},"8":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"~":{"1":{"2":{"7":{"docs":{},"。":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},",":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083}}},"]":{"docs":{},"]":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}},"3":{"docs":{},",":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083}}},".":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":3.333333333333333}}}},"4":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}},",":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083}}},".":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":2.5}}}},"5":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}},",":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"结":{"docs":{},"果":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"3":{"docs":{},"个":{"docs":{},"连":{"docs":{},"续":{"docs":{},"序":{"docs":{},"列":{"1":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}},"docs":{}}}}}}},"docs":{}}}}}}}}},",":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083}}},".":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":5}}}},"6":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"默":{"docs":{},"认":{"docs":{},"创":{"docs":{},"建":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}},"扩":{"docs":{},"容":{"docs":{},"之":{"docs":{},"后":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"。":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"；":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},",":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}},"\"":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}},"7":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},".":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":2}}}},"9":{"9":{"4":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}},"docs":{}},"docs":{},".":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":1.6666666666666665}}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0073145245559038665},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.022535211267605635},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0392156862745098},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.03571428571428571},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.01875},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.014184397163120567},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.009433962264150943},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.018867924528301886},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.04918032786885246},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.008522727272727272},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.022321428571428572},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.019801980198019802},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.04878048780487805},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.01818181818181818}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.007194244604316547},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.034482758620689655},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.03333333333333333},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.01507537688442211},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.014598540145985401},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.011560693641618497},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"旧":{"docs":{},"容":{"docs":{},"量":{"docs":{},"的":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"当":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}}}}}}}}},"。":{"docs":{},"此":{"docs":{},"外":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"在":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"已":{"docs":{},"经":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"的":{"docs":{},"格":{"docs":{},"子":{"docs":{},"不":{"docs":{},"能":{"docs":{},"重":{"docs":{},"复":{"docs":{},"进":{"docs":{},"入":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"访":{"docs":{},"问":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},"[":{"docs":{},"p":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}}},".":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}},",":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},"。":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}},".":{"5":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}},"6":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939}}},"7":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"8":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.012779552715654952},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.005633802816901409},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":3.333333333333333},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}},",":{"1":{"docs":{},"]":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}},"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.038461538461538464},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.03614457831325301},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.05825242718446602},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.013392857142857142},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.024509803921568627},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.020512820512820513}}},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.01079136690647482},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.01818181818181818},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.018518518518518517},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.017391304347826087},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02247191011235955},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.013392857142857142},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.0392156862745098},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.015503875968992248}}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"次":{"docs":{},"数":{"docs":{},"为":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}},"减":{"docs":{},"到":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}},"并":{"docs":{},"进":{"docs":{},"行":{"docs":{},"等":{"docs":{},"待":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"为":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}},"不":{"docs":{},"受":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"而":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}},"表":{"docs":{},"示":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"还":{"docs":{},"未":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"。":{"docs":{},"之":{"docs":{},"后":{"docs":{},"每":{"docs":{},"次":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}},"说":{"docs":{},"明":{"docs":{},"在":{"docs":{},"最":{"docs":{},"高":{"docs":{},"位":{"docs":{},"上":{"docs":{},"发":{"docs":{},"生":{"docs":{},"了":{"docs":{},"进":{"docs":{},"位":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"再":{"docs":{},"额":{"docs":{},"外":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"为":{"1":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"链":{"docs":{},"接":{"docs":{},"到":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"。":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"即":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"缺":{"docs":{},"失":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"即":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}},"通":{"docs":{},"过":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"之":{"docs":{},"后":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"要":{"docs":{},"求":{"docs":{},"为":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"按":{"docs":{},"照":{"docs":{},"这":{"docs":{},"种":{"docs":{},"规":{"docs":{},"则":{"docs":{},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"组":{"docs":{},"，":{"docs":{},"即":{"docs":{},"将":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"交":{"docs":{},"换":{"docs":{},"到":{"docs":{},"其":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"，":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"为":{"0":{"docs":{},"和":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"}":{"docs":{},";":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745}}}},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"当":{"docs":{},"s":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"s":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},",":{"docs":{},"p":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"*":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"s":{"docs":{},"和":{"docs":{},"p":{"docs":{},"也":{"docs":{},"是":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"该":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"但":{"4":{"docs":{},",":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}}}},"docs":{}}}}}}}}}}}}}}}}}},"e":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}},"：":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}},":":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}},"\"":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.024390243902439025}}},"s":{"docs":{},"\"":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}}},"2":{"0":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},".":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":3.333333333333333}}}},"1":{"4":{"7":{"4":{"8":{"3":{"6":{"4":{"7":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}}}}}}},"8":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.024390243902439025}},".":{"docs":{"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":2},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}},"2":{"2":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}}}},"4":{"9":{"0":{"6":{"9":{"2":{"4":{"6":{"7":{"6":{"3":{"1":{"8":{"2":{"3":{"9":{"7":{"docs":{},"l":{"docs":{},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},".":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":3.333333333333333}}}},"3":{"1":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}},"docs":{},".":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":2}}}},"5":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}},"6":{"docs":{},".":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":2}}}},"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0068143100511073255},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.006269592476489028},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.022535211267605635},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.016597510373443983},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.014388489208633094},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02127659574468085},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.011363636363636364},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.017857142857142856},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}},".":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.005633802816901409},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":2.5},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}},"，":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}}},"则":{"docs":{},"找":{"docs":{},"到":{"docs":{},"该":{"docs":{},"数":{"docs":{},"；":{"docs":{},"当":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}},"即":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"最":{"docs":{},"多":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}},"说":{"docs":{},"明":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"在":{"docs":{},"右":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"在":{"docs":{},"右":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"找":{"docs":{},"；":{"docs":{},"当":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}},"左":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"在":{"docs":{},"左":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"找":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}},"过":{"docs":{},"了":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},"docs":{}}}}}}}}}}}}}}}}},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.03237410071942446},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.02564102564102564},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.020202020202020204},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.03389830508474576},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}}},")":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}},"，":{"docs":{},"而":{"2":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}},"docs":{}}},";":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}},"只":{"docs":{},"能":{"docs":{},"得":{"docs":{},"到":{"2":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"此":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"还":{"docs":{},"要":{"docs":{},"再":{"docs":{},"乘":{"docs":{},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}}}}}}}}}}}}}},"docs":{}}}}},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"(":{"2":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}},"docs":{}}}}}}},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},";":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}},"，":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}},"docs":{},"由":{"docs":{},"于":{"2":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"5":{"docs":{},"次":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"输":{"docs":{},"出":{"2":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}},"docs":{}}},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"为":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}},")":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}},"中":{"1":{"docs":{},"和":{"2":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"相":{"docs":{},"互":{"docs":{},"抵":{"docs":{},"消":{"docs":{},"，":{"3":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}},"docs":{}}}}}}}}}}}},"docs":{}}},"3":{"docs":{},"和":{"2":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"相":{"docs":{},"互":{"docs":{},"抵":{"docs":{},"消":{"docs":{},"，":{"2":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}},"docs":{}}}}}}}}}}}},"docs":{}}},"docs":{}},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"跳":{"1":{"docs":{},"次":{"docs":{},"，":{"1":{"docs":{},"次":{"docs":{},"跳":{"2":{"docs":{},"级":{"docs":{},"得":{"docs":{},"到":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"跳":{"docs":{},"上":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}},"a":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}},"b":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}},"就":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"该":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{},"两":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}}}}}},"赋":{"docs":{},"给":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}},"：":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}},":":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}},"n":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407}}}},"3":{"0":{"docs":{},",":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}},"1":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0068143100511073255}},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"奇":{"docs":{},"素":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"当":{"docs":{},"出":{"docs":{},"现":{"docs":{},"乘":{"docs":{},"法":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"，":{"docs":{},"信":{"docs":{},"息":{"docs":{},"就":{"docs":{},"会":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"与":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"1":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01694915254237288}},"}":{"docs":{},"，":{"docs":{},"则":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"这":{"docs":{},"三":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"能":{"docs":{},"排":{"docs":{},"成":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"数":{"docs":{},"字":{"docs":{},"为":{"3":{"2":{"1":{"3":{"2":{"3":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01694915254237288}},"：":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}},",":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}}},"3":{"docs":{},".":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":2}}}},"4":{"2":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}},"docs":{},".":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":1.25}}}},"6":{"docs":{},".":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":3.333333333333333}}}},"8":{"docs":{},".":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":5}}}},"9":{"9":{"9":{"docs":{},".":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"docs":{}},"docs":{}},"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.022535211267605635},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.011560693641618497},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.013392857142857142},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.015384615384615385}},".":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.005633802816901409},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":1.6782273603082851},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}},"；":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.058823529411764705},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.007194244604316547},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.03636363636363636},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.05084745762711865},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}},"和":{"5":{"docs":{},"的":{"docs":{},"数":{"docs":{},"称":{"docs":{},"作":{"docs":{},"丑":{"docs":{},"数":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}}},"docs":{}},"]":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"2":{"docs":{},"或":{"3":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}},"，":{"docs":{},"输":{"docs":{},"出":{"4":{"docs":{},"。":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}},"docs":{}}}},"一":{"docs":{},"直":{"docs":{},"到":{"9":{"9":{"9":{"docs":{},"。":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}},"docs":{}},"docs":{}},"docs":{}}}},")":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":5}}}}},"x":{"3":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}},"docs":{}},"的":{"docs":{},"子":{"docs":{},"板":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}},"4":{"0":{"0":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}},"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}},"1":{"docs":{},".":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":2.5}}}},"2":{"docs":{},".":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":2.5}}}},"6":{"5":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}},"8":{"1":{"0":{"1":{"2":{"1":{"4":{"1":{"6":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"5":{"0":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}},"docs":{}},"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}},".":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}},"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.022535211267605635},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.01818181818181818},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.01773049645390071},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.009433962264150943},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.022321428571428572},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}},".":{"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"2":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.005633802816901409},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}},")":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.007194244604316547},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.020202020202020204},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"(":{"2":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}},"docs":{}}}}}}},"中":{"2":{"docs":{},"和":{"5":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}},"docs":{}}},"docs":{}},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"相":{"docs":{},"互":{"docs":{},"抵":{"docs":{},"消":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}},",":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}},"[":{"5":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}},"6":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}},"docs":{}}},"。":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"首":{"docs":{},"先":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"：":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}},"5":{"0":{"0":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}},"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},",":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"7":{"2":{"docs":{},"。":{"docs":{},"和":{"docs":{},"该":{"docs":{},"题":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"要":{"docs":{},"求":{"docs":{},"树":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}},"docs":{}},"8":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}},"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.022535211267605635},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.017857142857142856},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}},".":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":2.5},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.01079136690647482},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.03389830508474576},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.013392857142857142},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"理":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"这":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"必":{"docs":{},"须":{"docs":{},"的":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"乘":{"docs":{},"以":{"2":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}},",":{"docs":{},"[":{"7":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}},"docs":{}}},"，":{"docs":{},"k":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}},"由":{"docs":{},"于":{"docs":{},"没":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"返":{"docs":{},"回":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}},"是":{"docs":{},"某":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"序":{"docs":{},"列":{"4":{"docs":{},",":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}}}},"docs":{}}}}}}}}}}}},"\"":{"docs":{},",":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}},":":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}},"6":{"0":{"docs":{},"l":{"docs":{},",":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}},"4":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}},"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.022535211267605635},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.017857142857142856},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.007751937984496124}},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},".":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.04040404040404041},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.020833333333333332},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.013392857142857142}}},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}},",":{"docs":{},"[":{"7":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}},"docs":{}}},"，":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"数":{"docs":{},"目":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{},"接":{"docs":{},"着":{"docs":{},"再":{"docs":{},"将":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}},"docs":{}}}}}}},"则":{"docs":{},"重":{"docs":{},"建":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}}}}}},"，":{"docs":{},"所":{"docs":{},"以":{"7":{"docs":{},"大":{"docs":{},"于":{"6":{"docs":{},"前":{"docs":{},"面":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"包":{"docs":{},"括":{"6":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"数":{"docs":{},"目":{"docs":{},"+":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}},"docs":{}}}}},"7":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.022535211267605635},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.008928571428571428},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}},"返":{"docs":{},"回":{"2":{"1":{"docs":{},"。":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}}},"docs":{}},"docs":{}}}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},")":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}},".":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":3.333333333333333}}},",":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.008928571428571428},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152}},"，":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"数":{"docs":{},"目":{"docs":{},"为":{"1":{"docs":{},"；":{"docs":{},"[":{"6":{"docs":{},"]":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}},"docs":{}}}},"docs":{}}}}}}},"输":{"docs":{},"出":{"8":{"docs":{},"。":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}},"docs":{}}},"其":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"后":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"可":{"docs":{},"以":{"docs":{},"为":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}},"8":{"0":{"7":{"docs":{},".":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}},"docs":{},".":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":1.6666666666666665}}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.022535211267605635},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.010638297872340425},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}},".":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}},"都":{"docs":{},"是":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"，":{"docs":{},"但":{"1":{"4":{"docs":{},"不":{"docs":{},"是":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"包":{"docs":{},"含":{"docs":{},"质":{"docs":{},"因":{"docs":{},"子":{"7":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"。":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}},"]":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}},"，":{"docs":{},"则":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}},"返":{"docs":{},"回":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}},"'":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}},"9":{"0":{"0":{"docs":{},",":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}},".":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},".":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"9":{"7":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287}}},"docs":{}},"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.022535211267605635},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.024752475247524754}},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},".":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}},",":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018}}},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"数":{"docs":{},"位":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"小":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"小":{"docs":{},"数":{"docs":{},"点":{"docs":{},"。":{"docs":{},"此":{"docs":{},"外":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"用":{"docs":{},"科":{"docs":{},"学":{"docs":{},"计":{"docs":{},"数":{"docs":{},"法":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"在":{"docs":{},"整":{"docs":{},"数":{"docs":{},"或":{"docs":{},"者":{"docs":{},"小":{"docs":{},"数":{"docs":{},"的":{"docs":{},"后":{"docs":{},"面":{"docs":{},"还":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"遇":{"docs":{},"到":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"独":{"docs":{},"板":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"独":{"docs":{},"板":{"docs":{},"是":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"要":{"docs":{},"求":{"docs":{},"：":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}}}}}}}}}}}}}}}}}},"全":{"docs":{},"排":{"docs":{},"列":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"表":{"docs":{},"示":{"docs":{},"手":{"docs":{},"机":{"docs":{},"九":{"docs":{},"宫":{"docs":{},"格":{"docs":{},"键":{"docs":{},"盘":{"docs":{},"上":{"docs":{},"的":{"docs":{},"字":{"docs":{},"母":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"1":{"docs":{},"表":{"docs":{},"示":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"x":{"9":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}},".":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}},"docs":{}},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.01485148514851485}}}}}}}}},"docs":{},"b":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.02456140350877193},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.024822695035460994},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.019417475728155338}},"u":{"docs":{},"g":{"docs":{},"没":{"docs":{},"改":{"docs":{},"好":{"docs":{},"就":{"docs":{},"不":{"docs":{},"要":{"docs":{},"去":{"docs":{},"睡":{"docs":{},"觉":{"docs":{},"！":{"docs":{"./":{"ref":"./","tf":0.5}}}}}}}}}}}},"。":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}},"e":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.012244897959183673}}}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.018867924528301886}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}}}},".":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},".":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"则":{"docs":{},")":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":5}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}},";":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}}}}}}},"i":{"docs":{},"t":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.015228426395939087},"JianZhiOffer/Bit Manipulation/":{"ref":"JianZhiOffer/Bit Manipulation/","tf":5},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01694915254237288}}},"g":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}},";":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}},"以":{"docs":{},"让":{"docs":{},"序":{"docs":{},"列":{"docs":{},"包":{"docs":{},"含":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"数":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"小":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}},"a":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.017857142857142856}},"s":{"docs":{},"）":{"docs":{},"后":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"到":{"docs":{},"未":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"状":{"docs":{},"态":{"docs":{},"或":{"docs":{},"者":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"查":{"docs":{},"找":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"JianZhiOffer/Binary Search/":{"ref":"JianZhiOffer/Binary Search/","tf":5}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.0163265306122449},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.028708133971291867},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02247191011235955},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.020833333333333332},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02127659574468085},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}},"/":{"docs":{},"~":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}}}}}}}}}}}},"n":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.024752475247524754}},")":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}}}}}},"x":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.01485148514851485}},",":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}},"/":{"8":{"docs":{},"位":{"docs":{},"/":{"1":{"docs":{},"字":{"docs":{},"节":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"docs":{}}}},"docs":{}},"[":{"docs":{},"]":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.009578544061302681},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.006224066390041493},"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}},"e":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"可":{"docs":{},"以":{"docs":{},"取":{"docs":{},"下":{"docs":{},"面":{"docs":{},"三":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"a":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}},"a":{"docs":{},"r":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.045454545454545456}},",":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}},"。":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}}},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"JianZhiOffer/Backtracking/":{"ref":"JianZhiOffer/Backtracking/","tf":10}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.035398230088495575}},"s":{"docs":{},".":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787}}}}}}}}}},"，":{"docs":{},"操":{"docs":{},"作":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"后":{"docs":{},"来":{"docs":{},"又":{"docs":{},"被":{"docs":{},"改":{"docs":{},"回":{"docs":{},"为":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}},"其":{"docs":{},"中":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"当":{"docs":{},"执":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}},"：":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.010638297872340425}}},",":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}},"介":{"docs":{},"绍":{"docs":{"./":{"ref":"./","tf":10}}}},"鬼":{"docs":{},"雕":{"docs":{},"の":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.5}}}}}}}}},"j":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.012779552715654952},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.027649769585253458},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.014354066985645933},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.028901734104046242},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.020100502512562814},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.01818181818181818},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.011627906976744186},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.015384615384615385}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"Java/":{"ref":"Java/","tf":10},"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.009324009324009324},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.005633802816901409},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.01839080459770115},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}},"基":{"docs":{},"础":{"docs":{"Java/Java基础/":{"ref":"Java/Java基础/","tf":10}}}},"®":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"{":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"7":{"4":{"5":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},"n":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"$":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"6":{"1":{"7":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"1":{"1":{"4":{"2":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}},"（":{"docs":{},"j":{"docs":{},".":{"docs":{},"u":{"docs":{},".":{"docs":{},"c":{"docs":{},"）":{"docs":{},"包":{"docs":{},"中":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}},"大":{"docs":{},"大":{"docs":{},"提":{"docs":{},"高":{"docs":{},"了":{"docs":{},"并":{"docs":{},"发":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"a":{"docs":{},"q":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"$":{"docs":{},"u":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"1":{"4":{"5":{"7":{"docs":{},")":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},":":{"docs":{},"(":{"docs":{},"l":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},";":{"docs":{},")":{"docs":{},"v":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"?":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"p":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"异":{"docs":{},"常":{"docs":{},"处":{"docs":{},"理":{"docs":{},"框":{"docs":{},"架":{"docs":{},"只":{"docs":{},"能":{"docs":{},"处":{"docs":{},"理":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"错":{"docs":{},"误":{"docs":{},"不":{"docs":{},"在":{"docs":{},"其":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"范":{"docs":{},"围":{"docs":{},"之":{"docs":{},"内":{"docs":{},"。":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"层":{"docs":{},"级":{"docs":{},"结":{"docs":{},"构":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}},"容":{"docs":{},"器":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":10}}}},"并":{"docs":{},"发":{"docs":{"Java/Java并发/":{"ref":"Java/Java并发/","tf":10}},"编":{"docs":{},"程":{"docs":{},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"类":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":10.002298850574713}}}}}},"进":{"docs":{},"阶":{"docs":{},"（":{"docs":{},"七":{"docs":{},"）":{"docs":{},"正":{"docs":{},"确":{"docs":{},"理":{"docs":{},"解":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"简":{"docs":{},"介":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}},"v":{"docs":{},"m":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.011267605633802818},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}},")":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.017341040462427744},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"构":{"docs":{},"成":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"回":{"docs":{},"文":{"docs":{},"的":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}}}}},"d":{"docs":{},"k":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.01597444089456869},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.008450704225352112},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.005145797598627788},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.015228426395939087},"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287}},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.010526315789473684},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}},".":{"docs":{},"u":{"docs":{},".":{"docs":{},"c":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}},"组":{"docs":{},"件":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":10.00207468879668}}}}}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}},"'":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"没":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"一":{"docs":{},"点":{"docs":{},"点":{"docs":{},"地":{"docs":{},"去":{"docs":{},"移":{"docs":{},"动":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}},"直":{"docs":{},"到":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}},"]":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407}}}},"!":{"docs":{},"=":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.009404388714733543},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.006072874493927126},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.008576329331046312},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.027777777777777776},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.019417475728155338},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.01764705882352941},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.025},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.033707865168539325},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.02247191011235955},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.014184397163120567},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.02512562814070352},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.008522727272727272},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"2":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}},"docs":{}}}}}}},"&":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.020689655172413793},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.03333333333333333},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Stack & Queue & PriorityQueue/":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/","tf":4},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425}},"&":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.02564102564102564},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024096385542168676},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.028708133971291867},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.018867924528301886},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.01773049645390071},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}},"(":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655}},",":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}}},"1":{"0":{"0":{"0":{"docs":{},")":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"docs":{},")":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"docs":{},")":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121}},")":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"由":{"docs":{},"于":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}},",":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}}},"2":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.030303030303030304},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}},")":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}},"。":{"docs":{},"联":{"docs":{},"立":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}},"5":{"0":{"0":{"docs":{},")":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"docs":{},")":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}},")":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},"i":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.01818181818181818}},"n":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.008450704225352112},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.01037344398340249},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.007194244604316547},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.020689655172413793},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.02608695652173913},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.020202020202020204},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.016129032258064516},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.01507537688442211},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.015503875968992248},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.010526315789473684},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.01037344398340249},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}},")":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.007194244604316547},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}}}}}},")":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.011538461538461539},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986}}}}}}}}},",":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.03296703296703297}}},".":{"docs":{},"e":{"docs":{},".":{"docs":{},",":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}},"[":{"docs":{},"l":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},";":{"docs":{},")":{"docs":{},"v":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}},"p":{"1":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010050251256281407}}},"2":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.014354066985645933},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}},"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"而":{"docs":{},"在":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}},"a":{"docs":{},"l":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.02247191011235955}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}}}}}},"如":{"docs":{},"果":{"docs":{},"子":{"docs":{},"类":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"重":{"docs":{},"写":{"docs":{},"了":{"docs":{},"父":{"docs":{},"类":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"子":{"docs":{},"类":{"docs":{},"中":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"级":{"docs":{},"别":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"低":{"docs":{},"于":{"docs":{},"父":{"docs":{},"类":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"级":{"docs":{},"别":{"docs":{},"，":{"docs":{},"这":{"docs":{},"也":{"docs":{},"是":{"docs":{},"满":{"docs":{},"足":{"docs":{},"里":{"docs":{},"式":{"docs":{},"替":{"docs":{},"换":{"docs":{},"原":{"docs":{},"则":{"docs":{},"以":{"docs":{},"确":{"docs":{},"保":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"父":{"docs":{},"类":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"子":{"docs":{},"类":{"docs":{},"实":{"docs":{},"例":{"docs":{},")":{"docs":{},"，":{"docs":{},"即":{"docs":{},"子":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{},"必":{"docs":{},"须":{"docs":{},"能":{"docs":{},"够":{"docs":{},"替":{"docs":{},"换":{"docs":{},"掉":{"docs":{},"所":{"docs":{},"有":{"docs":{},"父":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"而":{"docs":{},"接":{"docs":{},"口":{"docs":{},"更":{"docs":{},"像":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"1":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}},"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.02564102564102564},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}},"e":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}},")":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"g":{"docs":{},".":{"docs":{},",":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}},"d":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}},"o":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}},")":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.005633802816901409}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"s":{"docs":{},"k":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}}}},"g":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}},")":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}},"x":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"进":{"docs":{},"行":{"docs":{},"这":{"docs":{},"个":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}},"y":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}},"a":{"docs":{},"p":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.005145797598627788}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{},"o":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"i":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}},"[":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"]":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.03278688524590164}}}}}}}}}}}}}}}},"x":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}},"n":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.03333333333333333},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.047619047619047616},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.03296703296703297},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}},"e":{"docs":{},"w":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.014388489208633094},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.007194244604316547}}}}}}}}},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}}},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}},"i":{"docs":{},"]":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}},"l":{"docs":{},"l":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}}}},"是":{"docs":{},"节":{"docs":{},"点":{"docs":{},"总":{"docs":{},"数":{"docs":{},")":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}},";":{"docs":{},")":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"+":{"docs":{},"+":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.025423728813559324}}}}}}},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.015432098765432098}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}},"o":{"docs":{},"t":{"1":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.024822695035460994}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.014184397163120567}}}}}}},"2":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}},"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.033707865168539325},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.018867924528301886},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.021897810218978103},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.02247191011235955},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}}},"s":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.011560693641618497},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}},"e":{"docs":{},"g":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"+":{"docs":{},"+":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.005633802816901409}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}},"c":{"docs":{},"k":{"2":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}}}},"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}},"b":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}},"docs":{}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}},"!":{"docs":{},"(":{"docs":{},"o":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}},"s":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}},"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}}}},"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}},"p":{"docs":{},"q":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}},"(":{"docs":{},"k":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}},"*":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}},"a":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}},"u":{"docs":{},"x":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}},"h":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}},"i":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.008928571428571428}}},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333}}}}}}},"2":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333}}},"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.01818181818181818},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.02564102564102564},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.008823529411764706},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.011627906976744186}},"[":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}},"k":{"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182}},"e":{"docs":{},"y":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"l":{"1":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}},"2":{"docs":{"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},"docs":{},"e":{"docs":{},"n":{"2":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}},"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"f":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{},"e":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.008522727272727272}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},"e":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}},"o":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.020833333333333332},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745}},"c":{"docs":{},"k":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}},"v":{"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}},"i":{"docs":{},"a":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"$":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}},"b":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}},"u":{"docs":{},"e":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669}}}}}},"而":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}}}}},"具":{"docs":{},"体":{"docs":{},"过":{"docs":{},"程":{"docs":{},"略":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"查":{"docs":{},"阅":{"docs":{},"可":{"docs":{},"以":{"docs":{},"参":{"docs":{},"考":{"docs":{},"文":{"docs":{},"末":{"docs":{},"给":{"docs":{},"出":{"docs":{},"的":{"docs":{},"博":{"docs":{},"文":{"docs":{},")":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}},";":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}},"尤":{"docs":{},"其":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},")":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"保":{"docs":{},"存":{"docs":{},"旧":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}},"因":{"docs":{},"为":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"和":{"docs":{},"自":{"docs":{},"己":{"docs":{},"异":{"docs":{},"或":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"所":{"docs":{},"有":{"docs":{},"出":{"docs":{},"现":{"docs":{},"两":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"都":{"docs":{},"抵":{"docs":{},"消":{"docs":{},"掉":{"docs":{},"了":{"docs":{},")":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"就":{"docs":{},"是":{"docs":{},"那":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"恰":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"出":{"docs":{},"现":{"1":{"docs":{},"次":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"数":{"docs":{},"都":{"docs":{},"是":{"docs":{},"出":{"docs":{},"现":{"docs":{},"两":{"docs":{},"次":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"，":{"docs":{},"从":{"docs":{},"头":{"docs":{},"到":{"docs":{},"尾":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"求":{"docs":{},"异":{"docs":{},"或":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"数":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"j":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}},"用":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}},"该":{"docs":{},"数":{"docs":{},"字":{"docs":{},"在":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"公":{"docs":{},"共":{"docs":{},"结":{"docs":{},"点":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"队":{"docs":{},"列":{"docs":{},"头":{"docs":{},"部":{"docs":{},"和":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"都":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"删":{"docs":{},"除":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"也":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"队":{"docs":{},"列":{"docs":{},"头":{"docs":{},"部":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"已":{"docs":{},"经":{"docs":{},"从":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"中":{"docs":{},"滑":{"docs":{},"出":{"docs":{},"，":{"docs":{},"滑":{"docs":{},"出":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"头":{"docs":{},"部":{"docs":{},"删":{"docs":{},"除":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"或":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"或":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"值":{"docs":{},")":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"编":{"docs":{},"程":{"docs":{},"语":{"docs":{},"言":{"docs":{},"没":{"docs":{},"有":{"docs":{},"实":{"docs":{},"现":{"docs":{},"我":{"docs":{},"们":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"这":{"docs":{},"种":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}},"docs":{}}}}}},"包":{"docs":{},"括":{"docs":{},"整":{"docs":{},"数":{"docs":{},"和":{"docs":{},"小":{"docs":{},"数":{"docs":{},")":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}},"含":{"docs":{},"根":{"docs":{},"、":{"docs":{},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}}},"在":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"要":{"docs":{},"分":{"docs":{},"别":{"docs":{},"被":{"docs":{},"i":{"docs":{},"和":{"docs":{},"j":{"docs":{},"访":{"docs":{},"问":{"docs":{},"一":{"docs":{},"次":{"docs":{},")":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"即":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"含":{"docs":{},"n":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"构":{"docs":{},"造":{"docs":{},"含":{"docs":{},"n":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"构":{"docs":{},"造":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"需":{"docs":{},"要":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"k":{"docs":{},")":{"docs":{},")":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"题":{"docs":{},"与":{"docs":{},"它":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"是":{"docs":{},"，":{"docs":{},"本":{"docs":{},"题":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},")":{"docs":{},"，":{"docs":{},"在":{"docs":{},"第":{"docs":{},"二":{"docs":{},"步":{"docs":{},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"变":{"docs":{},"换":{"docs":{},"一":{"docs":{},"下":{"docs":{},"下":{"docs":{},"标":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"+":{"1":{"6":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"docs":{}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.014423076923076924},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.025974025974025976},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.07272727272727272},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.027649769585253458},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.023809523809523808},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.05982905982905983},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.024271844660194174},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.015957446808510637},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.019230769230769232},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02247191011235955},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.020100502512562814},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.011560693641618497},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.02512562814070352},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.025423728813559324},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.014150943396226415},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.038834951456310676},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.008928571428571428},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.045454545454545456},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}},"=":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.007751937984496124}}},"+":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}},"/":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0074211502782931356},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.03597122302158273},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.09836065573770492},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.018867924528301886},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.021897810218978103},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.03125},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.033707865168539325},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.03900709219858156},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.02097902097902098},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01694915254237288},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.011363636363636364},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}},"/":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.0326530612244898},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.030303030303030304},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.056},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.05803571428571429},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.02385008517887564},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.04597701149425287},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.038461538461538464},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.022364217252396165},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.01044932079414838},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.011267605633802818},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.007194244604316547},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.027649769585253458},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.03614457831325301},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.02727272727272727},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.018518518518518517},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.017391304347826087},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.03827751196172249},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.021604938271604937},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.026470588235294117},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.022900763358778626},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.030303030303030304},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.05319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.03389830508474576},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.011538461538461539},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.024193548387096774},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0375},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.02247191011235955},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.021897810218978103},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.03125},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.014184397163120567},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.027972027972027972},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.02512562814070352},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.011363636363636364},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.01818181818181818},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.013392857142857142},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.015384615384615385}},"任":{"docs":{},"务":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"策":{"docs":{},"略":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"存":{"docs":{},"放":{"docs":{},"等":{"docs":{},"待":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"钟":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"池":{"docs":{},"，":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"池":{"docs":{},"容":{"docs":{},"量":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"固":{"docs":{},"定":{"docs":{},"容":{"docs":{},"量":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"池":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}},"容":{"docs":{},"量":{"docs":{},"为":{"1":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"池":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}},"docs":{}}}}}},"天":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"小":{"docs":{},"时":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},"微":{"docs":{},"妙":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},"是":{"docs":{},"否":{"docs":{},"允":{"docs":{},"许":{"docs":{},"为":{"docs":{},"核":{"docs":{},"心":{"docs":{},"线":{"docs":{},"程":{"docs":{},"设":{"docs":{},"置":{"docs":{},"存":{"docs":{},"活":{"docs":{},"时":{"docs":{},"间":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}},"核":{"docs":{},"心":{"docs":{},"池":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"（":{"docs":{},"即":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"目":{"docs":{},"大":{"docs":{},"于":{"docs":{},"这":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"提":{"docs":{},"交":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"会":{"docs":{},"被":{"docs":{},"放":{"docs":{},"进":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"）":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"毫":{"docs":{},"秒":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},"用":{"docs":{},"来":{"docs":{},"存":{"docs":{},"放":{"docs":{},"工":{"docs":{},"作":{"docs":{},"集":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}},"记":{"docs":{},"录":{"docs":{},"已":{"docs":{},"经":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"个":{"docs":{},"数":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"曾":{"docs":{},"经":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}},"秒":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"纳":{"docs":{},"秒":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},"线":{"docs":{},"存":{"docs":{},"活":{"docs":{},"时":{"docs":{},"间":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}},"程":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}},"池":{"docs":{},"中":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"能":{"docs":{},"容":{"docs":{},"忍":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"状":{"docs":{},"态":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"对":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"状":{"docs":{},"态":{"docs":{},"（":{"docs":{},"比":{"docs":{},"如":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"大":{"docs":{},"小":{"docs":{},"、":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"等":{"docs":{},"）":{"docs":{},"的":{"docs":{},"改":{"docs":{},"变":{"docs":{},"都":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"锁":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"复":{"docs":{},"制":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"用":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"链":{"docs":{},"接":{"docs":{},"起":{"docs":{},"来":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"复":{"docs":{},"制":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}},"反":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"不":{"docs":{},"能":{"docs":{},"直":{"docs":{},"接":{"docs":{},"写":{"docs":{},"成":{"docs":{},"\"":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"那":{"docs":{},"样":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"把":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"传":{"docs":{},"过":{"docs":{},"去":{"docs":{},"了":{"docs":{},"，":{"docs":{},"然":{"docs":{},"而":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"下":{"docs":{},"面":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"中":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"之":{"docs":{},"前":{"docs":{},"加":{"docs":{},"入":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"中":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"也":{"docs":{},"会":{"docs":{},"跟":{"docs":{},"着":{"docs":{},"改":{"docs":{},"变":{"docs":{},"。":{"docs":{},"应":{"docs":{},"该":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"来":{"docs":{},"承":{"docs":{},"载":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"分":{"docs":{},"界":{"docs":{},"点":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"也":{"docs":{},"表":{"docs":{},"示":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"*":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"=":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}}},":":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.012539184952978056},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.007194244604316547},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.020689655172413793},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.017391304347826087},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010050251256281407},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.008522727272727272}}},"=":{"0":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.07755102040816327},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.030303030303030304},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.04},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.03571428571428571},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.05281090289608177},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.05747126436781609},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.04807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.03194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.0759493670886076},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.06060606060606061},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.061371841155234655},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.04938271604938271},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.034013605442176874},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.022263450834879406},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.019157088122605363},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.03943661971830986},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.03508771929824561},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.05394190871369295},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.041379310344827586},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.044534412955465584},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.03430531732418525},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.06493506493506493},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.07878787878787878},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.046762589928057555},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.04608294930875576},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.06896551724137931},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.08974358974358974},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.07228915662650602},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.045454545454545456},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.04938271604938271},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.06666666666666667},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.043478260869565216},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.09401709401709402},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.028708133971291867},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.07407407407407407},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.09090909090909091},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.11728395061728394},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.05128205128205128},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.06796116504854369},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.09836065573770492},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.08529411764705883},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.08196721311475409},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.06870229007633588},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.047619047619047616},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.06060606060606061},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.026595744680851064},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.021052631578947368},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.05084745762711865},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.04093567251461988},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.02564102564102564},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.03296703296703297},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.06896551724137931},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.07307692307692308},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.05555555555555555},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.04132231404958678},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.08064516129032258},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.10625},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.04918032786885246},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.056179775280898875},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.10112359550561797},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.018867924528301886},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.03125},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.06741573033707865},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02127659574468085},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.06993006993006994},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.029411764705882353},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.06504065040650407},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.08040201005025126},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.057803468208092484},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.05527638190954774},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.0423728813559322},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.03773584905660377},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.044444444444444446},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.04854368932038835},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0273972602739726},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.02830188679245283},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.023255813953488372},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.048295454545454544},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.03636363636363636},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.05803571428571429},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.07352941176470588},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.03636363636363636},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.09689922480620156},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.046153846153846156}},"=":{"0":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.012244897959183673},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.01192504258943782},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.008359456635318705},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.025974025974025976},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.01818181818181818},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.03597122302158273},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.028985507246376812},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.04827586206896552},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.07228915662650602},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.01818181818181818},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.043209876543209874},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.02608695652173913},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.03571428571428571},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.03418803418803419},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.04784688995215311},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.03636363636363636},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.009259259259259259},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.06666666666666667},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.02564102564102564},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.038834951456310676},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.04918032786885246},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.03235294117647059},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.06557377049180328},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.022900763358778626},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.020202020202020204},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.06779661016949153},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.023391812865497075},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0641025641025641},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.06896551724137931},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.03076923076923077},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.037037037037037035},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.049586776859504134},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.01875},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.09090909090909091},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.04918032786885246},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.033707865168539325},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.02247191011235955},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.05660377358490566},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.029197080291970802},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.041666666666666664},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.033707865168539325},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.06382978723404255},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.027972027972027972},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0392156862745098},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.032520325203252036},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.03015075376884422},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.023121387283236993},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.02512562814070352},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.009433962264150943},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.03333333333333333},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.019417475728155338},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.02054794520547945},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.018867924528301886},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.03278688524590164},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.02556818181818182},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.013392857142857142},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.02727272727272727},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.023255813953488372},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}}}},">":{"1":{"docs":{"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},"2":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.011764705882352941},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.018867924528301886},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.03278688524590164},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},"3":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.011764705882352941},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.018867924528301886},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.03278688524590164},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182}}},"4":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.01764705882352941},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.04918032786885246},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.008522727272727272}},",":{"docs":{"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}},"5":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},"。":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705}}},"，":{"docs":{},"删":{"docs":{},"除":{"docs":{},"值":{"docs":{},"为":{"3":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"为":{"1":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}},"docs":{}}}}}}}}}},"docs":{}}},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"为":{"1":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}},"docs":{}}}}}}}}}}}}},",":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},".":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}},"6":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182}}},"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.022535211267605635},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.014035087719298246},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.012145748987854251},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.01818181818181818},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.03015075376884422},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01694915254237288},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}},"=":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.018433179723502304},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.024691358024691357},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},">":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}},">":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.009404388714733543}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}},"\\":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.09836065573770492},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.018867924528301886},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.021897810218978103},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.03125},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.033707865168539325},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.03546099290780142},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986}},"u":{"0":{"0":{"0":{"0":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"docs":{}},"7":{"docs":{},"f":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"docs":{}},"docs":{}},"docs":{}}},"a":{"1":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}},",":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}},"2":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}},",":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}},"docs":{},"r":{"docs":{},"r":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}},"a":{"docs":{},"y":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"JianZhiOffer/Array/":{"ref":"JianZhiOffer/Array/","tf":10},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.02912621359223301},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":2.0242424242424244},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":2.0089285714285716},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":1.2549019607843137},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":1.687179487179487}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":10.01923076923077},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.05128205128205128},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.04938271604938271}},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"动":{"docs":{},"态":{"docs":{},"数":{"docs":{},"组":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"支":{"docs":{},"持":{"docs":{},"随":{"docs":{},"机":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.01818181818181818},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.020202020202020204},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.017543859649122806},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.03305785123966942},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0375},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.018867924528301886},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.019417475728155338},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}},"p":{"docs":{},"q":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}}}}}}},"。":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}},"s":{"docs":{},",":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"e":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"先":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"此":{"docs":{},"队":{"docs":{},"列":{"docs":{},"创":{"docs":{},"建":{"docs":{},"时":{"docs":{},"必":{"docs":{},"须":{"docs":{},"指":{"docs":{},"定":{"docs":{},"大":{"docs":{},"小":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"5":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}},"docs":{}}}}}}}}}}}}}}}}},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121}}}}},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121}},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"在":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678}}}}}}},",":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}},"?":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}},".":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}},"”":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}}},"g":{"docs":{},"s":{"docs":{},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.014842300556586271},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.011267605633802818},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.010526315789473684},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.012448132780082987},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.008097165991902834}}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"=":{"1":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"docs":{}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}},"e":{"docs":{},"a":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}},"b":{"docs":{},"c":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.022321428571428572},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145}},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.005747126436781609},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}},"e":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.006072874493927126}}},"o":{"docs":{},"v":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}},"c":{"1":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},"2":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},".":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}},"docs":{}}}}}}},"docs":{},"c":{"docs":{},"_":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},";":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}},"u":{"docs":{},"r":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"1":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"docs":{}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}},"：":{"docs":{},"把":{"docs":{},"一":{"docs":{},"个":{"docs":{},"从":{"docs":{},"执":{"docs":{},"行":{"docs":{},"引":{"docs":{},"擎":{"docs":{},"接":{"docs":{},"收":{"docs":{},"到":{"docs":{},"的":{"docs":{},"值":{"docs":{},"赋":{"docs":{},"给":{"docs":{},"工":{"docs":{},"作":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525}}}}},"u":{"docs":{},"m":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01694915254237288},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}},",":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.013392857142857142}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},")":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}},"i":{"docs":{},"v":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}},"'":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}},".":{"docs":{},"x":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145}}}},"y":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}},"d":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},"d":{"1":{"0":{"0":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"docs":{}},"docs":{}},"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":2.5050251256281406}},"(":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}},")":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"l":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425}}}},")":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}},",":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.006224066390041493}},"/":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"/":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},",":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.010121457489878543}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}},"，":{"docs":{},"才":{"docs":{},"将":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"那":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},"b":{"docs":{},"判":{"docs":{},"断":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.025380710659898477}}}},"。":{"docs":{},"当":{"docs":{},"需":{"docs":{},"要":{"docs":{},"找":{"docs":{},"出":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"时":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"题":{"docs":{},"目":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}},"l":{"docs":{},"i":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}},"u":{"docs":{},"x":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.018433179723502304}},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}},"[":{"docs":{},"i":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}},"j":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}},"]":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}},"i":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}},"+":{"1":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}},"docs":{}},"，":{"docs":{},"则":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}},")":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}},".":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}},"j":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}},"：":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.010638297872340425}}},"n":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.01937984496124031}},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.023121387283236993},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},".":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}},";":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"将":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"z":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}},"x":{"docs":{},"i":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}}}}}},"c":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.018867924528301886},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.02912621359223301}},"a":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.012779552715654952},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.010121457489878543},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.04568527918781726}},"c":{"docs":{},"h":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"docs":{}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"2":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"3":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"4":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"docs":{}}}}}},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"；":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.010526315789473684},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.01037344398340249},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"(":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"p":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"a":{"docs":{},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.009404388714733543}}}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}},"e":{"docs":{},"r":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},".":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"y":{"docs":{},";":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}},"i":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.020100502512562814}}}}},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}},"h":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.016129032258064516}},"a":{"docs":{},"r":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.016129032258064516}},"/":{"1":{"6":{"docs":{},"位":{"docs":{},"/":{"2":{"docs":{},"字":{"docs":{},"节":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"docs":{}}}},"docs":{}},"docs":{}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":1.6666666666666665},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}},".":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}}}},"[":{"2":{"5":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655}}}}},"docs":{}},"docs":{}},"docs":{},"]":{"docs":{"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"s":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"u":{"docs":{},"s":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616}}}}}},"u":{"docs":{},"m":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}},"i":{"docs":{},"d":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.01532567049808429}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010050251256281407},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":3.388278388278388},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.019801980198019802}},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}},"e":{"docs":{},";":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.05172413793103448},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":10.012779552715655},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.027210884353741496}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.015228426395939087}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.017543859649122806}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616}},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"r":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},")":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},"）":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"代":{"docs":{},"码":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"何":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"中":{"docs":{},"断":{"docs":{},"它":{"docs":{},"，":{"docs":{},"转":{"docs":{},"而":{"docs":{},"去":{"docs":{},"执":{"docs":{},"行":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"段":{"docs":{},"代":{"docs":{},"码":{"docs":{},"（":{"docs":{},"包":{"docs":{},"括":{"docs":{},"递":{"docs":{},"归":{"docs":{},"调":{"docs":{},"用":{"docs":{},"它":{"docs":{},"本":{"docs":{},"身":{"docs":{},"）":{"docs":{},"，":{"docs":{},"而":{"docs":{},"在":{"docs":{},"控":{"docs":{},"制":{"docs":{},"权":{"docs":{},"返":{"docs":{},"回":{"docs":{},"后":{"docs":{},"，":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"不":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"任":{"docs":{},"何":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}},"x":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}},"u":{"docs":{},"t":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}},".":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"*":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":2.006849315068493},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}},"docs":{}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":2.533333333333333}}}}}},"l":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.06557377049180328},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.022900763358778626}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.034482758620689655},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"s":{"docs":{},")":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}}},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.02158273381294964},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.03333333333333333},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":5.024390243902439}},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},".":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.03333333333333333}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.01037344398340249},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.013793103448275862}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931}}}}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"+":{"docs":{},"+":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}},";":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666}}},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"将":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"位":{"docs":{},"移":{"docs":{},"出":{"docs":{},"继":{"docs":{},"续":{"docs":{},"判":{"docs":{},"断":{"docs":{},"余":{"docs":{},"下":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}}}}}}}}}}}}},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":10.050632911392405},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}},"i":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.00686106346483705}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0210727969348659}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.007662835249042145}}}}}},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}},"，":{"docs":{},"则":{"docs":{},"每":{"docs":{},"来":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"会":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"将":{"docs":{},"其":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"当":{"docs":{},"中":{"docs":{},"，":{"docs":{},"若":{"docs":{},"添":{"docs":{},"加":{"docs":{},"成":{"docs":{},"功":{"docs":{},"，":{"docs":{},"则":{"docs":{},"该":{"docs":{},"任":{"docs":{},"务":{"docs":{},"会":{"docs":{},"等":{"docs":{},"待":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"线":{"docs":{},"程":{"docs":{},"将":{"docs":{},"其":{"docs":{},"取":{"docs":{},"出":{"docs":{},"去":{"docs":{},"执":{"docs":{},"行":{"docs":{},"；":{"docs":{},"若":{"docs":{},"添":{"docs":{},"加":{"docs":{},"失":{"docs":{},"败":{"docs":{},"（":{"docs":{},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"是":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"已":{"docs":{},"满":{"docs":{},"）":{"docs":{},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"创":{"docs":{},"建":{"docs":{},"新":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"去":{"docs":{},"执":{"docs":{},"行":{"docs":{},"这":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"去":{"docs":{},"执":{"docs":{},"行":{"docs":{},"这":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"核":{"docs":{},"心":{"docs":{},"池":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"跟":{"docs":{},"后":{"docs":{},"面":{"docs":{},"讲":{"docs":{},"述":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{},"有":{"docs":{},"非":{"docs":{},"常":{"docs":{},"大":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{},"在":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"后":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"等":{"docs":{},"待":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"到":{"docs":{},"来":{"docs":{},"才":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"去":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"允":{"docs":{},"许":{"docs":{},"为":{"docs":{},"核":{"docs":{},"心":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"设":{"docs":{},"置":{"docs":{},"存":{"docs":{},"活":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"核":{"docs":{},"心":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"时":{"docs":{},"间":{"docs":{},"超":{"docs":{},"过":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.011655011655011656},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.024},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.022321428571428572},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.013628620102214651},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.02681992337164751},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.012987012987012988},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.008450704225352112},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.017543859649122806},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.022821576763485476},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.008097165991902834},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.005145797598627788},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"简":{"docs":{},"化":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"但":{"docs":{},"会":{"docs":{},"大":{"docs":{},"大":{"docs":{},"降":{"docs":{},"低":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839}},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.017035775127768313},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"，":{"docs":{},"其":{"docs":{},"它":{"docs":{},"类":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"直":{"docs":{},"接":{"docs":{},"去":{"docs":{},"调":{"docs":{},"用":{"docs":{},"该":{"docs":{},"类":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"或":{"docs":{},"者":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"来":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.01192504258943782}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"e":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.017035775127768313}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}},"d":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.018518518518518517}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839}},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.012345679012345678}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.012345679012345678}},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.009259259259259259}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839}}}}}}}}},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.009259259259259259}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.035398230088495575},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.023255813953488372}},",":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}},"n":{"docs":{},"t":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.01839080459770115},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.01037344398340249}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}},",":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}}}}}}}}},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"操":{"docs":{},"作":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"1":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.02459016393442623}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}}}}}},";":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}},"2":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.02459016393442623}},")":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}}}}}},";":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}},"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.02727272727272727},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.033950617283950615},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.02564102564102564},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.041176470588235294},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.02564102564102564},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.02197802197802198},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.03125},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.056179775280898875},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010050251256281407},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.019886363636363636}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.009259259259259259},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010050251256281407},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182}},";":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.024691358024691357},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.008823529411764706},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.008522727272727272}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}},")":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}},";":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082}}}}}}}},",":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"正":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}},",":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}},"m":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.01485148514851485}}}}}},"d":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.014150943396226415}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}},"e":{"docs":{},"r":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"。":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"先":{"docs":{},"在":{"docs":{},"长":{"docs":{},"链":{"docs":{},"表":{"docs":{},"上":{"docs":{},"走":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}}}}}}}}}}}}},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}},"x":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.0423728813559322},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0273972602739726},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.019801980198019802}},".":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"3":{"2":{"docs":{},"位":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}},"docs":{}},"docs":{}}}}}}}}}}},"，":{"docs":{},"用":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}},"s":{"docs":{},")":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}},")":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}}}}},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"选":{"docs":{},"取":{"docs":{},"的":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.030303030303030304}},"e":{"docs":{},"/":{"6":{"4":{"docs":{},"位":{"docs":{},"/":{"8":{"docs":{},"字":{"docs":{},"节":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"docs":{}}}},"docs":{}},"docs":{}}},"i":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}}}},"g":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.072}},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}}}}}},"b":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}},")":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}}}}}}},"@":{"4":{"5":{"5":{"4":{"6":{"1":{"7":{"docs":{},"c":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.024}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"4":{"docs":{},"a":{"1":{"4":{"4":{"8":{"2":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"c":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}}}}}}}},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"b":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.02097902097902098}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.020202020202020204}},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.020202020202020204}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.020202020202020204}}}}}}}}}}}}}},"保":{"docs":{},"存":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{},"在":{"docs":{},"存":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"已":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"否":{"docs":{},"小":{"docs":{},"于":{"docs":{},"待":{"docs":{},"存":{"docs":{},"入":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"已":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"小":{"docs":{},"于":{"docs":{},"待":{"docs":{},"存":{"docs":{},"入":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"这":{"docs":{},"些":{"docs":{},"数":{"docs":{},"字":{"docs":{},"已":{"docs":{},"经":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"它":{"docs":{},"们":{"docs":{},"会":{"docs":{},"依":{"docs":{},"次":{"docs":{},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"删":{"docs":{},"除":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}}},"u":{"docs":{},"p":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":2.006060606060606},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":1.6820512820512818}}}}}},"e":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182}}}}}}}},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"JianZhiOffer/Dynamic Programming/":{"ref":"JianZhiOffer/Dynamic Programming/","tf":5}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}},"p":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}},"[":{"0":{"docs":{},"]":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}},"docs":{},"n":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.023809523809523808}},"]":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.023809523809523808}}}},"i":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}},"]":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},":":{"docs":{},")":{"docs":{},"和":{"docs":{},"p":{"docs":{},"(":{"docs":{},"j":{"docs":{},":":{"docs":{},")":{"docs":{},"是":{"docs":{},"否":{"docs":{},"匹":{"docs":{},"配":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}}}},",":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},"[":{"docs":{},"p":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}},"我":{"docs":{},"们":{"docs":{},"先":{"docs":{},"来":{"docs":{},"分":{"docs":{},"析":{"docs":{},"跳":{"docs":{},"上":{"2":{"docs":{},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"总":{"docs":{},"共":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"种":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"2":{"docs":{},"次":{"docs":{},"，":{"1":{"docs":{},"次":{"docs":{},"跳":{"1":{"docs":{},"级":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"一":{"docs":{},"次":{"docs":{},"跳":{"2":{"docs":{},"级":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"有":{"2":{"docs":{},"种":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{},"假":{"docs":{},"设":{"docs":{},"跳":{"docs":{},"上":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}},",":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}},"n":{"docs":{},",":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"n":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}},"e":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"备":{"docs":{},"注":{"docs":{},"：":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"尽":{"docs":{},"管":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"两":{"docs":{},"重":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"最":{"docs":{},"多":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"交":{"docs":{},"换":{"docs":{},"和":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"就":{"docs":{},"能":{"docs":{},"找":{"docs":{},"到":{"docs":{},"其":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"总":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"着":{"docs":{},"递":{"docs":{},"归":{"docs":{},"得":{"docs":{},"在":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"继":{"docs":{},"续":{"docs":{},"判":{"docs":{},"断":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.014354066985645933},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.02564102564102564},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.020833333333333332},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.028368794326241134},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}},"；":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"让":{"docs":{},"它":{"docs":{},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"维":{"docs":{},"护":{"docs":{},"的":{"docs":{},"是":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"当":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"u":{"docs":{},"r":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}},"s":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.043689320388349516},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.03773584905660377}},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}},")":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}},"，":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.012244897959183673},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.011655011655011656},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.010221465076660987},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.03194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.0379746835443038},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.012539184952978056},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.027210884353741496},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.019157088122605363},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.012448132780082987},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.020689655172413793},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.006072874493927126},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.02564102564102564},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024096385542168676},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"它":{"docs":{},"不":{"docs":{},"可":{"docs":{},"被":{"docs":{},"继":{"docs":{},"承":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}},"这":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"子":{"docs":{},"类":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"基":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}},"被":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":10.003831417624522}}}}}}}}},"d":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":1.2549019607843137},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"o":{"docs":{},"f":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.01818181818181818},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.01818181818181818},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":1.2549019607843137},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":2.5},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.015384615384615385}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996}}},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"，":{"docs":{},"在":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}},",":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.014354066985645933}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.024193548387096774}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}},"：":{"docs":{},"所":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"只":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"固":{"docs":{},"定":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"；":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.023809523809523808}}}}},"n":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.023809523809523808}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}},"l":{"docs":{},"l":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.019801980198019802}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}},",":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"/":{"3":{"2":{"docs":{},"位":{"docs":{},"/":{"4":{"docs":{},"字":{"docs":{},"节":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"docs":{}}}},"docs":{}},"docs":{}}}}},"a":{"docs":{},"g":{"docs":{},"s":{"docs":{},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"k":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996}},"e":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.01037344398340249}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}}}}},"u":{"docs":{},"r":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.009433962264150943}},".":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"n":{"docs":{},"d":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}}}}}}}}},"u":{"docs":{},"n":{"3":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}},"docs":{},"c":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428}}},"{":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145}}}}}},"2":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}},"{":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}},"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}},")":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}}}}}}},")":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.008450704225352112}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.01818181818181818},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.015384615384615385}},",":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}}},"(":{"docs":{},")":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.006224066390041493}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.016597510373443983}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"m":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"t":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"h":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.006269592476489028}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"i":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.027586206896551724},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.018518518518518517},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.024390243902439025},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.013392857142857142},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.0196078431372549}},"g":{"docs":{},"h":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}},"；":{"docs":{},"当":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}},")":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.03125},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.008522727272727272}},";":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}},"]":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"给":{"docs":{},"a":{"docs":{},"u":{"docs":{},"x":{"docs":{},"，":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"用":{"docs":{},"来":{"docs":{},"承":{"docs":{},"载":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}}}}},"，":{"docs":{},"l":{"docs":{},"o":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}},"说":{"docs":{},"明":{"docs":{},"当":{"docs":{},"前":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}},";":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0073145245559038665}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":10.009404388714733},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"因":{"docs":{},"此":{"docs":{},"具":{"docs":{},"有":{"docs":{},"和":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.008517887563884156},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.034482758620689655},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"支":{"docs":{},"持":{"docs":{},"快":{"docs":{},"速":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"有":{"docs":{},"序":{"docs":{},"性":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{},"失":{"docs":{},"去":{"docs":{},"了":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"e":{"docs":{},"：":{"docs":{},"和":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}},"。":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.009584664536741214}}},"y":{"docs":{},"[":{"docs":{},"]":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835}}}}}}}}}},"docs":{}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}}}},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"：":{"docs":{},"表":{"docs":{},"示":{"docs":{},"当":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"处":{"docs":{},"理":{"docs":{},"任":{"docs":{},"务":{"docs":{},"时":{"docs":{},"的":{"docs":{},"策":{"docs":{},"略":{"docs":{},"，":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"四":{"docs":{},"种":{"docs":{},"取":{"docs":{},"值":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"y":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"则":{"docs":{},"经":{"docs":{},"过":{"docs":{},"替":{"docs":{},"换":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"为":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.013392857142857142}}}},"a":{"docs":{},"d":{"1":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}},",":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082}}},";":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.02459016393442623}}}},"2":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.02459016393442623}},")":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082}}},";":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.02459016393442623}}}},"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.03636363636363636},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.008823529411764706},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182}},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.01818181818181818},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.009259259259259259},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.03636363636363636},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.009259259259259259},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.019417475728155338},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.023529411764705882},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},".":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.02727272727272727},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705}},";":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}}}}}},",":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.02564102564102564},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}},"。":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}},"s":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835}}}}}}}}}},"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}}}},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.007751937984496124}},")":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.011627906976744186}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.015503875968992248}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}},"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}},"。":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},"求":{"docs":{},"出":{"docs":{},"。":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}},"j":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"]":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}},";":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.007751937984496124}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.007751937984496124}}},"时":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"当":{"docs":{},"前":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"蓄":{"docs":{},"水":{"docs":{},"量":{"docs":{},"取":{"docs":{},"决":{"docs":{},"于":{"docs":{},"右":{"docs":{},"边":{"docs":{},"，":{"docs":{},"同":{"docs":{},"理":{"docs":{},"进":{"docs":{},"行":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939}}}}}}},"w":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}}}}}},"i":{"docs":{},")":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"n":{"docs":{},"t":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.0326530612244898},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.03125},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.02555366269165247},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.038314176245210725},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.019230769230769232},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.03514376996805112},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.02531645569620253},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0219435736677116},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.017241379310344827},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.02074688796680498},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.022988505747126436},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.010121457489878543},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.005145797598627788},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.04242424242424243},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.030303030303030304},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.04316546762589928},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.03225806451612903},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.041379310344827586},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.038461538461538464},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024096385542168676},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.07272727272727272},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.05555555555555555},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.08333333333333333},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.043478260869565216},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.03571428571428571},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.03418803418803419},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.02564102564102564},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.02459016393442623},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.08196721311475409},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.03816793893129771},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.02127659574468085},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.03389830508474576},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.03508771929824561},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.02197802197802198},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.015384615384615385},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.016129032258064516},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.056179775280898875},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.018867924528301886},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0364963503649635},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.041666666666666664},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.058823529411764705},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.032520325203252036},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.02512562814070352},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.03468208092485549},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.03015075376884422},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.03389830508474576},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.014150943396226415},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.023255813953488372},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.011363636363636364},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.026785714285714284},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.049019607843137254},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.01818181818181818},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.03488372093023256},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.015384615384615385}},",":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"/":{"3":{"2":{"docs":{},"位":{"docs":{},"/":{"4":{"docs":{},"字":{"docs":{},"节":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"docs":{}}}},"docs":{}},"docs":{}},"e":{"docs":{},"g":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.04081632653061224},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":3.3587570621468923},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":3.333333333333333},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.036585365853658534},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"e":{"docs":{},"r":{"docs":{},"(":{"1":{"2":{"3":{"docs":{},")":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}},",":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}}}}},"docs":{}},"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}}}}},"docs":{}},".":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01694915254237288}},"e":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}},",":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"来":{"docs":{},"了":{"docs":{},"任":{"docs":{},"务":{"docs":{},"就":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"当":{"docs":{},"线":{"docs":{},"程":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"超":{"docs":{},"过":{"6":{"0":{"docs":{},"秒":{"docs":{},"，":{"docs":{},"就":{"docs":{},"销":{"docs":{},"毁":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"1":{"2":{"3":{"docs":{},")":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.012244897959183673}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"[":{"docs":{},"(":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}},".":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}},",":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}}}},"r":{"docs":{},"n":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"(":{"docs":{},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"?":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856}},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.00927643784786642},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.006224066390041493},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"提":{"docs":{},"前":{"docs":{},"结":{"docs":{},"束":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"不":{"docs":{},"执":{"docs":{},"行":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"语":{"docs":{},"句":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"中":{"docs":{},"断":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}},"因":{"docs":{},"为":{"docs":{},"异":{"docs":{},"常":{"docs":{},"不":{"docs":{},"能":{"docs":{},"跨":{"docs":{},"线":{"docs":{},"程":{"docs":{},"传":{"docs":{},"播":{"docs":{},"回":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}},"e":{"docs":{},"$":{"docs":{},"$":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"$":{"1":{"docs":{},"/":{"7":{"1":{"3":{"3":{"3":{"8":{"5":{"9":{"9":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"$":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"$":{"0":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"5":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0074211502782931356},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"[":{"1":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}}}},"docs":{}},"2":{"5":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}},"docs":{}},"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}},"docs":{},"]":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.02564102564102564},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024096385542168676},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.017391304347826087},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.007751937984496124}},"{":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745}},"}":{"docs":{},";":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684}}}},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.013824884792626729}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428}}}},"c":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.005145797598627788},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},",":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.016129032258064516}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.019157088122605363}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.007194244604316547},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.018433179723502304},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.017391304347826087},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.008928571428571428}},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.017391304347826087}},")":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}},"+":{"1":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}},"docs":{},"+":{"docs":{},";":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},";":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"其":{"docs":{},"在":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"后":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"i":{"docs":{},"c":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}},",":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.022222222222222223},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.01818181818181818},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.015384615384615385}},":":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.017341040462427744},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.025423728813559324},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.02358490566037736},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.022222222222222223},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.04424778761061947},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.008928571428571428},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.024390243902439025},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.02727272727272727},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}},"t":{"docs":{},".":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"e":{"docs":{},"r":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"m":{"docs":{},";":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}}},"d":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}},")":{"docs":{},".":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}},"m":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"m":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"9":{"docs":{},")":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996}}}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}},"s":{"docs":{},"s":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"!":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}},"e":{"1":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},"2":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},".":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}},"docs":{}}}}}}},"docs":{}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"0":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}},"docs":{}},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02247191011235955}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}},";":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02247191011235955}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622}}}}},"docs":{}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.014354066985645933}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.015384615384615385},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.02097902097902098}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02127659574468085}},";":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}},":":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}}}},"s":{"docs":{},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{},"k":{"docs":{},"u":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"o":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"还":{"docs":{},"未":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}},"对":{"docs":{},"所":{"docs":{},"有":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}},"从":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}},"]":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"累":{"docs":{},"加":{"docs":{},"的":{"docs":{},"和":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}}}}}}}}}},"\"":{"docs":{},"。":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}},"f":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}}}}}}}},":":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}},";":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}},",":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.009433962264150943},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}},"i":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":1.6666666666666665}},".":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.009433962264150943}}},"i":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},"i":{"docs":{},".":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}},"v":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},".":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"x":{"docs":{},".":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.01818181818181818}}}}}},"k":{"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"k":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"docs":{}}}}}}}}}}},"2":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}},"3":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.012244897959183673},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.008359456635318705},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.09090909090909091},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.10256410256410256},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.020202020202020204},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.09941520467836257},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.072992700729927},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":2.03125}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.01818181818181818},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.02564102564102564},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.029197080291970802}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.01818181818181818}}}},"e":{"docs":{},"y":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"。":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"得":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.008359456635318705},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"复":{"docs":{},"制":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}},"e":{"docs":{},",":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.007662835249042145}}}}}}}}}}},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"终":{"docs":{},"止":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"也":{"docs":{},"会":{"docs":{},"被":{"docs":{},"终":{"docs":{},"止":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}},"：":{"docs":{},"表":{"docs":{},"示":{"docs":{},"线":{"docs":{},"程":{"docs":{},"没":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"时":{"docs":{},"最":{"docs":{},"多":{"docs":{},"保":{"docs":{},"持":{"docs":{},"多":{"docs":{},"久":{"docs":{},"时":{"docs":{},"间":{"docs":{},"会":{"docs":{},"终":{"docs":{},"止":{"docs":{},"。":{"docs":{},"默":{"docs":{},"认":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"在":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"docs":{},"当":{"docs":{},"前":{"docs":{},"位":{"docs":{},"置":{"docs":{},"出":{"docs":{},"发":{"docs":{},"分":{"docs":{},"别":{"docs":{},"沿":{"docs":{},"左":{"docs":{},"，":{"docs":{},"右":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"地":{"docs":{},"寻":{"docs":{},"找":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}},"继":{"docs":{},"续":{"docs":{},"在":{"docs":{},"前":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"中":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"寻":{"docs":{},"找":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}},"由":{"docs":{},"于":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}},"说":{"docs":{},"明":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"第":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}}},"第":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.014598540145985401}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.014598540145985401}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}}}}}}},"l":{"1":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},",":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}},"2":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},")":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},";":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}},"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.014150943396226415}},"o":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.027586206896551724},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.04938271604938271},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.024390243902439025},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.022321428571428572},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.0196078431372549}},"n":{"docs":{},"g":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.009584664536741214},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}},"/":{"6":{"4":{"docs":{},"位":{"docs":{},"/":{"8":{"docs":{},"字":{"docs":{},"节":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"docs":{}}}},"docs":{}},"docs":{}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.02040816326530612}},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}},"，":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":1.6724470134874758},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":2.5050251256281406},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":2.511111111111111}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},")":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.005145797598627788}},"s":{"docs":{},"=":{"2":{"docs":{},",":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"docs":{}}},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"与":{"docs":{},"适":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}},"k":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.005633802816901409},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.010526315789473684},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.015228426395939087}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.008450704225352112}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}},".":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.005633802816901409}}}}}}}}}}}}}}}}},"d":{"docs":{},"）":{"docs":{},"和":{"docs":{},"重":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"）":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"作":{"docs":{},"用":{"docs":{},"于":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"把":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"标":{"docs":{},"识":{"docs":{},"为":{"docs":{},"一":{"docs":{},"条":{"docs":{},"线":{"docs":{},"程":{"docs":{},"独":{"docs":{},"占":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"_":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"、":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"、":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"、":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}},"：":{"docs":{},"在":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182}}},")":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}},"d":{"docs":{},"c":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010050251256281407},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.02830188679245283},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":10.025270758122744}},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"来":{"docs":{},"维":{"docs":{},"护":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"为":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"或":{"docs":{},"者":{"docs":{},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"少":{"docs":{},"使":{"docs":{},"用":{"docs":{},"（":{"docs":{},"l":{"docs":{},"r":{"docs":{},"u":{"docs":{},"）":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.018050541516245487}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"：":{"docs":{},"具":{"docs":{},"有":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":10.051282051282051},"JianZhiOffer/LinkedList/":{"ref":"JianZhiOffer/LinkedList/","tf":10}},"：":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"它":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{},"或":{"docs":{},"双":{"docs":{},"向":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}},"基":{"docs":{},"于":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"快":{"docs":{},"速":{"docs":{},"地":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"间":{"docs":{},"插":{"docs":{},"入":{"docs":{},"和":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"如":{"docs":{},"此":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"先":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"创":{"docs":{},"建":{"docs":{},"时":{"docs":{},"没":{"docs":{},"有":{"docs":{},"指":{"docs":{},"定":{"docs":{},"此":{"docs":{},"队":{"docs":{},"列":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"则":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.07692307692307693}},"s":{"docs":{},",":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}},"s":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.06172839506172839},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.01818181818181818},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.020202020202020204},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.017543859649122806},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.049586776859504134},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.01875},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.02054794520547945},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":1.6855345911949684},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":2.0327868852459017},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.03488372093023256},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":2.0142045454545454}},".":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},">":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.01875},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02830188679245283},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.019417475728155338}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.06363636363636363},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.1},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.038461538461538464},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.038834951456310676},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.06557377049180328},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.03823529411764706},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.03015075376884422},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.018867924528301886},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.04918032786885246},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.045454545454545456}},"e":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"整":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"用":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182}}}}},"1":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}},"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}},",":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}},":":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}},"s":{"docs":{},".":{"docs":{"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.011363636363636364}}}}}}}}},")":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.014204545454545454}}},",":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{},";":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}},"”":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.02727272727272727},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":1.2598039215686274}},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996}}},")":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}},"}":{"docs":{},";":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839}}}}}}},"e":{"docs":{},"n":{"1":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}},")":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}},"，":{"docs":{},"短":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}}}}}}}},"2":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"差":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}}}}}}}}}},"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.02531645569620253},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.023121387283236993},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.01818181818181818},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.015384615384615385}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.011560693641618497}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.01818181818181818},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.015384615384615385}}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}},")":{"docs":{},"]":{"docs":{},")":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"f":{"docs":{},"t":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.011538461538461539},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.033707865168539325},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.011627906976744186}},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}},"，":{"docs":{},"取":{"docs":{},"余":{"docs":{},"下":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"作":{"docs":{},"为":{"docs":{},"子":{"docs":{},"串":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}}}},",":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.027131782945736434}},")":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},"[":{"0":{"docs":{},"]":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}},"docs":{}},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"累":{"docs":{},"加":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}},"更":{"docs":{},"新":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418},"LeetCode/":{"ref":"LeetCode/","tf":11}}}}}}},"a":{"docs":{},"d":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}},"v":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":2.0136986301369864}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}},"x":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.021660649819494584}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}},"缓":{"docs":{},"存":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}},",":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"m":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.025974025974025976},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0784313725490196},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.11594202898550725},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.014150943396226415}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},",":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"[":{"docs":{},"i":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"1":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}},"docs":{}},"f":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"JianZhiOffer/Matrix/":{"ref":"JianZhiOffer/Matrix/","tf":10}},",":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}}},";":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}}}},"docs":{}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}},";":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}}}}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"能":{"docs":{},"够":{"docs":{},"构":{"docs":{},"成":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"继":{"docs":{},"续":{"docs":{},"从":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"出":{"docs":{},"发":{"docs":{},"分":{"docs":{},"别":{"docs":{},"沿":{"docs":{},"着":{"docs":{},"上":{"docs":{},"、":{"docs":{},"下":{"docs":{},"、":{"docs":{},"左":{"docs":{},"、":{"docs":{},"右":{"4":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{},"继":{"docs":{},"续":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"路":{"docs":{},"径":{"docs":{},"中":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"不":{"docs":{},"能":{"docs":{},"构":{"docs":{},"成":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}}}}}},"x":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.007662835249042145}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.007662835249042145}}}}}}},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"采":{"docs":{},"取":{"docs":{},"任":{"docs":{},"务":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"策":{"docs":{},"略":{"docs":{},"进":{"docs":{},"行":{"docs":{},"处":{"docs":{},"理":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"还":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"到":{"docs":{},"来":{"docs":{},"就":{"docs":{},"会":{"docs":{},"采":{"docs":{},"取":{"docs":{},"任":{"docs":{},"务":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"策":{"docs":{},"略":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"四":{"docs":{},"种":{"docs":{},"策":{"docs":{},"略":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"最":{"docs":{},"大":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"非":{"docs":{},"常":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"它":{"docs":{},"表":{"docs":{},"示":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"最":{"docs":{},"多":{"docs":{},"能":{"docs":{},"创":{"docs":{},"建":{"docs":{},"多":{"docs":{},"少":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292}},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"，":{"docs":{},"向":{"docs":{},"右":{"docs":{},"求":{"docs":{},"出":{"docs":{},"右":{"docs":{},"边":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"位":{"docs":{},"置":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}},"{":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}}}}}}}}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425}}}}}}}}},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}}}},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"使":{"docs":{},"较":{"docs":{},"短":{"docs":{},"的":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}},"(":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.014842300556586271},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.011267605633802818},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.010526315789473684},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.012448132780082987},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.008097165991902834}}}}}}}}}},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}},"p":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.06896551724137931},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.01417004048582996},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.017152658662092625},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.01079136690647482},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.012345679012345678},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.06896551724137931},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.016129032258064516},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.032520325203252036},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.017341040462427744},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.007751937984496124}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}},"y":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"k":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"2":{"docs":{},"\"":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"3":{"docs":{},"\"":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"docs":{}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"j":{"docs":{},")":{"docs":{},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}},"将":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"复":{"docs":{},"制":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"步":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"步":{"docs":{},"，":{"docs":{},"复":{"docs":{},"制":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"用":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"里":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"用":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"法":{"docs":{},"做":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"求":{"docs":{},"返":{"docs":{},"回":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"会":{"docs":{},"打":{"docs":{},"乱":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"里":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"合":{"docs":{},"适":{"docs":{},"。":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"或":{"docs":{},"多":{"docs":{},"或":{"docs":{},"少":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"锁":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}},"故":{"docs":{},"需":{"docs":{},"保":{"docs":{},"证":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"那":{"docs":{},"就":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"写":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"该":{"docs":{},"方":{"docs":{},"案":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"键":{"docs":{},"是":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"找":{"docs":{},"到":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.018867924528301886},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}},"s":{"docs":{},"k":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.006269592476489028}},"+":{"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{}}}},"r":{"docs":{},"k":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.04060913705583756}}},"c":{"docs":{},"o":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.014388489208633094}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"JianZhiOffer/Bit Manipulation/":{"ref":"JianZhiOffer/Bit Manipulation/","tf":5}}}}}}},"d":{"docs":{},"e":{"docs":{"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"r":{"docs":{},"g":{"docs":{"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":2.0163934426229506},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":2.0056818181818183}},"e":{"docs":{},"(":{"docs":{},"l":{"1":{"docs":{},",":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}},"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.008522727272727272}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}},"e":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}},";":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}},"i":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},":":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"!":{"docs":{},"!":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}},"v":{"docs":{},"e":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.014423076923076924}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.014423076923076924}},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425}}},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425}}}}}}}}}},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.016129032258064516}}}}}}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}},"d":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.018433179723502304},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.018518518518518517},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.020833333333333332},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.0196078431372549}},")":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"7":{"docs":{},"放":{"docs":{},"到":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}},"docs":{}}}}}}}},"！":{"docs":{},"为":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"应":{"docs":{},"该":{"docs":{},"采":{"docs":{},"用":{"docs":{},"更":{"docs":{},"为":{"docs":{},"科":{"docs":{},"学":{"docs":{},"的":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.008928571428571428}}},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"相":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"无":{"docs":{},"法":{"docs":{},"判":{"docs":{},"断":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"属":{"docs":{},"于":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"还":{"docs":{},"是":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"找":{"docs":{},"到":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":2.5090909090909093}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"c":{"docs":{},"h":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"数":{"docs":{},"量":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}},"小":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}},"c":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}},"t":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}},"y":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}},"2":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}},"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}},",":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}},";":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}},"n":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"分":{"docs":{},"别":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}}},".":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"n":{"1":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425}},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}},"2":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425}},"m":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.015957446808510637}},"+":{"1":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}},"docs":{}}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.018808777429467086},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.025974025974025976},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.058823529411764705},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.039568345323741004},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.028985507246376812},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.01818181818181818},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.03333333333333333},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.017391304347826087},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.10714285714285714},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.014563106796116505},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.04395604395604396},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.019230769230769232},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.01507537688442211},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.03296703296703297},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.019417475728155338},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.08490566037735849},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.046511627906976744},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.04878048780487805},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.03333333333333333},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.03571428571428571},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.03296703296703297},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693}}},".":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}},"e":{"docs":{},"w":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.024489795918367346},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.018648018648018648},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.024},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.02385008517887564},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.022988505747126436},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.006269592476489028},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.037037037037037035},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.016697588126159554},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.01532567049808429},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.01971830985915493},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.021052631578947368},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.014522821576763486},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.016091954022988506},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.022267206477732792},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.025974025974025976},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.01818181818181818},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.017391304347826087},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.009259259259259259},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.047619047619047616},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.030303030303030304},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.021052631578947368},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.029239766081871343},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.015384615384615385},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.049586776859504134},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.05625},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02830188679245283},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.024390243902439025},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.01507537688442211},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.011560693641618497},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.019417475728155338},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.02054794520547945},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.03278688524590164},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.017045454545454544},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.014705882352941176},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.007751937984496124},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"]":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"e":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}},";":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}}}}}}},"x":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.05454545454545454},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.05588235294117647},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.033707865168539325}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.026470588235294117},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}},";":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}},";":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}},"，":{"docs":{},"让":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}},"p":{"docs":{},"o":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}},"s":{"docs":{},";":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}},"g":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}}}},"f":{"docs":{},"e":{"docs":{},")":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0073145245559038665},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.00686106346483705},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.014388489208633094},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024096385542168676},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.01818181818181818},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.02564102564102564},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.019417475728155338},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.040983606557377046},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.011764705882352941},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.03389830508474576},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.015384615384615385},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.018867924528301886},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.014598540145985401},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02127659574468085},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.020100502512562814},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.011560693641618497},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.008522727272727272},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.011627906976744186},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},")":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.006072874493927126},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.008576329331046312},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.05555555555555555},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.02727272727272727},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.06666666666666667},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.024271844660194174},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.026470588235294117},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0375},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.05454545454545454},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.033707865168539325},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.033707865168539325},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.018867924528301886},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.0449438202247191},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.028368794326241134},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.020100502512562814},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.03278688524590164},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.014204545454545454}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"，":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.01818181818181818},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.021604938271604937},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.019417475728155338},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.020588235294117647},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.02247191011235955},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.02247191011235955},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.014204545454545454}}},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"典":{"docs":{},"型":{"docs":{},"用":{"docs":{},"法":{"docs":{},"中":{"docs":{},"常":{"docs":{},"常":{"docs":{},"重":{"docs":{},"载":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"上":{"docs":{},"例":{"docs":{},"中":{"docs":{},"即":{"docs":{},"在":{"docs":{},"内":{"docs":{},"部":{"docs":{},"匿":{"docs":{},"名":{"docs":{},"类":{"docs":{},"中":{"docs":{},"将":{"docs":{},"其":{"docs":{},"重":{"docs":{},"载":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}},"，":{"docs":{},"从":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"而":{"docs":{},"使":{"docs":{},"得":{"docs":{},"该":{"docs":{},"值":{"docs":{},"可":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"会":{"docs":{},"在":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}},"则":{"docs":{},"先":{"docs":{},"创":{"docs":{},"建":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525}}}}}},"直":{"docs":{},"接":{"docs":{},"将":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"通":{"docs":{},"过":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"设":{"docs":{},"置":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},"说":{"docs":{},"明":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"只":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},"和":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"完":{"docs":{},"全":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"就":{"docs":{},"算":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"返":{"docs":{},"回":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}},"这":{"docs":{},"说":{"docs":{},"明":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}}},"借":{"docs":{},"由":{"docs":{},"上":{"docs":{},"一":{"docs":{},"条":{"docs":{},"语":{"docs":{},"句":{"docs":{},"知":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}},"docs":{}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},"和":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"即":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"已":{"docs":{},"经":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"了":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"；":{"docs":{},"当":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}}}},"m":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.02877697841726619},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.02564102564102564},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.017391304347826087},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.07142857142857142},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.015957446808510637},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.02912621359223301},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.03636363636363636},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.008928571428571428},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.024509803921568627},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.03076923076923077}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":2.5150753768844223},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.014150943396226415},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":2.006849315068493}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}},"。":{"docs":{},"例":{"docs":{},"如":{"6":{"docs":{},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}},"docs":{}}}},"o":{"docs":{},"f":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.03333333333333333}}}}}}},"docs":{}}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"从":{"1":{"docs":{},"到":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}},"docs":{}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}},"s":{"docs":{},")":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.017985611510791366},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.027586206896551724},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.02608695652173913},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.02158273381294964},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.034482758620689655},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.01818181818181818},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.018518518518518517},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.017543859649122806},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.020833333333333332},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.024390243902439025},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.013392857142857142},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.014705882352941176},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},";":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.007194244604316547}}},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}}}}},",":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.01818181818181818},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}},";":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.01079136690647482},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096}}}},",":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}},"1":{"docs":{},"]":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}},"docs":{},"n":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}},"i":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.018433179723502304}}}}}},"]":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.03636363636363636}},"}":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}},")":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}},";":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{},")":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}},";":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678}}}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.020202020202020204}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"]":{"docs":{},";":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}}}},"从":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"值":{"docs":{},"为":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}},"就":{"docs":{},"地":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"保":{"docs":{},"证":{"docs":{},"新":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"至":{"docs":{},"多":{"docs":{},"出":{"docs":{},"现":{"2":{"docs":{},"次":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"否":{"docs":{},"大":{"docs":{},"于":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},";":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.02608695652173913}}},")":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684}}},",":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}},"e":{"docs":{},"r":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.014150943396226415}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.009433962264150943}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}}},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.024}}}}},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.010221465076660987}}}}}},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123},"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},",":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}},"e":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"：":{"docs":{},"给":{"docs":{},"出":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"大":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"若":{"docs":{},"数":{"docs":{},"组":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"请":{"docs":{},"返":{"docs":{},"回":{"0":{"docs":{},"。":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}},"docs":{}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}},":":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}},"n":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010050251256281407},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},"d":{"docs":{},"e":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.15384615384615385},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.10112359550561797},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":1.6855345911949684},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}},"_":{"docs":{},"v":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}},";":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}},"v":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"令":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"即":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"/":{"docs":{},"m":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"平":{"docs":{},"均":{"docs":{},"查":{"docs":{},"找":{"docs":{},"次":{"docs":{},"数":{"docs":{},"的":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"函":{"docs":{},"数":{"docs":{},"满":{"docs":{},"足":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"性":{"docs":{},"的":{"docs":{},"要":{"docs":{},"求":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"每":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"大":{"docs":{},"约":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"根":{"docs":{},"据":{"docs":{},"下":{"docs":{},"标":{"docs":{},"来":{"docs":{},"重":{"docs":{},"排":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"从":{"docs":{},"头":{"docs":{},"到":{"docs":{},"尾":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"当":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"到":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"请":{"docs":{},"你":{"docs":{},"输":{"docs":{},"出":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"的":{"docs":{},"第":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"节":{"docs":{},"点":{"docs":{},"到":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}},"则":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"从":{"1":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}}},"docs":{}}}}}}}},"系":{"docs":{},"统":{"docs":{},"只":{"docs":{},"检":{"docs":{},"查":{"docs":{},"数":{"docs":{},"组":{"docs":{},"前":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":1.6666666666666665},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},")":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},",":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"n":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"示":{"docs":{},"中":{"docs":{},"最":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"1":{"docs":{},"变":{"docs":{},"成":{"0":{"docs":{},"”":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}},"m":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425}},"+":{"1":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425}}},"2":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}},"docs":{}}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}},",":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}},"]":{"docs":{},"，":{"docs":{},"即":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}},"p":{"1":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.026595744680851064},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.037037037037037035},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.01507537688442211}},",":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}}},"2":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.031914893617021274},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.020100502512562814}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"向":{"docs":{},"新":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"按":{"docs":{},"照":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"放":{"docs":{},"入":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"和":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}},"p":{"1":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}},"docs":{}}},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}}},"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.04784688995215311},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.019417475728155338},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010050251256281407},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}},"t":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.03597122302158273},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}},"s":{"docs":{},",":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.008522727272727272}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.02247191011235955}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.033707865168539325}}},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":3.333333333333333},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":3.333333333333333}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}},".":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}},"b":{"docs":{},"y":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}}}}}}}}}}}}}}},"?":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02830188679245283}},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02830188679245283}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":2.5050251256281406}}}}}}}}},"i":{"docs":{},"r":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.020442930153321975},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.022988505747126436},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.019230769230769232},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.027210884353741496},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.022988505747126436},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.017543859649122806},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.012448132780082987},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.00686106346483705},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.02564102564102564},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024096385542168676},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.017391304347826087},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.009259259259259259},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.016129032258064516},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.029197080291970802},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.02247191011235955},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.027972027972027972},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/","tf":2},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},"e":{"docs":{},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"堆":{"docs":{},"结":{"docs":{},"构":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"它":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"优":{"docs":{},"先":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.03296703296703297}}}}}}}}}}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"t":{"docs":{},"i":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"JianZhiOffer/Dynamic Programming/":{"ref":"JianZhiOffer/Dynamic Programming/","tf":5}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.008517887563884156},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}},"e":{"docs":{},"d":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}},"t":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},",":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}}}}}},"e":{"docs":{},"v":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.01818181818181818},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.029411764705882353},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.06741573033707865},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.018867924528301886}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},";":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.02247191011235955}}},",":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}},";":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"：":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"所":{"docs":{},"有":{"docs":{},"核":{"docs":{},"心":{"docs":{},"线":{"docs":{},"程":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"：":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"核":{"docs":{},"心":{"docs":{},"线":{"docs":{},"程":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549}}}}}}}}},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":2.522222222222222}},",":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":5}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.013986013986013986},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.032},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.049107142857142856},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.04088586030664395},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.05363984674329502},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.008359456635318705},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.024691358024691357},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.027210884353741496},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.03710575139146568},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.017241379310344827},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.03943661971830986},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0456140350877193},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.04149377593360996},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.027586206896551724},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.030364372469635626},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.005145797598627788},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.025974025974025976},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.014388489208633094},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.03333333333333333},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.03571428571428571},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.014354066985645933},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.01818181818181818},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.02564102564102564},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.008823529411764706},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.015957446808510637},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.031578947368421054},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.017543859649122806},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.03296703296703297},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.015384615384615385},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.037037037037037035},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.016129032258064516},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02247191011235955},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.056179775280898875},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.014598540145985401},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.011560693641618497},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.011363636363636364},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.011627906976744186},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"不":{"docs":{},"显":{"docs":{},"式":{"docs":{},"去":{"docs":{},"重":{"docs":{},"写":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"(":{"docs":{},"k":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},")":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"v":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"、":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}},"s":{"docs":{},"h":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.02631578947368421}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}}}}}}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.03496503496503497}},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"）":{"docs":{},"保":{"docs":{},"存":{"docs":{},"着":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"（":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"即":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"中":{"docs":{},"取":{"docs":{},"得":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"只":{"docs":{},"有":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":1.2549019607843137},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":2.5090909090909093}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}}}}}}}}},"p":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.015789473684210527},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684}}}},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}},"到":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"后":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"特":{"docs":{},"性":{"docs":{},"可":{"docs":{},"知":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"元":{"docs":{},"素":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"3":{"docs":{},"，":{"docs":{},"然":{"docs":{},"而":{"docs":{},"直":{"docs":{},"接":{"docs":{},"操":{"docs":{},"作":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.014354066985645933}},")":{"docs":{},";":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"e":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622}}}},"1":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}},"docs":{}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}},"2":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}},"docs":{}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}},"e":{"docs":{},"r":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471}}}}}}}}}}}}}}}},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"大":{"docs":{},"于":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"则":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"组":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"。":{"docs":{},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"求":{"docs":{},"出":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622}}},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"'":{"docs":{},"*":{"docs":{},"'":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"支":{"docs":{},"持":{"docs":{},".":{"docs":{},"和":{"docs":{},"*":{"docs":{},"的":{"docs":{},"正":{"docs":{},"则":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"模":{"docs":{},"式":{"docs":{},"中":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},".":{"docs":{},"表":{"docs":{},"示":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"而":{"docs":{},"*":{"docs":{},"表":{"docs":{},"示":{"docs":{},"它":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"可":{"docs":{},"以":{"docs":{},"出":{"docs":{},"现":{"docs":{},"任":{"docs":{},"意":{"docs":{},"次":{"docs":{},"（":{"docs":{},"含":{"0":{"docs":{},"次":{"docs":{},"）":{"docs":{},"。":{"docs":{},"在":{"docs":{},"本":{"docs":{},"题":{"docs":{},"中":{"docs":{},"，":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"是":{"docs":{},"指":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"整":{"docs":{},"个":{"docs":{},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"与":{"docs":{},"模":{"docs":{},"式":{"docs":{},"\"":{"docs":{},"a":{"docs":{},".":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"和":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"b":{"docs":{},"*":{"docs":{},"a":{"docs":{},"c":{"docs":{},"*":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"但":{"docs":{},"与":{"docs":{},"“":{"docs":{},"a":{"docs":{},"a":{"docs":{},".":{"docs":{},"a":{"docs":{},"”":{"docs":{},"和":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"b":{"docs":{},"*":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"均":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839}}},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":2}}}}}},"q":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.014150943396226415},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}},")":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}},"r":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}},":":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.018518518518518517}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.06172839506172839}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}},"若":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}},"i":{"docs":{},"n":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":2.503875968992248}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}},"e":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.01532567049808429}},"e":{"docs":{},"”":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}},",":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}},".":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.013628620102214651},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.02531645569620253},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.018808777429467086},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.024691358024691357},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.005747126436781609},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.008097165991902834},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.00686106346483705},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.03896103896103896},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.03237410071942446},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.018433179723502304},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.02727272727272727},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.030864197530864196},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.03333333333333333},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.034782608695652174},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.03571428571428571},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.03827751196172249},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.03636363636363636},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.015432098765432098},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.06666666666666667},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.024271844660194174},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.03278688524590164},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.020588235294117647},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.03278688524590164},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.020202020202020204},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.015957446808510637},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.015789473684210527},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.023391812865497075},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.02564102564102564},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.04230769230769231},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.037037037037037035},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.03305785123966942},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.10909090909090909},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.06741573033707865},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.02247191011235955},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.018867924528301886},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.051094890510948905},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.041666666666666664},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.02247191011235955},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.04964539007092199},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.04195804195804196},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.029411764705882353},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.032520325203252036},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.01507537688442211},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.017341040462427744},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.020100502512562814},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01694915254237288},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.044444444444444446},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.02054794520547945},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.018867924528301886},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.04918032786885246},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.036931818181818184},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.04242424242424243},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.013392857142857142},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.029411764705882353},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.015503875968992248},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.046153846153846156}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}},"r":{"docs":{},"i":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.012779552715654952}},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}},")":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.01192504258943782},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.006224066390041493},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.018867924528301886},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.017341040462427744},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.05084745762711865},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}},".":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"y":{"docs":{},"]":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}}}}}}}}},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}}}},")":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}},";":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02830188679245283},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}},"[":{"0":{"docs":{},"]":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}},"1":{"docs":{},"]":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}},"docs":{}},"。":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"2":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":1.6855345911949684},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":2.006060606060606},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":1.6769230769230767}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}},")":{"docs":{},"，":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"出":{"docs":{},"现":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.036585365853658534}},"y":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"、":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"、":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"、":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"、":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"、":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"、":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"把":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"值":{"docs":{},"从":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"传":{"docs":{},"输":{"docs":{},"到":{"docs":{},"工":{"docs":{},"作":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.022535211267605635}},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},"，":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"与":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.015228426395939087}},")":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"）":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"处":{"docs":{},"理":{"docs":{},"方":{"docs":{},"式":{"docs":{},"的":{"docs":{},"广":{"docs":{},"泛":{"docs":{},"应":{"docs":{},"用":{"docs":{},"使":{"docs":{},"得":{"docs":{},"很":{"docs":{},"多":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525}}},"y":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"。":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.02197802197802198},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.007751937984496124}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":1.6724470134874758}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.01485148514851485}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":3.350282485875706}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.01818181818181818}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693}},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}},",":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0074211502782931356}}}}},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.01855287569573284},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.005747126436781609},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0074211502782931356},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996}},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"从":{"docs":{},"字":{"docs":{},"面":{"docs":{},"意":{"docs":{},"思":{"docs":{},"可":{"docs":{},"以":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"传":{"docs":{},"进":{"docs":{},"去":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.006224066390041493}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}},"e":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}},".":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.016091954022988506}},"s":{"docs":{},".":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}},":":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.015384615384615385},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02247191011235955},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.011627906976744186}},"，":{"docs":{},"将":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}},"判":{"docs":{},"断":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}},")":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}},";":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}},".":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.023255813953488372}},")":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},"[":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}},"i":{"docs":{},"]":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}},")":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}},"，":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.03278688524590164},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}}},"+":{"docs":{},"+":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{},"数":{"docs":{},"字":{"docs":{},"大":{"docs":{},"于":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082}}}}}}}}}}}}},"o":{"docs":{},"t":{"1":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}},",":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.014184397163120567}}},"和":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{},"同":{"docs":{},"时":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"才":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"或":{"docs":{},"者":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"值":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"都":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"2":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.028368794326241134}},")":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02127659574468085}},";":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.014184397163120567}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.014184397163120567}}}}}}}},"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.014184397163120567},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}},")":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.033707865168539325},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.02247191011235955},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},"{":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}},";":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},";":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"加":{"docs":{},"入":{"docs":{},"到":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.018867924528301886},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.014598540145985401},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}},";":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.014598540145985401},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.033707865168539325},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}},"e":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}}}},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":3.352201257861635}},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":2.0044642857142856}}}}}}},"s":{"1":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}}}}}}}}}},",":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939}}},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}},"，":{"docs":{},"设":{"docs":{},"置":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}},"2":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}},")":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},",":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939}}}},"3":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}},")":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939}}},";":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}},"4":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}},")":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"5":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"6":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},")":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.01818181818181818},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.03827751196172249},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},"/":{"1":{"6":{"docs":{},"位":{"docs":{},"/":{"2":{"docs":{},"字":{"docs":{},"节":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"docs":{}}}},"docs":{}},"docs":{}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.005747126436781609}},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.007662835249042145}},"：":{"docs":{},"不":{"docs":{},"会":{"docs":{},"立":{"docs":{},"即":{"docs":{},"终":{"docs":{},"止":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"要":{"docs":{},"等":{"docs":{},"所":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"都":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"后":{"docs":{},"才":{"docs":{},"终":{"docs":{},"止":{"docs":{},"，":{"docs":{},"但":{"docs":{},"再":{"docs":{},"也":{"docs":{},"不":{"docs":{},"会":{"docs":{},"接":{"docs":{},"受":{"docs":{},"新":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.005747126436781609}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}},"：":{"docs":{},"立":{"docs":{},"即":{"docs":{},"终":{"docs":{},"止":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"并":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"打":{"docs":{},"断":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"清":{"docs":{},"空":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"尚":{"docs":{},"未":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096}},"z":{"docs":{},"e":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.012779552715654952},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"]":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"(":{"docs":{},")":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},"+":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}},"docs":{}}}}}}}}}}}}}}}}}}},";":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}}}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}},"操":{"docs":{},"作":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},")":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.020202020202020204}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"将":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"：":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"n":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01694915254237288}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}},"x":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},".":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}},"中":{"docs":{},"，":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}},"2":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.02631578947368421},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}},"docs":{}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}}}},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}},"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.05128205128205128},"JianZhiOffer/Stack & Queue & PriorityQueue/":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/","tf":2},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.047619047619047616},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.03389830508474576},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}},":":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}},"=":{"3":{"docs":{},",":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"docs":{}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.047619047619047616},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}}}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.07142857142857142}},"，":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"记":{"docs":{},"录":{"docs":{},"当":{"docs":{},"前":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"。":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"元":{"docs":{},"素":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"刚":{"docs":{},"好":{"docs":{},"是":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"直":{"docs":{},"接":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"。":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"把":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"压":{"docs":{},"入":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"把":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"需":{"docs":{},"要":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"了":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"没":{"docs":{},"有":{"docs":{},"找":{"docs":{},"到":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"需":{"docs":{},"要":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"该":{"docs":{},"序":{"docs":{},"列":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.02040816326530612},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.032},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.07662835249042145},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.01597444089456869},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.01855287569573284},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.017241379310344827},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.014084507042253521},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.010526315789473684},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.01867219917012448},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.008097165991902834},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.02564102564102564},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024096385542168676},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}},"修":{"docs":{},"饰":{"docs":{},"。":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"结":{"docs":{},"束":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"所":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}},"r":{"docs":{},"t":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.030534351145038167},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.01507537688442211},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}},";":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.030534351145038167}}},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693}}}},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}},";":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}}}}}},"r":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.025974025974025976},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":10.102564102564102},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.024},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.04060913705583756},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.05194805194805195},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.019138755980861243},"JianZhiOffer/String/":{"ref":"JianZhiOffer/String/","tf":10},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.05},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.037037037037037035},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.020100502512562814},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.03333333333333333},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.04424778761061947},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}}}}},"b":{"docs":{},"c":{"docs":{},"\"":{"docs":{},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},",":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.009324009324009324},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"l":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"s":{"docs":{},"）":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"期":{"docs":{},"就":{"docs":{},"确":{"docs":{},"定":{"docs":{},"。":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"如":{"docs":{},"此":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.022222222222222223}}}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}}}}}}}}}}}}}}},".":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}}}},"s":{"docs":{},")":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}},"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}},"j":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},")":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}}}}}}},")":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.037037037037037035},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},")":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.02564102564102564}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}},",":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"\"":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}}}},"e":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}},"：":{"docs":{},"把":{"docs":{},"工":{"docs":{},"作":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"值":{"docs":{},"传":{"docs":{},"送":{"docs":{},"到":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.005747126436781609}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"则":{"docs":{},"输":{"docs":{},"出":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},".":{"docs":{},"v":{"docs":{},"m":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"3":{"2":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}},"k":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}},"m":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.009584664536741214},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.01818181818181818},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":3.333333333333333},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.01507537688442211},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}},")":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"增":{"docs":{},"大":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121}}}}}},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"和":{"docs":{},"为":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}}},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"小":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}},"b":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.019801980198019802}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.005747126436781609}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}},"t":{"docs":{},"r":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":1.6724470134874758},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":2.5050251256281406}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}},".":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.009433962264150943}}}}}}}},"c":{"docs":{},"h":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.02197802197802198},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}},"d":{"docs":{},"o":{"docs":{},"k":{"docs":{},"u":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":3.353135313531353}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"m":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"x":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}},"z":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"s":{"1":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"3":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"5":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.024}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.032}}}}}}}}}}}}}}}}}}}}}}}}}},"\"":{"1":{"2":{"3":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}},"docs":{}},"docs":{}},"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"1":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428}}}}}},"2":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428}}}}}},"docs":{}}}}},"普":{"docs":{},"通":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514}}}}}}}},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}}}}}}}}}},"b":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}},"e":{"1":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"docs":{}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}}}}},"docs":{}}}}}}},"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}}}}}}}}}}}}}}},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.037037037037037035},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.036619718309859155},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.011494252873563218},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"，":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"而":{"docs":{},"且":{"1":{"docs":{},".":{"8":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"docs":{}}},"docs":{}},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"执":{"docs":{},"行":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}},"应":{"docs":{},"该":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"使":{"docs":{},"用":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.01971830985915493}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.014084507042253521}}}}}}}}}}}},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"：":{"docs":{},"这":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"比":{"docs":{},"较":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"，":{"docs":{},"它":{"docs":{},"不":{"docs":{},"会":{"docs":{},"保":{"docs":{},"存":{"docs":{},"提":{"docs":{},"交":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"将":{"docs":{},"直":{"docs":{},"接":{"docs":{},"新":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"新":{"docs":{},"来":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"排":{"docs":{},"队":{"docs":{},"策":{"docs":{},"略":{"docs":{},"与":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"有":{"docs":{},"关":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},"s":{"docs":{},":":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}}}}},"e":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.00686106346483705},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.028985507246376812},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.028901734104046242},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.019417475728155338},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.01485148514851485},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"docs":{}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"：":{"docs":{},"设":{"docs":{},"置":{"docs":{},"核":{"docs":{},"心":{"docs":{},"池":{"docs":{},"大":{"docs":{},"小":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}},"：":{"docs":{},"设":{"docs":{},"置":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"最":{"docs":{},"大":{"docs":{},"能":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"目":{"docs":{},"大":{"docs":{},"小":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"t":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}},"g":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.03514376996805112}},"[":{"docs":{},"]":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}},"s":{"docs":{},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"，":{"docs":{},"它":{"docs":{},"继":{"docs":{},"承":{"docs":{},"自":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.008298755186721992},"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"JianZhiOffer/Binary Search/":{"ref":"JianZhiOffer/Binary Search/","tf":5},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":2}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}},".":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.009433962264150943},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.036585365853658534}},"e":{"docs":{},".":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}}}}}}}},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.011560693641618497},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}},".":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693}}},";":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693}}}},"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693}}}}},"i":{"docs":{},",":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}}}}}}},"o":{"docs":{},"w":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.05339805825242718},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.02830188679245283}},")":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.019417475728155338},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}}}}},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}}},"r":{"docs":{},"t":{"docs":{"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":2.0163934426229506},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":2.008522727272727},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":2.006060606060606},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":2.0044642857142856},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":1.2549019607843137},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":1.6769230769230767}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"）":{"docs":{},"。":{"docs":{},"c":{"docs":{},"a":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}}}}}},"z":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525}},")":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"b":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.016129032258064516},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}},"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}}}}}},"\"":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.011538461538461539}},"$":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}},",":{"docs":{},"\"":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}},"$":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693}}}},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}},"c":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}}}}}}},"，":{"docs":{},"很":{"docs":{},"快":{"docs":{},"就":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"它":{"docs":{},"的":{"docs":{},"动":{"docs":{},"态":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"被":{"docs":{},"限":{"docs":{},"制":{"docs":{},"在":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}},")":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.02097902097902098}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.03636363636363636}},";":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}}}},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"多":{"docs":{},"对":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"和":{"docs":{},"等":{"docs":{},"于":{"docs":{},"s":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"对":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"和":{"docs":{},"正":{"docs":{},"好":{"docs":{},"是":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}}}},"则":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}},"通":{"docs":{},"过":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}},"docs":{}}}}}}},"j":{"docs":{},"]":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.011560693641618497}},"不":{"docs":{},"在":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}},"j":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}},",":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.019138755980861243},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}},"(":{"docs":{},"i":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}},")":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}},",":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}},"j":{"docs":{},")":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}},"t":{"1":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}},"2":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}},"，":{"docs":{},"在":{"docs":{},"它":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"乘":{"docs":{},"以":{"2":{"docs":{},"都":{"docs":{},"小":{"docs":{},"于":{"docs":{},"已":{"docs":{},"有":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"，":{"docs":{},"而":{"docs":{},"它":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"乘":{"docs":{},"以":{"2":{"docs":{},"又":{"docs":{},"太":{"docs":{},"大":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"记":{"docs":{},"录":{"docs":{},"这":{"docs":{},"个":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"并":{"docs":{},"且":{"docs":{},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"求":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"时":{"docs":{},"更":{"docs":{},"新":{"docs":{},"这":{"docs":{},"个":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.008097165991902834},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.012006861063464836},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.051094890510948905}},"r":{"docs":{},"i":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.014035087719298246},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.01037344398340249},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}},"s":{"docs":{},".":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}}}}}}},"u":{"docs":{},"e":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.012244897959183673},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.010221465076660987},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.02654867256637168},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}},"，":{"0":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"docs":{},"则":{"docs":{},"会":{"docs":{},"将":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"移":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"指":{"docs":{},"定":{"docs":{},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}},"开":{"docs":{},"启":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"需":{"docs":{},"要":{"docs":{},"继":{"docs":{},"承":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{},"并":{"docs":{},"且":{"docs":{},"算":{"docs":{},"法":{"docs":{},"结":{"docs":{},"束":{"docs":{},"后":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"放":{"docs":{},"置":{"docs":{},"了":{"docs":{},"它":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"个":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"下":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02247191011235955},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.014184397163120567},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}},"；":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"循":{"docs":{},"环":{"docs":{},"体":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}},"而":{"docs":{},"给":{"docs":{},"定":{"docs":{},"树":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"当":{"docs":{},"我":{"docs":{},"们":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"时":{"docs":{},"，":{"docs":{},"检":{"docs":{},"查":{"docs":{},"它":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"。":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{"JianZhiOffer/Tree/":{"ref":"JianZhiOffer/Tree/","tf":10}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"支":{"docs":{},"持":{"docs":{},"有":{"docs":{},"序":{"docs":{},"性":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"根":{"docs":{},"据":{"docs":{},"一":{"docs":{},"个":{"docs":{},"范":{"docs":{},"围":{"docs":{},"查":{"docs":{},"找":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"查":{"docs":{},"找":{"docs":{},"效":{"docs":{},"率":{"docs":{},"不":{"docs":{},"如":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.029197080291970802},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.02247191011235955},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.014184397163120567},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.02097902097902098},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.029411764705882353}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.01597444089456869},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.05128205128205128}}}}},"t":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"[":{"docs":{},"]":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"p":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":2.503875968992248}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.011627906976744186}}}}}}}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787}}},"i":{"docs":{},"c":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"h":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}},"e":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}},"i":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"x":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"z":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"y":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}},"i":{"docs":{},"z":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},";":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},",":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}}}}}}}}}}}}},"a":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"1":{"docs":{},",":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"）":{"docs":{},"与":{"docs":{},"目":{"docs":{},"标":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"添":{"docs":{},"加":{"docs":{},"进":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}},":":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}},"n":{"docs":{},"k":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}},"a":{"docs":{},"t":{"docs":{},".":{"docs":{},"x":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"y":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"z":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"n":{"docs":{},"k":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.01192504258943782},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.008298755186721992},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},",":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}}}}}}},"a":{"docs":{},"d":{"1":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}}}}}}}}}}}},"2":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.008097165991902834}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}}}}}}}}}}}},"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.03525046382189239},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.010526315789473684},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.013793103448275862},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.016194331983805668},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.03773584905660377}},"(":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.008097165991902834}}}}},".":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"1":{"0":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"docs":{}},"docs":{}},"docs":{}},"2":{"0":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}}},"docs":{}},"docs":{}},"docs":{}},"3":{"0":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0074211502782931356}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}}}}}}}},"y":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.005145797598627788}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"y":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},",":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"：":{"docs":{},"线":{"docs":{},"程":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"用":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0210727969348659}},"(":{"0":{"docs":{},",":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},"1":{"docs":{},",":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.007662835249042145}}}}},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},",":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"任":{"docs":{},"务":{"docs":{},"并":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"：":{"docs":{},"由":{"docs":{},"调":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"处":{"docs":{},"理":{"docs":{},"该":{"docs":{},"任":{"docs":{},"务":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"：":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"队":{"docs":{},"列":{"docs":{},"最":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"重":{"docs":{},"新":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"（":{"docs":{},"重":{"docs":{},"复":{"docs":{},"此":{"docs":{},"过":{"docs":{},"程":{"docs":{},"）":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"：":{"docs":{},"也":{"docs":{},"是":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"，":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"和":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"的":{"docs":{},"继":{"docs":{},"承":{"docs":{},"关":{"docs":{},"系":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"不":{"docs":{},"过":{"docs":{},"参":{"docs":{},"数":{"docs":{},"都":{"docs":{},"已":{"docs":{},"配":{"docs":{},"置":{"docs":{},"好":{"docs":{},"了":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.03643724696356275},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":10.080617495711836}},"a":{"docs":{},"l":{"1":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"docs":{}}}}}}},"2":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"docs":{}}}}}}},"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.006072874493927126}}}}},".":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"docs":{}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.006072874493927126}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"e":{"1":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},"docs":{}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.006072874493927126},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.032590051457975985}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"。":{"docs":{},"从":{"docs":{},"如":{"docs":{},"下":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"可":{"docs":{},"见":{"docs":{},"，":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}},"与":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"中":{"docs":{},"。":{"docs":{},"若":{"docs":{},"为":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"，":{"docs":{},"也":{"docs":{},"即":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"不":{"docs":{},"会":{"docs":{},"在":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"共":{"docs":{},"享":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"先":{"docs":{},"看":{"docs":{},"以":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}},"为":{"docs":{},"表":{"docs":{},"述":{"docs":{},"方":{"docs":{},"便":{"docs":{},"，":{"docs":{},"后":{"docs":{},"文":{"docs":{},"用":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}},"为":{"docs":{},"解":{"docs":{},"决":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"问":{"docs":{},"题":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"种":{"docs":{},"新":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"介":{"docs":{},"绍":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"解":{"docs":{},"决":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"资":{"docs":{},"源":{"docs":{},"时":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"问":{"docs":{},"题":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"，":{"docs":{},"值":{"docs":{},"是":{"docs":{},"它":{"docs":{},"在":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0074211502782931356}},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},",":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},",":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}}},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},",":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"m":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996}}}}}}}},"b":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}}}}},"p":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.01485148514851485}}}},"a":{"docs":{},"b":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"l":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526}},"e":{"docs":{},",":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"docs":{},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},")":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}}}}}}}},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}},"[":{"docs":{},"i":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"]":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},";":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"i":{"docs":{},"l":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"s":{"docs":{},"k":{"1":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}},"2":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}},"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996}}}},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996}}}}}},"g":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.03773584905660377},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.032520325203252036},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.022321428571428572},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.05392156862745098}},")":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.014705882352941176}},";":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745}}},"{":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745}}}},"，":{"docs":{},"移":{"docs":{},"动":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}},"则":{"docs":{},"该":{"docs":{},"数":{"docs":{},"字":{"docs":{},"所":{"docs":{},"在":{"docs":{},"列":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"大":{"docs":{},"于":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082}}}}}}}}}}},"行":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"都":{"docs":{},"小":{"docs":{},"于":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082}}}}}}}}}}}}}}}},"剔":{"docs":{},"除":{"docs":{},"该":{"docs":{},"列":{"docs":{},"，":{"docs":{},"即":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082}}}}},"行":{"docs":{},"，":{"docs":{},"即":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082}}}}}}}},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{},"数":{"docs":{},"字":{"docs":{},"小":{"docs":{},"于":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.03773584905660377}}},".":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}},"。":{"docs":{},"在":{"docs":{},"第":{"docs":{},"二":{"docs":{},"步":{"docs":{},"查":{"docs":{},"找":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.036585365853658534}},"i":{"docs":{},"n":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}}}}}},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}},"m":{"docs":{},"p":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.043478260869565216},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.01875},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}},"[":{"docs":{},"p":{"1":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}}}},"2":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}}}},"docs":{}}},"。":{"docs":{},"在":{"docs":{},"异":{"docs":{},"或":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"所":{"docs":{},"有":{"docs":{},"出":{"docs":{},"现":{"2":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"都":{"docs":{},"抵":{"docs":{},"消":{"docs":{},"掉":{"docs":{},"了":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"\"":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125}}}}}}}}}}}}}}}}},";":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}},")":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},";":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}},"w":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},".":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}}},"o":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":3.341463414634146},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":2.520100502512563},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.02197802197802198},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.009433962264150943},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":2.0327868852459017},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}}}},"v":{"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"docs":{}}}}}}}}}}},"2":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.014629049111807733},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.034013605442176874},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.008097165991902834},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.014150943396226415}},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},"u":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.02040816326530612},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.016317016317016316},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.005145797598627788},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.013392857142857142},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.005145797598627788}}},"[":{"docs":{},"]":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"}":{"docs":{},".":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"”":{"docs":{},"?":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.006072874493927126},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525}},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.008576329331046312}}}},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.008359456635318705},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},"）":{"docs":{},"；":{"docs":{},"第":{"docs":{},"二":{"docs":{},"步":{"docs":{},"，":{"docs":{},"设":{"docs":{},"置":{"docs":{},"复":{"docs":{},"制":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"=":{"docs":{},"{":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}},"[":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}}}},".":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}},"i":{"docs":{},"d":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":3.3421828908554567},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":3.348184818481848}},".":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}}}}},"r":{"1":{"docs":{},"+":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"2":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},"docs":{}}}}},",":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"2":{"docs":{},")":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},",":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}}}},"4":{"docs":{},")":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}},"5":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}},"+":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"4":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"docs":{}}}}},",":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"更":{"docs":{},"新":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{},"为":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}},"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525}},"e":{"docs":{},".":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},"s":{"docs":{},".":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"s":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.02197802197802198}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":10.037037037037036}},"：":{"docs":{},"和":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"同":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"完":{"docs":{},"全":{"docs":{},"可":{"docs":{},"以":{"docs":{},"由":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"自":{"docs":{},"己":{"docs":{},"来":{"docs":{},"控":{"docs":{},"制":{"docs":{},"；":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.04},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.03125},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.010221465076660987},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.022988505747126436},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.019230769230769232},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.018050541516245487},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.025974025974025976},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.030985915492957747},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.03508771929824561},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.016597510373443983},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.013793103448275862},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.01417004048582996},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.03296703296703297},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}},"，":{"docs":{},"参":{"docs":{},"数":{"docs":{},"为":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.01597444089456869},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.017241379310344827},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.02528735632183908}}}}}}}},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},")":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}}}},"s":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}},"、":{"docs":{},"旧":{"docs":{},"的":{"docs":{},"预":{"docs":{},"期":{"docs":{},"值":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}},"=":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"x":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0073145245559038665},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010050251256281407},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01694915254237288},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.018867924528301886}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218}}},",":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.009433962264150943}}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"y":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"z":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}},")":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}},"c":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}},"i":{"docs":{},"i":{"docs":{},",":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}},"x":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}},"v":{"docs":{},"i":{"docs":{},"i":{"docs":{},",":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}}}},"y":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010050251256281407}},")":{"docs":{},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218}}},",":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"z":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}},"%":{"docs":{},"x":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"&":{"docs":{},"(":{"docs":{},"x":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}},"z":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},",":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}},".":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}}}},".":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}},"{":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}},"3":{"docs":{},",":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.02040816326530612},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.011655011655011656},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.088},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.03125},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.03577512776831346},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.05363984674329502},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.028846153846153848},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.025559105431309903},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.06329113924050633},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.03239289446185998},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.04332129963898917},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.024691358024691357},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.04081632653061224},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.055658627087198514},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.01532567049808429},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.05352112676056338},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.08771929824561403},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.07468879668049792},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.034482758620689655},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.048582995951417005},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.02058319039451115},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.05194805194805195},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.01818181818181818},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.02877697841726619},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.03225806451612903},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.06206896551724138},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.038461538461538464},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024096385542168676},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.02727272727272727},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.04938271604938271},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.05},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.06086956521739131},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.03571428571428571},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.03827751196172249},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.07407407407407407},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.02727272727272727},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.05246913580246913},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.038461538461538464},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.024271844660194174},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.03278688524590164},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.05},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.04918032786885246},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.030534351145038167},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.047619047619047616},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.04040404040404041},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.05319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.08421052631578947},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.029239766081871343},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.04395604395604396},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.046153846153846156},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.037037037037037035},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.06611570247933884},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.03225806451612903},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.05},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.033707865168539325},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.06741573033707865},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02830188679245283},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.051094890510948905},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.020833333333333332},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.056179775280898875},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.014184397163120567},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.06993006993006994},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.01507537688442211},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.011560693641618497},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.03015075376884422},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01694915254237288},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.03333333333333333},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0273972602739726},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.046511627906976744},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.03977272727272727},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.022321428571428572},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.029411764705882353},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.03636363636363636},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.03875968992248062},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}},"@":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"}":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"}":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.0163265306122449},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.011655011655011656},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.08},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.03571428571428571},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.02555366269165247},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.06130268199233716},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.028846153846153848},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.06329113924050633},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.03343782654127482},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.04332129963898917},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.024691358024691357},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.04081632653061224},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.05194805194805195},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.01532567049808429},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.028169014084507043},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.08771929824561403},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.06016597510373444},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.034482758620689655},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.03643724696356275},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.02058319039451115},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.01015228426395939},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.03896103896103896},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.017985611510791366},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.03225806451612903},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.04827586206896552},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.02564102564102564},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.01818181818181818},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.037037037037037035},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.06666666666666667},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.06956521739130435},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.019138755980861243},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.07407407407407407},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.02727272727272727},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.05246913580246913},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.019417475728155338},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.02459016393442623},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.05},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.04580152671755725},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.06060606060606061},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.047872340425531915},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.08421052631578947},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.046153846153846156},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.03305785123966942},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.016129032258064516},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0375},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.033707865168539325},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.06741573033707865},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02830188679245283},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.051094890510948905},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.020833333333333332},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.056179775280898875},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.014184397163120567},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.06993006993006994},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.01507537688442211},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.017341040462427744},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.035175879396984924},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.05555555555555555},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.023255813953488372},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.03409090909090909},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.017857142857142856},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.049019607843137254},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.03636363636363636},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.03875968992248062},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.015384615384615385}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.008298755186721992},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.008097165991902834},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}},"与":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"。":{"docs":{},"与":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"中":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}},"，":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}},"#":{"1":{"9":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"docs":{}},"docs":{}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}},"然":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}},"从":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"一":{"docs":{},"步":{"docs":{},"是":{"docs":{},"很":{"docs":{},"费":{"docs":{},"时":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"本":{"docs":{},"地":{"docs":{},"进":{"docs":{},"行":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"其":{"docs":{},"它":{"docs":{},"异":{"docs":{},"常":{"docs":{},"也":{"docs":{},"同":{"docs":{},"样":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"本":{"docs":{},"地":{"docs":{},"进":{"docs":{},"行":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"反":{"docs":{},"转":{"docs":{},"会":{"docs":{},"修":{"docs":{},"改":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}},"从":{"docs":{},"而":{"docs":{},"保":{"docs":{},"证":{"docs":{},"经":{"docs":{},"常":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"容":{"docs":{},"易":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"回":{"docs":{},"收":{"docs":{},"掉":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"不":{"docs":{},"经":{"docs":{},"常":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"不":{"docs":{},"提":{"docs":{},"倡":{"docs":{},"我":{"docs":{},"们":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}},"在":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"在":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"把":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"它":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"值":{"docs":{},"加":{"docs":{},"入":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"x":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}},"一":{"docs":{},"共":{"docs":{},"存":{"docs":{},"在":{"5":{"docs":{},"个":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}},"docs":{}}}}},"将":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}}},"再":{"docs":{},"从":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}},"我":{"docs":{},"们":{"docs":{},"遍":{"docs":{},"历":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}},"继":{"docs":{},"续":{"docs":{},"移":{"docs":{},"动":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}},"此":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"以":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}}}},"规":{"docs":{},"则":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"我":{"docs":{},"们":{"docs":{},"希":{"docs":{},"望":{"docs":{},"将":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"当":{"docs":{},"成":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"只":{"docs":{},"在":{"docs":{},"集":{"docs":{},"合":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"然":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"映":{"docs":{},"射":{"docs":{},"已":{"docs":{},"经":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"就":{"docs":{},"直":{"docs":{},"接":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"且":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}}}}}},"在":{"docs":{},"函":{"docs":{},"数":{"docs":{},"回":{"docs":{},"退":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"记":{"docs":{},"得":{"docs":{},"在":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"指":{"docs":{},"向":{"docs":{},"这":{"docs":{},"个":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"在":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"和":{"docs":{},"该":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"值":{"docs":{},"相":{"docs":{},"等":{"docs":{},"（":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"这":{"docs":{},"个":{"docs":{},"新":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}},"映":{"docs":{},"射":{"docs":{},"，":{"docs":{},"而":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"结":{"docs":{},"束":{"docs":{},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"清":{"docs":{},"除":{"docs":{},"该":{"docs":{},"映":{"docs":{},"射":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"就":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"1":{"docs":{},",":{"2":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}},"docs":{}},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}},"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"作":{"docs":{},"为":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}},"元":{"docs":{},"素":{"docs":{},"次":{"docs":{},"序":{"docs":{},"是":{"docs":{},"不":{"docs":{},"变":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"都":{"docs":{},"放":{"docs":{},"入":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}},"数":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"我":{"docs":{},"们":{"docs":{},"向":{"docs":{},"右":{"docs":{},"移":{"docs":{},"动":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}},"锁":{"docs":{},"是":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"的":{"docs":{},"，":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"较":{"docs":{},"小":{"docs":{},"者":{"docs":{},"作":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"递":{"docs":{},"归":{"docs":{},"构":{"docs":{},"造":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"置":{"docs":{},"为":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}},"某":{"docs":{},"个":{"docs":{},"子":{"docs":{},"树":{"docs":{},"完":{"docs":{},"全":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"树":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}},"思":{"docs":{},"想":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"每":{"docs":{},"次":{"docs":{},"对":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}},"路":{"docs":{},"，":{"docs":{},"设":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"当":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"会":{"docs":{},"不":{"docs":{},"断":{"docs":{},"优":{"docs":{},"化":{"docs":{},"和":{"docs":{},"完":{"docs":{},"善":{"docs":{},"。":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"数":{"docs":{},"组":{"docs":{},"容":{"docs":{},"量":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"由":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"去":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"器":{"docs":{},"回":{"docs":{},"收":{"docs":{},")":{"docs":{},"。":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"启":{"docs":{},"动":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"后":{"docs":{},"再":{"docs":{},"中":{"docs":{},"断":{"docs":{},"它":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}},"声":{"docs":{},"明":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"方":{"docs":{},"法":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"在":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"另":{"docs":{},"外":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"几":{"docs":{},"个":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"对":{"docs":{},"其":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"写":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"也":{"docs":{},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"向":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"提":{"docs":{},"交":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"它":{"docs":{},"和":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"了":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"取":{"docs":{},"出":{"docs":{},"值":{"docs":{},"即":{"docs":{},"为":{"docs":{},"所":{"docs":{},"需":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"本":{"docs":{},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"映":{"docs":{},"射":{"docs":{},"均":{"docs":{},"删":{"docs":{},"除":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"引":{"docs":{},"起":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"。":{"docs":{},"（":{"docs":{},"后":{"docs":{},"面":{"docs":{},"会":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"避":{"docs":{},"免":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"）":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"找":{"docs":{},"出":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"该":{"docs":{},"方":{"docs":{},"案":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}},"到":{"docs":{},"了":{"docs":{},"和":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}},"和":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"副":{"docs":{},"本":{"docs":{},"（":{"docs":{},"实":{"docs":{},"际":{"docs":{},"是":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"后":{"docs":{},"文":{"docs":{},"会":{"docs":{},"详":{"docs":{},"细":{"docs":{},"阐":{"docs":{},"述":{"docs":{},"）":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"有":{"docs":{},"几":{"docs":{},"点":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"入":{"docs":{},"了":{"docs":{},"自":{"docs":{},"适":{"docs":{},"应":{"docs":{},"的":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"自":{"docs":{},"适":{"docs":{},"应":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"不":{"docs":{},"再":{"docs":{},"固":{"docs":{},"定":{"docs":{},"了":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"由":{"docs":{},"前":{"docs":{},"一":{"docs":{},"次":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"上":{"docs":{},"的":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"次":{"docs":{},"数":{"docs":{},"及":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"者":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"来":{"docs":{},"决":{"docs":{},"定":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"那":{"docs":{},"样":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"即":{"docs":{},"使":{"docs":{},"是":{"docs":{},"非":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"都":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"求":{"docs":{},"余":{"docs":{},"和":{"docs":{},"除":{"docs":{},"法":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"效":{"docs":{},"率":{"docs":{},"很":{"docs":{},"低":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"事":{"docs":{},"先":{"docs":{},"求":{"docs":{},"出":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}}}},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666}}}},"包":{"docs":{},"含":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}},"*":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"还":{"docs":{},"和":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}},"余":{"docs":{},"下":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"和":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622}}}}}}}},"去":{"docs":{},"掉":{"1":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}},"docs":{}}},"（":{"docs":{},"原":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}},"时":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"有":{"docs":{},"环":{"docs":{},"并":{"docs":{},"且":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}}}}}}}},"；":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"时":{"docs":{},"，":{"docs":{},"原":{"docs":{},"栈":{"docs":{},"和":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"一":{"docs":{},"个":{"docs":{},"未":{"docs":{},"空":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"元":{"docs":{},"素":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"那":{"docs":{},"个":{"docs":{},"非":{"docs":{},"空":{"docs":{},"的":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"。":{"docs":{},"当":{"docs":{},"执":{"docs":{},"行":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684}}}}}}}}}}}}},"再":{"docs":{},"从":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}},"删":{"docs":{},"除":{"1":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}},"3":{"docs":{},"。":{"docs":{},"执":{"docs":{},"行":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"后":{"docs":{},"两":{"docs":{},"个":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}},"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"启":{"docs":{},"发":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"同":{"docs":{},"样":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}},"开":{"docs":{},"括":{"docs":{},"号":{"docs":{},"和":{"docs":{},"闭":{"docs":{},"括":{"docs":{},"号":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{},"当":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}}}}}}}}},"依":{"docs":{},"次":{"docs":{},"取":{"docs":{},"出":{"docs":{},"每":{"docs":{},"个":{"docs":{},"值":{"docs":{},"构":{"docs":{},"建":{"docs":{},"节":{"docs":{},"点":{"docs":{},"来":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"，":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"使":{"docs":{},"用":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"多":{"docs":{},"次":{"docs":{},"调":{"docs":{},"用":{"docs":{},"会":{"docs":{},"取":{"docs":{},"得":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"期":{"docs":{},"将":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}},"引":{"docs":{},"发":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}},"确":{"docs":{},"保":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"释":{"docs":{},"放":{"docs":{},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}},"拿":{"docs":{},"出":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}},"返":{"docs":{},"回":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"型":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"含":{"docs":{},"了":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"线":{"docs":{},"程":{"docs":{},"状":{"docs":{},"态":{"docs":{},"中":{"docs":{},"的":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"栈":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":10}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"带":{"docs":{},"有":{"docs":{},"标":{"docs":{},"记":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}},"里":{"docs":{},"面":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"原":{"docs":{},"子":{"docs":{},"类":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}},"只":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"值":{"docs":{},"：":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"、":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"构":{"docs":{},"建":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}},"要":{"docs":{},"在":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"语":{"docs":{},"句":{"docs":{},"执":{"docs":{},"行":{"docs":{},"中":{"docs":{},"产":{"docs":{},"生":{"docs":{},"了":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"异":{"docs":{},"常":{"docs":{},"对":{"docs":{},"象":{"docs":{},"就":{"docs":{},"会":{"docs":{},"被":{"docs":{},"创":{"docs":{},"建":{"docs":{},"，":{"docs":{},"j":{"docs":{},"r":{"docs":{},"e":{"docs":{},"就":{"docs":{},"会":{"docs":{},"试":{"docs":{},"图":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"异":{"docs":{},"常":{"docs":{},"处":{"docs":{},"理":{"docs":{},"程":{"docs":{},"序":{"docs":{},"来":{"docs":{},"处":{"docs":{},"理":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"处":{"docs":{},"理":{"docs":{},"程":{"docs":{},"序":{"docs":{},"，":{"docs":{},"异":{"docs":{},"常":{"docs":{},"对":{"docs":{},"象":{"docs":{},"就":{"docs":{},"会":{"docs":{},"被":{"docs":{},"异":{"docs":{},"常":{"docs":{},"处":{"docs":{},"理":{"docs":{},"程":{"docs":{},"序":{"docs":{},"接":{"docs":{},"管":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"将":{"docs":{},"引":{"docs":{},"发":{"docs":{},"运":{"docs":{},"行":{"docs":{},"环":{"docs":{},"境":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"j":{"docs":{},"r":{"docs":{},"e":{"docs":{},"终":{"docs":{},"止":{"docs":{},"程":{"docs":{},"序":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"用":{"docs":{},"来":{"docs":{},"起":{"docs":{},"记":{"docs":{},"录":{"docs":{},"作":{"docs":{},"用":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"曾":{"docs":{},"经":{"docs":{},"有":{"docs":{},"过":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"目":{"docs":{},"，":{"docs":{},"跟":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"没":{"docs":{},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"用":{"docs":{},"在":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"同":{"docs":{},"步":{"docs":{},"控":{"docs":{},"制":{"docs":{},"块":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"会":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"抛":{"docs":{},"出":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"修":{"docs":{},"改":{"docs":{},"这":{"docs":{},"条":{"docs":{},"语":{"docs":{},"句":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}},"访":{"docs":{},"问":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"在":{"1":{"docs":{},"前":{"docs":{},"面":{"docs":{},"会":{"docs":{},"多":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"来":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"行":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.009324009324009324},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.005747126436781609},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745}},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"不":{"docs":{},"用":{"docs":{},"再":{"docs":{},"指":{"docs":{},"明":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}},"堆":{"docs":{},"中":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}},"很":{"docs":{},"多":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"接":{"docs":{},"口":{"docs":{},"优":{"docs":{},"先":{"docs":{},"于":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"接":{"docs":{},"口":{"docs":{},"没":{"docs":{},"有":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"严":{"docs":{},"格":{"docs":{},"的":{"docs":{},"类":{"docs":{},"层":{"docs":{},"次":{"docs":{},"结":{"docs":{},"构":{"docs":{},"要":{"docs":{},"求":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"地":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"添":{"docs":{},"加":{"docs":{},"行":{"docs":{},"为":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{},"从":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"覆":{"docs":{},"盖":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"进":{"docs":{},"行":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"或":{"docs":{},"者":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"等":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"比":{"docs":{},"较":{"docs":{},"操":{"docs":{},"作":{"docs":{},"前":{"docs":{},"后":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}},"扩":{"docs":{},"容":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"重":{"docs":{},"新":{"docs":{},"放":{"docs":{},"到":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"上":{"docs":{},"。":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"同":{"docs":{},"时":{"docs":{},"允":{"docs":{},"许":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"大":{"docs":{},"大":{"docs":{},"提":{"docs":{},"高":{"docs":{},"了":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"很":{"docs":{},"适":{"docs":{},"合":{"docs":{},"读":{"docs":{},"多":{"docs":{},"写":{"docs":{},"少":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"。":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"上":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"显":{"docs":{},"然":{"docs":{},"和":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"成":{"docs":{},"正":{"docs":{},"比":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"意":{"docs":{},"位":{"docs":{},"置":{"docs":{},"添":{"docs":{},"加":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"更":{"docs":{},"快":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}}}}}}}}}}}},"了":{"docs":{},"解":{"docs":{},"将":{"docs":{},"任":{"docs":{},"务":{"docs":{},"提":{"docs":{},"交":{"docs":{},"给":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"到":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"整":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"先":{"docs":{},"来":{"docs":{},"看":{"docs":{},"一":{"docs":{},"下":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"面":{"docs":{},"我":{"docs":{},"们":{"docs":{},"多":{"docs":{},"次":{"docs":{},"提":{"docs":{},"到":{"docs":{},"了":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"即":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"际":{"docs":{},"中":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"创":{"docs":{},"建":{"docs":{},"之":{"docs":{},"后":{"docs":{},"立":{"docs":{},"即":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"以":{"docs":{},"下":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"办":{"docs":{},"到":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"调":{"docs":{},"用":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}},"介":{"docs":{},"绍":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}},"所":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"到":{"docs":{},"达":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"内":{"docs":{},"，":{"docs":{},"在":{"docs":{},"程":{"docs":{},"序":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"先":{"docs":{},"行":{"docs":{},"发":{"docs":{},"生":{"docs":{},"于":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"，":{"docs":{},"发":{"docs":{},"生":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"是":{"docs":{},"不":{"docs":{},"断":{"docs":{},"的":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"试":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"删":{"docs":{},"除":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"链":{"docs":{},"表":{"1":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"（":{"docs":{},"每":{"docs":{},"个":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"相":{"docs":{},"同":{"docs":{},"）":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"都":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"列":{"docs":{},"都":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{},"请":{"docs":{},"完":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"含":{"docs":{},"有":{"docs":{},"该":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655}}}}}},"些":{"docs":{},"场":{"docs":{},"景":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"前":{"docs":{},"面":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"大":{"docs":{},"于":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"则":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"组":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"。":{"docs":{},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},",":{"docs":{},"求":{"docs":{},"出":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"了":{"docs":{},"。":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"半":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"继":{"docs":{},"续":{"docs":{},"查":{"docs":{},"找":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"循":{"docs":{},"环":{"docs":{},"不":{"docs":{},"变":{"docs":{},"式":{"docs":{},"中":{"docs":{},"，":{"docs":{},"l":{"docs":{},"o":{"docs":{},"指":{"docs":{},"向":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"增":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"h":{"docs":{},"i":{"docs":{},"指":{"docs":{},"向":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"增":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"里":{"docs":{},"循":{"docs":{},"环":{"docs":{},"条":{"docs":{},"件":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"环":{"docs":{},"中":{"docs":{},"走":{"docs":{},"过":{"docs":{},"的":{"docs":{},"路":{"docs":{},"程":{"docs":{},"，":{"docs":{},"n":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"确":{"docs":{},"保":{"docs":{},"数":{"docs":{},"据":{"docs":{},"被":{"docs":{},"平":{"docs":{},"均":{"docs":{},"分":{"docs":{},"配":{"docs":{},"到":{"docs":{},"两":{"docs":{},"个":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"，":{"docs":{},"即":{"docs":{},"两":{"docs":{},"个":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"之":{"docs":{},"差":{"docs":{},"不":{"docs":{},"能":{"docs":{},"超":{"docs":{},"过":{"1":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"实":{"docs":{},"现":{"docs":{},"实":{"docs":{},"现":{"docs":{},"平":{"docs":{},"均":{"docs":{},"分":{"docs":{},"配":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"约":{"docs":{},"定":{"docs":{},"在":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"目":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"时":{"docs":{},"把":{"docs":{},"数":{"docs":{},"据":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"还":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"都":{"docs":{},"要":{"docs":{},"小":{"docs":{},"于":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"当":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"目":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"约":{"docs":{},"定":{"docs":{},"会":{"docs":{},"把":{"docs":{},"数":{"docs":{},"据":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"比":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"数":{"docs":{},"据":{"docs":{},"要":{"docs":{},"小":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"办":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"把":{"docs":{},"数":{"docs":{},"据":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"拿":{"docs":{},"出":{"docs":{},"此":{"docs":{},"时":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"即":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"大":{"docs":{},"于":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"当":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"比":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"数":{"docs":{},"据":{"docs":{},"要":{"docs":{},"大":{"docs":{},"时":{"docs":{},"同":{"docs":{},"理":{"docs":{},"进":{"docs":{},"行":{"docs":{},"分":{"docs":{},"析":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"在":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"前":{"docs":{},"所":{"docs":{},"有":{"docs":{},"小":{"docs":{},"于":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"数":{"docs":{},"构":{"docs":{},"成":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"大":{"docs":{},"于":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"数":{"docs":{},"构":{"docs":{},"成":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{},"据":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"划":{"docs":{},"分":{"docs":{},"出":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"都":{"docs":{},"比":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"小":{"docs":{},"，":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"的":{"docs":{},"值":{"docs":{},"都":{"docs":{},"比":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"大":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"小":{"docs":{},"于":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"该":{"docs":{},"序":{"docs":{},"列":{"docs":{},"不":{"docs":{},"是":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"池":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}},"都":{"docs":{},"有":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"与":{"docs":{},"其":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"型":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"使":{"docs":{},"用":{"docs":{},"自":{"docs":{},"动":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"与":{"docs":{},"拆":{"docs":{},"箱":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"于":{"docs":{},"动":{"docs":{},"态":{"docs":{},"数":{"docs":{},"组":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}},"；":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}}}}}}}}},"堆":{"docs":{},"或":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}}}}},"实":{"docs":{},"例":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"使":{"docs":{},"用":{"docs":{},"自":{"docs":{},"动":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"并":{"docs":{},"且":{"docs":{},"值":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"会":{"docs":{},"引":{"docs":{},"用":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"：":{"docs":{},"每":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"就":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"它":{"docs":{},"与":{"docs":{},"该":{"docs":{},"实":{"docs":{},"例":{"docs":{},"同":{"docs":{},"生":{"docs":{},"共":{"docs":{},"死":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"多":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"共":{"docs":{},"享":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"希":{"docs":{},"望":{"docs":{},"被":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"共":{"docs":{},"享":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514}},"了":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}},"工":{"docs":{},"作":{"docs":{},"窃":{"docs":{},"取":{"docs":{},"算":{"docs":{},"法":{"docs":{},"来":{"docs":{},"提":{"docs":{},"高":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}},"上":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"最":{"docs":{},"主":{"docs":{},"要":{"docs":{},"的":{"docs":{},"差":{"docs":{},"别":{"docs":{},"是":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"操":{"docs":{},"作":{"docs":{},"同":{"docs":{},"样":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}},"不":{"docs":{},"用":{"docs":{},"担":{"docs":{},"心":{"docs":{},"会":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"（":{"docs":{},"伊":{"docs":{},"甸":{"docs":{},"园":{"docs":{},"）":{"docs":{},"；":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}},"这":{"docs":{},"些":{"docs":{},"老":{"docs":{},"对":{"docs":{},"象":{"docs":{},"会":{"docs":{},"被":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}},"的":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.005633802816901409}},"一":{"docs":{},"个":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"种":{"docs":{},"锁":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}},"，":{"docs":{},"而":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"接":{"docs":{},"口":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}},"接":{"docs":{},"口":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}},"会":{"docs":{},"更":{"docs":{},"好":{"docs":{},"一":{"docs":{},"些":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"：":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"问":{"docs":{},"题":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}},"。":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"和":{"docs":{},"它":{"docs":{},"的":{"docs":{},"镜":{"docs":{},"像":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"它":{"docs":{},"是":{"docs":{},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"用":{"docs":{},"来":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"和":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}}}}}}},"际":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}},"并":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"共":{"docs":{},"享":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}},"且":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}},"不":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"数":{"docs":{},"据":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"。":{"docs":{},"它":{"docs":{},"是":{"docs":{},"遗":{"docs":{},"留":{"docs":{},"类":{"docs":{},"，":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"去":{"docs":{},"使":{"docs":{},"用":{"docs":{},"它":{"docs":{},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"覆":{"docs":{},"盖":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"这":{"docs":{},"在":{"docs":{},"实":{"docs":{},"现":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"将":{"docs":{},"修":{"docs":{},"改":{"docs":{},"后":{"docs":{},"的":{"docs":{},"值":{"docs":{},"写":{"docs":{},"入":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"t":{"2":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}},"docs":{}}}}}}}}}}}}}}}}},"置":{"docs":{},"访":{"docs":{},"问":{"docs":{},"标":{"docs":{},"记":{"docs":{},"为":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}}}}}}}},"发":{"docs":{},"包":{"docs":{},"下":{"docs":{},"的":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}},"维":{"docs":{},"护":{"docs":{},"了":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"拆":{"docs":{},"箱":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"数":{"docs":{},"据":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"类":{"docs":{},"型":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":10.004081632653062}}}},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"：":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"不":{"docs":{},"能":{"docs":{},"读":{"docs":{},"取":{"docs":{},"实":{"docs":{},"时":{"docs":{},"性":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"部":{"docs":{},"分":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"还":{"docs":{},"未":{"docs":{},"同":{"docs":{},"步":{"docs":{},"到":{"docs":{},"读":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"。":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":10}}}}}}}}},"组":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},"。":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"内":{"docs":{},"容":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"都":{"docs":{},"会":{"docs":{},"指":{"docs":{},"向":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"之":{"docs":{},"后":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"再":{"docs":{},"引":{"docs":{},"用":{"docs":{},"其":{"docs":{},"它":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"储":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":10}}}}}}}}}}}}},"的":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":10}}}}}},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":10},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":10}}}}}}}}}}}}}},"量":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}},"值":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"次":{"docs":{},"方":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":10}}}}}}}},"字":{"docs":{},"在":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":10},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.014842300556586271}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"在":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"池":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"的":{"docs":{},"话":{"docs":{},"就":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"池":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"。":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"它":{"docs":{},"首":{"docs":{},"先":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"传":{"docs":{},"进":{"docs":{},"来":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"它":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"还":{"docs":{},"是":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}},"重":{"docs":{},"写":{"docs":{},"，":{"docs":{},"r":{"docs":{},"取":{"3":{"1":{"docs":{},"，":{"docs":{},"r":{"docs":{},"进":{"docs":{},"制":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"位":{"docs":{},"取":{"1":{"7":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"该":{"docs":{},"r":{"docs":{},"进":{"docs":{},"制":{"docs":{},"整":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"作":{"docs":{},"|":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"开":{"docs":{},"始":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}},"调":{"docs":{},"用":{"docs":{},"先":{"docs":{},"行":{"docs":{},"发":{"docs":{},"生":{"docs":{},"于":{"docs":{},"被":{"docs":{},"中":{"docs":{},"断":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"检":{"docs":{},"测":{"docs":{},"到":{"docs":{},"中":{"docs":{},"断":{"docs":{},"事":{"docs":{},"件":{"docs":{},"的":{"docs":{},"发":{"docs":{},"生":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"多":{"docs":{},"个":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"是":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"导":{"docs":{},"致":{"docs":{},"集":{"docs":{},"合":{"docs":{},"添":{"docs":{},"加":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"等":{"docs":{},"价":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}},"为":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"保":{"docs":{},"证":{"docs":{},"等":{"docs":{},"价":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"也":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}},"它":{"docs":{},"不":{"docs":{},"是":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"就":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"也":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"确":{"docs":{},"定":{"docs":{},"该":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"强":{"docs":{},"制":{"docs":{},"指":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{},"来":{"docs":{},"存":{"docs":{},"放":{"docs":{},"。":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"则":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"调":{"docs":{},"用":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"处":{"docs":{},"于":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}}}}}}}},"从":{"docs":{},"这":{"2":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"名":{"docs":{},"字":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"是":{"docs":{},"预":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"，":{"docs":{},"即":{"docs":{},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"到":{"docs":{},"来":{"docs":{},"之":{"docs":{},"前":{"docs":{},"就":{"docs":{},"创":{"docs":{},"建":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"只":{"docs":{},"不":{"docs":{},"过":{"docs":{},"它":{"docs":{},"利":{"docs":{},"用":{"docs":{},"了":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"不":{"docs":{},"大":{"docs":{},"于":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}},"b":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}},"会":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"挂":{"docs":{},"起":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"忙":{"docs":{},"等":{"docs":{},"待":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"目":{"docs":{},"标":{"docs":{},"线":{"docs":{},"程":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}}}}}}}}},"且":{"docs":{},"默":{"docs":{},"认":{"docs":{},"返":{"docs":{},"回":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"无":{"docs":{},"法":{"docs":{},"被":{"docs":{},"重":{"docs":{},"载":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}},"，":{"0":{"docs":{},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"docs":{},"通":{"docs":{},"过":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}},"通":{"docs":{},"过":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"。":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"观":{"docs":{},"察":{"docs":{},"变":{"docs":{},"量":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}},"取":{"docs":{},"得":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"将":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}},"会":{"docs":{},"先":{"docs":{},"从":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}},"先":{"docs":{},"得":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}},"应":{"docs":{},"当":{"docs":{},"总":{"docs":{},"是":{"docs":{},"覆":{"docs":{},"盖":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"确":{"docs":{},"定":{"docs":{},"）":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}},"扩":{"docs":{},"容":{"docs":{},"，":{"docs":{},"新":{"docs":{},"容":{"docs":{},"量":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}},"）":{"docs":{},"默":{"docs":{},"认":{"docs":{},"都":{"docs":{},"是":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}},"；":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}},"它":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"来":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"即":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"又":{"docs":{},"有":{"docs":{},"风":{"docs":{},"险":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"。":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"容":{"docs":{},"量":{"docs":{},"足":{"docs":{},"够":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"够":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"否":{"docs":{},"处":{"docs":{},"于":{"docs":{},"中":{"docs":{},"断":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"提":{"docs":{},"前":{"docs":{},"结":{"docs":{},"束":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}},"启":{"docs":{},"动":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}},"提":{"docs":{},"交":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"不":{"docs":{},"变":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"签":{"docs":{},"名":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"子":{"docs":{},"类":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"是":{"docs":{},"重":{"docs":{},"写":{"docs":{},"基":{"docs":{},"类":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"在":{"docs":{},"子":{"docs":{},"类":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"隐":{"docs":{},"式":{"docs":{},"地":{"docs":{},"被":{"docs":{},"指":{"docs":{},"定":{"docs":{},"为":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"在":{"docs":{},"节":{"docs":{},"点":{"docs":{},"多":{"docs":{},"于":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}},"际":{"docs":{},"上":{"docs":{},"是":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}},"返":{"docs":{},"回":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}},"会":{"docs":{},"休":{"docs":{},"眠":{"docs":{},"当":{"docs":{},"前":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}},"等":{"docs":{},"待":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"之":{"docs":{},"后":{"docs":{},"再":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"中":{"docs":{},"断":{"docs":{},"标":{"docs":{},"记":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"让":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"的":{"docs":{},"值":{"docs":{},"减":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}},"使":{"docs":{},"线":{"docs":{},"程":{"docs":{},"进":{"docs":{},"入":{"docs":{},"限":{"docs":{},"期":{"docs":{},"等":{"docs":{},"待":{"docs":{},"或":{"docs":{},"者":{"docs":{},"无":{"docs":{},"限":{"docs":{},"期":{"docs":{},"等":{"docs":{},"待":{"docs":{},"时":{"docs":{},"，":{"docs":{},"常":{"docs":{},"常":{"docs":{},"用":{"docs":{},"“":{"docs":{},"挂":{"docs":{},"起":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"”":{"docs":{},"进":{"docs":{},"行":{"docs":{},"描":{"docs":{},"述":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{},"，":{"docs":{},"常":{"docs":{},"常":{"docs":{},"用":{"docs":{},"“":{"docs":{},"使":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"睡":{"docs":{},"眠":{"docs":{},"”":{"docs":{},"进":{"docs":{},"行":{"docs":{},"描":{"docs":{},"述":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"等":{"docs":{},"待":{"docs":{},"，":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}},"启":{"docs":{},"动":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"时":{"docs":{},"，":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"会":{"docs":{},"将":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"放":{"docs":{},"入":{"docs":{},"就":{"docs":{},"绪":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"等":{"docs":{},"待":{"docs":{},"被":{"docs":{},"调":{"docs":{},"度":{"docs":{},"，":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"被":{"docs":{},"调":{"docs":{},"度":{"docs":{},"时":{"docs":{},"会":{"docs":{},"执":{"docs":{},"行":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"键":{"docs":{},"为":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"键":{"docs":{},"和":{"docs":{},"值":{"docs":{},"为":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"中":{"docs":{},"断":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}},"无":{"docs":{},"法":{"docs":{},"使":{"docs":{},"线":{"docs":{},"程":{"docs":{},"提":{"docs":{},"前":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}},"属":{"docs":{},"于":{"docs":{},"这":{"docs":{},"类":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"探":{"docs":{},"测":{"docs":{},"到":{"docs":{},"由":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"一":{"docs":{},"串":{"docs":{},"零":{"docs":{},"碎":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"对":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"将":{"docs":{},"会":{"docs":{},"把":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"（":{"docs":{},"粗":{"docs":{},"化":{"docs":{},"）":{"docs":{},"到":{"docs":{},"整":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"外":{"docs":{},"部":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"上":{"docs":{},"一":{"docs":{},"节":{"docs":{},"的":{"docs":{},"示":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"就":{"docs":{},"是":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"个":{"docs":{},"无":{"docs":{},"限":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"没":{"docs":{},"有":{"docs":{},"执":{"docs":{},"行":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"它":{"docs":{},"能":{"docs":{},"够":{"docs":{},"返":{"docs":{},"回":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"去":{"docs":{},"看":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"在":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},"源":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}},"唤":{"docs":{},"醒":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}},"之":{"docs":{},"后":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"会":{"docs":{},"减":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}},"外":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}},"可":{"docs":{},"以":{"docs":{},"循":{"docs":{},"环":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"它":{"docs":{},"才":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"循":{"docs":{},"环":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"。":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}},"而":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"会":{"docs":{},"被":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"。":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}},"才":{"docs":{},"能":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}},"检":{"docs":{},"测":{"docs":{},"到":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"中":{"docs":{},"断":{"docs":{},"发":{"docs":{},"生":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"先":{"docs":{},"行":{"docs":{},"发":{"docs":{},"生":{"docs":{},"于":{"docs":{},"此":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"动":{"docs":{},"作":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"似":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"回":{"docs":{},"收":{"docs":{},"键":{"docs":{},"为":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"设":{"docs":{},"置":{"docs":{},"线":{"docs":{},"程":{"docs":{},"内":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"示":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"内":{"docs":{},"部":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"s":{"docs":{},"b":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}},"每":{"docs":{},"次":{"docs":{},"可":{"docs":{},"以":{"docs":{},"确":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"在":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"正":{"docs":{},"确":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"当":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}},"案":{"docs":{},"获":{"docs":{},"取":{"docs":{},"实":{"docs":{},"例":{"docs":{},"时":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"以":{"docs":{},"线":{"docs":{},"程":{"docs":{},"为":{"docs":{},"键":{"docs":{},"，":{"docs":{},"从":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"具":{"docs":{},"体":{"docs":{},"大":{"docs":{},"小":{"docs":{},"没":{"docs":{},"有":{"docs":{},"明":{"docs":{},"确":{"docs":{},"规":{"docs":{},"定":{"docs":{},"。":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"标":{"docs":{},"识":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"编":{"docs":{},"码":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}},"支":{"docs":{},"持":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"实":{"docs":{},"现":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"功":{"docs":{},"能":{"docs":{},"。":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"由":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}},"中":{"docs":{},"断":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"处":{"docs":{},"于":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"、":{"docs":{},"限":{"docs":{},"期":{"docs":{},"等":{"docs":{},"待":{"docs":{},"或":{"docs":{},"者":{"docs":{},"无":{"docs":{},"限":{"docs":{},"期":{"docs":{},"等":{"docs":{},"待":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"说":{"docs":{},"任":{"docs":{},"务":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"线":{"docs":{},"程":{"docs":{},"驱":{"docs":{},"动":{"docs":{},"从":{"docs":{},"而":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}},"一":{"docs":{},"个":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}},"唤":{"docs":{},"醒":{"docs":{},"挂":{"docs":{},"起":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}},"，":{"docs":{},"造":{"docs":{},"成":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"。":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}},"启":{"docs":{},"动":{"docs":{},"，":{"docs":{},"它":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"量":{"docs":{},"取":{"docs":{},"决":{"docs":{},"于":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}},"封":{"docs":{},"装":{"docs":{},"这":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"主":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"完":{"docs":{},"成":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"之":{"docs":{},"后":{"docs":{},"再":{"docs":{},"去":{"docs":{},"获":{"docs":{},"取":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"避":{"docs":{},"免":{"docs":{},"发":{"docs":{},"生":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"时":{"docs":{},"还":{"docs":{},"是":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"。":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"有":{"docs":{},"序":{"docs":{},"性":{"docs":{},"。":{"docs":{},"除":{"docs":{},"此":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}},"，":{"docs":{},"它":{"docs":{},"保":{"docs":{},"证":{"docs":{},"每":{"docs":{},"个":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"是":{"docs":{},"让":{"docs":{},"线":{"docs":{},"程":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"执":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"控":{"docs":{},"制":{"docs":{},"变":{"docs":{},"量":{"docs":{},"值":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}},"求":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}},"每":{"docs":{},"次":{"docs":{},"都":{"docs":{},"会":{"docs":{},"新":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"；":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}},"扩":{"docs":{},"容":{"docs":{},"请":{"docs":{},"求":{"docs":{},"其":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}},"选":{"docs":{},"取":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333}}}},"走":{"1":{"docs":{},"步":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"则":{"docs":{},"说":{"docs":{},"明":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"环":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}},"2":{"docs":{},"步":{"docs":{},"，":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}},"所":{"docs":{},"以":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}},"docs":{}},"从":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"左":{"docs":{},"上":{"docs":{},"角":{"docs":{},"开":{"docs":{},"始":{"docs":{},"一":{"docs":{},"轮":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"每":{"docs":{},"轮":{"docs":{},"打":{"docs":{},"印":{"docs":{},"包":{"docs":{},"括":{"docs":{},"从":{"docs":{},"左":{"docs":{},"向":{"docs":{},"右":{"docs":{},"、":{"docs":{},"从":{"docs":{},"上":{"docs":{},"向":{"docs":{},"下":{"docs":{},"、":{"docs":{},"从":{"docs":{},"右":{"docs":{},"向":{"docs":{},"左":{"docs":{},"以":{"docs":{},"及":{"docs":{},"从":{"docs":{},"下":{"docs":{},"向":{"docs":{},"上":{"docs":{},"四":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{},"的":{"docs":{},"打":{"docs":{},"印":{"docs":{},"都":{"docs":{},"有":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"前":{"docs":{},"提":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"从":{"docs":{},"上":{"docs":{},"向":{"docs":{},"下":{"docs":{},"打":{"docs":{},"印":{"docs":{},"需":{"docs":{},"要":{"docs":{},"当":{"docs":{},"前":{"docs":{},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"至":{"docs":{},"少":{"docs":{},"包":{"docs":{},"含":{"docs":{},"两":{"docs":{},"行":{"docs":{},"，":{"docs":{},"从":{"docs":{},"右":{"docs":{},"向":{"docs":{},"左":{"docs":{},"打":{"docs":{},"印":{"docs":{},"需":{"docs":{},"要":{"docs":{},"当":{"docs":{},"前":{"docs":{},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"至":{"docs":{},"少":{"docs":{},"包":{"docs":{},"含":{"docs":{},"两":{"docs":{},"行":{"docs":{},"两":{"docs":{},"列":{"docs":{},"，":{"docs":{},"从":{"docs":{},"下":{"docs":{},"向":{"docs":{},"上":{"docs":{},"打":{"docs":{},"印":{"docs":{},"需":{"docs":{},"要":{"docs":{},"当":{"docs":{},"前":{"docs":{},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"至":{"docs":{},"少":{"docs":{},"包":{"docs":{},"含":{"docs":{},"三":{"docs":{},"行":{"docs":{},"两":{"docs":{},"列":{"docs":{},"。":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"取":{"docs":{},"出":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}}},"个":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}},"链":{"docs":{},"表":{"docs":{},"存":{"docs":{},"储":{"docs":{},"了":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}}}},"线":{"docs":{},"程":{"docs":{},"持":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"需":{"docs":{},"要":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"单":{"docs":{},"独":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"3":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}},"docs":{}},"列":{"docs":{},"必":{"docs":{},"须":{"docs":{},"包":{"docs":{},"含":{"1":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}},"docs":{}}}}}},"行":{"docs":{},"必":{"docs":{},"须":{"docs":{},"包":{"docs":{},"含":{"docs":{},"所":{"docs":{},"有":{"1":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}},"docs":{}}}}}}}}}},"的":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.012539184952978056},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0137221269296741},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.030303030303030304},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.01818181818181818},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.009259259259259259},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.008823529411764706},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}},"区":{"docs":{},"别":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}},"在":{"docs":{},"于":{"docs":{},"：":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"域":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"在":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"运":{"docs":{},"行":{"docs":{},"过":{"docs":{},"程":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"存":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"它":{"docs":{},"指":{"docs":{},"向":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"找":{"docs":{},"到":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"为":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}},"多":{"docs":{},"次":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}},"还":{"docs":{},"未":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}},"方":{"docs":{},"式":{"docs":{},"会":{"docs":{},"在":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}},"新":{"docs":{},"建":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"而":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}},"法":{"docs":{},"，":{"docs":{},"而":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}},"需":{"docs":{},"要":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"以":{"docs":{},"值":{"docs":{},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"传":{"docs":{},"入":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"引":{"docs":{},"用":{"docs":{},"传":{"docs":{},"递":{"docs":{},"。":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"点":{"docs":{},"麻":{"docs":{},"烦":{"docs":{},"，":{"docs":{},"要":{"docs":{},"根":{"docs":{},"据":{"docs":{},"实":{"docs":{},"际":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"数":{"docs":{},"量":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"配":{"docs":{},"置":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}},"而":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"多":{"docs":{},"种":{"docs":{},"访":{"docs":{},"问":{"docs":{},"权":{"docs":{},"限":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},"区":{"docs":{},"别":{"docs":{},"是":{"docs":{},"，":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}},"旋":{"docs":{},"转":{"docs":{},"，":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}},"docs":{}}}}}}}}}}}}},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"属":{"docs":{},"于":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}},"对":{"docs":{},"象":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"替":{"docs":{},"代":{"docs":{},"方":{"docs":{},"案":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"比":{"docs":{},"较":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"效":{"docs":{},"率":{"docs":{},"会":{"docs":{},"更":{"docs":{},"高":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}},"查":{"docs":{},"找":{"docs":{},"效":{"docs":{},"率":{"docs":{},"，":{"docs":{},"且":{"docs":{},"内":{"docs":{},"部":{"docs":{},"使":{"docs":{},"用":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"维":{"docs":{},"护":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}},"实":{"docs":{},"现":{"docs":{},"也":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"过":{"docs":{},"长":{"docs":{},"时":{"docs":{},"会":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}},"例":{"docs":{},"是":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}},"改":{"docs":{},"动":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"结":{"docs":{},"构":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"完":{"docs":{},"全":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"而":{"docs":{},"这":{"docs":{},"里":{"docs":{},"要":{"docs":{},"求":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}},"临":{"docs":{},"界":{"docs":{},"值":{"docs":{},"，":{"docs":{},"当":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"容":{"docs":{},"量":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"重":{"docs":{},"新":{"docs":{},"插":{"docs":{},"入":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"会":{"docs":{},"逃":{"docs":{},"逸":{"docs":{},"到":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}},"路":{"docs":{},"径":{"docs":{},"。":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{},"为":{"docs":{},"路":{"docs":{},"径":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"路":{"docs":{},"径":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"从":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"向":{"docs":{},"下":{"docs":{},"到":{"docs":{},"某":{"docs":{},"个":{"docs":{},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},"所":{"docs":{},"经":{"docs":{},"过":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"形":{"docs":{},"成":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"是":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"但":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"无":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"话":{"docs":{},"就":{"docs":{},"更":{"docs":{},"新":{"docs":{},"这":{"docs":{},"个":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"的":{"docs":{},"值":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"候":{"docs":{},"才":{"docs":{},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"，":{"docs":{},"那":{"docs":{},"些":{"docs":{},"因":{"docs":{},"为":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}},"间":{"docs":{},"单":{"docs":{},"位":{"docs":{},"，":{"docs":{},"有":{"7":{"docs":{},"种":{"docs":{},"取":{"docs":{},"值":{"docs":{},"，":{"docs":{},"在":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}},"docs":{}}}}},"内":{"docs":{},"找":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"数":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"并":{"docs":{},"不":{"docs":{},"把":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"里":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"都":{"docs":{},"存":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"只":{"docs":{},"把":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"成":{"docs":{},"为":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"的":{"docs":{},"数":{"docs":{},"存":{"docs":{},"入":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"队":{"docs":{},"头":{"docs":{},"保":{"docs":{},"存":{"docs":{},"当":{"docs":{},"前":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{},"当":{"docs":{},"把":{"docs":{},"数":{"docs":{},"组":{"docs":{},"前":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"分":{"docs":{},"析":{"docs":{},"比":{"docs":{},"较":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"详":{"docs":{},"见":{"docs":{},"《":{"docs":{},"算":{"docs":{},"法":{"docs":{},"导":{"docs":{},"论":{"docs":{},"》":{"docs":{},"）":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"将":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}},"缓":{"docs":{},"存":{"docs":{},"中":{"docs":{},"特":{"docs":{},"别":{"docs":{},"有":{"docs":{},"用":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"移":{"docs":{},"除":{"docs":{},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"久":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"保":{"docs":{},"证":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"足":{"docs":{},"够":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"都":{"docs":{},"是":{"docs":{},"热":{"docs":{},"点":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"小":{"docs":{},"超":{"docs":{},"过":{"docs":{},"了":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}},"为":{"2":{"5":{"6":{"docs":{},"。":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"，":{"docs":{},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}},"中":{"docs":{},"断":{"docs":{},"操":{"docs":{},"作":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"调":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"声":{"docs":{},"明":{"docs":{},"了":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"已":{"docs":{},"经":{"docs":{},"完":{"docs":{},"成":{"docs":{},"了":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{},"中":{"docs":{},"最":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"切":{"docs":{},"换":{"docs":{},"给":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"只":{"docs":{},"是":{"docs":{},"对":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"度":{"docs":{},"器":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"建":{"docs":{},"议":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"也":{"docs":{},"只":{"docs":{},"是":{"docs":{},"建":{"docs":{},"议":{"docs":{},"具":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"的":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"运":{"docs":{},"行":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"含":{"docs":{},"义":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}},"核":{"docs":{},"心":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"向":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"提":{"docs":{},"交":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"交":{"docs":{},"由":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"去":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"(":{"docs":{},"a":{"docs":{},"q":{"docs":{},"s":{"docs":{},"源":{"docs":{},"码":{"docs":{},"暂":{"docs":{},"时":{"docs":{},"没":{"docs":{},"看":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}},"高":{"docs":{},"级":{"docs":{},"功":{"docs":{},"能":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"优":{"docs":{},"先":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}}},"度":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"方":{"docs":{},"面":{"docs":{},"可":{"docs":{},"以":{"docs":{},"增":{"docs":{},"加":{"docs":{},"两":{"docs":{},"个":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"；":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}},"利":{"docs":{},"用":{"docs":{},"率":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"维":{"docs":{},"护":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"需":{"docs":{},"要":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{},"工":{"docs":{},"作":{"docs":{},"窃":{"docs":{},"取":{"docs":{},"算":{"docs":{},"法":{"docs":{},"允":{"docs":{},"许":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"从":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"窃":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"窃":{"docs":{},"取":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"最":{"docs":{},"晚":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"避":{"docs":{},"免":{"docs":{},"和":{"docs":{},"队":{"docs":{},"列":{"docs":{},"所":{"docs":{},"属":{"docs":{},"线":{"docs":{},"程":{"docs":{},"发":{"docs":{},"生":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"中":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"2":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"通":{"docs":{},"过":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"拿":{"docs":{},"出":{"docs":{},"最":{"docs":{},"晚":{"docs":{},"的":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}},"值":{"docs":{},"最":{"docs":{},"后":{"docs":{},"为":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}},"更":{"docs":{},"新":{"docs":{},"为":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"等":{"docs":{},"于":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"移":{"docs":{},"动":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"移":{"docs":{},"动":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"在":{"docs":{},"将":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}},"赋":{"docs":{},"给":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}},"情":{"docs":{},"况":{"docs":{},"非":{"docs":{},"常":{"docs":{},"罕":{"docs":{},"见":{"docs":{},"，":{"docs":{},"在":{"docs":{},"目":{"docs":{},"前":{"docs":{},"商":{"docs":{},"用":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}},"数":{"docs":{},"值":{"docs":{},"。":{"docs":{},"(":{"docs":{},"不":{"docs":{},"过":{"docs":{},"这":{"docs":{},"种":{"docs":{},"读":{"docs":{},"取":{"docs":{},"到":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"并":{"docs":{},"非":{"docs":{},"固":{"docs":{},"定":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"会":{"docs":{},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"对":{"docs":{},"于":{"3":{"docs":{},"和":{"5":{"docs":{},"同":{"docs":{},"理":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"从":{"2":{"docs":{},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}},"docs":{}}}}}}}}},"docs":{}}},"docs":{}}}},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}},"总":{"docs":{},"是":{"docs":{},"存":{"docs":{},"在":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"9":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}},"docs":{}}}}}}}}}}}}}}},"字":{"docs":{},"不":{"docs":{},"等":{"docs":{},"，":{"docs":{},"就":{"docs":{},"把":{"docs":{},"第":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}},"时":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"比":{"docs":{},"较":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"它":{"docs":{},"和":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}}}},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"在":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}},"原":{"docs":{},"子":{"docs":{},"类":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"变":{"docs":{},"量":{"docs":{},"为":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"底":{"docs":{},"层":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"导":{"docs":{},"致":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"正":{"docs":{},"确":{"docs":{},"性":{"docs":{},"。":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}},"深":{"docs":{},"入":{"docs":{},"解":{"docs":{},"析":{"docs":{},"见":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}},"源":{"docs":{},"码":{"docs":{},"，":{"docs":{},"它":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}},"异":{"docs":{},"同":{"docs":{},"。":{"docs":{},"既":{"docs":{},"然":{"docs":{},"是":{"docs":{},"作":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"那":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"认":{"docs":{},"为":{"docs":{},"这":{"docs":{},"两":{"docs":{},"者":{"docs":{},"解":{"docs":{},"决":{"docs":{},"相":{"docs":{},"同":{"docs":{},"或":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"为":{"docs":{},"弱":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"避":{"docs":{},"免":{"docs":{},"了":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}},"弱":{"docs":{},"引":{"docs":{},"用":{"docs":{},"）":{"docs":{},"，":{"docs":{},"而":{"docs":{},"非":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"的":{"docs":{},"弱":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"无":{"docs":{},"法":{"docs":{},"避":{"docs":{},"免":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"例":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"这":{"docs":{},"一":{"docs":{},"点":{"docs":{},"从":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{},"可":{"docs":{},"看":{"docs":{},"出":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}},"强":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"每":{"docs":{},"个":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"丑":{"docs":{},"数":{"docs":{},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}}},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"有":{"docs":{},"且":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}},"适":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"以":{"docs":{},"及":{"docs":{},"解":{"docs":{},"决":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"描":{"docs":{},"述":{"docs":{},"的":{"docs":{},"并":{"docs":{},"不":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"，":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"是":{"docs":{},"错":{"docs":{},"的":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"是":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"对":{"docs":{},"于":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},")":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"无":{"docs":{},"法":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"它":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"消":{"docs":{},"除":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}},"拼":{"docs":{},"接":{"docs":{},"自":{"docs":{},"动":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{},"在":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}},"状":{"docs":{},"态":{"docs":{},"下":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}},"锁":{"docs":{},"标":{"docs":{},"记":{"docs":{},"变":{"docs":{},"为":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"是":{"docs":{},"多":{"docs":{},"少":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"*":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"是":{"docs":{},"*":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"判":{"docs":{},"断":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}},"位":{"docs":{},"置":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}},"，":{"docs":{},"再":{"docs":{},"将":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061}}}}}}}}}},"丑":{"docs":{},"数":{"docs":{},"已":{"docs":{},"经":{"docs":{},"求":{"docs":{},"出":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"求":{"docs":{},"出":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}}}}}}}}},"连":{"docs":{},"续":{"docs":{},"正":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"数":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}},"（":{"docs":{},"至":{"docs":{},"少":{"docs":{},"含":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"1":{"5":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"1":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}},"docs":{}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"数":{"docs":{},"组":{"docs":{},"非":{"docs":{},"空":{"docs":{},"并":{"docs":{},"且":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}},"重":{"docs":{},"组":{"docs":{},"后":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"若":{"docs":{},"当":{"docs":{},"前":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"不":{"docs":{},"满":{"docs":{},"足":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"定":{"docs":{},"存":{"docs":{},"在":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"返":{"docs":{},"回":{"docs":{},"其":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"找":{"docs":{},"到":{"docs":{},"返":{"docs":{},"回":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"6":{"docs":{},"，":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}},"7":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}},"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"7":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}},"docs":{}}}}}}}}},"大":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"等":{"docs":{},"于":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"之":{"docs":{},"和":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"用":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}},"位":{"docs":{},"置":{"docs":{},"都":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},")":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"它":{"docs":{},"和":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"。":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"某":{"docs":{},"些":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"有":{"docs":{},"几":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"重":{"docs":{},"复":{"docs":{},"了":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"重":{"docs":{},"复":{"docs":{},"了":{"docs":{},"几":{"docs":{},"次":{"docs":{},"。":{"docs":{},"找":{"docs":{},"出":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"如":{"docs":{},"果":{"docs":{},"输":{"docs":{},"入":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"7":{"docs":{},"的":{"docs":{},"数":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"格":{"docs":{},"子":{"docs":{},"。":{"docs":{},"请":{"docs":{},"问":{"docs":{},"问":{"docs":{},"该":{"docs":{},"机":{"docs":{},"器":{"docs":{},"人":{"docs":{},"能":{"docs":{},"够":{"docs":{},"到":{"docs":{},"达":{"docs":{},"多":{"docs":{},"少":{"docs":{},"个":{"docs":{},"格":{"docs":{},"子":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"它":{"docs":{},"每":{"docs":{},"次":{"docs":{},"可":{"docs":{},"以":{"docs":{},"向":{"docs":{},"左":{"docs":{},"、":{"docs":{},"右":{"docs":{},"、":{"docs":{},"上":{"docs":{},"、":{"docs":{},"下":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"格":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"能":{"docs":{},"进":{"docs":{},"入":{"docs":{},"行":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"和":{"docs":{},"列":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"的":{"docs":{},"数":{"docs":{},"位":{"docs":{},"之":{"docs":{},"和":{"docs":{},"大":{"docs":{},"于":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"边":{"docs":{},"和":{"docs":{},"右":{"docs":{},"边":{"docs":{},"也":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"，":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"示":{"docs":{},"中":{"docs":{},"一":{"docs":{},"定":{"docs":{},"有":{"docs":{},"一":{"docs":{},"位":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"其":{"docs":{},"第":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}}}},"docs":{}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"和":{"docs":{},"*":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"看":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}},"是":{"docs":{},"否":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"*":{"docs":{},"并":{"docs":{},"且":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}},"，":{"docs":{},"接":{"docs":{},"着":{"docs":{},"看":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"分":{"docs":{},"为":{"docs":{},"三":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"去":{"docs":{},"处":{"docs":{},"理":{"docs":{},"：":{"docs":{},"匹":{"docs":{},"配":{"0":{"docs":{},"个":{"docs":{},"、":{"docs":{},"匹":{"docs":{},"配":{"1":{"docs":{},"个":{"docs":{},"和":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"多":{"docs":{},"个":{"docs":{},"。":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.01818181818181818}}}}}},"距":{"docs":{},"离":{"docs":{},"和":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"删":{"docs":{},"除":{"docs":{},"后":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"链":{"docs":{},"表":{"1":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}},"docs":{}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"链":{"docs":{},"接":{"docs":{},"到":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"设":{"docs":{},"置":{"docs":{},"进":{"docs":{},"位":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"则":{"docs":{},"同":{"docs":{},"时":{"docs":{},"将":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808}}}}}}}}}}},"话":{"docs":{},"会":{"docs":{},"从":{"docs":{},"队":{"docs":{},"头":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"删":{"docs":{},"除":{"1":{"docs":{},"。":{"docs":{},"此":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"把":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"把":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}},"库":{"docs":{},"函":{"docs":{},"数":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}}}},"差":{"docs":{},"的":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"大":{"docs":{},"于":{"1":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"不":{"docs":{},"是":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"函":{"docs":{},"数":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}},"我":{"docs":{},"们":{"docs":{},"约":{"docs":{},"定":{"docs":{},"空":{"docs":{},"树":{"docs":{},"不":{"docs":{},"是":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"树":{"docs":{},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"树":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"判":{"docs":{},"断":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"所":{"docs":{},"代":{"docs":{},"表":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"和":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"还":{"docs":{},"要":{"docs":{},"再":{"docs":{},"看":{"docs":{},"它":{"docs":{},"们":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"一":{"docs":{},"位":{"docs":{},"。":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}},"三":{"docs":{},"元":{"docs":{},"组":{"docs":{},"。":{"docs":{},"要":{"docs":{},"求":{"docs":{},"三":{"docs":{},"元":{"docs":{},"组":{"docs":{},"不":{"docs":{},"能":{"docs":{},"重":{"docs":{},"复":{"docs":{},"。":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}}}}}}}}}}}}}},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"当":{"docs":{},"找":{"docs":{},"到":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"要":{"docs":{},"求":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"并":{"docs":{},"用":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}}}},"右":{"docs":{},"边":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"。":{"docs":{},"分":{"docs":{},"别":{"docs":{},"求":{"docs":{},"出":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"后":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}}}}}}}}}}}},"蓄":{"docs":{},"水":{"docs":{},"量":{"docs":{},"就":{"docs":{},"为":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}},"类":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"型":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"组":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"有":{"4":{"docs":{},"个":{"docs":{},"字":{"docs":{},"节":{"docs":{},"，":{"docs":{},"共":{"3":{"2":{"docs":{},"位":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"循":{"docs":{},"环":{"3":{"2":{"docs":{},"次":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"用":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666}}}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}}},"docs":{}}},"，":{"docs":{},"而":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"没":{"docs":{},"有":{"docs":{},"这":{"docs":{},"种":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"执":{"docs":{},"行":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"同":{"docs":{},"时":{"docs":{},"对":{"docs":{},"它":{"docs":{},"们":{"docs":{},"进":{"docs":{},"行":{"docs":{},"读":{"docs":{},"取":{"docs":{},"和":{"docs":{},"修":{"docs":{},"改":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"某":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"读":{"docs":{},"取":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"既":{"docs":{},"非":{"docs":{},"原":{"docs":{},"值":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"是":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"修":{"docs":{},"改":{"docs":{},"值":{"docs":{},"的":{"docs":{},"代":{"docs":{},"表":{"docs":{},"了":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"弱":{"docs":{},"引":{"docs":{},"用":{"docs":{},"（":{"docs":{},"也":{"docs":{},"即":{"docs":{},"上":{"docs":{},"文":{"docs":{},"所":{"docs":{},"述":{"docs":{},"它":{"docs":{},"是":{"docs":{},"对":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}},"浮":{"docs":{},"点":{"docs":{},"数":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}}},"范":{"docs":{},"围":{"docs":{},"是":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}}},"对":{"docs":{},"象":{"docs":{},"！":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}}}},"变":{"docs":{},"量":{"docs":{},"，":{"1":{"0":{"0":{"0":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"）":{"docs":{},"，":{"docs":{},"在":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}},"的":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"实":{"docs":{},"现":{"docs":{},"改":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"源":{"docs":{},"码":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"段":{"docs":{},"，":{"docs":{},"即":{"docs":{},"由":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"似":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"同":{"docs":{},"一":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"同":{"docs":{},"时":{"docs":{},"写":{"docs":{},"入":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"用":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"就":{"docs":{},"是":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"数":{"docs":{},"据":{"docs":{},"如":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}},"于":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"中":{"docs":{},"的":{"docs":{},"信":{"docs":{},"号":{"docs":{},"量":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"控":{"docs":{},"制":{"docs":{},"对":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"。":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}},"也":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}},"可":{"docs":{},"能":{"docs":{},"只":{"docs":{},"要":{"docs":{},"求":{"docs":{},"可":{"docs":{},"执":{"docs":{},"行":{"docs":{},"就":{"docs":{},"行":{"docs":{},"，":{"docs":{},"继":{"docs":{},"承":{"docs":{},"整":{"docs":{},"个":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"继":{"docs":{},"承":{"docs":{},"其":{"docs":{},"它":{"docs":{},"类":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"多":{"docs":{},"个":{"docs":{},"接":{"docs":{},"口":{"docs":{},"；":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}},"开":{"docs":{},"销":{"docs":{},"过":{"docs":{},"大":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}},"中":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"比":{"docs":{},"较":{"docs":{},"重":{"docs":{},"要":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"四":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}},"的":{"docs":{},"几":{"docs":{},"个":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}},"有":{"7":{"docs":{},"种":{"docs":{},"静":{"docs":{},"态":{"docs":{},"属":{"docs":{},"性":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}},"docs":{},"几":{"docs":{},"个":{"docs":{},"非":{"docs":{},"常":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"最":{"docs":{},"核":{"docs":{},"心":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"透":{"docs":{},"彻":{"docs":{},"地":{"docs":{},"了":{"docs":{},"解":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"先":{"docs":{},"了":{"docs":{},"解":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"我":{"docs":{},"们":{"docs":{},"来":{"docs":{},"看":{"docs":{},"一":{"docs":{},"下":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"并":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"四":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"，":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"观":{"docs":{},"察":{"docs":{},"每":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"的":{"docs":{},"源":{"docs":{},"码":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"前":{"docs":{},"面":{"docs":{},"三":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"都":{"docs":{},"是":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"第":{"docs":{},"四":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"进":{"docs":{},"行":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"工":{"docs":{},"作":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"库":{"docs":{},"中":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"协":{"docs":{},"调":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}},"本":{"docs":{},"地":{"docs":{},"存":{"docs":{},"储":{"docs":{},"功":{"docs":{},"能":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}},"缓":{"docs":{},"存":{"docs":{},"池":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}},"：":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"会":{"docs":{},"在":{"docs":{},"自":{"docs":{},"动":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"过":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"它":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}},")":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}},"上":{"docs":{},"、":{"docs":{},"下":{"docs":{},"、":{"docs":{},"左":{"docs":{},"、":{"docs":{},"右":{"4":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}}}}},"docs":{}}}}}}}},"数":{"docs":{},"值":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":10}}}}}}}},"的":{"docs":{},"数":{"docs":{},"当":{"docs":{},"做":{"0":{"docs":{},"再":{"docs":{},"和":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}},"docs":{}}},"相":{"docs":{},"加":{"docs":{},"。":{"docs":{},"此":{"docs":{},"外":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"都":{"docs":{},"已":{"docs":{},"经":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"了":{"docs":{},"但":{"docs":{},"是":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}},"窗":{"docs":{},"口":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}}},"相":{"docs":{},"对":{"docs":{},"于":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.007751937984496124}}}}}},"格":{"docs":{},"中":{"docs":{},"给":{"docs":{},"出":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"在":{"3":{"2":{"docs":{},"位":{"docs":{},"的":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}},"docs":{}},"docs":{}}}}}}}}}},"装":{"docs":{},"箱":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"，":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"\"":{"0":{"0":{"0":{"docs":{},"\"":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}},"docs":{}},"docs":{},"(":{"4":{"docs":{},")":{"2":{"docs":{},"\"":{"docs":{},".":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}},"docs":{}}},"docs":{}}},"1":{"2":{"1":{"1":{"docs":{},"\"":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}},"docs":{}},"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}},"+":{"5":{"docs":{},".":{"4":{"docs":{},"\"":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}},"docs":{}}},"docs":{}}}},"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},"\"":{"docs":{},",":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}},"docs":{}}},"docs":{}},"a":{"3":{"docs":{},".":{"1":{"4":{"docs":{},"\"":{"docs":{},",":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}},"docs":{}},"docs":{}}},"docs":{}},"\"":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}},"2":{"3":{"docs":{},"\"":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}},"docs":{}},"3":{"docs":{},".":{"1":{"4":{"1":{"6":{"docs":{},"\"":{"docs":{},",":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"5":{"docs":{},"e":{"2":{"docs":{},"\"":{"docs":{},",":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}},"docs":{}}},"7":{"docs":{},"(":{"4":{"docs":{},")":{"docs":{},"\"":{"docs":{},".":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}},"docs":{}}},"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.02564102564102564},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.011538461538461539}},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"\"":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}},"，":{"2":{"docs":{},"表":{"docs":{},"示":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}},"docs":{},"#":{"3":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"docs":{}}},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"g":{"docs":{},"\"":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"b":{"docs":{},"b":{"docs":{},"\"":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}},"a":{"docs":{},"\"":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}},"b":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"c":{"docs":{},"b":{"docs":{},"\"":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863}}}}},"f":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863}}}}}},"b":{"docs":{},"b":{"docs":{},"b":{"docs":{},"\"":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}},"b":{"docs":{},"b":{"docs":{},"\"":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}},"\"":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}},"a":{"docs":{},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}},"b":{"docs":{},"\"":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}},"a":{"docs":{},"d":{"docs":{},"\"":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}},"c":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863}}}}},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863}}}}},"f":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863}}}}}},"实":{"docs":{},"例":{"docs":{},"变":{"docs":{},"量":{"docs":{},"\"":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"\"":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}},"=":{"docs":{},"\"":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"v":{"1":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"2":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"3":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"docs":{}},"c":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"\"":{"docs":{},"。":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}},"\"":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863}}}}},"a":{"docs":{},"b":{"docs":{},"\"":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}},"b":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"。":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}},"b":{"docs":{},"d":{"docs":{},"\"":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863}}}}},"f":{"docs":{},"\"":{"docs":{},"]":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}},".":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"e":{"docs":{},"f":{"docs":{},"\"":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}},"。":{"docs":{},"返":{"docs":{},"回":{"docs":{},"该":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"字":{"docs":{},"母":{"docs":{},"的":{"docs":{},"组":{"docs":{},"合":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"对":{"docs":{},"于":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}},"半":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"\"":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"\"":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}},"c":{"docs":{},"m":{"docs":{},"x":{"docs":{},"c":{"docs":{},"i":{"docs":{},"v":{"docs":{},"\"":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}},"\"":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}},";":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.015384615384615385},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.01507537688442211}}},".":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}},"+":{"1":{"0":{"0":{"docs":{},"\"":{"docs":{},",":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}},"docs":{}},"docs":{}},"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}},",":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}},"i":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}},"i":{"docs":{},"i":{"docs":{},"\"":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}},"v":{"docs":{},"\"":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"x":{"docs":{},"\"":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}},"%":{"2":{"0":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}}},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"是":{"docs":{},"把":{"1":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"替":{"docs":{},"换":{"docs":{},"为":{"2":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"其":{"docs":{},"后":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"向":{"docs":{},"后":{"docs":{},"移":{"docs":{},"动":{"2":{"docs":{},"位":{"docs":{},"，":{"docs":{},"效":{"docs":{},"率":{"docs":{},"不":{"docs":{},"高":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"求":{"docs":{},"出":{"docs":{},"原":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"空":{"docs":{},"格":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"，":{"docs":{},"据":{"docs":{},"此":{"docs":{},"计":{"docs":{},"算":{"docs":{},"出":{"docs":{},"替":{"docs":{},"换":{"docs":{},"后":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"新":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}},"docs":{}},"docs":{}},"w":{"docs":{},"e":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}},"%":{"2":{"0":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"%":{"2":{"0":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"y":{"docs":{},"\"":{"docs":{},"。":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}},"k":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}},"x":{"docs":{},"y":{"docs":{},"z":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}},"g":{"docs":{},"o":{"docs":{},"\"":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"\"":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}},"h":{"docs":{},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}},"p":{"docs":{},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"\"":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"w":{"docs":{},"\"":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}},"q":{"docs":{},"r":{"docs":{},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}},"l":{"docs":{},"v":{"docs":{},"i":{"docs":{},"i":{"docs":{},"i":{"docs":{},"\"":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}}}},"f":{"docs":{},"l":{"docs":{},"\"":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}},"j":{"docs":{},"k":{"docs":{},"l":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}},"t":{"docs":{},"u":{"docs":{},"v":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}},"w":{"docs":{},"o":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}}},"(":{"4":{"docs":{},")":{"7":{"docs":{},"\"":{"docs":{},".":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}},"docs":{}}},"docs":{},")":{"docs":{},"\"":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}},"[":{"docs":{},"]":{"docs":{},"{":{"docs":{},"}":{"docs":{},"\"":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}}}}},"(":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}},")":{"docs":{},"(":{"docs":{},")":{"docs":{},"\"":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}}},"[":{"docs":{},")":{"docs":{},"]":{"docs":{},"\"":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}}}},"]":{"docs":{},"\"":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}},"(":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}}},")":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}},")":{"docs":{},"(":{"docs":{},")":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}}}}},"{":{"docs":{},"[":{"docs":{},"]":{"docs":{},"}":{"docs":{},"\"":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.024390243902439025}}}}}},"#":{"1":{"8":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}},"9":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}}},"docs":{}},"2":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}}},"3":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}}},"4":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"docs":{}},"*":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.019169329073482427},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.022900763358778626},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}},"/":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},".":{"docs":{},".":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}},".":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.011655011655011656},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.011267605633802818},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.02127659574468085},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}},"]":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"是":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.02197802197802198},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.01507537688442211},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}},"，":{"docs":{},"现":{"docs":{},"在":{"docs":{},"要":{"docs":{},"求":{"docs":{},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"发":{"docs":{},"现":{"docs":{},"每":{"docs":{},"一":{"docs":{},"位":{"docs":{},"上":{"docs":{},"其":{"docs":{},"实":{"docs":{},"都":{"docs":{},"是":{"docs":{},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"个":{"0":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"e":{"1":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.010221465076660987},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.008450704225352112}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0068143100511073255}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"2":{"docs":{},",":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}}},"docs":{}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.008450704225352112}}}}}}},"2":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}},"docs":{}}}}}}},"2":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.013628620102214651},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.005633802816901409}},".":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}},"2":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}},"docs":{}}}}}}},"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.011494252873563218},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.00686106346483705},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.01485148514851485}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}},"s":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.01044932079414838},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.025728987993138937},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.014563106796116505}}},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}}},"[":{"docs":{},"]":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"]":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"路":{"docs":{},"程":{"docs":{},"，":{"docs":{},"b":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}},"d":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.020100502512562814},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":1.6761006289308176},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}},"i":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0196078431372549}}}}}}}}}},"x":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}},"+":{"1":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}},"docs":{}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}}},",":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.010221465076660987}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.010221465076660987}},"e":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.008298755186721992},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}},"r":{"docs":{},"a":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"程":{"docs":{},"序":{"docs":{},"崩":{"docs":{},"溃":{"docs":{},"并":{"docs":{},"且":{"docs":{},"无":{"docs":{},"法":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"。":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}},"p":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.10606060606060606}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}},")":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}},"o":{"docs":{},"n":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}},"。":{"docs":{},"求":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.017341040462427744},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.009433962264150943},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0074211502782931356},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.007662835249042145}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"$":{"docs":{},"$":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"$":{"1":{"docs":{},"/":{"1":{"1":{"6":{"0":{"4":{"6":{"0":{"8":{"6":{"5":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"$":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"$":{"0":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"9":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.011267605633802818},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.006224066390041493},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0074211502782931356},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.013409961685823755},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.02535211267605634},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.014035087719298246},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.012448132780082987},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.013793103448275862},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.022535211267605635},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.014035087719298246},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.006224066390041493},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.007662835249042145}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"为":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.010526315789473684},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.017341040462427744},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.025423728813559324},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.02358490566037736},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.022222222222222223},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.04424778761061947},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.012121212121212121},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.008928571428571428},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.01485148514851485},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.024390243902439025},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.02727272727272727},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}}}}}}}}}},"d":{"docs":{},"d":{"1":{"0":{"0":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}}}}}}},"docs":{}},"docs":{}},"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931}}}}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}},":":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},",":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}},")":{"docs":{},".":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.010526315789473684},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.01037344398340249},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.010526315789473684},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.01037344398340249},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"e":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.07142857142857142}}}}}},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.01818181818181818},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":1.25},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.010256410256410256}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}},"[":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}},"v":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.007751937984496124}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.01485148514851485},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"i":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}}}},"e":{"docs":{},"n":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.034013605442176874}},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}}}},"。":{"docs":{},"函":{"docs":{},"数":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}}},"o":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}},"2":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}},"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.008928571428571428},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}},".":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787}}},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}},"u":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.014423076923076924}},"o":{"docs":{},"f":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},":":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.017341040462427744},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.025423728813559324},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.02358490566037736},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.022222222222222223},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.04424778761061947},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.008928571428571428},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.024390243902439025},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.02727272727272727},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"b":{"docs":{},"j":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.008517887563884156},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.005145797598627788}},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":10.001703577512776}}}}}}},"[":{"docs":{},"]":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.02531645569620253}}}},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0074211502782931356}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}},"(":{"1":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"，":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}},"读":{"docs":{},"取":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}},"注":{"docs":{},"意":{"docs":{},"到":{"docs":{},"题":{"docs":{},"目":{"docs":{},"中":{"docs":{},"说":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"都":{"docs":{},"在":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"无":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"分":{"docs":{},"别":{"docs":{},"使":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}},"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}},"对":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}},"，":{"docs":{},"读":{"docs":{},"取":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"即":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"退":{"docs":{},"化":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"时":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"和":{"docs":{},"读":{"docs":{},"取":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"想":{"docs":{},"到":{"docs":{},"题":{"docs":{},"目":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"去":{"docs":{},"求":{"docs":{},"解":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"要":{"docs":{},"求":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"后":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"有":{"docs":{},"序":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"去":{"docs":{},"求":{"docs":{},"解":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"其":{"docs":{},"实":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"后":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"我":{"docs":{},"们":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"它":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"只":{"docs":{},"不":{"docs":{},"过":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"原":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"做":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"换":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"原":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"：":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}},"k":{"docs":{},")":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"将":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}},"n":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.01818181818181818}},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}},"是":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}}}},"读":{"docs":{},"取":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"时":{"docs":{},"由":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"因":{"docs":{},"此":{"docs":{},"直":{"docs":{},"接":{"docs":{},"读":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"总":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"我":{"docs":{},"们":{"docs":{},"看":{"docs":{},"看":{"docs":{},"能":{"docs":{},"不":{"docs":{},"能":{"docs":{},"把":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"优":{"docs":{},"化":{"docs":{},"为":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"来":{"docs":{},"看":{"docs":{},"看":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"改":{"docs":{},"进":{"docs":{},"的":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}},"（":{"docs":{},"关":{"docs":{},"于":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}},"/":{"docs":{},"m":{"docs":{},")":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"^":{"2":{"docs":{},")":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"效":{"docs":{},"率":{"docs":{},"很":{"docs":{},"低":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"求":{"docs":{},"不":{"docs":{},"能":{"docs":{},"包":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"三":{"docs":{},"元":{"docs":{},"组":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"当":{"docs":{},"找":{"docs":{},"完":{"docs":{},"三":{"docs":{},"元":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"指":{"docs":{},"针":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"和":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"。":{"docs":{},"其":{"docs":{},"次":{"docs":{},"，":{"docs":{},"在":{"docs":{},"找":{"docs":{},"到":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"也":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"见":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}},"k":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}},"k":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"不":{"docs":{},"是":{"docs":{},"最":{"docs":{},"优":{"docs":{},"的":{"docs":{},"。":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{},"当":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"时":{"docs":{},"，":{"docs":{},"处":{"docs":{},"于":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"被":{"docs":{},"删":{"docs":{},"除":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"在":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"这":{"docs":{},"符":{"docs":{},"合":{"docs":{},"队":{"docs":{},"列":{"docs":{},"先":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"。":{"docs":{},"正":{"docs":{},"常":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"整":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"才":{"docs":{},"能":{"docs":{},"找":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"数":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"看":{"docs":{},"看":{"docs":{},"能":{"docs":{},"不":{"docs":{},"能":{"docs":{},"在":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{},"堆":{"docs":{},"将":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"降":{"docs":{},"到":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.014423076923076924},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}},"e":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"s":{"docs":{},".":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}},"n":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}},"e":{"docs":{},"'":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"c":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061}}}},"w":{"docs":{},"n":{"docs":{},",":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}},"d":{"docs":{},"d":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.016129032258064516}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},";":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}},"i":{"docs":{},"]":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.04838709677419355}},"。":{"docs":{},"在":{"docs":{},"函":{"docs":{},"数":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}},"，":{"docs":{},"并":{"docs":{},"用":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.035398230088495575},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.023255813953488372}},",":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}},"u":{"docs":{},"s":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}},"e":{"docs":{},"：":{"docs":{},"把":{"docs":{},"工":{"docs":{},"作":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"值":{"docs":{},"传":{"docs":{},"递":{"docs":{},"给":{"docs":{},"执":{"docs":{},"行":{"docs":{},"引":{"docs":{},"擎":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},"d":{"docs":{},":":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}},"t":{"docs":{},"f":{"8":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}},"docs":{}}},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"o":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}},"a":{"docs":{},"f":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}},"i":{"docs":{},"t":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}},",":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.007662835249042145}}},"：":{"docs":{},"参":{"docs":{},"数":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}},"q":{"docs":{},"u":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931}},"，":{"docs":{},"在":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"实":{"docs":{},"现":{"docs":{},"上":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"字":{"docs":{},"节":{"docs":{},"码":{"docs":{},"指":{"docs":{},"令":{"docs":{},"为":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"作":{"docs":{},"用":{"docs":{},"于":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"把":{"docs":{},"一":{"docs":{},"个":{"docs":{},"处":{"docs":{},"于":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"释":{"docs":{},"放":{"docs":{},"出":{"docs":{},"来":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}},"p":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}},":":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}},"下":{"docs":{},"面":{"docs":{},"示":{"docs":{},"例":{"docs":{},"中":{"docs":{},"，":{"docs":{},"s":{"1":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"docs":{}}}}}},"是":{"docs":{},"对":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"这":{"docs":{},"三":{"docs":{},"个":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"，":{"docs":{},"新":{"docs":{},"建":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"等":{"docs":{},"价":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"它":{"docs":{},"们":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}},"几":{"docs":{},"个":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}},"我":{"docs":{},"们":{"docs":{},"来":{"docs":{},"看":{"docs":{},"一":{"docs":{},"下":{"docs":{},"任":{"docs":{},"务":{"docs":{},"从":{"docs":{},"提":{"docs":{},"交":{"docs":{},"到":{"docs":{},"最":{"docs":{},"终":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"经":{"docs":{},"历":{"docs":{},"了":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"过":{"docs":{},"程":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"释":{"docs":{},"下":{"docs":{},"一":{"docs":{},"下":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"中":{"docs":{},"各":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"含":{"docs":{},"义":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"书":{"docs":{},"中":{"docs":{},"该":{"docs":{},"题":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{},"一":{"docs":{},"半":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"它":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"比":{"docs":{},"其":{"docs":{},"他":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"的":{"docs":{},"和":{"docs":{},"还":{"docs":{},"要":{"docs":{},"多":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"称":{"docs":{},"它":{"docs":{},"为":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"演":{"docs":{},"示":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"对":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}},"左":{"docs":{},"侧":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"有":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"称":{"docs":{},"为":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"性":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"参":{"docs":{},"数":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"在":{"docs":{},"作":{"docs":{},"为":{"docs":{},"网":{"docs":{},"络":{"docs":{},"连":{"docs":{},"接":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"如":{"docs":{},"果":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"天":{"docs":{},"生":{"docs":{},"具":{"docs":{},"备":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"安":{"docs":{},"全":{"docs":{},"地":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}},"（":{"docs":{},"i":{"docs":{},"m":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"）":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"再":{"docs":{},"采":{"docs":{},"取":{"docs":{},"任":{"docs":{},"何":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"保":{"docs":{},"障":{"docs":{},"措":{"docs":{},"施":{"docs":{},"。":{"docs":{},"只":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"被":{"docs":{},"正":{"docs":{},"确":{"docs":{},"地":{"docs":{},"构":{"docs":{},"建":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"永":{"docs":{},"远":{"docs":{},"也":{"docs":{},"不":{"docs":{},"会":{"docs":{},"看":{"docs":{},"到":{"docs":{},"它":{"docs":{},"在":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"中":{"docs":{},"处":{"docs":{},"于":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"环":{"docs":{},"境":{"docs":{},"下":{"docs":{},"，":{"docs":{},"应":{"docs":{},"当":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"使":{"docs":{},"对":{"docs":{},"象":{"docs":{},"成":{"docs":{},"为":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"，":{"docs":{},"来":{"docs":{},"满":{"docs":{},"足":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"共":{"docs":{},"享":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"插":{"docs":{},"在":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"把":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}},"适":{"docs":{},"合":{"docs":{},"内":{"docs":{},"存":{"docs":{},"敏":{"docs":{},"感":{"docs":{},"以":{"docs":{},"及":{"docs":{},"对":{"docs":{},"实":{"docs":{},"时":{"docs":{},"性":{"docs":{},"要":{"docs":{},"求":{"docs":{},"很":{"docs":{},"高":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"。":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"随":{"docs":{},"着":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"推":{"docs":{},"移":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"而":{"docs":{},"造":{"docs":{},"成":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"。":{"docs":{},"后":{"docs":{},"文":{"docs":{},"会":{"docs":{},"介":{"docs":{},"绍":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"于":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"求":{"docs":{},"出":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"这":{"docs":{},"里":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"要":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"支":{"docs":{},"持":{"docs":{},"；":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}},"多":{"docs":{},"重":{"docs":{},"继":{"docs":{},"承":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"继":{"docs":{},"承":{"docs":{},"了":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"放":{"docs":{},"入":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}},"用":{"docs":{},"担":{"docs":{},"心":{"docs":{},"没":{"docs":{},"有":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"而":{"docs":{},"导":{"docs":{},"致":{"docs":{},"死":{"docs":{},"锁":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}},"行":{"docs":{},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}},"会":{"docs":{},"。":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}},"为":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"负":{"docs":{},"数":{"docs":{},"的":{"docs":{},"前":{"docs":{},"提":{"docs":{},"下":{"docs":{},"我":{"docs":{},"们":{"docs":{},"调":{"docs":{},"用":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}}}}}}}}}}},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"则":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}},"恰":{"docs":{},"当":{"docs":{},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"返":{"docs":{},"回":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"接":{"docs":{},"口":{"docs":{},"想":{"docs":{},"要":{"docs":{},"添":{"docs":{},"加":{"docs":{},"新":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"要":{"docs":{},"修":{"docs":{},"改":{"docs":{},"所":{"docs":{},"有":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"该":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"类":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"完":{"docs":{},"全":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"的":{"docs":{},"类":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"它":{"docs":{},"不":{"docs":{},"能":{"docs":{},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"都":{"docs":{},"乘":{"docs":{},"以":{"2":{"docs":{},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}},"docs":{}}}}}}}}}},"后":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}},"在":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"把":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287}}}}}},"还":{"docs":{},"要":{"docs":{},"求":{"docs":{},"其":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"。":{"docs":{},"在":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}}}}}}}}},"间":{"docs":{},"，":{"docs":{},"移":{"docs":{},"动":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"这":{"docs":{},"次":{"docs":{},"我":{"docs":{},"们":{"docs":{},"直":{"docs":{},"接":{"docs":{},"在":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"上":{"docs":{},"完":{"docs":{},"成":{"docs":{},"复":{"docs":{},"制":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"接":{"docs":{},"关":{"docs":{},"系":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}}}}}}},"宽":{"docs":{},"度":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"中":{"docs":{},"心":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"中":{"docs":{},"心":{"docs":{},"并":{"docs":{},"对":{"docs":{},"其":{"docs":{},"进":{"docs":{},"行":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"，":{"docs":{},"在":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"时":{"docs":{},"检":{"docs":{},"查":{"docs":{},"它":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"。":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"下":{"docs":{},"是":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}},"使":{"docs":{},"用":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}},"模":{"docs":{},"拟":{"docs":{},"了":{"docs":{},"对":{"docs":{},"某":{"docs":{},"个":{"docs":{},"服":{"docs":{},"务":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"请":{"docs":{},"求":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"只":{"docs":{},"能":{"docs":{},"有":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}},"是":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}}}}},"使":{"docs":{},"用":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}},"上":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"了":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"及":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}},"减":{"docs":{},"小":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"和":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"等":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}}}},"和":{"docs":{},"。":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}}},"作":{"docs":{},"为":{"docs":{},"新":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"右":{"docs":{},"上":{"docs":{},"角":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{},"数":{"docs":{},"字":{"docs":{},"等":{"docs":{},"于":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}},"增":{"docs":{},"大":{"docs":{},"和":{"docs":{},"；":{"docs":{},"当":{"docs":{},"和":{"docs":{},"大":{"docs":{},"于":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}}}}}}},"求":{"docs":{},"出":{"docs":{},"相":{"docs":{},"对":{"docs":{},"于":{"docs":{},"该":{"docs":{},"位":{"docs":{},"置":{"docs":{},"左":{"docs":{},"边":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"和":{"docs":{},"右":{"docs":{},"边":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"相":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"左":{"docs":{},"边":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"和":{"docs":{},"右":{"docs":{},"边":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"事":{"docs":{},"先":{"docs":{},"保":{"docs":{},"存":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"即":{"docs":{},"利":{"docs":{},"用":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"。":{"docs":{},"建":{"docs":{},"立":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.004149377593360996},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"一":{"docs":{},"共":{"docs":{},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"（":{"docs":{},"前":{"docs":{},"提":{"docs":{},"是":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"：":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}},"接":{"docs":{},"口":{"docs":{},"：":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}},"选":{"docs":{},"择":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}},"了":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"降":{"docs":{},"低":{"docs":{},"重":{"docs":{},"新":{"docs":{},"计":{"docs":{},"算":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"机":{"docs":{},"制":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"并":{"docs":{},"发":{"docs":{},"更":{"docs":{},"新":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"核":{"docs":{},"心":{"docs":{},"类":{"docs":{},"为":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}}}}}}}}}}}}}}}}},"拉":{"docs":{},"链":{"docs":{},"法":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"存":{"docs":{},"放":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"值":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"新":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"插":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"部":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"较":{"docs":{},"少":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"也":{"docs":{},"是":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"弱":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"在":{"docs":{},"于":{"docs":{},"，":{"docs":{},"当":{"docs":{},"没":{"docs":{},"有":{"docs":{},"强":{"docs":{},"引":{"docs":{},"用":{"docs":{},"指":{"docs":{},"向":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"地":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"类":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"。":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"代":{"docs":{},"价":{"docs":{},"很":{"docs":{},"高":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"效":{"docs":{},"地":{"docs":{},"利":{"docs":{},"用":{"docs":{},"有":{"docs":{},"限":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"启":{"docs":{},"动":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"栈":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}}}}}}}}}},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"查":{"docs":{},"找":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"不":{"docs":{},"变":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"引":{"docs":{},"用":{"docs":{},"其":{"docs":{},"它":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"被":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"本":{"docs":{},"身":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"值":{"docs":{},"不":{"docs":{},"变":{"docs":{},"；":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}},"得":{"docs":{},"线":{"docs":{},"程":{"docs":{},"等":{"docs":{},"待":{"docs":{},"某":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"满":{"docs":{},"足":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"时":{"docs":{},"会":{"docs":{},"被":{"docs":{},"挂":{"docs":{},"起":{"docs":{},"，":{"docs":{},"当":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"运":{"docs":{},"行":{"docs":{},"使":{"docs":{},"得":{"docs":{},"这":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"满":{"docs":{},"足":{"docs":{},"时":{"docs":{},"，":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"耦":{"docs":{},"合":{"docs":{},"度":{"docs":{},"更":{"docs":{},"低":{"docs":{},"，":{"docs":{},"且":{"docs":{},"实":{"docs":{},"现":{"docs":{},"更":{"docs":{},"优":{"docs":{},"雅":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"更":{"docs":{},"简":{"docs":{},"洁":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}},"值":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"也":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}},"经":{"docs":{},"常":{"docs":{},"被":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}},"对":{"docs":{},"桶":{"docs":{},"个":{"docs":{},"数":{"docs":{},"取":{"docs":{},"模":{"docs":{},"：":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"%":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}},"来":{"docs":{},"调":{"docs":{},"整":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"空":{"docs":{},"间":{"docs":{},"效":{"docs":{},"率":{"docs":{},"和":{"docs":{},"时":{"docs":{},"间":{"docs":{},"效":{"docs":{},"率":{"docs":{},"都":{"docs":{},"能":{"docs":{},"得":{"docs":{},"到":{"docs":{},"保":{"docs":{},"证":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}},"它":{"docs":{},"的":{"docs":{},"值":{"docs":{},"被":{"docs":{},"改":{"docs":{},"成":{"docs":{},"了":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}},"是":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"，":{"docs":{},"它":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"部":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"没":{"docs":{},"有":{"docs":{},"改":{"docs":{},"变":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"维":{"docs":{},"护":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"维":{"docs":{},"护":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"或":{"docs":{},"者":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"占":{"docs":{},"用":{"docs":{},"：":{"docs":{},"在":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"复":{"docs":{},"制":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"内":{"docs":{},"存":{"docs":{},"占":{"docs":{},"用":{"docs":{},"为":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"两":{"docs":{},"倍":{"docs":{},"左":{"docs":{},"右":{"docs":{},"；":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"型":{"docs":{},"中":{"docs":{},"，":{"docs":{},"允":{"docs":{},"许":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"和":{"docs":{},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"对":{"docs":{},"指":{"docs":{},"令":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"过":{"docs":{},"程":{"docs":{},"不":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"到":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"却":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"到":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"并":{"docs":{},"发":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"正":{"docs":{},"确":{"docs":{},"性":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}},"允":{"docs":{},"许":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"将":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"在":{"docs":{},"变":{"docs":{},"量":{"docs":{},"修":{"docs":{},"改":{"docs":{},"后":{"docs":{},"将":{"docs":{},"新":{"docs":{},"值":{"docs":{},"同":{"docs":{},"步":{"docs":{},"回":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"在":{"docs":{},"变":{"docs":{},"量":{"docs":{},"读":{"docs":{},"取":{"docs":{},"前":{"docs":{},"从":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"刷":{"docs":{},"新":{"docs":{},"变":{"docs":{},"量":{"docs":{},"值":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"三":{"docs":{},"大":{"docs":{},"特":{"docs":{},"性":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}},"约":{"docs":{},"定":{"docs":{},"：":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"都":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"还":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"工":{"docs":{},"作":{"docs":{},"内":{"docs":{},"存":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"高":{"docs":{},"速":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"或":{"docs":{},"者":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"中":{"docs":{},"，":{"docs":{},"保":{"docs":{},"存":{"docs":{},"了":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"副":{"docs":{},"本":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"试":{"docs":{},"图":{"docs":{},"屏":{"docs":{},"蔽":{"docs":{},"各":{"docs":{},"种":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"和":{"docs":{},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"访":{"docs":{},"问":{"docs":{},"差":{"docs":{},"异":{"docs":{},"，":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"让":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"间":{"docs":{},"交":{"docs":{},"互":{"docs":{},"操":{"docs":{},"作":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"副":{"docs":{},"本":{"docs":{},"，":{"docs":{},"且":{"docs":{},"该":{"docs":{},"副":{"docs":{},"本":{"docs":{},"只":{"docs":{},"能":{"docs":{},"由":{"docs":{},"当":{"docs":{},"前":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"线":{"docs":{},"程":{"docs":{},"通":{"docs":{},"过":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}},"维":{"docs":{},"护":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"测":{"docs":{},"试":{"docs":{},"类":{"docs":{},"，":{"docs":{},"其":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"大":{"docs":{},"顶":{"docs":{},"堆":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}},"新":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"用":{"docs":{},"来":{"docs":{},"保":{"docs":{},"存":{"docs":{},"相":{"docs":{},"加":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"将":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"相":{"docs":{},"加":{"docs":{},"得":{"docs":{},"到":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"从":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}},"后":{"docs":{},"尚":{"docs":{},"未":{"docs":{},"启":{"docs":{},"动":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"匿":{"docs":{},"名":{"docs":{},"内":{"docs":{},"部":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}},"可":{"docs":{},"以":{"docs":{},"缓":{"docs":{},"存":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"用":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"任":{"docs":{},"何":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"异":{"docs":{},"常":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"类":{"docs":{},"，":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"种":{"docs":{},"：":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"比":{"docs":{},"较":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"将":{"docs":{},"较":{"docs":{},"小":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"递":{"docs":{},"归":{"docs":{},"构":{"docs":{},"造":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"将":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"返":{"docs":{},"回":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"按":{"docs":{},"照":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"当":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"为":{"docs":{"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"键":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"使":{"docs":{},"用":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"结":{"docs":{},"束":{"docs":{},"任":{"docs":{},"务":{"docs":{},"之":{"docs":{},"后":{"docs":{},"自":{"docs":{},"己":{"docs":{},"结":{"docs":{},"束":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"产":{"docs":{},"生":{"docs":{},"了":{"docs":{},"异":{"docs":{},"常":{"docs":{},"而":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"通":{"docs":{},"过":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}},"被":{"docs":{},"重":{"docs":{},"复":{"docs":{},"使":{"docs":{},"用":{"docs":{},"以":{"docs":{},"执":{"docs":{},"行":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"节":{"docs":{},"省":{"docs":{},"了":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"创":{"docs":{},"建":{"docs":{},"和":{"docs":{},"销":{"docs":{},"毁":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"成":{"docs":{},"本":{"docs":{},"。":{"docs":{},"而":{"docs":{},"且":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"非":{"docs":{},"常":{"docs":{},"巧":{"docs":{},"妙":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"假":{"docs":{},"如":{"docs":{},"我":{"docs":{},"们":{"docs":{},"来":{"docs":{},"设":{"docs":{},"计":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"分":{"docs":{},"派":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"当":{"docs":{},"发":{"docs":{},"现":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"从":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"交":{"docs":{},"给":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"，":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"采":{"docs":{},"用":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"样":{"docs":{},"会":{"docs":{},"要":{"docs":{},"额":{"docs":{},"外":{"docs":{},"地":{"docs":{},"对":{"docs":{},"任":{"docs":{},"务":{"docs":{},"分":{"docs":{},"派":{"docs":{},"线":{"docs":{},"程":{"docs":{},"进":{"docs":{},"行":{"docs":{},"管":{"docs":{},"理":{"docs":{},"，":{"docs":{},"无":{"docs":{},"形":{"docs":{},"地":{"docs":{},"会":{"docs":{},"增":{"docs":{},"加":{"docs":{},"难":{"docs":{},"度":{"docs":{},"和":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"直":{"docs":{},"接":{"docs":{},"让":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"去":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"面":{"docs":{},"取":{"docs":{},"任":{"docs":{},"务":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"时":{"docs":{},"绑":{"docs":{},"定":{"docs":{},"多":{"docs":{},"个":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}},"指":{"docs":{},"定":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"更":{"docs":{},"加":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"。":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"示":{"docs":{},"例":{"docs":{},"中":{"docs":{},"的":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"到":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"以":{"docs":{},"非":{"docs":{},"常":{"docs":{},"方":{"docs":{},"便":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"满":{"docs":{},"足":{"docs":{},"该":{"docs":{},"需":{"docs":{},"求":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}},"先":{"docs":{},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"从":{"docs":{},"头":{"docs":{},"到":{"docs":{},"尾":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"找":{"docs":{},"到":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"和":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"按":{"docs":{},"照":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"放":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"。":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"求":{"docs":{},"出":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"和":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"确":{"docs":{},"定":{"docs":{},"新":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"指":{"docs":{},"示":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}},"类":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}},"借":{"docs":{},"助":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}},"变":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},"性":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"能":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}},"正":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"正":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}},"的":{"docs":{},"几":{"docs":{},"个":{"docs":{},"取":{"docs":{},"值":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"等":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}},"为":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}},"运":{"docs":{},"行":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"中":{"docs":{},"断":{"docs":{},"，":{"docs":{},"而":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}},"用":{"docs":{},"于":{"docs":{},"异":{"docs":{},"步":{"docs":{},"获":{"docs":{},"取":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"或":{"docs":{},"取":{"docs":{},"消":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"。":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"计":{"docs":{},"算":{"docs":{},"任":{"docs":{},"务":{"docs":{},"需":{"docs":{},"要":{"docs":{},"执":{"docs":{},"行":{"docs":{},"很":{"docs":{},"长":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"见":{"docs":{},"性":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}},"指":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"修":{"docs":{},"改":{"docs":{},"了":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"能":{"docs":{},"够":{"docs":{},"立":{"docs":{},"即":{"docs":{},"得":{"docs":{},"知":{"docs":{},"这":{"docs":{},"个":{"docs":{},"修":{"docs":{},"改":{"docs":{},"。":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"入":{"docs":{},"代":{"docs":{},"码":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"有":{"docs":{},"一":{"docs":{},"些":{"docs":{},"共":{"docs":{},"同":{"docs":{},"的":{"docs":{},"特":{"docs":{},"征":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"不":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"堆":{"docs":{},"上":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"和":{"docs":{},"公":{"docs":{},"用":{"docs":{},"的":{"docs":{},"系":{"docs":{},"统":{"docs":{},"资":{"docs":{},"源":{"docs":{},"、":{"docs":{},"用":{"docs":{},"到":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"量":{"docs":{},"都":{"docs":{},"由":{"docs":{},"参":{"docs":{},"数":{"docs":{},"中":{"docs":{},"传":{"docs":{},"入":{"docs":{},"、":{"docs":{},"不":{"docs":{},"调":{"docs":{},"用":{"docs":{},"非":{"docs":{},"可":{"docs":{},"重":{"docs":{},"入":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"等":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{},"通":{"docs":{},"过":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}},"防":{"docs":{},"止":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}},"知":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}},"和":{"1":{"docs":{},"进":{"docs":{},"行":{"docs":{},"位":{"docs":{},"与":{"docs":{},"运":{"docs":{},"算":{"docs":{},"判":{"docs":{},"断":{"docs":{},"其":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"位":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"1":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"1":{"docs":{},"则":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.009324009324009324},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.013392857142857142},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.034482758620689655},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.01532567049808429},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.008298755186721992},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.011494252873563218},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.008097165991902834},"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.10344827586206896},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.018433179723502304},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.014354066985645933},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.014563106796116505},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.014705882352941176},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.02127659574468085},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.018867924528301886},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.011627906976744186},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}},"i":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}},"扩":{"docs":{},"容":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"：":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"、":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"、":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"新":{"docs":{},"值":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"其":{"docs":{},"它":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}},"为":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}},"s":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":10}}}}}}}}},"数":{"docs":{},"字":{"1":{"5":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}},"docs":{}},"2":{"docs":{},"，":{"docs":{},"该":{"docs":{},"函":{"docs":{},"数":{"docs":{},"将":{"docs":{},"返":{"docs":{},"回":{"docs":{},"左":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"两":{"docs":{},"位":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}}}}}},"docs":{}}},"指":{"docs":{},"示":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"模":{"docs":{},"式":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}},"出":{"docs":{},"栈":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}},"队":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}},"树":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}},"结":{"docs":{},"果":{"docs":{},"集":{"docs":{},"合":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}},"因":{"docs":{},"为":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},"每":{"docs":{},"个":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"保":{"docs":{},"存":{"docs":{},"左":{"docs":{},"边":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"保":{"docs":{},"存":{"docs":{},"右":{"docs":{},"边":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"p":{"1":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}},"一":{"docs":{},"个":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}},"变":{"docs":{},"量":{"docs":{},"初":{"docs":{},"次":{"docs":{},"读":{"docs":{},"取":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"是":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}},"段":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"所":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"必":{"docs":{},"须":{"docs":{},"与":{"docs":{},"其":{"docs":{},"他":{"docs":{},"代":{"docs":{},"码":{"docs":{},"共":{"docs":{},"享":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"看":{"docs":{},"看":{"docs":{},"这":{"docs":{},"些":{"docs":{},"共":{"docs":{},"享":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"否":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"共":{"docs":{},"享":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"可":{"docs":{},"见":{"docs":{},"范":{"docs":{},"围":{"docs":{},"限":{"docs":{},"制":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"内":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"，":{"docs":{},"无":{"docs":{},"须":{"docs":{},"同":{"docs":{},"步":{"docs":{},"也":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"不":{"docs":{},"出":{"docs":{},"现":{"docs":{},"数":{"docs":{},"据":{"docs":{},"争":{"docs":{},"用":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"系":{"docs":{},"列":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"对":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"反":{"docs":{},"复":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"解":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"频":{"docs":{},"繁":{"docs":{},"的":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"操":{"docs":{},"作":{"docs":{},"就":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"性":{"docs":{},"能":{"docs":{},"损":{"docs":{},"耗":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"采":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"改":{"docs":{},"变":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"值":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"原":{"docs":{},"对":{"docs":{},"象":{"docs":{},"该":{"docs":{},"字":{"docs":{},"段":{"docs":{},"值":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"改":{"docs":{},"变":{"docs":{},"的":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"地":{"docs":{},"址":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"。":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"尝":{"docs":{},"试":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"只":{"docs":{},"想":{"docs":{},"中":{"docs":{},"断":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"目":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"小":{"docs":{},"于":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},"达":{"docs":{},"到":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"中":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"已":{"docs":{},"经":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"，":{"docs":{},"将":{"docs":{},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{},"赋":{"docs":{},"为":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"量":{"docs":{},"大":{"docs":{},"于":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}}}}},"操":{"docs":{},"作":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"单":{"docs":{},"看":{"docs":{},"其":{"docs":{},"中":{"docs":{},"某":{"docs":{},"一":{"docs":{},"点":{"docs":{},"，":{"docs":{},"替":{"docs":{},"代":{"docs":{},"方":{"docs":{},"法":{"docs":{},"很":{"docs":{},"多":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"可":{"docs":{},"通":{"docs":{},"过":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"内":{"docs":{},"创":{"docs":{},"建":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"可":{"docs":{},"实":{"docs":{},"现":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"可":{"docs":{},"实":{"docs":{},"现":{"docs":{},"变":{"docs":{},"量":{"docs":{},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"间":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"。":{"docs":{},"但":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"同":{"docs":{},"时":{"docs":{},"满":{"docs":{},"足":{"docs":{},"变":{"docs":{},"量":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"的":{"docs":{},"隔":{"docs":{},"离":{"docs":{},"与":{"docs":{},"方":{"docs":{},"法":{"docs":{},"间":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"再":{"docs":{},"合":{"docs":{},"适":{"docs":{},"不":{"docs":{},"过":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"按":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"就":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"间":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"数":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"把":{"docs":{},"它":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"后":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}},"顺":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"向":{"docs":{},"后":{"docs":{},"继":{"docs":{},"续":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"统":{"docs":{},"计":{"docs":{},"其":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"求":{"docs":{},"调":{"docs":{},"整":{"docs":{},"后":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"和":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"，":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"和":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"相":{"docs":{},"对":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"保":{"docs":{},"持":{"docs":{},"不":{"docs":{},"变":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"做":{"docs":{},"呢":{"docs":{},"？":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"本":{"docs":{},"身":{"docs":{},"已":{"docs":{},"经":{"docs":{},"是":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"是":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"即":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"为":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"值":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}},"奇":{"docs":{},"数":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"和":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"不":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"判":{"docs":{},"断":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"比":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"的":{"docs":{},"值":{"docs":{},"大":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"不":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"作":{"docs":{},"为":{"docs":{},"新":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}},"采":{"docs":{},"用":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"法":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"找":{"docs":{},"出":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"作":{"docs":{},"为":{"docs":{},"数":{"docs":{},"据":{"docs":{},"容":{"docs":{},"器":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"再":{"docs":{},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}},"以":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}},"l":{"docs":{},"o":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"1":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}},"docs":{},"t":{"2":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}},"docs":{}}}}},"不":{"docs":{},"要":{"docs":{},"求":{"docs":{},"返":{"docs":{},"回":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"而":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"值":{"docs":{},"的":{"docs":{},"话":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"法":{"docs":{},"做":{"docs":{},"。":{"docs":{},"先":{"docs":{},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"用":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"文":{"docs":{},"所":{"docs":{},"述":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}},"何":{"docs":{},"解":{"docs":{},"决":{"docs":{},"该":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"？":{"docs":{},"如":{"docs":{},"果":{"docs":{},"从":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"读":{"docs":{},"出":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"值":{"docs":{},"排":{"docs":{},"序":{"docs":{},"之":{"docs":{},"后":{"docs":{},"位":{"docs":{},"于":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"从":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"读":{"docs":{},"出":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"值":{"docs":{},"排":{"docs":{},"序":{"docs":{},"之":{"docs":{},"后":{"docs":{},"中":{"docs":{},"间":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"值":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"值":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"以":{"docs":{},"来":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"就":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"了":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"求":{"docs":{},"出":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"后":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"；":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"对":{"docs":{},"象":{"docs":{},"）":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":10}}}}}},"流":{"docs":{},"中":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":10}}}}}}}}}}}}}}}},"段":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}},"存":{"docs":{},"储":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}},"着":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"而":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"（":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"）":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"表":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}},"。":{"docs":{},"它":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"四":{"docs":{},"个":{"docs":{},"字":{"docs":{},"段":{"docs":{},"，":{"docs":{},"从":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}},"结":{"docs":{},"构":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}},"链":{"docs":{},"表":{"docs":{},"节":{"docs":{},"点":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}}}}}},"指":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"记":{"docs":{},"录":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}},"在":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"为":{"docs":{},"：":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"对":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},"象":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"创":{"docs":{},"建":{"docs":{},"过":{"docs":{},"了":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"会":{"docs":{},"从":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}},"的":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}},"那":{"docs":{},"一":{"docs":{},"方":{"docs":{},"以":{"docs":{},"为":{"docs":{},"现":{"docs":{},"在":{"docs":{},"连":{"docs":{},"接":{"docs":{},"的":{"docs":{},"是":{"docs":{},"其":{"docs":{},"它":{"docs":{},"主":{"docs":{},"机":{"docs":{},"，":{"docs":{},"而":{"docs":{},"实":{"docs":{},"际":{"docs":{},"情":{"docs":{},"况":{"docs":{},"却":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"先":{"docs":{},"行":{"docs":{},"发":{"docs":{},"生":{"docs":{},"于":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}},"值":{"docs":{},"（":{"docs":{},"即":{"docs":{},"为":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"例":{"docs":{},"）":{"docs":{},"以":{"docs":{},"及":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}},"连":{"docs":{},"续":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}},"进":{"docs":{},"行":{"docs":{},"转":{"docs":{},"型":{"docs":{},"；":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}},"时":{"docs":{},"就":{"docs":{},"指":{"docs":{},"定":{"docs":{},"大":{"docs":{},"概":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"减":{"docs":{},"少":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"调":{"docs":{},"用":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},"直":{"docs":{},"接":{"docs":{},"将":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"它":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"内":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"由":{"docs":{},"于":{"docs":{},"被":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"且":{"docs":{},"只":{"docs":{},"有":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"自":{"docs":{},"己":{"docs":{},"可":{"docs":{},"以":{"docs":{},"访":{"docs":{},"问":{"docs":{},"它":{"docs":{},"，":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"会":{"docs":{},"访":{"docs":{},"问":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}},"若":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"不":{"docs":{},"为":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525}}},"终":{"docs":{},"结":{"docs":{},"规":{"docs":{},"则":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}},"与":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"，":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},"这":{"docs":{},"一":{"docs":{},"点":{"docs":{},"与":{"docs":{},"上":{"docs":{},"文":{"docs":{},"分":{"docs":{},"析":{"docs":{},"一":{"docs":{},"致":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"应":{"docs":{},"实":{"docs":{},"例":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"添":{"docs":{},"加":{"docs":{},"进":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}},"再":{"docs":{},"将":{"docs":{},"映":{"docs":{},"射":{"docs":{},"添":{"docs":{},"加":{"docs":{},"其":{"docs":{},"中":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}},"无":{"docs":{},"法":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}},"本":{"docs":{},"身":{"docs":{},"从":{"docs":{},"而":{"docs":{},"防":{"docs":{},"止":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}},"（":{"docs":{},"即":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}},"于":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"=":{"docs":{},"=":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"=":{"docs":{},"=":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"些":{"docs":{},"看":{"docs":{},"起":{"docs":{},"来":{"docs":{},"没":{"docs":{},"有":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"的":{"docs":{},"加":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"代":{"docs":{},"码":{"docs":{},"就":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"加":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"：":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"在":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"不":{"docs":{},"同":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{},"从":{"docs":{},"输":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"交":{"docs":{},"叉":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}},"虽":{"docs":{},"然":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},"docs":{}}}}}}}}}}}},"集":{"docs":{},"合":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"不":{"docs":{},"再":{"docs":{},"被":{"docs":{},"使":{"docs":{},"用":{"docs":{},"且":{"docs":{},"已":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"点":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"它":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"很":{"docs":{},"多":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"内":{"docs":{},"部":{"docs":{},"构":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"独":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"点":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"满":{"docs":{},"足":{"docs":{},"第":{"docs":{},"一":{"docs":{},"点":{"docs":{},"（":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"）":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"下":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"方":{"docs":{},"法":{"docs":{},"间":{"docs":{},"引":{"docs":{},"用":{"docs":{},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"何":{"docs":{},"不":{"docs":{},"是":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"称":{"docs":{},"性":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":10}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}},"这":{"docs":{},"部":{"docs":{},"分":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"进":{"docs":{},"行":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}},"一":{"docs":{},"个":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"线":{"docs":{},"程":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"应":{"docs":{},"了":{"docs":{},"五":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"状":{"docs":{},"态":{"docs":{},"在":{"docs":{},"右":{"docs":{},"侧":{"docs":{},"的":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}},"右":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"并":{"docs":{},"统":{"docs":{},"计":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"并":{"docs":{},"统":{"docs":{},"计":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}},"圆":{"docs":{},"括":{"docs":{},"号":{"docs":{},"，":{"docs":{},"生":{"docs":{},"成":{"docs":{},"所":{"docs":{},"有":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"括":{"docs":{},"号":{"docs":{},"组":{"docs":{},"合":{"docs":{},"。":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"合":{"docs":{},"并":{"docs":{},"一":{"docs":{},"对":{"docs":{},"，":{"docs":{},"合":{"docs":{},"并":{"docs":{},"完":{"docs":{},"成":{"docs":{},"后":{"docs":{},"得":{"docs":{},"到":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"做":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"换":{"docs":{},"。":{"docs":{},"在":{"docs":{},"求":{"docs":{},"解":{"docs":{},"第":{"docs":{},"一":{"docs":{},"步":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"有":{"docs":{},"内":{"docs":{},"容":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"满":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}},"有":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}},"复":{"docs":{},"制":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"成":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"和":{"docs":{},"复":{"docs":{},"制":{"docs":{},"链":{"docs":{},"表":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"复":{"docs":{},"制":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"属":{"docs":{},"于":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"期":{"docs":{},"会":{"docs":{},"在":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}},"非":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"放":{"docs":{},"到":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"了":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"）":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"能":{"docs":{},"看":{"docs":{},"见":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}},"而":{"docs":{},"无":{"docs":{},"法":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"造":{"docs":{},"成":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}},"入":{"docs":{},"了":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"和":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"让":{"docs":{},"锁":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"了":{"docs":{},"四":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"：":{"docs":{},"无":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{},"（":{"docs":{},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"）":{"docs":{},"、":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{},"（":{"docs":{},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"）":{"docs":{},"、":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{},"（":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"节":{"docs":{},"点":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}},"一":{"docs":{},"个":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}},"所":{"docs":{},"有":{"docs":{},"非":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"结":{"docs":{},"束":{"docs":{},"时":{"docs":{},"，":{"docs":{},"程":{"docs":{},"序":{"docs":{},"也":{"docs":{},"就":{"docs":{},"终":{"docs":{},"止":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"会":{"docs":{},"杀":{"docs":{},"死":{"docs":{},"所":{"docs":{},"有":{"docs":{},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"述":{"docs":{},"参":{"docs":{},"数":{"docs":{},"从":{"docs":{},"小":{"docs":{},"变":{"docs":{},"大":{"docs":{},"时":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"后":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"处":{"docs":{},"于":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"处":{"docs":{},"于":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"已":{"docs":{},"满":{"docs":{},"并":{"docs":{},"且":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"目":{"docs":{},"达":{"docs":{},"到":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}},"持":{"docs":{},"有":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"长":{"docs":{},"期":{"docs":{},"不":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"正":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"选":{"docs":{},"择":{"docs":{},"放":{"docs":{},"弃":{"docs":{},"等":{"docs":{},"待":{"docs":{},"，":{"docs":{},"改":{"docs":{},"为":{"docs":{},"处":{"docs":{},"理":{"docs":{},"其":{"docs":{},"他":{"docs":{},"事":{"docs":{},"情":{"docs":{},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"一":{"docs":{},"起":{"docs":{},"工":{"docs":{},"作":{"docs":{},"去":{"docs":{},"解":{"docs":{},"决":{"docs":{},"某":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"某":{"docs":{},"些":{"docs":{},"部":{"docs":{},"分":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"其":{"docs":{},"它":{"docs":{},"部":{"docs":{},"分":{"docs":{},"之":{"docs":{},"前":{"docs":{},"完":{"docs":{},"成":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"线":{"docs":{},"程":{"docs":{},"进":{"docs":{},"行":{"docs":{},"协":{"docs":{},"调":{"docs":{},"。":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"尝":{"docs":{},"试":{"docs":{},"获":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"标":{"docs":{},"记":{"docs":{},"为":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"去":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"获":{"docs":{},"取":{"docs":{},"这":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"状":{"docs":{},"态":{"docs":{},"就":{"docs":{},"宣":{"docs":{},"告":{"docs":{},"结":{"docs":{},"束":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"撤":{"docs":{},"销":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"（":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"被":{"docs":{},"线":{"docs":{},"程":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"进":{"docs":{},"入":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"标":{"docs":{},"记":{"docs":{},"为":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}},"然":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"统":{"docs":{},"计":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},",":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}},"前":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.010638297872340425}}}}}}}}}}},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"层":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}},"奇":{"docs":{},"数":{"docs":{},"层":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}},"节":{"docs":{},"点":{"docs":{},"在":{"docs":{},"中":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}}}}},"最":{"docs":{},"长":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"0":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"并":{"docs":{},"加":{"1":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"是":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.011267605633802818},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123},"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"才":{"docs":{},"可":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}},"是":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}},"等":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"。":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"网":{"docs":{},"络":{"docs":{},"连":{"docs":{},"接":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"内":{"docs":{},"部":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"。":{"docs":{},"在":{"docs":{},"将":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"传":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"，":{"docs":{},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"是":{"docs":{},"将":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"以":{"docs":{},"值":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"传":{"docs":{},"递":{"docs":{},"到":{"docs":{},"形":{"docs":{},"参":{"docs":{},"中":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"使":{"docs":{},"指":{"docs":{},"针":{"docs":{},"引":{"docs":{},"用":{"docs":{},"其":{"docs":{},"它":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"此":{"docs":{},"时":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"是":{"docs":{},"完":{"docs":{},"全":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"在":{"docs":{},"一":{"docs":{},"方":{"docs":{},"改":{"docs":{},"变":{"docs":{},"其":{"docs":{},"所":{"docs":{},"指":{"docs":{},"向":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"时":{"docs":{},"对":{"docs":{},"另":{"docs":{},"一":{"docs":{},"方":{"docs":{},"没":{"docs":{},"有":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"即":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"被":{"docs":{},"当":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"存":{"docs":{},"放":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"顶":{"docs":{},"层":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"在":{"docs":{},"它":{"docs":{},"里":{"docs":{},"面":{"docs":{},"只":{"docs":{},"声":{"docs":{},"明":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"类":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"会":{"docs":{},"对":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"否":{"docs":{},"等":{"docs":{},"价":{"docs":{},"。":{"docs":{},"等":{"docs":{},"价":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"一":{"docs":{},"定":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"等":{"docs":{},"价":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"闭":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}},"起":{"docs":{},"到":{"docs":{},"什":{"docs":{},"么":{"docs":{},"作":{"docs":{},"用":{"docs":{},"的":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}},"否":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{},"需":{"docs":{},"要":{"docs":{},"抛":{"docs":{},"出":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}},"指":{"docs":{},"向":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"的":{"docs":{},"话":{"docs":{},"说":{"docs":{},"明":{"docs":{},"当":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"已":{"docs":{},"经":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"进":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"说":{"docs":{},"明":{"docs":{},"这":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"其":{"docs":{},"他":{"docs":{},"线":{"docs":{},"程":{"docs":{},"线":{"docs":{},"程":{"docs":{},"抢":{"docs":{},"占":{"docs":{},"了":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"两":{"docs":{},"条":{"docs":{},"以":{"docs":{},"上":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"争":{"docs":{},"用":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"那":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"就":{"docs":{},"不":{"docs":{},"再":{"docs":{},"有":{"docs":{},"效":{"docs":{},"，":{"docs":{},"要":{"docs":{},"膨":{"docs":{},"胀":{"docs":{},"为":{"docs":{},"重":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}}}}}},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"和":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"思":{"docs":{},"路":{"docs":{},"把":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"分":{"docs":{},"为":{"docs":{},"匹":{"docs":{},"配":{"0":{"docs":{},"个":{"docs":{},"，":{"docs":{},"匹":{"docs":{},"配":{"1":{"docs":{},"个":{"docs":{},"，":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"多":{"docs":{},"个":{"docs":{},"相":{"docs":{},"比":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"把":{"docs":{},"匹":{"docs":{},"配":{"1":{"docs":{},"个":{"docs":{},"和":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"多":{"docs":{},"个":{"docs":{},"在":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"上":{"docs":{},"统":{"docs":{},"一":{"docs":{},"成":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"多":{"docs":{},"个":{"docs":{},"了":{"docs":{},"。":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}},"；":{"docs":{},"要":{"docs":{},"么":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"多":{"docs":{},"个":{"docs":{},"，":{"docs":{},"即":{"docs":{},"从":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}}}},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"海":{"docs":{},"量":{"docs":{},"数":{"docs":{},"据":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"修":{"docs":{},"改":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}}},"在":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}},"可":{"docs":{},"以":{"docs":{},"构":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}}}}}}},"大":{"docs":{},"于":{"docs":{},"原":{"docs":{},"始":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"开":{"docs":{},"销":{"docs":{},"就":{"docs":{},"比":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"那":{"docs":{},"两":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"1":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"异":{"docs":{},"或":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"链":{"docs":{},"表":{"docs":{},"是":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"比":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"，":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},",":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"总":{"docs":{},"数":{"docs":{},"，":{"docs":{},"选":{"docs":{},"取":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"需":{"docs":{},"要":{"docs":{},"比":{"docs":{},"较":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"源":{"docs":{},"码":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"到":{"docs":{},"，":{"docs":{},"在":{"docs":{},"将":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"作":{"docs":{},"为":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"参":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"完":{"docs":{},"全":{"docs":{},"复":{"docs":{},"制":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"允":{"docs":{},"许":{"docs":{},"用":{"docs":{},"户":{"docs":{},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"不":{"docs":{},"是":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}},"概":{"docs":{},"览":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}},"深":{"docs":{},"入":{"docs":{},"解":{"docs":{},"析":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"理":{"docs":{},"解":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}},"剖":{"docs":{},"析":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"实":{"docs":{},"现":{"docs":{},"原":{"docs":{},"理":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}},"拷":{"docs":{},"贝":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"用":{"docs":{},"做":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}},"记":{"docs":{},"录":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}},"控":{"docs":{},"制":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"等":{"docs":{},"待":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"互":{"docs":{},"相":{"docs":{},"等":{"docs":{},"待":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"到":{"docs":{},"达":{"docs":{},"时":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"线":{"docs":{},"程":{"docs":{},"才":{"docs":{},"会":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"扫":{"docs":{},"描":{"0":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}},"docs":{}}}},"于":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}},"存":{"docs":{},"储":{"docs":{},"对":{"docs":{},"象":{"docs":{},"分":{"docs":{},"代":{"docs":{},"年":{"docs":{},"龄":{"docs":{},"，":{"2":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}},"docs":{}}}}}},"哈":{"docs":{},"希":{"docs":{},"码":{"docs":{},"，":{"4":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}},"docs":{}}}}}}},"锁":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{},"，":{"1":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}},"docs":{}}}}}}}}},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}},"辅":{"docs":{},"助":{"docs":{},"栈":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808}}}}}}},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"完":{"docs":{},"成":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"入":{"docs":{},"队":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":10}}}}}}},"队":{"docs":{},"列":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"完":{"docs":{},"成":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"入":{"docs":{},"栈":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}},"安":{"docs":{},"全":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":10.002024291497976}},"指":{"docs":{},"的":{"docs":{},"是":{"docs":{},"：":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"管":{"docs":{},"以":{"docs":{},"何":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"访":{"docs":{},"问":{"docs":{},"某":{"docs":{},"个":{"docs":{},"类":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"在":{"docs":{},"主":{"docs":{},"调":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"都":{"docs":{},"能":{"docs":{},"表":{"docs":{},"现":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"几":{"docs":{},"种":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}},"。":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}},"基":{"docs":{},"础":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":10.001855287569573}}}},"池":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":10.00191570881226}},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}},"容":{"docs":{},"量":{"docs":{},"的":{"docs":{},"动":{"docs":{},"态":{"docs":{},"调":{"docs":{},"整":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}},"的":{"docs":{},"关":{"docs":{},"闭":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},"状":{"docs":{},"态":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}},"中":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}},"断":{"docs":{},"规":{"docs":{},"则":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"协":{"docs":{},"作":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":10.003508771929825}}}}}}},"会":{"docs":{},"等":{"docs":{},"待":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}},"先":{"docs":{},"启":{"docs":{},"动":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"在":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}},"的":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}},"输":{"docs":{},"出":{"docs":{},"。":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}},"先":{"docs":{},"于":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}},"结":{"docs":{},"束":{"docs":{},"才":{"docs":{},"继":{"docs":{},"续":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"最":{"docs":{},"后":{"docs":{},"能":{"docs":{},"够":{"docs":{},"保":{"docs":{},"证":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"它":{"docs":{},"所":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}},"只":{"docs":{},"能":{"docs":{},"直":{"docs":{},"接":{"docs":{},"操":{"docs":{},"作":{"docs":{},"工":{"docs":{},"作":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"值":{"docs":{},"传":{"docs":{},"递":{"docs":{},"需":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"来":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"启":{"docs":{},"动":{"docs":{},"规":{"docs":{},"则":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}},"本":{"docs":{},"地":{"docs":{},"存":{"docs":{},"储":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}},"经":{"docs":{},"常":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"放":{"docs":{},"入":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}},"典":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"是":{"docs":{},"造":{"docs":{},"成":{"docs":{},"自":{"docs":{},"身":{"docs":{},"业":{"docs":{},"务":{"docs":{},"混":{"docs":{},"乱":{"docs":{},"的":{"docs":{},"风":{"docs":{},"险":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}},"而":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"不":{"docs":{},"是":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287},"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}},"行":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"改":{"docs":{},"变":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"放":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"中":{"docs":{},"，":{"docs":{},"它":{"docs":{},"属":{"docs":{},"于":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}},"移":{"docs":{},"到":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"有":{"docs":{},"限":{"docs":{},"，":{"docs":{},"在":{"docs":{},"大":{"docs":{},"量":{"docs":{},"使":{"docs":{},"用":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"下":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"毕":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}}}}}}}}},"认":{"docs":{},"为":{"docs":{},"是":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}},"这":{"4":{"docs":{},"个":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"归":{"docs":{},"并":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"统":{"docs":{},"计":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"。":{"docs":{},"在":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}},"性":{"docs":{},"质":{"docs":{},"和":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"结":{"docs":{},"论":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"写":{"docs":{},"出":{"docs":{},"如":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"提":{"docs":{},"高":{"docs":{},"运":{"docs":{},"算":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"创":{"docs":{},"建":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"地":{"docs":{},"将":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"放":{"docs":{},"入":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}},"等":{"docs":{},"待":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"也":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"纯":{"docs":{},"代":{"docs":{},"码":{"docs":{},"（":{"docs":{},"p":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}},"方":{"docs":{},"式":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"则":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}}},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"操":{"docs":{},"作":{"docs":{},"整":{"docs":{},"体":{"docs":{},"上":{"docs":{},"看":{"docs":{},"不":{"docs":{},"具":{"docs":{},"备":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}},"些":{"docs":{},"单":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"具":{"docs":{},"备":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"类":{"docs":{},"简":{"docs":{},"化":{"docs":{},"了":{"docs":{},"编":{"docs":{},"码":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"而":{"docs":{},"用":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}}}}}}}}}},"里":{"docs":{},"并":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"的":{"docs":{},"锁":{"docs":{},"优":{"docs":{},"化":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"指":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"和":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"值":{"docs":{},"的":{"docs":{},"取":{"docs":{},"定":{"docs":{},"不":{"docs":{},"太":{"docs":{},"好":{"docs":{},"想":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"找":{"docs":{},"几":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"算":{"docs":{},"一":{"docs":{},"下":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"样":{"docs":{},"一":{"docs":{},"来":{"docs":{},"，":{"docs":{},"当":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"已":{"docs":{},"经":{"docs":{},"在":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"某":{"docs":{},"一":{"docs":{},"行":{"docs":{},"、":{"docs":{},"某":{"docs":{},"一":{"docs":{},"列":{"docs":{},"或":{"docs":{},"某":{"docs":{},"个":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"三":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{},"行":{"docs":{},"反":{"docs":{},"编":{"docs":{},"译":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"以":{"docs":{},"下":{"docs":{},"内":{"docs":{},"容":{"docs":{},"：":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},"。":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}},"封":{"docs":{},"装":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}},"了":{"docs":{},"详":{"docs":{},"细":{"docs":{},"地":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"，":{"docs":{},"不":{"docs":{},"过":{"docs":{},"在":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}},"很":{"docs":{},"多":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"锁":{"docs":{},"等":{"docs":{},"，":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"能":{"docs":{},"立":{"docs":{},"即":{"docs":{},"创":{"docs":{},"建":{"docs":{},"新":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}},"归":{"docs":{},"并":{"docs":{},"并":{"docs":{},"统":{"docs":{},"计":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"首":{"docs":{},"先":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}},"拼":{"docs":{},"接":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}},"制":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{},"r":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"某":{"docs":{},"一":{"docs":{},"位":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"组":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}},"入":{"docs":{},"方":{"docs":{},"法":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}}},"堆":{"docs":{},"中":{"docs":{},"。":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}},"采":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},"了":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"）":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"维":{"docs":{},"护":{"docs":{},"着":{"docs":{},"几":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"（":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"）":{"docs":{},"，":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"同":{"docs":{},"时":{"docs":{},"访":{"docs":{},"问":{"docs":{},"不":{"docs":{},"同":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"上":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"使":{"docs":{},"其":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"更":{"docs":{},"高":{"docs":{},"（":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"就":{"docs":{},"是":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"来":{"docs":{},"根":{"docs":{},"据":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"和":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"作":{"docs":{},"为":{"docs":{},"数":{"docs":{},"据":{"docs":{},"容":{"docs":{},"器":{"docs":{},"时":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"取":{"docs":{},"的":{"docs":{},"是":{"docs":{},"分":{"docs":{},"代":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"：":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"首":{"docs":{},"先":{"docs":{},"把":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"，":{"docs":{},"要":{"docs":{},"清":{"docs":{},"楚":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}},"通":{"docs":{},"过":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"获":{"docs":{},"取":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"。":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"为":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"摒":{"docs":{},"弃":{"docs":{},"逐":{"docs":{},"一":{"docs":{},"判":{"docs":{},"断":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"处":{"docs":{},"理":{"docs":{},"一":{"docs":{},"些":{"docs":{},"无":{"docs":{},"效":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"0":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}},"docs":{}}}}}}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"到":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"也":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"也":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"被":{"docs":{},"删":{"docs":{},"除":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"应":{"docs":{},"该":{"docs":{},"为":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}},"看":{"docs":{},"到":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"要":{"docs":{},"求":{"docs":{},"为":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}}}}}}}}},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}},")":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525}}},"k":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.006072874493927126}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},")":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"1":{"docs":{},",":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"docs":{}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.005145797598627788}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}},"u":{"docs":{},"g":{"docs":{},"l":{"docs":{},"y":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"k":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}}},"docs":{}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"k":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":3.3449612403100772},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}},"a":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"o":{"docs":{},"e":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}},"n":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.019417475728155338},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.02830188679245283},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.023255813953488372},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.01818181818181818},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.015384615384615385}}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}}}}}},"“":{"2":{"1":{"docs":{},".":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}},"6":{"docs":{},".":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}},"docs":{}},"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}}}}}},"(":{"docs":{},"n":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666}}}},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"之":{"docs":{},"和":{"docs":{},"等":{"docs":{},"于":{"docs":{},"两":{"docs":{},"个":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"和":{"docs":{},"之":{"docs":{},"差":{"docs":{},"”":{"docs":{},"，":{"docs":{},"即":{"docs":{},"设":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"”":{"docs":{},"法":{"docs":{},"，":{"docs":{},"即":{"docs":{},"通":{"docs":{},"过":{"docs":{},"两":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"即":{"docs":{},"可":{"docs":{},"找":{"docs":{},"出":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"公":{"docs":{},"共":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"分":{"docs":{},"别":{"docs":{},"指":{"docs":{},"示":{"docs":{},"两":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"时":{"docs":{},"如":{"docs":{},"果":{"docs":{},"第":{"docs":{},"一":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"到":{"docs":{},"达":{"docs":{},"第":{"docs":{},"一":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"时":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"置":{"docs":{},"为":{"docs":{},"第":{"docs":{},"二":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"第":{"docs":{},"二":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"到":{"docs":{},"达":{"docs":{},"第":{"docs":{},"二":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"时":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"置":{"docs":{},"为":{"docs":{},"第":{"docs":{},"一":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"经":{"docs":{},"过":{"docs":{},"一":{"docs":{},"轮":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"后":{"docs":{},"就":{"docs":{},"消":{"docs":{},"除":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"差":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"每":{"docs":{},"次":{"docs":{},"向":{"docs":{},"前":{"docs":{},"前":{"docs":{},"进":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"到":{"docs":{},"达":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"公":{"docs":{},"共":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"采":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"免":{"docs":{},"去":{"docs":{},"了":{"docs":{},"分":{"docs":{},"别":{"docs":{},"计":{"docs":{},"算":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{},"麻":{"docs":{},"烦":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"”":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}},"%":{"2":{"0":{"docs":{},"”":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"当":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"为":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}}}}}}}}}}}},"docs":{}},"docs":{}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"”":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"传":{"docs":{},"递":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":10.008}}}},"的":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0074211502782931356}}},"也":{"docs":{},"会":{"docs":{},"起":{"docs":{},"作":{"docs":{},"用":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"为":{"0":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"'":{"0":{"docs":{},"'":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}},";":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}},"4":{"docs":{},"'":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.01485148514851485}}}},"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"'":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}},"'":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"'":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}},"'":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"'":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"'":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428}}}}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"'":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"'":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}},"y":{"docs":{},"'":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"'":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}},"'":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"'":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"'":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"'":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}},"x":{"docs":{},"'":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}},"*":{"docs":{},"'":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}},".":{"docs":{},"'":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}},".":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}}}},")":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}},"'":{"docs":{},",":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787}}},"。":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}},"+":{"docs":{},"'":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}},"b":{"docs":{},"'":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}},"#":{"docs":{},"'":{"docs":{},";":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}},"g":{"docs":{},"'":{"docs":{},"；":{"docs":{},"当":{"docs":{},"从":{"docs":{},"该":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"读":{"docs":{},"出":{"docs":{},"前":{"6":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}},"docs":{}}}}}}}}}}}}}},"l":{"docs":{},"'":{"docs":{},"。":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}},"(":{"docs":{},"'":{"docs":{},",":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}},"；":{"docs":{},"当":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}},"[":{"docs":{},"'":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787}}}},"]":{"docs":{},"'":{"docs":{},",":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"该":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"满":{"docs":{},"足":{"docs":{},"下":{"docs":{},"面":{"docs":{},"两":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"：":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"{":{"docs":{},"'":{"docs":{},",":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787}}}}},"}":{"docs":{},"'":{"docs":{},",":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.017699115044247787}}}}}},"@":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0068143100511073255},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.008298755186721992},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"从":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"计":{"docs":{},"数":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"如":{"docs":{},"下":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}},"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}},"使":{"docs":{},"用":{"docs":{},"上":{"docs":{},"来":{"docs":{},"看":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"多":{"docs":{},"个":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"继":{"docs":{},"承":{"docs":{},"多":{"docs":{},"个":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"计":{"docs":{},"层":{"docs":{},"面":{"docs":{},"上":{"docs":{},"看":{"docs":{},"，":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"种":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"添":{"docs":{},"加":{"docs":{},"元":{"docs":{},"素":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"当":{"docs":{},"需":{"docs":{},"要":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"时":{"docs":{},"，":{"docs":{},"令":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}},"向":{"docs":{},"上":{"docs":{},"（":{"docs":{},"至":{"docs":{},"少":{"docs":{},"要":{"docs":{},"有":{"docs":{},"三":{"docs":{},"行":{"docs":{},"两":{"docs":{},"列":{"docs":{},"）":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}}}}}}}}}}}},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"知":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"到":{"docs":{},"下":{"docs":{},"打":{"docs":{},"印":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":10}}}}}}}}},"往":{"docs":{},"下":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"同":{"docs":{},"层":{"docs":{},"节":{"docs":{},"点":{"docs":{},"从":{"docs":{},"左":{"docs":{},"至":{"docs":{},"右":{"docs":{},"打":{"docs":{},"印":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"来":{"docs":{},"看":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"也":{"docs":{},"是":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}},"理":{"docs":{},"论":{"docs":{},"上":{"docs":{},"讲":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"并":{"docs":{},"发":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"根":{"docs":{},"本":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"而":{"docs":{},"使":{"docs":{},"得":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"，":{"docs":{},"h":{"docs":{},"i":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}}}}}}}}}}},"部":{"docs":{},"删":{"docs":{},"除":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"已":{"docs":{},"经":{"docs":{},"滑":{"docs":{},"出":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"依":{"docs":{},"次":{"docs":{},"转":{"docs":{},"换":{"docs":{},"每":{"docs":{},"个":{"docs":{},"罗":{"docs":{},"马":{"docs":{},"数":{"docs":{},"字":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"对":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}}}},"尾":{"docs":{},"开":{"docs":{},"始":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"交":{"docs":{},"换":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}}}}}}}}}}}}}},"到":{"docs":{},"头":{"docs":{},"打":{"docs":{},"印":{"docs":{},"链":{"docs":{},"表":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":10}}}}}}}},"部":{"docs":{},"删":{"docs":{},"除":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"等":{"docs":{},"于":{"docs":{},"或":{"docs":{},"小":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"些":{"docs":{},"元":{"docs":{},"素":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"成":{"docs":{},"为":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"先":{"docs":{},"向":{"docs":{},"后":{"docs":{},"移":{"docs":{},"动":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}}}}}}}}}}},"相":{"docs":{},"遇":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"继":{"docs":{},"续":{"docs":{},"向":{"docs":{},"前":{"docs":{},"走":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"也":{"docs":{},"走":{"1":{"docs":{},"步":{"docs":{},"，":{"docs":{},"当":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}},"docs":{}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"处":{"docs":{},"继":{"docs":{},"续":{"docs":{},"向":{"docs":{},"前":{"docs":{},"走":{"docs":{},"，":{"docs":{},"并":{"docs":{},"记":{"docs":{},"录":{"docs":{},"走":{"docs":{},"过":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"当":{"docs":{},"再":{"docs":{},"次":{"docs":{},"回":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"即":{"docs":{},"可":{"docs":{},"得":{"docs":{},"出":{"docs":{},"环":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"向":{"docs":{},"前":{"docs":{},"走":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"1":{"docs":{},"步":{"docs":{},"，":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"左":{"docs":{},"向":{"docs":{},"右":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},"，":{"docs":{},"它":{"docs":{},"只":{"docs":{},"是":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"契":{"docs":{},"约":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"要":{"docs":{},"求":{"docs":{},"接":{"docs":{},"口":{"docs":{},"和":{"docs":{},"实":{"docs":{},"现":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"类":{"docs":{},"具":{"docs":{},"有":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"满":{"docs":{},"足":{"docs":{},"里":{"docs":{},"式":{"docs":{},"替":{"docs":{},"换":{"docs":{},"原":{"docs":{},"则":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}},"键":{"docs":{},"字":{"docs":{},"进":{"docs":{},"行":{"docs":{},"声":{"docs":{},"明":{"docs":{},"。":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"一":{"docs":{},"般":{"docs":{},"会":{"docs":{},"包":{"docs":{},"含":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"方":{"docs":{},"法":{"docs":{},"一":{"docs":{},"定":{"docs":{},"位":{"docs":{},"于":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"中":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}},"修":{"docs":{},"饰":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"中":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"完":{"docs":{},"成":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"没":{"docs":{},"有":{"docs":{},"发":{"docs":{},"生":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"本":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"添":{"docs":{},"加":{"docs":{},"内":{"docs":{},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"指":{"docs":{},"令":{"docs":{},"重":{"docs":{},"排":{"docs":{},"，":{"docs":{},"即":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"时":{"docs":{},"不":{"docs":{},"能":{"docs":{},"把":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"指":{"docs":{},"令":{"docs":{},"放":{"docs":{},"到":{"docs":{},"内":{"docs":{},"存":{"docs":{},"屏":{"docs":{},"障":{"docs":{},"之":{"docs":{},"前":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"联":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"在":{"docs":{},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"时":{"docs":{},"会":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}},"于":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"参":{"docs":{},"加":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"简":{"docs":{},"介":{"docs":{},"见":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"接":{"docs":{},"口":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"默":{"docs":{},"认":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"维":{"docs":{},"护":{"docs":{},"成":{"docs":{},"本":{"docs":{},"太":{"docs":{},"高":{"docs":{},"了":{"docs":{},"。":{"docs":{},"在":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"修":{"docs":{},"改":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"成":{"docs":{},"本":{"docs":{},"也":{"docs":{},"变":{"docs":{},"的":{"docs":{},"很":{"docs":{},"低":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"大":{"docs":{},"于":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"比":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"小":{"docs":{},"，":{"docs":{},"将":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"出":{"docs":{},"堆":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"堆":{"docs":{},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"成":{"docs":{},"后":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"即":{"docs":{},"是":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"再":{"docs":{},"和":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}},"向":{"docs":{},"左":{"docs":{},"求":{"docs":{},"出":{"docs":{},"左":{"docs":{},"边":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}},"或":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}},"者":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"公":{"docs":{},"共":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}}}}}}}}}}}},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"与":{"docs":{},"接":{"docs":{},"口":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}},"和":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}},"接":{"docs":{},"口":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":10}}}},"普":{"docs":{},"通":{"docs":{},"类":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"是":{"docs":{},"，":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"继":{"docs":{},"承":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"才":{"docs":{},"能":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"其":{"docs":{},"子":{"docs":{},"类":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"口":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},"中":{"docs":{},"的":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}},"是":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"的":{"docs":{},"延":{"docs":{},"伸":{"docs":{},"，":{"docs":{},"在":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"只":{"docs":{},"能":{"docs":{},"是":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}},"默":{"docs":{},"认":{"docs":{},"都":{"docs":{},"是":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}},"成":{"docs":{},"员":{"docs":{},"只":{"docs":{},"能":{"docs":{},"是":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}},"（":{"docs":{},"字":{"docs":{},"段":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}},"类":{"docs":{},"只":{"docs":{},"能":{"docs":{},"当":{"docs":{},"做":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"不":{"docs":{},"是":{"docs":{},"真":{"docs":{},"正":{"docs":{},"意":{"docs":{},"义":{"docs":{},"上":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"最":{"docs":{},"后":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}},"又":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"只":{"docs":{},"是":{"docs":{},"规":{"docs":{},"定":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"没":{"docs":{},"有":{"docs":{},"实":{"docs":{},"现":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"支":{"docs":{},"持":{"docs":{},"随":{"docs":{},"机":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}},"其":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"基":{"docs":{},"本":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}},"该":{"docs":{},"接":{"docs":{},"口":{"docs":{},"继":{"docs":{},"承":{"docs":{},"自":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}},"这":{"docs":{},"使":{"docs":{},"得":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}},"；":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}},"继":{"docs":{},"承":{"docs":{},"了":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"并":{"docs":{},"声":{"docs":{},"明":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"、":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"、":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}},"比":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}},"较":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{},"字":{"docs":{},"段":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{},"中":{"docs":{},"的":{"docs":{},"值":{"docs":{},"等":{"docs":{},"于":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"多":{"docs":{},"重":{"docs":{},"继":{"docs":{},"承":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}},"在":{"docs":{},"几":{"docs":{},"个":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"类":{"docs":{},"中":{"docs":{},"共":{"docs":{},"享":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}},"继":{"docs":{},"承":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"和":{"docs":{},"非":{"docs":{},"常":{"docs":{},"量":{"docs":{},"字":{"docs":{},"段":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}},"能":{"docs":{},"控":{"docs":{},"制":{"docs":{},"继":{"docs":{},"承":{"docs":{},"来":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"权":{"docs":{},"限":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"都":{"docs":{},"为":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}},"让":{"docs":{},"不":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"类":{"docs":{},"都":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"不":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"类":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}},"实":{"docs":{},"现":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"几":{"docs":{},"点":{"docs":{},"是":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"被":{"docs":{},"包":{"docs":{},"装":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.021052631578947368},"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.06896551724137931}},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.007017543859649123}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":3.344322344322344},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":2.507751937984496}},".":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}},"i":{"docs":{},"n":{"docs":{},":":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":1.6724470134874758},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.01485148514851485},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}},"s":{"docs":{},"h":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"e":{"docs":{},"r":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.007662835249042145}},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}},",":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}},";":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"，":{"docs":{},"它":{"docs":{},"用":{"docs":{},"来":{"docs":{},"存":{"docs":{},"放":{"docs":{},"等":{"docs":{},"待":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"等":{"docs":{},"待":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"也":{"docs":{},"很":{"docs":{},"重":{"docs":{},"要":{"docs":{},"，":{"docs":{},"会":{"docs":{},"对":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"运":{"docs":{},"行":{"docs":{},"过":{"docs":{},"程":{"docs":{},"产":{"docs":{},"生":{"docs":{},"重":{"docs":{},"大":{"docs":{},"影":{"docs":{},"响":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"队":{"docs":{},"列":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"几":{"docs":{},"种":{"docs":{},"选":{"docs":{},"择":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.04060913705583756},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.011538461538461539}},")":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693}}}},"。":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}},"而":{"docs":{},"右":{"docs":{},"侧":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.014423076923076924},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"在":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.02830188679245283}}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":10.040816326530612}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"，":{"docs":{},"被":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}},">":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}},"b":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417}}},"l":{"docs":{},"l":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}},".":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"!":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"1":{"docs":{},",":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"|":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}},"|":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.014388489208633094},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.013793103448275862},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.04819277108433735},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.012345679012345678},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.019138755980861243},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.01818181818181818},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.02564102564102564},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.014563106796116505},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.03278688524590164},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.020202020202020204},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.05084745762711865},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.023391812865497075},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.02564102564102564},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.023076923076923078},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.01652892561983471},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.014598540145985401},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.01773049645390071},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.0392156862745098},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.016260162601626018},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010050251256281407},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.011560693641618497},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.022222222222222223},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.008522727272727272},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.011627906976744186},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}},"括":{"docs":{},"起":{"docs":{},"来":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"表":{"docs":{},"示":{"docs":{},"r":{"docs":{},"进":{"docs":{},"制":{"docs":{},"整":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"位":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"|":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"=":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.009404388714733543}}}},"ⅰ":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"ⅱ":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"ⅲ":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"ⅳ":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"ⅴ":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"一":{"docs":{},"个":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}},"数":{"docs":{},"与":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"之":{"docs":{},"后":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"结":{"docs":{},"束":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"发":{"docs":{},"生":{"docs":{},"异":{"docs":{},"常":{"docs":{},"也":{"docs":{},"会":{"docs":{},"提":{"docs":{},"前":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"完":{"docs":{},"成":{"docs":{},"（":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"束":{"docs":{},"）":{"docs":{},"先":{"docs":{},"行":{"docs":{},"发":{"docs":{},"生":{"docs":{},"于":{"docs":{},"它":{"docs":{},"的":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"的":{"docs":{},"典":{"docs":{},"型":{"docs":{},"题":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"在":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"任":{"docs":{},"选":{"docs":{},"一":{"docs":{},"个":{"docs":{},"格":{"docs":{},"子":{"docs":{},"作":{"docs":{},"为":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"起":{"docs":{},"点":{"docs":{},"。":{"docs":{},"设":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"为":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"，":{"docs":{},"路":{"docs":{},"径":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"型":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"除":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"两":{"docs":{},"次":{"docs":{},"。":{"docs":{},"请":{"docs":{},"写":{"docs":{},"程":{"docs":{},"序":{"docs":{},"找":{"docs":{},"出":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"要":{"docs":{},"求":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"环":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"时":{"docs":{},"，":{"docs":{},"设":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}},"致":{"docs":{},"性":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"般":{"docs":{},"取":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"样":{"docs":{},"的":{"docs":{},"快":{"docs":{},"速":{"docs":{},"查":{"docs":{},"找":{"docs":{},"特":{"docs":{},"性":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}},"、":{"docs":{},"线":{"docs":{},"程":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"换":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}},"次":{"docs":{},"性":{"docs":{},"分":{"docs":{},"配":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}}},"只":{"docs":{},"青":{"docs":{},"蛙":{"docs":{},"一":{"docs":{},"次":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"上":{"1":{"docs":{},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"上":{"2":{"docs":{},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"。":{"docs":{},"求":{"docs":{},"该":{"docs":{},"青":{"docs":{},"蛙":{"docs":{},"跳":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}},"起":{"docs":{},"走":{"docs":{},"时":{"docs":{},"用":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"1":{"docs":{},"步":{"docs":{},"。":{"docs":{},"当":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}},"docs":{}}}}}}}},"书":{"docs":{},"上":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}},"讲":{"docs":{},"到":{"docs":{},"，":{"docs":{},"最":{"docs":{},"好":{"docs":{},"不":{"docs":{},"要":{"docs":{},"去":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"定":{"docs":{},"义":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"设":{"docs":{},"环":{"docs":{},"中":{"docs":{},"有":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}},"思":{"docs":{},"路":{"docs":{},"。":{"docs":{},"求":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{},"可":{"docs":{},"以":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"步":{"docs":{},"：":{"docs":{},"首":{"docs":{},"先":{"docs":{},"求":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"即":{"docs":{},"把":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"和":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"依":{"docs":{},"次":{"docs":{},"交":{"docs":{},"换":{"docs":{},"（":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"和":{"docs":{},"它":{"docs":{},"自":{"docs":{},"己":{"docs":{},"交":{"docs":{},"换":{"docs":{},"）":{"docs":{},"；":{"docs":{},"第":{"docs":{},"二":{"docs":{},"步":{"docs":{},"固":{"docs":{},"定":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"求":{"docs":{},"后":{"docs":{},"面":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"仍":{"docs":{},"把":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"以":{"docs":{},"及":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"把":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"逐":{"docs":{},"一":{"docs":{},"和":{"docs":{},"它":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"交":{"docs":{},"换":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"方":{"docs":{},"便":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"将":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"字":{"docs":{},"符":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"传":{"docs":{},"递":{"docs":{},"性":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}},"判":{"docs":{},"断":{"docs":{},"两":{"docs":{},"个":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"没":{"docs":{},"有":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"否":{"docs":{},"引":{"docs":{},"用":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"而":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"否":{"docs":{},"等":{"docs":{},"价":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"域":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}},"s":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"和":{"docs":{},"p":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"匹":{"docs":{},"配":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"9":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}},"docs":{}}},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"但":{"docs":{},"是":{"docs":{},"代":{"docs":{},"码":{"docs":{},"有":{"docs":{},"点":{"docs":{},"长":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"多":{"docs":{},"次":{"docs":{},"。":{"docs":{},"代":{"docs":{},"码":{"docs":{},"略":{"docs":{},"。":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"次":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"时":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"，":{"docs":{},"属":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"同":{"docs":{},"步":{"docs":{},"工":{"docs":{},"具":{"docs":{},"少":{"docs":{},"用":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}},"并":{"docs":{},"发":{"docs":{},"集":{"docs":{},"合":{"docs":{},"少":{"docs":{},"用":{"docs":{},"同":{"docs":{},"步":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"开":{"docs":{},"发":{"docs":{},"的":{"docs":{},"良":{"docs":{},"好":{"docs":{},"实":{"docs":{},"践":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}}}}},"走":{"docs":{},"了":{"docs":{},"一":{"docs":{},"圈":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}},"应":{"docs":{},"该":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"是":{"docs":{},"以":{"docs":{},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{},"方":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"的":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"应":{"docs":{},"修":{"docs":{},"改":{"docs":{},"为":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}}},"得":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}},"到":{"docs":{},"以":{"docs":{},"下":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"不":{"docs":{},"确":{"docs":{},"定":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}},"值":{"docs":{},"放":{"docs":{},"入":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"中":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}},"工":{"docs":{},"作":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"副":{"docs":{},"本":{"docs":{},"中":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}},"旧":{"docs":{},"的":{"docs":{},"预":{"docs":{},"期":{"docs":{},"值":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}},"拷":{"docs":{},"贝":{"docs":{},"对":{"docs":{},"象":{"docs":{},"和":{"docs":{},"原":{"docs":{},"始":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"引":{"docs":{},"用":{"docs":{},"不":{"docs":{},"同":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}},"检":{"docs":{},"查":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"是":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"实":{"docs":{},"现":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}}}},"设":{"docs":{},"置":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}}}},"浅":{"docs":{},"拷":{"docs":{},"贝":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"理":{"docs":{},"想":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"应":{"docs":{},"当":{"docs":{},"具":{"docs":{},"有":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"性":{"docs":{},"，":{"docs":{},"即":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"应":{"docs":{},"当":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"分":{"docs":{},"布":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"上":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"要":{"docs":{},"求":{"docs":{},"了":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"要":{"docs":{},"把":{"docs":{},"所":{"docs":{},"有":{"docs":{},"域":{"docs":{},"的":{"docs":{},"值":{"docs":{},"都":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"进":{"docs":{},"来":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"每":{"docs":{},"个":{"docs":{},"域":{"docs":{},"都":{"docs":{},"当":{"docs":{},"成":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"乘":{"docs":{},"可":{"docs":{},"以":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"移":{"docs":{},"位":{"docs":{},"和":{"docs":{},"减":{"docs":{},"法":{"docs":{},"：":{"3":{"1":{"docs":{},"*":{"docs":{},"x":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"向":{"docs":{},"左":{"docs":{},"移":{"docs":{},"一":{"docs":{},"位":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}},"比":{"docs":{},"，":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}},"于":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}},"似":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"维":{"docs":{},"护":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"。":{"docs":{},"线":{"docs":{},"程":{"docs":{},"执":{"docs":{},"行":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"副":{"docs":{},"本":{"docs":{},"都":{"docs":{},"可":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}},"同":{"docs":{},"，":{"docs":{},"则":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"和":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}},"说":{"docs":{},"明":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}},"遇":{"docs":{},"时":{"docs":{},"，":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}}}},"设":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}},"等":{"docs":{},"价":{"docs":{},"与":{"docs":{},"相":{"docs":{},"等":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"关":{"docs":{},"系":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"后":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"当":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}},"进":{"docs":{},"入":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}},"待":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"显":{"docs":{},"式":{"docs":{},"地":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"分":{"docs":{},"配":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"排":{"docs":{},"它":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"其":{"docs":{},"线":{"docs":{},"程":{"docs":{},"释":{"docs":{},"放":{"docs":{},"了":{"docs":{},"锁":{"docs":{},"就":{"docs":{},"会":{"docs":{},"结":{"docs":{},"束":{"docs":{},"此":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"中":{"docs":{},"断":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"在":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"环":{"docs":{},"境":{"docs":{},"中":{"docs":{},"不":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"以":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"演":{"docs":{},"示":{"docs":{},"了":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"但":{"docs":{},"同":{"docs":{},"为":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}},"数":{"docs":{},"值":{"docs":{},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"都":{"docs":{},"为":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"构":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"结":{"docs":{},"构":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"是":{"docs":{},"指":{"docs":{},"添":{"docs":{},"加":{"docs":{},"或":{"docs":{},"者":{"docs":{},"删":{"docs":{},"除":{"docs":{},"至":{"docs":{},"少":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"调":{"docs":{},"整":{"docs":{},"内":{"docs":{},"部":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"只":{"docs":{},"是":{"docs":{},"设":{"docs":{},"置":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"值":{"docs":{},"不":{"docs":{},"算":{"docs":{},"结":{"docs":{},"构":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"。":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"自":{"docs":{},"反":{"docs":{},"性":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"旋":{"docs":{},"锁":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}},"虽":{"docs":{},"然":{"docs":{},"能":{"docs":{},"避":{"docs":{},"免":{"docs":{},"进":{"docs":{},"入":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"状":{"docs":{},"态":{"docs":{},"从":{"docs":{},"而":{"docs":{},"减":{"docs":{},"少":{"docs":{},"开":{"docs":{},"销":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"它":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"忙":{"docs":{},"循":{"docs":{},"环":{"docs":{},"操":{"docs":{},"作":{"docs":{},"占":{"docs":{},"用":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"比":{"docs":{},"较":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0074211502782931356},"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}},"整":{"docs":{},"数":{"docs":{},"组":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"使":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"位":{"docs":{},"于":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"前":{"docs":{},"面":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":10}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835}},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}},"的":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}},"小":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}},"是":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}},"k":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"示":{"docs":{},"中":{"docs":{},"从":{"docs":{},"右":{"docs":{},"向":{"docs":{},"左":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"1":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}},"docs":{}}}}}}}}},"的":{"docs":{},"第":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"位":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"1":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}}}},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{},"为":{"2":{"2":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"应":{"docs":{},"该":{"docs":{},"为":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"总":{"docs":{},"数":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}}}}}}}},"重":{"docs":{},"写":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},"之":{"docs":{},"前":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"之":{"docs":{},"后":{"docs":{},"得":{"docs":{},"到":{"docs":{},"以":{"docs":{},"下":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}},"新":{"docs":{},"计":{"docs":{},"算":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"建":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":10}}}}}},"复":{"docs":{},"执":{"docs":{},"行":{"docs":{},"上":{"docs":{},"述":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"以":{"docs":{},"求":{"docs":{},"得":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"顺":{"docs":{},"序":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}},"d":{"docs":{},"p":{"docs":{},"，":{"docs":{},"当":{"docs":{},"s":{"docs":{},"和":{"docs":{},"p":{"docs":{},"同":{"docs":{},"时":{"docs":{},"到":{"docs":{},"达":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"时":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"成":{"docs":{},"功":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}}},"值":{"docs":{},"为":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"指":{"docs":{},"向":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"开":{"docs":{},"头":{"docs":{},"，":{"docs":{},"h":{"docs":{},"i":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}}},"结":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"初":{"docs":{},"始":{"docs":{},"我":{"docs":{},"们":{"docs":{},"便":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"了":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"宽":{"docs":{},"度":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"我":{"docs":{},"们":{"docs":{},"求":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"声":{"docs":{},"明":{"docs":{},"数":{"docs":{},"据":{"docs":{},"为":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"被":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"后":{"docs":{},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"改":{"docs":{},"变":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"子":{"docs":{},"类":{"docs":{},"重":{"docs":{},"写":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}},"类":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"被":{"docs":{},"继":{"docs":{},"承":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}},"子":{"docs":{},"类":{"docs":{},"（":{"docs":{},"实":{"docs":{},"例":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"普":{"docs":{},"通":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"）":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"）":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"）":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"才":{"docs":{},"是":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}}},"位":{"docs":{},"数":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}}}},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"是":{"docs":{},"以":{"docs":{},"下":{"docs":{},"用":{"docs":{},"于":{"docs":{},"维":{"docs":{},"护":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"会":{"docs":{},"在":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"堆":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}},"小":{"docs":{},"堆":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":10}}}}}}},"长":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}},"结":{"docs":{},"尾":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}},"父":{"docs":{},"类":{"docs":{},"（":{"docs":{},"实":{"docs":{},"例":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"普":{"docs":{},"通":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"）":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"）":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"）":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"不":{"docs":{},"能":{"docs":{},"访":{"docs":{},"问":{"docs":{},"外":{"docs":{},"部":{"docs":{},"类":{"docs":{},"的":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145}},"和":{"docs":{},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"优":{"docs":{},"先":{"docs":{},"于":{"docs":{},"实":{"docs":{},"例":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"普":{"docs":{},"通":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"，":{"docs":{},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"取":{"docs":{},"决":{"docs":{},"于":{"docs":{},"它":{"docs":{},"们":{"docs":{},"在":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"又":{"docs":{},"称":{"docs":{},"为":{"docs":{},"类":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"这":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"属":{"docs":{},"于":{"docs":{},"类":{"docs":{},"的":{"docs":{},"，":{"docs":{},"类":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"都":{"docs":{},"共":{"docs":{},"享":{"docs":{},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"通":{"docs":{},"过":{"docs":{},"类":{"docs":{},"名":{"docs":{},"来":{"docs":{},"访":{"docs":{},"问":{"docs":{},"它":{"docs":{},"。":{"docs":{},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"在":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"只":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"份":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"导":{"docs":{},"包":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}},"方":{"docs":{},"法":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"只":{"docs":{},"能":{"docs":{},"访":{"docs":{},"问":{"docs":{},"所":{"docs":{},"属":{"docs":{},"类":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"字":{"docs":{},"段":{"docs":{},"和":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"不":{"docs":{},"能":{"docs":{},"有":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"存":{"docs":{},"在":{"docs":{},"了":{"docs":{},"，":{"docs":{},"它":{"docs":{},"不":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"任":{"docs":{},"何":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"必":{"docs":{},"须":{"docs":{},"有":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"它":{"docs":{},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"在":{"docs":{},"类":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"时":{"docs":{},"运":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"外":{"docs":{},"部":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"而":{"docs":{},"静":{"docs":{},"态":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}},"受":{"docs":{},"检":{"docs":{},"异":{"docs":{},"常":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}},"阻":{"docs":{},"塞":{"docs":{},"同":{"docs":{},"步":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}},"常":{"docs":{},"大":{"docs":{},"导":{"docs":{},"致":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}}},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"异":{"docs":{},"常":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}},"入":{"docs":{},"门":{"docs":{},"之":{"docs":{},"异":{"docs":{},"常":{"docs":{},"处":{"docs":{},"理":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}},"栈":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808}}}},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"种":{"docs":{},"：":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}},"别":{"docs":{},"表":{"docs":{},"示":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"不":{"docs":{},"等":{"docs":{},"于":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"位":{"docs":{},"置":{"docs":{},"右":{"docs":{},"边":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"和":{"docs":{},"左":{"docs":{},"边":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"。":{"docs":{},"当":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"向":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"和":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}},"受":{"docs":{},"检":{"docs":{},"异":{"docs":{},"常":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}},"异":{"docs":{},"常":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":10.035714285714286}},"是":{"docs":{},"发":{"docs":{},"生":{"docs":{},"在":{"docs":{},"程":{"docs":{},"序":{"docs":{},"执":{"docs":{},"行":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"阻":{"docs":{},"碍":{"docs":{},"程":{"docs":{},"序":{"docs":{},"正":{"docs":{},"常":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"事":{"docs":{},"件":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"：":{"docs":{},"用":{"docs":{},"户":{"docs":{},"输":{"docs":{},"入":{"docs":{},"错":{"docs":{},"误":{"docs":{},"数":{"docs":{},"据":{"docs":{},"、":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"故":{"docs":{},"障":{"docs":{},"、":{"docs":{},"网":{"docs":{},"络":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"等":{"docs":{},"都":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"出":{"docs":{},"现":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"法":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"而":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}}},"被":{"docs":{},"移":{"docs":{},"除":{"docs":{},"。":{"docs":{},"从":{"docs":{},"而":{"docs":{},"使":{"docs":{},"得":{"docs":{},"实":{"docs":{},"例":{"docs":{},"被":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}},"限":{"docs":{},"期":{"docs":{},"等":{"docs":{},"待":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}},"需":{"docs":{},"等":{"docs":{},"待":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"显":{"docs":{},"式":{"docs":{},"地":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"，":{"docs":{},"在":{"docs":{},"一":{"docs":{},"定":{"docs":{},"时":{"docs":{},"间":{"docs":{},"之":{"docs":{},"后":{"docs":{},"会":{"docs":{},"被":{"docs":{},"系":{"docs":{},"统":{"docs":{},"自":{"docs":{},"动":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"案":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}},"语":{"docs":{},"句":{"docs":{},"捕":{"docs":{},"获":{"docs":{},"并":{"docs":{},"进":{"docs":{},"行":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"异":{"docs":{},"常":{"docs":{},"中":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"；":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"是":{"docs":{},"程":{"docs":{},"序":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"除":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"、":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"（":{"docs":{},"固":{"docs":{},"定":{"docs":{},"长":{"docs":{},"度":{"docs":{},"）":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010050251256281407}},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.03684210526315789}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"2":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684}}},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"列":{"docs":{},"表":{"docs":{},"示":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}},"2":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.04736842105263158}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"向":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"依":{"docs":{},"次":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"两":{"docs":{},"个":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}},"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498},"JianZhiOffer/Stack & Queue & PriorityQueue/":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/","tf":2},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.021052631578947368},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}},"两":{"docs":{},"种":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}}}}}},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"示":{"docs":{},"正":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}}}}}},"向":{"docs":{},"的":{"docs":{},"数":{"docs":{},"得":{"docs":{},"到":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"是":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"由":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"别":{"docs":{},"指":{"docs":{},"向":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"开":{"docs":{},"头":{"docs":{},"和":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"当":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"和":{"docs":{},"等":{"docs":{},"于":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"i":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"公":{"docs":{},"共":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":10}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"确":{"docs":{},"定":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}},"，":{"docs":{},"中":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}}}}}}}},"则":{"docs":{},"为":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}},"是":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"由":{"docs":{},"字":{"docs":{},"符":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}}}}},"容":{"docs":{},"器":{"docs":{},"主":{"docs":{},"要":{"docs":{},"包":{"docs":{},"括":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}},"易":{"docs":{},"想":{"docs":{},"到":{"docs":{},"的":{"docs":{},"是":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"保":{"docs":{},"存":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"据":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"则":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"数":{"docs":{},"据":{"docs":{},"到":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"移":{"docs":{},"动":{"docs":{},"其":{"docs":{},"他":{"docs":{},"数":{"docs":{},"据":{"docs":{},"以":{"docs":{},"保":{"docs":{},"持":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"有":{"docs":{},"序":{"docs":{},"性":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"做":{"docs":{},"法":{"docs":{},"是":{"docs":{},"每":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"格":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"替":{"docs":{},"换":{"docs":{},"为":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"步":{"docs":{},"进":{"docs":{},"行":{"docs":{},"：":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"赋":{"docs":{},"给":{"docs":{},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"作":{"docs":{},"栈":{"docs":{},"、":{"docs":{},"队":{"docs":{},"列":{"docs":{},"和":{"docs":{},"双":{"docs":{},"向":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}},"规":{"docs":{},"定":{"docs":{},"了":{"docs":{},"先":{"docs":{},"行":{"docs":{},"发":{"docs":{},"生":{"docs":{},"原":{"docs":{},"则":{"docs":{},"，":{"docs":{},"让":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"无":{"docs":{},"需":{"docs":{},"任":{"docs":{},"何":{"docs":{},"同":{"docs":{},"步":{"docs":{},"控":{"docs":{},"制":{"docs":{},"就":{"docs":{},"能":{"docs":{},"先":{"docs":{},"于":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"文":{"docs":{},"章":{"docs":{},"在":{"docs":{},"对":{"docs":{},"比":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"比":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"该":{"docs":{},"数":{"docs":{},"字":{"docs":{},"就":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"链":{"docs":{},"表":{"docs":{},"并":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"按":{"docs":{},"照":{"docs":{},"我":{"docs":{},"们":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"规":{"docs":{},"则":{"docs":{},"将":{"docs":{},"该":{"docs":{},"数":{"docs":{},"编":{"docs":{},"码":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"放":{"docs":{},"入":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"都":{"docs":{},"是":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}},"用":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}},"空":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"插":{"docs":{},"入":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"也":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"可":{"docs":{},"以":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"不":{"docs":{},"妨":{"docs":{},"将":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"依":{"docs":{},"次":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}},"不":{"docs":{},"是":{"docs":{},"。":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}},"能":{"docs":{},"表":{"docs":{},"示":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"但":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}}}}}},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"，":{"docs":{},"该":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}},"上":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"以":{"docs":{},"上":{"docs":{},"数":{"docs":{},"：":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"级":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"第":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"数":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}},"据":{"docs":{},"（":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"）":{"docs":{},"的":{"docs":{},"读":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"划":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"次":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"3":{"docs":{},"，":{"docs":{},"则":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}},"docs":{}}}}}}},"docs":{}}}}}},"时":{"docs":{},"，":{"docs":{},"程":{"docs":{},"序":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"，":{"docs":{},"即":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}},"为":{"1":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"根":{"docs":{},"据":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}},"docs":{}},"是":{"docs":{},"否":{"docs":{},"为":{"1":{"docs":{},",":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"可":{"docs":{},"知":{"docs":{},"，":{"docs":{},"出":{"docs":{},"现":{"2":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"一":{"docs":{},"定":{"docs":{},"被":{"docs":{},"分":{"docs":{},"到":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"当":{"docs":{},"中":{"docs":{},"。":{"docs":{},"接":{"docs":{},"着":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"分":{"docs":{},"别":{"docs":{},"对":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"按":{"docs":{},"照":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"求":{"docs":{},"异":{"docs":{},"或":{"docs":{},"，":{"docs":{},"即":{"docs":{},"可":{"docs":{},"得":{"docs":{},"到":{"docs":{},"两":{"docs":{},"个":{"docs":{},"出":{"docs":{},"现":{"1":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"作":{"docs":{},"为":{"docs":{},"子":{"docs":{},"串":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}},"倍":{"docs":{},"。":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"而":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"的":{"docs":{},"代":{"docs":{},"价":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"高":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":10}}}}},"中":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}}},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"删":{"docs":{},"除":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"这":{"docs":{},"种":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"使":{"docs":{},"得":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"至":{"docs":{},"多":{"docs":{},"出":{"docs":{},"现":{"2":{"docs":{},"次":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"删":{"docs":{},"除":{"docs":{},"后":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{},"要":{"docs":{},"求":{"docs":{},"不":{"docs":{},"能":{"docs":{},"分":{"docs":{},"配":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}},"部":{"docs":{},"分":{"docs":{},"已":{"docs":{},"经":{"docs":{},"反":{"docs":{},"转":{"docs":{},"完":{"docs":{},"成":{"docs":{},"了":{"docs":{},"，":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"如":{"docs":{},"何":{"docs":{},"反":{"docs":{},"转":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"插":{"docs":{},"入":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"部":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"把":{"docs":{},"到":{"docs":{},"达":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"放":{"docs":{},"到":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"当":{"docs":{},"中":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"获":{"docs":{},"取":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"要":{"docs":{},"求":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}},"手":{"docs":{},"动":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"求":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}},"扩":{"docs":{},"容":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"操":{"docs":{},"作":{"docs":{},"需":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}},"使":{"docs":{},"用":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"展":{"1":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}},"2":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}},"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}},"把":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"整":{"docs":{},"个":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"新":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"代":{"docs":{},"价":{"docs":{},"很":{"docs":{},"高":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"最":{"docs":{},"好":{"docs":{},"在":{"docs":{},"创":{"docs":{},"建":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"排":{"docs":{},"成":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":10}}}}}}}},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"排":{"docs":{},"在":{"docs":{},"最":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}}}}}}}},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"质":{"docs":{},"因":{"docs":{},"子":{"2":{"docs":{},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}},"docs":{}}}}}}},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"最":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"若":{"docs":{},"干":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"搬":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"称":{"docs":{},"之":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"。":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"添":{"docs":{},"加":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}},"?":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.01639344262295082},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010050251256281407}}},"个":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"桶":{"docs":{},"存":{"docs":{},"放":{"docs":{},"键":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"线":{"docs":{},"程":{"docs":{},"或":{"docs":{},"者":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{},"默":{"docs":{},"认":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"在":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"后":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"当":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"来":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"去":{"docs":{},"执":{"docs":{},"行":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"当":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"目":{"docs":{},"达":{"docs":{},"到":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"时":{"docs":{},"对":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}},"对":{"docs":{},"它":{"docs":{},"进":{"docs":{},"行":{"docs":{},"自":{"docs":{},"增":{"docs":{},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"值":{"docs":{},"为":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"同":{"docs":{},"时":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"请":{"docs":{},"求":{"docs":{},"总":{"docs":{},"数":{"docs":{},"为":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"来":{"docs":{},"完":{"docs":{},"成":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"和":{"docs":{},"工":{"docs":{},"作":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"交":{"docs":{},"互":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}},"：":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"、":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"、":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}},"丑":{"docs":{},"数":{"docs":{},"。":{"docs":{},"约":{"docs":{},"定":{"1":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}}}},"docs":{}}}}}},"数":{"docs":{},"字":{"docs":{},"和":{"docs":{},"第":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}},"进":{"docs":{},"行":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"把":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}},"中":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"队":{"docs":{},"头":{"docs":{},"就":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"中":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{},"当":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"开":{"docs":{},"始":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"时":{"docs":{},"，":{"docs":{},"一":{"docs":{},"方":{"docs":{},"面":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"和":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"比":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"大":{"docs":{},"，":{"docs":{},"则":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"比":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"成":{"docs":{},"为":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"移":{"docs":{},"除":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"方":{"docs":{},"面":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"代":{"docs":{},"表":{"docs":{},"当":{"docs":{},"前":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"的":{"docs":{},"队":{"docs":{},"头":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"否":{"docs":{},"已":{"docs":{},"经":{"docs":{},"滑":{"docs":{},"出":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"已":{"docs":{},"经":{"docs":{},"滑":{"docs":{},"出":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"其":{"docs":{},"进":{"docs":{},"行":{"docs":{},"移":{"docs":{},"除":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"如":{"docs":{},"何":{"docs":{},"判":{"docs":{},"断":{"docs":{},"当":{"docs":{},"前":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"是":{"docs":{},"否":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"存":{"docs":{},"入":{"docs":{},"数":{"docs":{},"字":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"数":{"docs":{},"值":{"docs":{},"。":{"docs":{},"当":{"docs":{},"队":{"docs":{},"头":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"与":{"docs":{},"当":{"docs":{},"前":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"之":{"docs":{},"差":{"docs":{},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"时":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"已":{"docs":{},"经":{"docs":{},"从":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"中":{"docs":{},"滑":{"docs":{},"出":{"docs":{},"了":{"docs":{},"。":{"docs":{},"在":{"docs":{},"实":{"docs":{},"现":{"docs":{},"上":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"的":{"docs":{},"）":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}},"是":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}},"docs":{}},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"调":{"docs":{},"整":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"所":{"docs":{},"有":{"docs":{},"小":{"docs":{},"于":{"docs":{},"第":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}}}}}}}},"的":{"docs":{},"数":{"docs":{},"都":{"docs":{},"排":{"docs":{},"在":{"docs":{},"它":{"docs":{},"的":{"docs":{},"右":{"docs":{},"边":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"调":{"docs":{},"整":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"位":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"边":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"大":{"docs":{},"于":{"docs":{},"第":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}},"（":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}},"代":{"docs":{},"码":{"docs":{},"略":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}},"就":{"docs":{},"是":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"从":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"顶":{"docs":{},"堆":{"docs":{},"保":{"docs":{},"存":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"前":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}}}}},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"要":{"docs":{},"求":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}}}}}}}}}}},"n":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}},"由":{"docs":{},"于":{"docs":{},"这":{"docs":{},"里":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}}}}}}}}}}},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"再":{"docs":{},"一":{"docs":{},"起":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"当":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}}}}}}}}}}}}}}},"先":{"docs":{},"让":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"从":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"上":{"docs":{},"走":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"定":{"docs":{},"义":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}}}}}}},"时":{"docs":{},"即":{"docs":{},"可":{"docs":{},"利":{"docs":{},"用":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}},")":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},"中":{"docs":{},"选":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"采":{"docs":{},"用":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"话":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"单":{"docs":{},"位":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"再":{"docs":{},"一":{"docs":{},"起":{"docs":{},"走":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"位":{"docs":{},"。":{"docs":{},"当":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"时":{"docs":{},"，":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"关":{"docs":{},"键":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"求":{"docs":{},"出":{"docs":{},"环":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"借":{"docs":{},"由":{"docs":{},"上":{"docs":{},"一":{"docs":{},"题":{"docs":{},"的":{"docs":{},"分":{"docs":{},"析":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"加":{"docs":{},"入":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"时":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"此":{"docs":{},"时":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"开":{"docs":{},"始":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"保":{"docs":{},"存":{"docs":{},"前":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061}}}}},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}}}}},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"再":{"docs":{},"反":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"后":{"docs":{},"面":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"再":{"docs":{},"反":{"docs":{},"转":{"docs":{},"整":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"即":{"docs":{},"可":{"docs":{},"得":{"docs":{},"到":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"左":{"docs":{},"旋":{"docs":{},"转":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"中":{"docs":{},"心":{"docs":{},"。":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}}},"合":{"docs":{},"并":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"这":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"加":{"docs":{},"入":{"docs":{},"到":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"，":{"docs":{},"当":{"docs":{},"堆":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"为":{"docs":{},"执":{"docs":{},"行":{"docs":{},"以":{"docs":{},"下":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{},"从":{"docs":{},"堆":{"docs":{},"中":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"将":{"docs":{},"较":{"docs":{},"小":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"加":{"docs":{},"入":{"docs":{},"到":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"依":{"docs":{},"次":{"docs":{},"比":{"docs":{},"较":{"docs":{},"各":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"比":{"docs":{},"较":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"，":{"docs":{},"把":{"docs":{},"它":{"docs":{},"加":{"docs":{},"入":{"docs":{},"到":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"接":{"docs":{},"着":{"docs":{},"将":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}},"继":{"docs":{},"续":{"docs":{},"进":{"docs":{},"行":{"docs":{},"划":{"docs":{},"分":{"docs":{},"和":{"docs":{},"合":{"docs":{},"并":{"docs":{},"。":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}},"配":{"docs":{},"成":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{},"规":{"docs":{},"律":{"docs":{},"是":{"docs":{},"：":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"和":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"将":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"和":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"值":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"当":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"\"":{"1":{"2":{"1":{"1":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"该":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"1":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"1":{"docs":{},"次":{"docs":{},"，":{"2":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"1":{"docs":{},"次":{"docs":{},"，":{"1":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"2":{"docs":{},"次":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"当":{"docs":{},"前":{"docs":{},"序":{"docs":{},"列":{"docs":{},"为":{"docs":{},"\"":{"1":{"1":{"1":{"2":{"2":{"1":{"docs":{},"\"":{"docs":{},"。":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}},"docs":{}}}}},"docs":{}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"作":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}},"通":{"docs":{},"过":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}},"会":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"空":{"docs":{},"行":{"docs":{},"是":{"docs":{},"由":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}}}}}}}}}}},"修":{"docs":{},"饰":{"docs":{},"的":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"获":{"docs":{},"取":{"docs":{},"时":{"docs":{},"的":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}}},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"解":{"docs":{},"决":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}},"改":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"加":{"docs":{},"锁":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"入":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808}},"高":{"docs":{},"速":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"带":{"docs":{},"来":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"多":{"docs":{},"个":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"共":{"docs":{},"享":{"docs":{},"同":{"docs":{},"一":{"docs":{},"块":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"区":{"docs":{},"域":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"多":{"docs":{},"个":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"些":{"docs":{},"协":{"docs":{},"议":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"到":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}},"变":{"docs":{},"量":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"来":{"docs":{},"统":{"docs":{},"计":{"docs":{},"该":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}},"用":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"各":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"的":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"“":{"docs":{},"本":{"docs":{},"地":{"docs":{},"”":{"docs":{},"实":{"docs":{},"例":{"docs":{},"副":{"docs":{},"本":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"方":{"docs":{},"案":{"docs":{},"是":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"既":{"docs":{},"然":{"docs":{},"变":{"docs":{},"量":{"docs":{},"不":{"docs":{},"共":{"docs":{},"享":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"更":{"docs":{},"谈":{"docs":{},"不":{"docs":{},"上":{"docs":{},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}},"规":{"docs":{},"则":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"与":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"删":{"docs":{},"除":{"docs":{},"这":{"docs":{},"些":{"docs":{},"引":{"docs":{},"用":{"docs":{},"（":{"docs":{},"映":{"docs":{},"射":{"docs":{},"）":{"docs":{},"，":{"docs":{},"则":{"docs":{},"这":{"docs":{},"些":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}},"当":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}},"后":{"docs":{},"，":{"docs":{},"都":{"docs":{},"会":{"docs":{},"在":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}},"在":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"可":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"避":{"docs":{},"免":{"docs":{},"上":{"docs":{},"文":{"docs":{},"所":{"docs":{},"述":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"后":{"docs":{},"，":{"docs":{},"该":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"键":{"docs":{},"变":{"docs":{},"为":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}},"通":{"docs":{},"常":{"docs":{},"被":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"原":{"docs":{},"理":{"docs":{},"是":{"docs":{},"，":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"该":{"docs":{},"值":{"docs":{},"为":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}},"栈":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"能":{"docs":{},"够":{"docs":{},"得":{"docs":{},"到":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}},"尝":{"docs":{},"试":{"docs":{},"次":{"docs":{},"数":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}},"操":{"docs":{},"作":{"docs":{},"失":{"docs":{},"败":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"内":{"docs":{},"置":{"docs":{},"锁":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}}}},"了":{"docs":{},"，":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"首":{"docs":{},"先":{"docs":{},"会":{"docs":{},"检":{"docs":{},"查":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}},"时":{"docs":{},"先":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"连":{"docs":{},"续":{"docs":{},"两":{"docs":{},"次":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"操":{"docs":{},"作":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"可":{"docs":{},"以":{"docs":{},"认":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"所":{"docs":{},"有":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}},"来":{"docs":{},"支":{"docs":{},"持":{"docs":{},"更":{"docs":{},"高":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"，":{"docs":{},"在":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}}}}}}}},"避":{"docs":{},"免":{"docs":{},"重":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"使":{"docs":{},"用":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"量":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"绝":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"在":{"docs":{},"整":{"docs":{},"个":{"docs":{},"同":{"docs":{},"步":{"docs":{},"周":{"docs":{},"期":{"docs":{},"内":{"docs":{},"都":{"docs":{},"是":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"也":{"docs":{},"就":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"都":{"docs":{},"使":{"docs":{},"用":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"量":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"采":{"docs":{},"用":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"析":{"docs":{},"两":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{},"表":{"docs":{},"格":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"列":{"docs":{},"表":{"docs":{},"示":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.004597701149425287},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684}}},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"把":{"docs":{},"变":{"docs":{},"量":{"docs":{},"值":{"docs":{},"同":{"docs":{},"步":{"docs":{},"回":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}},"直":{"docs":{},"至":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}},"后":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"一":{"docs":{},"次":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"行":{"docs":{},"发":{"docs":{},"生":{"docs":{},"于":{"docs":{},"后":{"docs":{},"面":{"docs":{},"对":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"的":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}},"这":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}},"具":{"docs":{},"有":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"具":{"docs":{},"备":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"共":{"docs":{},"享":{"docs":{},"一":{"docs":{},"个":{"docs":{},"并":{"docs":{},"未":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"会":{"docs":{},"误":{"docs":{},"认":{"docs":{},"为":{"docs":{},"它":{"docs":{},"从":{"docs":{},"来":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"改":{"docs":{},"变":{"docs":{},"过":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}},"也":{"docs":{},"不":{"docs":{},"再":{"docs":{},"需":{"docs":{},"要":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}},"将":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}},"线":{"docs":{},"程":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}},"成":{"docs":{},"功":{"docs":{},"了":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"获":{"docs":{},"取":{"docs":{},"了":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"以":{"docs":{},"后":{"docs":{},"每":{"docs":{},"次":{"docs":{},"进":{"docs":{},"入":{"docs":{},"这":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"块":{"docs":{},"就":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"再":{"docs":{},"进":{"docs":{},"行":{"docs":{},"任":{"docs":{},"何":{"docs":{},"同":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}},"：":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}},"次":{"docs":{},"，":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}},"所":{"docs":{},"以":{"docs":{},"上":{"docs":{},"面":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"都":{"docs":{},"是":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}},"总":{"docs":{},"共":{"docs":{},"需":{"docs":{},"要":{"docs":{},"选":{"docs":{},"取":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}},"方":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}},"虽":{"docs":{},"然":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"连":{"docs":{},"乘":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"去":{"docs":{},"求":{"docs":{},"，":{"docs":{},"但":{"docs":{},"那":{"docs":{},"不":{"docs":{},"是":{"docs":{},"最":{"docs":{},"优":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"我":{"docs":{},"们":{"docs":{},"采":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"去":{"docs":{},"求":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"2":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"自":{"docs":{},"动":{"docs":{},"地":{"docs":{},"将":{"docs":{},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}},"即":{"docs":{},"可":{"docs":{},"得":{"docs":{},"到":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}}}}}}}}},"。":{"docs":{},"代":{"docs":{},"码":{"docs":{},"略":{"docs":{},"。":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}},"然":{"docs":{},"后":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}},"把":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"拿":{"docs":{},"到":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}},"累":{"docs":{},"计":{"docs":{},"起":{"docs":{},"来":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}},"继":{"docs":{},"承":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}},"自":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"类":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}},"了":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}},"续":{"docs":{},"判":{"docs":{},"断":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"即":{"docs":{},"可":{"docs":{},"；":{"docs":{},"当":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}},"维":{"docs":{},"护":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.005145797598627788}},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}},"一":{"docs":{},"个":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"使":{"docs":{},"得":{"docs":{},"每":{"docs":{},"个":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}},"超":{"docs":{},"过":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"级":{"docs":{},"别":{"docs":{},"为":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"提":{"docs":{},"交":{"docs":{},"任":{"docs":{},"务":{"docs":{},"之":{"docs":{},"后":{"docs":{},"才":{"docs":{},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"线":{"docs":{},"程":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"是":{"docs":{},"非":{"docs":{},"公":{"docs":{},"平":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"公":{"docs":{},"平":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"是":{"docs":{},"小":{"docs":{},"顶":{"docs":{},"堆":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}}}}},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"即":{"docs":{},"当":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"将":{"docs":{},"被":{"docs":{},"终":{"docs":{},"止":{"docs":{},"，":{"docs":{},"直":{"docs":{},"至":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"目":{"docs":{},"不":{"docs":{},"大":{"docs":{},"于":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"它":{"docs":{},"方":{"docs":{},"式":{"docs":{},"完":{"docs":{},"全":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"效":{"docs":{},"果":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"求":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808}}}}}}}}}},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}}}},"但":{"docs":{},"是":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}},"调":{"docs":{},"用":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"又":{"docs":{},"可":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"种":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"复":{"docs":{},"制":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"上":{"docs":{},"进":{"docs":{},"行":{"docs":{},"，":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"还":{"docs":{},"是":{"docs":{},"在":{"docs":{},"原":{"docs":{},"始":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"，":{"docs":{},"读":{"docs":{},"写":{"docs":{},"分":{"docs":{},"离":{"docs":{},"，":{"docs":{},"互":{"docs":{},"不":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"之":{"docs":{},"后":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"原":{"docs":{},"始":{"docs":{},"数":{"docs":{},"组":{"docs":{},"指":{"docs":{},"向":{"docs":{},"新":{"docs":{},"的":{"docs":{},"复":{"docs":{},"制":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"防":{"docs":{},"止":{"docs":{},"并":{"docs":{},"发":{"docs":{},"写":{"docs":{},"入":{"docs":{},"时":{"docs":{},"导":{"docs":{},"致":{"docs":{},"写":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"。":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"（":{"docs":{},"对":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"而":{"docs":{},"言":{"docs":{},"即":{"docs":{},"为":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"排":{"docs":{},"列":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}}}}}}}}},"代":{"docs":{},"表":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"和":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}},"和":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}},"有":{"docs":{},"其":{"docs":{},"缺":{"docs":{},"陷":{"docs":{},"：":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}},"三":{"docs":{},"种":{"docs":{},"使":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"错":{"docs":{},"误":{"docs":{},"认":{"docs":{},"识":{"docs":{},"就":{"docs":{},"是":{"docs":{},"，":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}},"序":{"docs":{},"性":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}},"是":{"docs":{},"指":{"docs":{},"：":{"docs":{},"在":{"docs":{},"本":{"docs":{},"线":{"docs":{},"程":{"docs":{},"内":{"docs":{},"观":{"docs":{},"察":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"。":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"观":{"docs":{},"察":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"是":{"docs":{},"无":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"无":{"docs":{},"序":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"发":{"docs":{},"生":{"docs":{},"了":{"docs":{},"指":{"docs":{},"令":{"docs":{},"重":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{},"在":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}},"很":{"docs":{},"多":{"docs":{},"关":{"docs":{},"于":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"副":{"docs":{},"本":{"docs":{},"，":{"docs":{},"且":{"docs":{},"其":{"docs":{},"它":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}},"读":{"docs":{},"写":{"docs":{},"分":{"docs":{},"离":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}},"取":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"实":{"docs":{},"例":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"方":{"docs":{},"法":{"docs":{},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"示":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"时":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"首":{"docs":{},"先":{"docs":{},"通":{"docs":{},"过":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"获":{"docs":{},"取":{"docs":{},"自":{"docs":{},"身":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"适":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"于":{"docs":{},"变":{"docs":{},"量":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"离":{"docs":{},"且":{"docs":{},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"间":{"docs":{},"共":{"docs":{},"享":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"下":{"docs":{},"两":{"docs":{},"种":{"docs":{},"场":{"docs":{},"景":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"需":{"docs":{},"要":{"docs":{},"自":{"docs":{},"己":{"docs":{},"独":{"docs":{},"立":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"且":{"docs":{},"该":{"docs":{},"实":{"docs":{},"例":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"多":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"被":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"也":{"docs":{},"即":{"docs":{},"变":{"docs":{},"量":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"离":{"docs":{},"而":{"docs":{},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"类":{"docs":{},"间":{"docs":{},"共":{"docs":{},"享":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"。":{"docs":{},"后":{"docs":{},"面":{"docs":{},"会":{"docs":{},"通":{"docs":{},"过":{"docs":{},"实":{"docs":{},"例":{"docs":{},"详":{"docs":{},"细":{"docs":{},"阐":{"docs":{},"述":{"docs":{},"该":{"docs":{},"观":{"docs":{},"点":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"，":{"docs":{},"该":{"docs":{},"场":{"docs":{},"景":{"docs":{},"下":{"docs":{},"，":{"docs":{},"并":{"docs":{},"非":{"docs":{},"必":{"docs":{},"须":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"^":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.10606060606060606}},"=":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.02608695652173913}}}},"为":{"0":{"0":{"docs":{},")":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}},"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}},"1":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"是":{"docs":{},"同":{"docs":{},"时":{"docs":{},"到":{"docs":{},"达":{"docs":{},"各":{"docs":{},"自":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"。":{"docs":{},"若":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.006269592476489028},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.004048582995951417},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}},"主":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"了":{"docs":{},"便":{"docs":{},"于":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"以":{"docs":{},"下":{"docs":{},"源":{"docs":{},"码":{"docs":{},"分":{"docs":{},"析":{"docs":{},"以":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"让":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"成":{"docs":{},"本":{"docs":{},"降":{"docs":{},"低":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"使":{"docs":{},"得":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}},"方":{"docs":{},"便":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"，":{"docs":{},"将":{"docs":{},"内":{"docs":{},"存":{"docs":{},"间":{"docs":{},"的":{"docs":{},"交":{"docs":{},"互":{"docs":{},"操":{"docs":{},"作":{"docs":{},"简":{"docs":{},"化":{"docs":{},"为":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}},"理":{"docs":{},"解":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"求":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}}}}},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"两":{"docs":{},"倍":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"奇":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"当":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}}}}}}},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"求":{"docs":{},"出":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}}}}}}}}},"止":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"当":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"时":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"先":{"docs":{},"将":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}},"起":{"docs":{},"点":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"即":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}}}}}}},"偏":{"docs":{},"移":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{},"这":{"docs":{},"个":{"docs":{},"偏":{"docs":{},"移":{"docs":{},"值":{"docs":{},"恰":{"docs":{},"好":{"docs":{},"是":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"后":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"在":{"docs":{},"上":{"docs":{},"例":{"docs":{},"中":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}},"令":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"假":{"docs":{},"设":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"数":{"docs":{},"据":{"docs":{},"在":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"已":{"docs":{},"经":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"，":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"由":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}},"做":{"docs":{},"与":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"去":{"docs":{},"除":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"允":{"docs":{},"许":{"docs":{},"插":{"docs":{},"入":{"docs":{},"键":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"先":{"docs":{},"于":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"找":{"docs":{},"出":{"docs":{},"是":{"docs":{},"否":{"docs":{},"已":{"docs":{},"经":{"docs":{},"存":{"docs":{},"在":{"docs":{},"键":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"如":{"docs":{},"何":{"docs":{},"求":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"掩":{"docs":{},"码":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"一":{"docs":{},"种":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"出":{"docs":{},"现":{"1":{"docs":{},"次":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"数":{"docs":{},"都":{"docs":{},"是":{"docs":{},"出":{"docs":{},"现":{"2":{"docs":{},"次":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"头":{"docs":{},"到":{"docs":{},"尾":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"求":{"docs":{},"异":{"docs":{},"或":{"docs":{},"，":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"行":{"docs":{},"发":{"docs":{},"生":{"docs":{},"于":{"docs":{},"操":{"docs":{},"作":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.006896551724137931}}}}},"原":{"docs":{},"则":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}},"对":{"docs":{},"原":{"docs":{},"始":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"进":{"docs":{},"行":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"集":{"docs":{},"合":{"docs":{},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"直":{"docs":{},"接":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"个":{"docs":{},"句":{"docs":{},"子":{"docs":{},"作":{"docs":{},"一":{"docs":{},"个":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"，":{"docs":{},"再":{"docs":{},"依":{"docs":{},"次":{"docs":{},"将":{"docs":{},"句":{"docs":{},"子":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"作":{"docs":{},"一":{"docs":{},"个":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"，":{"docs":{},"即":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"作":{"docs":{},"为":{"docs":{},"三":{"docs":{},"元":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"找":{"docs":{},"其":{"docs":{},"余":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"即":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"将":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"都":{"docs":{},"压":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655}}}}}}}}}}}}},"在":{"docs":{},"长":{"docs":{},"链":{"docs":{},"表":{"docs":{},"上":{"docs":{},"走":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"步":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}}}}}}}}}}},"求":{"docs":{},"出":{"docs":{},"长":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}}}}}},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}}},"反":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"前":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}},"将":{"docs":{},"句":{"docs":{},"子":{"docs":{},"划":{"docs":{},"分":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"从":{"docs":{},"后":{"docs":{},"向":{"docs":{},"前":{"docs":{},"构":{"docs":{},"造":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"原":{"docs":{},"先":{"docs":{},"的":{"docs":{},"句":{"docs":{},"子":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"单":{"docs":{},"词":{"docs":{},"，":{"docs":{},"则":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"原":{"docs":{},"先":{"docs":{},"的":{"docs":{},"句":{"docs":{},"子":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{},"前":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"创":{"docs":{},"建":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"在":{"docs":{},"中":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"能":{"docs":{},"确":{"docs":{},"定":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"新":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"递":{"docs":{},"归":{"docs":{},"地":{"docs":{},"构":{"docs":{},"建":{"docs":{},"其":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{},"前":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"用":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"走":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}},"前":{"docs":{},"面":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"我":{"docs":{},"们":{"docs":{},"对":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"不":{"docs":{},"安":{"docs":{},"全":{"docs":{},"示":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"，":{"docs":{},"c":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"该":{"docs":{},"树":{"docs":{},"，":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"非":{"docs":{},"叶":{"docs":{},"节":{"docs":{},"点":{"docs":{},"交":{"docs":{},"换":{"docs":{},"其":{"docs":{},"左":{"docs":{},"右":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}},"单":{"docs":{},"独":{"docs":{},"处":{"docs":{},"理":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"位":{"docs":{},"为":{"docs":{},"毫":{"docs":{},"秒":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}},"一":{"docs":{},"线":{"docs":{},"程":{"docs":{},"原":{"docs":{},"则":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}},"取":{"docs":{},"模":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"效":{"docs":{},"果":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"：":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"前":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}},"含":{"docs":{},"义":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"呢":{"docs":{},"？":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"除":{"docs":{},"了":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"中":{"docs":{},"心":{"docs":{},"外":{"docs":{},"，":{"docs":{},"每":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"中":{"docs":{},"心":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"致":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}},"家":{"docs":{},"都":{"docs":{},"知":{"docs":{},"道":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"，":{"docs":{},"即":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}},"docs":{}}}}}}}}}}}}},"体":{"docs":{},"思":{"docs":{},"路":{"docs":{},"同":{"docs":{},"上":{"docs":{},"，":{"docs":{},"用":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"把":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{},"，":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"部":{"docs":{},"指":{"docs":{},"向":{"docs":{},"新":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}},"它":{"docs":{},"的":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"值":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"第":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"与":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}},"只":{"docs":{},"作":{"docs":{},"用":{"docs":{},"于":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"调":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"同":{"docs":{},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"作":{"docs":{},"用":{"docs":{},"于":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}},"们":{"docs":{},"都":{"docs":{},"属":{"docs":{},"于":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}},"所":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"底":{"docs":{},"层":{"docs":{},"结":{"docs":{},"构":{"docs":{},"图":{"docs":{},"为":{"docs":{},"：":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"进":{"docs":{},"行":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"会":{"docs":{},"将":{"docs":{},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"久":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"移":{"docs":{},"除":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"有":{"docs":{},"了":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"在":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}},"地":{"docs":{},"删":{"docs":{},"除":{"docs":{},"要":{"docs":{},"求":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"上":{"docs":{},"进":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"而":{"docs":{},"不":{"docs":{},"能":{"docs":{},"分":{"docs":{},"配":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"还":{"docs":{},"是":{"docs":{},"按":{"docs":{},"照":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"大":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"小":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}},"很":{"docs":{},"多":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"确":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}},"难":{"docs":{},"实":{"docs":{},"现":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"控":{"docs":{},"制":{"docs":{},"流":{"docs":{},"；":{"docs":{},"其":{"docs":{},"次":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"同":{"docs":{},"步":{"docs":{},"类":{"docs":{},"是":{"docs":{},"由":{"docs":{},"最":{"docs":{},"好":{"docs":{},"的":{"docs":{},"企":{"docs":{},"业":{"docs":{},"编":{"docs":{},"写":{"docs":{},"和":{"docs":{},"维":{"docs":{},"护":{"docs":{},"，":{"docs":{},"在":{"docs":{},"后":{"docs":{},"续":{"docs":{},"的":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"描":{"docs":{},"述":{"docs":{},"，":{"docs":{},"不":{"docs":{},"过":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"很":{"docs":{},"无":{"docs":{},"聊":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}},"必":{"docs":{},"须":{"docs":{},"保":{"docs":{},"证":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"包":{"docs":{},"含":{"1":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}},"docs":{}}}}},"我":{"docs":{},"们":{"docs":{},"知":{"docs":{},"道":{"docs":{},"，":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{},"的":{"docs":{},"代":{"docs":{},"价":{"docs":{},"比":{"docs":{},"求":{"docs":{},"模":{"docs":{},"运":{"docs":{},"算":{"docs":{},"小":{"docs":{},"的":{"docs":{},"多":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{},"这":{"docs":{},"种":{"docs":{},"计":{"docs":{},"算":{"docs":{},"时":{"docs":{},"用":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{},"的":{"docs":{},"话":{"docs":{},"能":{"docs":{},"带":{"docs":{},"来":{"docs":{},"更":{"docs":{},"高":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"给":{"docs":{},"定":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"中":{"docs":{},"构":{"docs":{},"造":{"docs":{},"出":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"把":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"时":{"docs":{},"通":{"docs":{},"过":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"重":{"docs":{},"构":{"docs":{},"出":{"docs":{},"原":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"思":{"docs":{},"路":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"，":{"docs":{},"一":{"docs":{},"是":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"不":{"docs":{},"能":{"docs":{},"有":{"docs":{},"数":{"docs":{},"值":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"我":{"docs":{},"们":{"docs":{},"无":{"docs":{},"法":{"docs":{},"通":{"docs":{},"过":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"构":{"docs":{},"造":{"docs":{},"出":{"docs":{},"原":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"二":{"docs":{},"是":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"两":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"都":{"docs":{},"读":{"docs":{},"出":{"docs":{},"后":{"docs":{},"才":{"docs":{},"能":{"docs":{},"开":{"docs":{},"始":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"从":{"docs":{},"一":{"docs":{},"个":{"docs":{},"流":{"docs":{},"中":{"docs":{},"读":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"可":{"docs":{},"能":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"等":{"docs":{},"待":{"docs":{},"很":{"docs":{},"长":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"如":{"docs":{},"果":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"是":{"docs":{},"从":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"在":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"读":{"docs":{},"出":{"docs":{},"来":{"docs":{},"后":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"开":{"docs":{},"始":{"docs":{},"了":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"根":{"docs":{},"据":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"来":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"和":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"在":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"加":{"docs":{},"入":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"加":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"$":{"docs":{},"。":{"docs":{},"在":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"每":{"docs":{},"次":{"docs":{},"从":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"读":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"不":{"docs":{},"是":{"docs":{},"$":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"继":{"docs":{},"续":{"docs":{},"构":{"docs":{},"建":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"空":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"则":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"序":{"docs":{},"列":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"来":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"序":{"docs":{},"列":{"docs":{},"至":{"docs":{},"少":{"docs":{},"需":{"docs":{},"要":{"docs":{},"包":{"docs":{},"含":{"2":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"表":{"docs":{},"示":{"docs":{},"大":{"docs":{},"数":{"docs":{},"，":{"docs":{},"进":{"docs":{},"而":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"上":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"加":{"1":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"思":{"docs":{},"路":{"2":{"docs":{},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"进":{"docs":{},"行":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{},"当":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}}}}},"docs":{}}},"上":{"docs":{},"述":{"docs":{},"方":{"docs":{},"法":{"docs":{},"做":{"docs":{},"一":{"docs":{},"个":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"没":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"每":{"docs":{},"次":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"合":{"docs":{},"并":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"分":{"docs":{},"治":{"docs":{},"法":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"轮":{"docs":{},"将":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"次":{"docs":{},"合":{"docs":{},"并":{"2":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"合":{"docs":{},"并":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}},"docs":{}}}}},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"将":{"docs":{},"上":{"docs":{},"述":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"优":{"docs":{},"化":{"docs":{},"为":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"复":{"docs":{},"制":{"docs":{},"过":{"docs":{},"程":{"docs":{},"分":{"docs":{},"为":{"docs":{},"三":{"docs":{},"个":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"：":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"来":{"docs":{},"分":{"docs":{},"析":{"docs":{},"这":{"docs":{},"样":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"如":{"docs":{},"何":{"docs":{},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"环":{"docs":{},"？":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"一":{"docs":{},"个":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"栈":{"docs":{},"的":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}},"不":{"docs":{},"难":{"docs":{},"发":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"是":{"docs":{},"围":{"docs":{},"绕":{"docs":{},"着":{"docs":{},"它":{"docs":{},"的":{"docs":{},"中":{"docs":{},"心":{"docs":{},"进":{"docs":{},"行":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"的":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"，":{"docs":{},"从":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"比":{"docs":{},"较":{"docs":{},"其":{"docs":{},"余":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"和":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"相":{"docs":{},"应":{"docs":{},"位":{"docs":{},"上":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"发":{"docs":{},"现":{"docs":{},"在":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"法":{"docs":{},"中":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"能":{"docs":{},"蓄":{"docs":{},"水":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"我":{"docs":{},"们":{"docs":{},"都":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"完":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"进":{"docs":{},"入":{"docs":{},"同":{"docs":{},"步":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"时":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"等":{"docs":{},"待":{"docs":{},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"自":{"docs":{},"增":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}},"自":{"docs":{},"增":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"操":{"docs":{},"作":{"docs":{},"结":{"docs":{},"束":{"docs":{},"之":{"docs":{},"后":{"docs":{},"它":{"docs":{},"的":{"docs":{},"值":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"小":{"docs":{},"于":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}},"拉":{"docs":{},"链":{"docs":{},"法":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"原":{"docs":{},"理":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"插":{"docs":{},"入":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}},"新":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"新":{"docs":{},"建":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}},"一":{"docs":{},"个":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"版":{"docs":{},"本":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704}},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"可":{"docs":{},"以":{"docs":{},"免":{"docs":{},"去":{"docs":{},"单":{"docs":{},"独":{"docs":{},"处":{"docs":{},"理":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"麻":{"docs":{},"烦":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"会":{"docs":{},"将":{"docs":{},"链":{"docs":{},"表":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"移":{"docs":{},"除":{"docs":{},"最":{"docs":{},"晚":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"首":{"docs":{},"部":{"docs":{},"节":{"docs":{},"点":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}},"，":{"5":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}}},"docs":{},"表":{"docs":{},"示":{"docs":{},"维":{"docs":{},"护":{"docs":{},"的":{"docs":{},"是":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0038314176245210726}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"达":{"docs":{},"到":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}},"某":{"docs":{},"线":{"docs":{},"程":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"时":{"docs":{},"间":{"docs":{},"超":{"docs":{},"过":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}},"前":{"docs":{},"面":{"docs":{},"没":{"docs":{},"有":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}},"两":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"均":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"约":{"docs":{},"定":{"docs":{},"将":{"docs":{},"元":{"docs":{},"素":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"向":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}},"减":{"docs":{},"小":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}},"即":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}},"；":{"docs":{},"当":{"docs":{},"和":{"docs":{},"小":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}},"从":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}},"我":{"docs":{},"们":{"docs":{},"不":{"docs":{},"断":{"docs":{},"将":{"docs":{},"非":{"docs":{},"空":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"出":{"docs":{},"队":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"该":{"docs":{},"队":{"docs":{},"列":{"docs":{},"只":{"docs":{},"含":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"即":{"docs":{},"为":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"出":{"docs":{},"队":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"向":{"docs":{},"后":{"docs":{},"移":{"docs":{},"动":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}}},"需":{"docs":{},"要":{"docs":{},"利":{"docs":{},"用":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}},"判":{"docs":{},"断":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.016129032258064516}}}}}}}}}}}}}},"将":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}},"建":{"docs":{},"立":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}}}}}},"间":{"docs":{},"片":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}},"结":{"docs":{},"束":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0055658627087198514}}}},"，":{"docs":{},"它":{"docs":{},"只":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"共":{"docs":{},"享":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"状":{"docs":{},"态":{"docs":{},"很":{"docs":{},"短":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}},"：":{"docs":{},"o":{"docs":{},"(":{"2":{"docs":{},"n":{"docs":{},")":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}},"docs":{},"n":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.01079136690647482},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.006172839506172839}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}},"k":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182}}}}}}},"^":{"2":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.010050251256281407}}}},"3":{"docs":{},")":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}},"docs":{}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}}},"k":{"docs":{},"n":{"docs":{},")":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}},"内":{"docs":{},"找":{"docs":{},"到":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}},"删":{"docs":{},"除":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"输":{"docs":{},"入":{"docs":{},"保":{"docs":{},"证":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"知":{"docs":{},"道":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"通":{"docs":{},"过":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}},"向":{"docs":{},"前":{"docs":{},"移":{"docs":{},"动":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}}}}},"将":{"docs":{},"数":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}},"向":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}},"即":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"第":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}},"确":{"docs":{},"定":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"步":{"docs":{},"是":{"docs":{},"将":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"能":{"docs":{},"够":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"比":{"docs":{},"例":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}},"要":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"大":{"docs":{},"。":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"大":{"docs":{},"，":{"docs":{},"访":{"docs":{},"问":{"docs":{},"速":{"docs":{},"度":{"docs":{},"更":{"docs":{},"慢":{"docs":{},"。":{"docs":{},"最":{"docs":{},"好":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}},"知":{"docs":{},"道":{"docs":{},"任":{"docs":{},"务":{"docs":{},"提":{"docs":{},"交":{"docs":{},"给":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"策":{"docs":{},"略":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"总":{"docs":{},"结":{"docs":{},"一":{"docs":{},"下":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"4":{"docs":{},"点":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"一":{"docs":{},"定":{"docs":{},"就":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"本":{"docs":{},"来":{"docs":{},"就":{"docs":{},"不":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"共":{"docs":{},"享":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"那":{"docs":{},"它":{"docs":{},"自":{"docs":{},"然":{"docs":{},"就":{"docs":{},"无":{"docs":{},"须":{"docs":{},"任":{"docs":{},"何":{"docs":{},"同":{"docs":{},"步":{"docs":{},"措":{"docs":{},"施":{"docs":{},"去":{"docs":{},"保":{"docs":{},"证":{"docs":{},"正":{"docs":{},"确":{"docs":{},"性":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"数":{"docs":{},"组":{"docs":{},"容":{"docs":{},"量":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"；":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"设":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061}},"定":{"docs":{},"最":{"docs":{},"大":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}},"置":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"为":{"0":{"docs":{},"，":{"docs":{},"将":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}},"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363},"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},"了":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"方":{"docs":{},"法":{"docs":{},"如":{"docs":{},"下":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}},"实":{"docs":{},"例":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}},"复":{"docs":{},"制":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}},"计":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"个":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"条":{"docs":{},"包":{"docs":{},"含":{"docs":{},"某":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"。":{"docs":{},"路":{"docs":{},"径":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"格":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"步":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"向":{"docs":{},"左":{"docs":{},"、":{"docs":{},"右":{"docs":{},"、":{"docs":{},"上":{"docs":{},"、":{"docs":{},"下":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"格":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"条":{"docs":{},"路":{"docs":{},"径":{"docs":{},"经":{"docs":{},"过":{"docs":{},"了":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"某":{"docs":{},"一":{"docs":{},"格":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"该":{"docs":{},"路":{"docs":{},"径":{"docs":{},"不":{"docs":{},"能":{"docs":{},"再":{"docs":{},"次":{"docs":{},"进":{"docs":{},"入":{"docs":{},"该":{"docs":{},"格":{"docs":{},"子":{"docs":{},"。":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"链":{"docs":{},"表":{"docs":{},"转":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"中":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":10}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"环":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":10}}}}}}}}}},"接":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"将":{"docs":{},"原":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"复":{"docs":{},"制":{"docs":{},"节":{"docs":{},"点":{"docs":{},"存":{"docs":{},"到":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}},"键":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525}},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"值":{"docs":{},"对":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"，":{"docs":{},"先":{"docs":{},"计":{"docs":{},"算":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}}}}},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"该":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"决":{"docs":{},"定":{"docs":{},"了":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}},"覆":{"docs":{},"盖":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"访":{"docs":{},"问":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"移":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"是":{"docs":{},"最":{"docs":{},"近":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"链":{"docs":{},"表":{"docs":{},"首":{"docs":{},"部":{"docs":{},"就":{"docs":{},"是":{"docs":{},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"久":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"；":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"时":{"docs":{},"针":{"docs":{},"打":{"docs":{},"印":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":10}}}}}}}}},"指":{"docs":{},"针":{"docs":{},"：":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}},"遍":{"docs":{},"历":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}},"指":{"docs":{},"向":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"7":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"将":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}}}}}}}}}},"为":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}},"置":{"docs":{},"为":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}}},"，":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}}}}}}},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}},"示":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"，":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"2":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},"docs":{}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"需":{"docs":{},"要":{"docs":{},"加":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"为":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}},"该":{"docs":{},"字":{"docs":{},"段":{"docs":{},"相":{"docs":{},"对":{"docs":{},"对":{"docs":{},"象":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{},"的":{"docs":{},"偏":{"docs":{},"移":{"docs":{},"，":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"4":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},"docs":{}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}}}},"化":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"当":{"docs":{},"前":{"docs":{},"正":{"docs":{},"在":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"h":{"docs":{},"i":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}},"指":{"docs":{},"示":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"当":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}},"的":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"重":{"docs":{},"复":{"docs":{},"进":{"docs":{},"行":{"docs":{},"直":{"docs":{},"到":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}}}}}}}}}}},"刚":{"docs":{},"好":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}}}}}}}}}}},"窗":{"docs":{},"口":{"docs":{},"中":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"重":{"docs":{},"复":{"docs":{},"时":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"依":{"docs":{},"次":{"docs":{},"反":{"docs":{},"转":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"向":{"docs":{},"前":{"docs":{},"移":{"docs":{},"动":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"反":{"docs":{},"转":{"docs":{},"时":{"docs":{},"首":{"docs":{},"先":{"docs":{},"保":{"docs":{},"存":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"到":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}},"，":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{},"判":{"docs":{},"断":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"是":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"看":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"正":{"docs":{},"负":{"docs":{},"号":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"，":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"上":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"0":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"单":{"docs":{},"词":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"要":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"编":{"docs":{},"号":{"docs":{},"，":{"docs":{},"从":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}},"docs":{}}}}}}}}}}}}}},"正":{"docs":{},"在":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"都":{"docs":{},"指":{"docs":{},"向":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"集":{"docs":{},"中":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"移":{"docs":{},"动":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"遍":{"docs":{},"历":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"和":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}},"入":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}}}}}}}}}},"出":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}}}}}}}}}},"新":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"从":{"docs":{},"后":{"docs":{},"向":{"docs":{},"前":{"docs":{},"进":{"docs":{},"行":{"docs":{},"替":{"docs":{},"换":{"docs":{},"。":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}},"旧":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"p":{"2":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}},"docs":{}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"后":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"j":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}}}}}}},"令":{"docs":{},"需":{"docs":{},"要":{"docs":{},"有":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}},"向":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.013824884792626729},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.011764705882352941},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}},"的":{"docs":{},"元":{"docs":{},"素":{"7":{"docs":{},"和":{"6":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"将":{"docs":{},"较":{"docs":{},"大":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"把":{"docs":{},"它":{"docs":{},"放":{"docs":{},"到":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061}}}}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"是":{"docs":{},"右":{"docs":{},"边":{"docs":{},"部":{"docs":{},"分":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"见":{"docs":{},"下":{"docs":{},"图":{"docs":{},"：":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}},"左":{"docs":{},"边":{"docs":{},"部":{"docs":{},"分":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"p":{"2":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}},"docs":{}}}}}}}}}}}}},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"值":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"到":{"docs":{},"整":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"容":{"docs":{},"器":{"docs":{},"被":{"docs":{},"我":{"docs":{},"们":{"docs":{},"分":{"docs":{},"成":{"docs":{},"了":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"左":{"docs":{},"边":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"比":{"docs":{},"右":{"docs":{},"边":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"小":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}}},"删":{"docs":{},"除":{"docs":{},"后":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}},"。":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"）":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"复":{"docs":{},"制":{"docs":{},"后":{"docs":{},"的":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}}}}},"支":{"docs":{},"持":{"docs":{},"随":{"docs":{},"机":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}},"范":{"docs":{},"型":{"docs":{},"，":{"docs":{},"如":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"同":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}},"步":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}},"一":{"docs":{},"个":{"docs":{},"代":{"docs":{},"码":{"docs":{},"块":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}},"方":{"docs":{},"法":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}},"类":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}},"样":{"docs":{},"也":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"现":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}},"是":{"docs":{},"用":{"docs":{},"空":{"docs":{},"间":{"docs":{},"换":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"同":{"docs":{},"于":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"思":{"docs":{},"路":{"docs":{},"中":{"docs":{},"用":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{},"存":{"docs":{},"储":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"从":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"向":{"docs":{},"前":{"docs":{},"走":{"docs":{},"，":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808}}}}}}}}},"替":{"docs":{},"代":{"docs":{},"方":{"docs":{},"案":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}},"换":{"docs":{},"空":{"docs":{},"格":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":10}}}}}},"主":{"docs":{},"要":{"docs":{},"用":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}},"于":{"docs":{},"并":{"docs":{},"行":{"docs":{},"计":{"docs":{},"算":{"docs":{},"中":{"docs":{},"，":{"docs":{},"和":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}},"有":{"docs":{},"三":{"docs":{},"种":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"有":{"docs":{},"三":{"docs":{},"种":{"docs":{},"实":{"docs":{},"现":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"和":{"docs":{},"工":{"docs":{},"作":{"docs":{},"内":{"docs":{},"存":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}},"区":{"docs":{},"获":{"docs":{},"取":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"找":{"docs":{},"到":{"docs":{},"的":{"docs":{},"话":{"docs":{},"再":{"docs":{},"到":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"就":{"docs":{},"把":{"docs":{},"对":{"docs":{},"象":{"docs":{},"放":{"docs":{},"入":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}},"，":{"docs":{},"当":{"docs":{},"从":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}},"三":{"docs":{},"、":{"docs":{},"基":{"docs":{},"础":{"docs":{},"线":{"docs":{},"程":{"docs":{},"机":{"docs":{},"制":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}},"二":{"docs":{},"、":{"docs":{},"使":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}},"进":{"docs":{},"制":{"docs":{},"中":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":10}}}}}},"docs":{}}}},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":10}}}}}}}}},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"层":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}},"镜":{"docs":{},"像":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":10}}}},"深":{"docs":{},"度":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":10}}}},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":10}}}}}}}},"中":{"docs":{},"和":{"docs":{},"为":{"docs":{},"某":{"docs":{},"一":{"docs":{},"值":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":10}}}}}}}}}}}},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"第":{"docs":{},"k":{"docs":{},"大":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":10}}}}}}},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":10}}}}}}}}},"与":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":10}}}}}}}}}}}},"四":{"docs":{},"、":{"docs":{},"中":{"docs":{},"断":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}},"守":{"docs":{},"护":{"docs":{},"线":{"docs":{},"程":{"docs":{},"是":{"docs":{},"程":{"docs":{},"序":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"在":{"docs":{},"后":{"docs":{},"台":{"docs":{},"提":{"docs":{},"供":{"docs":{},"服":{"docs":{},"务":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"不":{"docs":{},"属":{"docs":{},"于":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"不":{"docs":{},"可":{"docs":{},"或":{"docs":{},"缺":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"死":{"docs":{},"亡":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}},"睡":{"docs":{},"眠":{"docs":{},"和":{"docs":{},"挂":{"docs":{},"起":{"docs":{},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"描":{"docs":{},"述":{"docs":{},"行":{"docs":{},"为":{"docs":{},"，":{"docs":{},"而":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"和":{"docs":{},"等":{"docs":{},"待":{"docs":{},"用":{"docs":{},"来":{"docs":{},"描":{"docs":{},"述":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}},"管":{"docs":{},"理":{"docs":{},"多":{"docs":{},"个":{"docs":{},"异":{"docs":{},"步":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"而":{"docs":{},"无":{"docs":{},"需":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"显":{"docs":{},"式":{"docs":{},"地":{"docs":{},"管":{"docs":{},"理":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"异":{"docs":{},"步":{"docs":{},"是":{"docs":{},"指":{"docs":{},"多":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"互":{"docs":{},"不":{"docs":{},"干":{"docs":{},"扰":{"docs":{},"，":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"程":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"规":{"docs":{},"则":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}},"退":{"docs":{},"出":{"docs":{},"方":{"docs":{},"法":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0037105751391465678}}}}}},"通":{"docs":{},"过":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}},"调":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}},"隐":{"docs":{},"式":{"docs":{},"的":{"docs":{},"在":{"docs":{},"不":{"docs":{},"同":{"docs":{},"线":{"docs":{},"程":{"docs":{},"内":{"docs":{},"创":{"docs":{},"建":{"docs":{},"独":{"docs":{},"立":{"docs":{},"实":{"docs":{},"例":{"docs":{},"副":{"docs":{},"本":{"docs":{},"避":{"docs":{},"免":{"docs":{},"了":{"docs":{},"实":{"docs":{},"例":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"锁":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"。":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}},"绑":{"docs":{},"定":{"docs":{},"多":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}},"优":{"docs":{},"化":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":10.00507614213198}}}},"消":{"docs":{},"除":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"逃":{"docs":{},"逸":{"docs":{},"分":{"docs":{},"析":{"docs":{},"来":{"docs":{},"支":{"docs":{},"持":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"堆":{"docs":{},"上":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"数":{"docs":{},"据":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"逃":{"docs":{},"逸":{"docs":{},"出":{"docs":{},"去":{"docs":{},"被":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"它":{"docs":{},"们":{"docs":{},"当":{"docs":{},"成":{"docs":{},"私":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"对":{"docs":{},"待":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"进":{"docs":{},"行":{"docs":{},"消":{"docs":{},"除":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"指":{"docs":{},"对":{"docs":{},"于":{"docs":{},"被":{"docs":{},"检":{"docs":{},"测":{"docs":{},"出":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"存":{"docs":{},"在":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"进":{"docs":{},"行":{"docs":{},"消":{"docs":{},"除":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"粗":{"docs":{},"化":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}},"阻":{"docs":{},"塞":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}},"和":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}},"等":{"docs":{},"待":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"在":{"docs":{},"于":{"docs":{},"，":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"是":{"docs":{},"被":{"docs":{},"动":{"docs":{},"的":{"docs":{},"，":{"docs":{},"它":{"docs":{},"是":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"获":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"排":{"docs":{},"它":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"而":{"docs":{},"等":{"docs":{},"待":{"docs":{},"是":{"docs":{},"主":{"docs":{},"动":{"docs":{},"的":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"限":{"docs":{},"期":{"docs":{},"等":{"docs":{},"待":{"docs":{"Java/Java并发/线程基础.html":{"ref":"Java/Java并发/线程基础.html","tf":0.0018552875695732839}}}}}},"任":{"docs":{},"务":{"docs":{},"拒":{"docs":{},"绝":{"docs":{},"策":{"docs":{},"略":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"及":{"docs":{},"排":{"docs":{},"队":{"docs":{},"策":{"docs":{},"略":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}},"docs":{}}}}}}}}}},"其":{"docs":{},"中":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}},"锁":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"是":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}},"次":{"docs":{},"，":{"docs":{},"要":{"docs":{},"知":{"docs":{},"道":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}},"到":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}},"这":{"docs":{},"里":{"docs":{},"，":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{},"朋":{"docs":{},"友":{"docs":{},"应":{"docs":{},"该":{"docs":{},"对":{"docs":{},"任":{"docs":{},"务":{"docs":{},"提":{"docs":{},"交":{"docs":{},"给":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"之":{"docs":{},"后":{"docs":{},"到":{"docs":{},"被":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"整":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"有":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"基":{"docs":{},"本":{"docs":{},"的":{"docs":{},"了":{"docs":{},"解":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"总":{"docs":{},"结":{"docs":{},"一":{"docs":{},"下":{"docs":{},"：":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"底":{"docs":{},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{},"什":{"docs":{},"么":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"又":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"什":{"docs":{},"么":{"docs":{},"样":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"？":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}},"达":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061}}}}}}}}}}}},"去":{"docs":{},"取":{"docs":{},"新":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"来":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"去":{"docs":{},"哪":{"docs":{},"里":{"docs":{},"取":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"自":{"docs":{},"然":{"docs":{},"是":{"docs":{},"从":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"面":{"docs":{},"去":{"docs":{},"取":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"里":{"docs":{},"面":{"docs":{},"不":{"docs":{},"断":{"docs":{},"通":{"docs":{},"过":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}},"。":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}}}}}}},"才":{"docs":{},"会":{"docs":{},"起":{"docs":{},"作":{"docs":{},"用":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"数":{"docs":{},"不":{"docs":{},"大":{"docs":{},"于":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"的":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}},"种":{"docs":{},"锁":{"docs":{},"机":{"docs":{},"制":{"docs":{},"来":{"docs":{},"控":{"docs":{},"制":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"对":{"docs":{},"共":{"docs":{},"享":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"调":{"docs":{},"整":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"容":{"docs":{},"量":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"阻":{"docs":{},"塞":{"docs":{},"的":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}},"线":{"docs":{},"程":{"docs":{},"本":{"docs":{},"地":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"它":{"docs":{},"与":{"docs":{},"普":{"docs":{},"通":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"在":{"docs":{},"于":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"使":{"docs":{},"用":{"docs":{},"该":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"都":{"docs":{},"会":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"完":{"docs":{},"全":{"docs":{},"独":{"docs":{},"立":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"副":{"docs":{},"本":{"docs":{},"。":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"三":{"docs":{},"个":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"能":{"docs":{},"满":{"docs":{},"足":{"docs":{},"要":{"docs":{},"求":{"docs":{},"，":{"docs":{},"就":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"使":{"docs":{},"用":{"docs":{},"它":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"三":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"自":{"docs":{},"己":{"docs":{},"去":{"docs":{},"手":{"docs":{},"动":{"docs":{},"配":{"docs":{},"置":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"维":{"docs":{},"护":{"docs":{},"某":{"docs":{},"个":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"所":{"docs":{},"有":{"docs":{},"工":{"docs":{},"作":{"docs":{},"线":{"docs":{},"程":{"docs":{},"已":{"docs":{},"经":{"docs":{},"销":{"docs":{},"毁":{"docs":{},"，":{"docs":{},"任":{"docs":{},"务":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"队":{"docs":{},"列":{"docs":{},"已":{"docs":{},"经":{"docs":{},"清":{"docs":{},"空":{"docs":{},"或":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"束":{"docs":{},"后":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"被":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"线":{"docs":{},"程":{"docs":{},"池":{"docs":{},"不":{"docs":{},"能":{"docs":{},"够":{"docs":{},"接":{"docs":{},"受":{"docs":{},"新":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"等":{"docs":{},"待":{"docs":{},"所":{"docs":{},"有":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"受":{"docs":{},"新":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"会":{"docs":{},"去":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"终":{"docs":{},"止":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"；":{"docs":{"Java/Java并发/线程池.html":{"ref":"Java/Java并发/线程池.html","tf":0.0019157088122605363}}}}},"互":{"docs":{},"斥":{"docs":{},"同":{"docs":{},"步":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":10.002816901408451},"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}},"属":{"docs":{},"于":{"docs":{},"一":{"docs":{},"种":{"docs":{},"悲":{"docs":{},"观":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"策":{"docs":{},"略":{"docs":{},"，":{"docs":{},"总":{"docs":{},"是":{"docs":{},"认":{"docs":{},"为":{"docs":{},"只":{"docs":{},"要":{"docs":{},"不":{"docs":{},"去":{"docs":{},"做":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"措":{"docs":{},"施":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"无":{"docs":{},"论":{"docs":{},"共":{"docs":{},"享":{"docs":{},"数":{"docs":{},"据":{"docs":{},"是":{"docs":{},"否":{"docs":{},"真":{"docs":{},"的":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"竞":{"docs":{},"争":{"docs":{},"，":{"docs":{},"它":{"docs":{},"都":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"（":{"docs":{},"这":{"docs":{},"里":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"的":{"docs":{},"是":{"docs":{},"概":{"docs":{},"念":{"docs":{},"模":{"docs":{},"型":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"会":{"docs":{},"优":{"docs":{},"化":{"docs":{},"掉":{"docs":{},"很":{"docs":{},"大":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"不":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"）":{"docs":{},"、":{"docs":{},"用":{"docs":{},"户":{"docs":{},"态":{"docs":{},"核":{"docs":{},"心":{"docs":{},"态":{"docs":{},"转":{"docs":{},"换":{"docs":{},"、":{"docs":{},"维":{"docs":{},"护":{"docs":{},"锁":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"和":{"docs":{},"检":{"docs":{},"查":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"需":{"docs":{},"要":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"等":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"主":{"docs":{},"要":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"就":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"和":{"docs":{},"唤":{"docs":{},"醒":{"docs":{},"所":{"docs":{},"带":{"docs":{},"来":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"种":{"docs":{},"同":{"docs":{},"步":{"docs":{},"也":{"docs":{},"称":{"docs":{},"为":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"入":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"都":{"docs":{},"很":{"docs":{},"大":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"避":{"docs":{},"免":{"docs":{},"。":{"docs":{},"在":{"docs":{},"许":{"docs":{},"多":{"docs":{},"应":{"docs":{},"用":{"docs":{},"中":{"docs":{},"，":{"docs":{},"共":{"docs":{},"享":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"定":{"docs":{},"状":{"docs":{},"态":{"docs":{},"只":{"docs":{},"会":{"docs":{},"持":{"docs":{},"续":{"docs":{},"很":{"docs":{},"短":{"docs":{},"的":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"是":{"docs":{},"让":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"请":{"docs":{},"求":{"docs":{},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"锁":{"docs":{},"时":{"docs":{},"执":{"docs":{},"行":{"docs":{},"忙":{"docs":{},"循":{"docs":{},"环":{"docs":{},"（":{"docs":{},"自":{"docs":{},"旋":{"docs":{},"）":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"这":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"能":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"进":{"docs":{},"入":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"锁":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"。":{"docs":{},"它":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"间":{"docs":{},"交":{"docs":{},"互":{"docs":{},"操":{"docs":{},"作":{"docs":{},"为":{"docs":{},"：":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"作":{"docs":{},"用":{"docs":{},"于":{"docs":{},"整":{"docs":{},"个":{"docs":{},"类":{"docs":{},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"的":{"docs":{},"这":{"docs":{},"种":{"docs":{},"同":{"docs":{},"步":{"docs":{},"语":{"docs":{},"句":{"docs":{},"，":{"docs":{},"也":{"docs":{},"会":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"等":{"docs":{},"同":{"docs":{},"于":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}},"公":{"docs":{},"平":{"docs":{},"锁":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}},"是":{"docs":{},"指":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"等":{"docs":{},"待":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"锁":{"docs":{},"时":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"按":{"docs":{},"照":{"docs":{},"申":{"docs":{},"请":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"来":{"docs":{},"依":{"docs":{},"次":{"docs":{},"获":{"docs":{},"得":{"docs":{},"锁":{"docs":{},"。":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"生":{"docs":{},"地":{"docs":{},"支":{"docs":{},"持":{"docs":{},"它":{"docs":{},"，":{"docs":{},"而":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}},"理":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{},"把":{"docs":{},"大":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"任":{"docs":{},"务":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"成":{"docs":{},"多":{"docs":{},"个":{"docs":{},"小":{"docs":{},"任":{"docs":{},"务":{"docs":{},"并":{"docs":{},"行":{"docs":{},"计":{"docs":{},"算":{"docs":{},"。":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}},"子":{"docs":{},"性":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}},"性":{"docs":{},"能":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}},"版":{"docs":{},"本":{"docs":{},"都":{"docs":{},"支":{"docs":{},"持":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}},"除":{"docs":{},"非":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/互斥同步.html":{"ref":"Java/Java并发/互斥同步.html","tf":0.0028169014084507044}}}}}}},"了":{"docs":{},"使":{"docs":{},"用":{"docs":{},"原":{"docs":{},"子":{"docs":{},"类":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"设":{"docs":{},"置":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"通":{"docs":{},"过":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}},"面":{"docs":{},"提":{"docs":{},"到":{"docs":{},"了":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}},"描":{"docs":{},"述":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"在":{"docs":{},"于":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}},"述":{"docs":{},"方":{"docs":{},"案":{"docs":{},"中":{"docs":{},"，":{"docs":{},"出":{"docs":{},"现":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"原":{"docs":{},"因":{"docs":{},"在":{"docs":{},"于":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"路":{"docs":{},"的":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}},"代":{"docs":{},"码":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"思":{"docs":{},"路":{"docs":{},"很":{"docs":{},"简":{"docs":{},"洁":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"代":{"docs":{},"码":{"docs":{},"比":{"docs":{},"较":{"docs":{},"繁":{"docs":{},"琐":{"docs":{},"。":{"docs":{},"观":{"docs":{},"察":{"docs":{},"数":{"docs":{},"字":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"规":{"docs":{},"律":{"docs":{},"：":{"0":{"0":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"节":{"docs":{},"的":{"docs":{},"示":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}},"题":{"docs":{},"中":{"docs":{},"假":{"docs":{},"设":{"docs":{},"在":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}},"挂":{"docs":{},"起":{"docs":{},"期":{"docs":{},"间":{"docs":{},"，":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"释":{"docs":{},"放":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"进":{"docs":{},"入":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"方":{"docs":{},"法":{"docs":{},"或":{"docs":{},"者":{"docs":{},"同":{"docs":{},"步":{"docs":{},"控":{"docs":{},"制":{"docs":{},"块":{"docs":{},"中":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"执":{"docs":{},"行":{"docs":{"Java/Java并发/线程之间的协作.html":{"ref":"Java/Java并发/线程之间的协作.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"队":{"docs":{},"列":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}},"既":{"docs":{},"可":{"docs":{},"以":{"docs":{},"当":{"docs":{},"做":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"。":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"共":{"docs":{},"享":{"docs":{},"，":{"docs":{},"何":{"docs":{},"来":{"docs":{},"同":{"docs":{},"步":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"又":{"docs":{},"何":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"同":{"docs":{},"步":{"docs":{},"问":{"docs":{},"题":{"docs":{},"一":{"docs":{},"说":{"docs":{},"？":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}},"然":{"docs":{},"每":{"docs":{},"个":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"访":{"docs":{},"问":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"核":{"docs":{},"数":{"docs":{},"。":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}}}},"心":{"docs":{},"意":{"docs":{},"思":{"docs":{},"是":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"队":{"docs":{},"列":{"docs":{"Java/Java并发/J.U.C组件.html":{"ref":"Java/Java并发/J.U.C组件.html","tf":0.002074688796680498}},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}},"依":{"docs":{},"然":{"docs":{},"可":{"docs":{},"以":{"docs":{},"读":{"docs":{},"入":{"docs":{},"旧":{"docs":{},"值":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"执":{"docs":{},"行":{"docs":{},"了":{"docs":{},"两":{"docs":{},"次":{"docs":{},"自":{"docs":{},"增":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"主":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},"按":{"docs":{},"照":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"可":{"docs":{},"以":{"docs":{},"写":{"docs":{},"为":{"docs":{},"：":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{},"构":{"docs":{},"造":{"docs":{},"从":{"1":{"docs":{},"到":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513}}}},"docs":{}}}}}},"半":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"\"":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}},"处":{"docs":{},"理":{"docs":{},"器":{"docs":{},"上":{"docs":{},"的":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"的":{"docs":{},"读":{"docs":{},"写":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"比":{"docs":{},"内":{"docs":{},"存":{"docs":{},"快":{"docs":{},"几":{"docs":{},"个":{"docs":{},"数":{"docs":{},"量":{"docs":{},"级":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"种":{"docs":{},"速":{"docs":{},"度":{"docs":{},"矛":{"docs":{},"盾":{"docs":{},"，":{"docs":{},"在":{"docs":{},"它":{"docs":{},"们":{"docs":{},"之":{"docs":{},"间":{"docs":{},"加":{"docs":{},"入":{"docs":{},"了":{"docs":{},"高":{"docs":{},"速":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}},"。":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}}}},"程":{"docs":{},"序":{"docs":{},"在":{"docs":{},"各":{"docs":{},"种":{"docs":{},"平":{"docs":{},"台":{"docs":{},"下":{"docs":{},"都":{"docs":{},"能":{"docs":{},"达":{"docs":{},"到":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"访":{"docs":{},"问":{"docs":{},"效":{"docs":{},"果":{"docs":{},"。":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}}}},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"中":{"docs":{},"不":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"开":{"docs":{},"发":{"docs":{},"中":{"docs":{},"，":{"docs":{},"目":{"docs":{},"前":{"docs":{},"各":{"docs":{},"种":{"docs":{},"平":{"docs":{},"台":{"docs":{},"下":{"docs":{},"的":{"docs":{},"商":{"docs":{},"用":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"几":{"docs":{},"乎":{"docs":{},"都":{"docs":{},"选":{"docs":{},"择":{"docs":{},"把":{"6":{"4":{"docs":{},"位":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"读":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"作":{"docs":{},"为":{"docs":{},"原":{"docs":{},"子":{"docs":{},"操":{"docs":{},"作":{"docs":{},"来":{"docs":{},"对":{"docs":{},"待":{"docs":{},"。":{"docs":{},")":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"未":{"docs":{},"被":{"docs":{},"锁":{"docs":{},"定":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"头":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"布":{"docs":{},"局":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"数":{"docs":{},"据":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}},"虽":{"docs":{},"然":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}},"刷":{"docs":{},"是":{"docs":{},"刷":{"docs":{},"了":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"自":{"docs":{},"我":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"对":{"docs":{},"于":{"docs":{},"某":{"docs":{},"些":{"docs":{},"题":{"docs":{},"目":{"docs":{},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"够":{"docs":{},"深":{"docs":{},"，":{"docs":{},"等":{"docs":{},"以":{"docs":{},"后":{"docs":{},"有":{"docs":{},"时":{"docs":{},"间":{"docs":{},"了":{"docs":{},"再":{"docs":{},"刷":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"吧":{"docs":{},"！":{"docs":{},"^":{"docs":{},"_":{"docs":{},"^":{"docs":{"JianZhiOffer/":{"ref":"JianZhiOffer/","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"规":{"docs":{},"则":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}},"赋":{"docs":{},"值":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"就":{"docs":{},"是":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"的":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}}}}}}}}},"给":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}},"给":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"已":{"docs":{},"经":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"，":{"docs":{},"则":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"了":{"docs":{},"，":{"docs":{},"约":{"docs":{},"定":{"docs":{},"把":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"逃":{"docs":{},"逸":{"docs":{},"（":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"通":{"docs":{},"过":{"docs":{"Java/Java并发/Java内存模型.html":{"ref":"Java/Java并发/Java内存模型.html","tf":0.0022988505747126436}}}}}}}}}}},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082}},"首":{"docs":{},"先":{"docs":{},"利":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"找":{"docs":{},"到":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}}}}},"设":{"docs":{},"想":{"docs":{},"一":{"docs":{},"个":{"docs":{},"没":{"docs":{},"有":{"docs":{},"缺":{"docs":{},"失":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"的":{"docs":{},"？":{"docs":{},"设":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"乐":{"docs":{},"观":{"docs":{},"锁":{"docs":{},"需":{"docs":{},"要":{"docs":{},"操":{"docs":{},"作":{"docs":{},"和":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"检":{"docs":{},"测":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"具":{"docs":{},"备":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"再":{"docs":{},"使":{"docs":{},"用":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"同":{"docs":{},"步":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"靠":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"来":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"支":{"docs":{},"持":{"docs":{},"的":{"docs":{},"原":{"docs":{},"子":{"docs":{},"性":{"docs":{},"操":{"docs":{},"作":{"docs":{},"最":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"是":{"docs":{},"：":{"docs":{},"比":{"docs":{},"较":{"docs":{},"并":{"docs":{},"交":{"docs":{},"换":{"docs":{},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"交":{"docs":{},"互":{"docs":{},"模":{"docs":{},"型":{"docs":{},"中":{"docs":{},"的":{"docs":{},"“":{"docs":{},"一":{"docs":{},"个":{"docs":{},"请":{"docs":{},"求":{"docs":{},"对":{"docs":{},"应":{"docs":{},"一":{"docs":{},"个":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"线":{"docs":{},"程":{"docs":{},"”":{"docs":{},"（":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"服":{"docs":{},"务":{"docs":{},"端":{"docs":{},"应":{"docs":{},"用":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"线":{"docs":{},"程":{"docs":{},"本":{"docs":{},"地":{"docs":{},"存":{"docs":{},"储":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}},"栈":{"docs":{},"封":{"docs":{},"闭":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}},"的":{"docs":{},"压":{"docs":{},"入":{"docs":{},"、":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"序":{"docs":{},"列":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":10}}}}}}}}}}},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"”":{"docs":{},"模":{"docs":{},"式":{"docs":{},"）":{"docs":{},"都":{"docs":{},"会":{"docs":{},"将":{"docs":{},"产":{"docs":{},"品":{"docs":{},"的":{"docs":{},"消":{"docs":{},"费":{"docs":{},"过":{"docs":{},"程":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"消":{"docs":{},"费":{"docs":{},"完":{"docs":{},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{},"最":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"应":{"docs":{},"用":{"docs":{},"实":{"docs":{},"例":{"docs":{},"就":{"docs":{},"是":{"docs":{},"经":{"docs":{},"典":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"源":{"docs":{},"码":{"docs":{},"，":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"1":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}},"docs":{}}}}}}},"符":{"docs":{},"合":{"docs":{},"这":{"docs":{},"种":{"docs":{},"特":{"docs":{},"点":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"并":{"docs":{},"不":{"docs":{},"少":{"docs":{},"见":{"docs":{},"，":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{},"使":{"docs":{},"用":{"docs":{},"消":{"docs":{},"费":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"架":{"docs":{},"构":{"docs":{},"模":{"docs":{},"式":{"docs":{},"（":{"docs":{},"如":{"docs":{},"“":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"部":{"docs":{},"分":{"docs":{},"子":{"docs":{},"类":{"docs":{},"，":{"docs":{},"如":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}},"问":{"docs":{},"题":{"docs":{},"不":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"程":{"docs":{},"序":{"docs":{},"并":{"docs":{},"发":{"docs":{},"的":{"docs":{},"正":{"docs":{},"确":{"docs":{},"性":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"解":{"docs":{},"决":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"改":{"docs":{},"用":{"docs":{},"传":{"docs":{},"统":{"docs":{},"的":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"同":{"docs":{},"步":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"比":{"docs":{},"原":{"docs":{},"子":{"docs":{},"类":{"docs":{},"更":{"docs":{},"高":{"docs":{},"效":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}},"随":{"docs":{},"着":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"指":{"docs":{},"令":{"docs":{},"集":{"docs":{},"的":{"docs":{},"发":{"docs":{},"展":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"基":{"docs":{},"于":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"检":{"docs":{},"测":{"docs":{},"的":{"docs":{},"乐":{"docs":{},"观":{"docs":{},"并":{"docs":{},"发":{"docs":{},"策":{"docs":{},"略":{"docs":{},"：":{"docs":{},"先":{"docs":{},"进":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"其":{"docs":{},"它":{"docs":{},"线":{"docs":{},"程":{"docs":{},"争":{"docs":{},"用":{"docs":{},"共":{"docs":{},"享":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"那":{"docs":{},"操":{"docs":{},"作":{"docs":{},"就":{"docs":{},"成":{"docs":{},"功":{"docs":{},"了":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"采":{"docs":{},"取":{"docs":{},"补":{"docs":{},"偿":{"docs":{},"措":{"docs":{},"施":{"docs":{},"（":{"docs":{},"不":{"docs":{},"断":{"docs":{},"地":{"docs":{},"重":{"docs":{},"试":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"成":{"docs":{},"功":{"docs":{},"为":{"docs":{},"止":{"docs":{},"）":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"乐":{"docs":{},"观":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"策":{"docs":{},"略":{"docs":{},"的":{"docs":{},"许":{"docs":{},"多":{"docs":{},"实":{"docs":{},"现":{"docs":{},"都":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"线":{"docs":{},"程":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"种":{"docs":{},"同":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"称":{"docs":{},"为":{"docs":{},"非":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{"Java/Java并发/线程安全.html":{"ref":"Java/Java并发/线程安全.html","tf":0.0020242914979757085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"表":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}},"具":{"docs":{},"体":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"如":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}},"码":{"docs":{},"略":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}},"的":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}},"共":{"docs":{},"享":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},"同":{"docs":{},"指":{"docs":{},"向":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"是":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}},"即":{"docs":{},"当":{"docs":{},"前":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"对":{"docs":{},"于":{"3":{"docs":{},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}},"docs":{}}},"当":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"这":{"docs":{},"么":{"docs":{},"做":{"docs":{},"了":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"从":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"地":{"docs":{},"查":{"docs":{},"找":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"删":{"docs":{},"除":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}}},"为":{"docs":{},"该":{"docs":{},"数":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"对":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}},"旋":{"docs":{},"转":{"docs":{},"后":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"0":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}},"docs":{}}}}}}}},"删":{"docs":{},"除":{"docs":{},"了":{"docs":{},"所":{"docs":{},"有":{"docs":{},"和":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}},"并":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}},"两":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":10}},"。":{"docs":{"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082}}}}}}}}}}}},"命":{"docs":{},"名":{"docs":{},"的":{"docs":{},"由":{"docs":{},"来":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"增":{"docs":{},"加":{"docs":{},"线":{"docs":{},"程":{"docs":{},"与":{"docs":{},"减":{"docs":{},"少":{"docs":{},"线":{"docs":{},"程":{"docs":{},"均":{"docs":{},"需":{"docs":{},"要":{"docs":{},"写":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}},"强":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"无":{"docs":{},"法":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}},"总":{"docs":{},"的":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}},"结":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}},"上":{"docs":{},"述":{"docs":{},"过":{"docs":{},"程":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"以":{"docs":{},"下":{"docs":{},"结":{"docs":{},"论":{"docs":{},"：":{"docs":{},"整":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"我":{"docs":{},"们":{"docs":{},"保":{"docs":{},"持":{"docs":{},"两":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"至":{"docs":{},"少":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"。":{"docs":{},"当":{"docs":{},"执":{"docs":{},"行":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"。":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}}},"未":{"docs":{},"采":{"docs":{},"用":{"docs":{},"该":{"docs":{},"方":{"docs":{},"案":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"原":{"docs":{},"因":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}},"本":{"docs":{},"身":{"docs":{},"，":{"docs":{},"而":{"docs":{},"用":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"注":{"docs":{},"：":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"是":{"docs":{},"弱":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"是":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}},"意":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"能":{"docs":{},"够":{"docs":{},"得":{"docs":{},"到":{"docs":{},"正":{"docs":{},"确":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"在":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}},"虽":{"docs":{},"然":{"docs":{},"在":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"分":{"docs":{},"析":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"是":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"，":{"docs":{},"p":{"1":{"docs":{},"和":{"docs":{},"p":{"2":{"docs":{},"同":{"docs":{},"时":{"docs":{},"指":{"docs":{},"向":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"无":{"docs":{},"论":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"还":{"docs":{},"是":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"应":{"docs":{},"该":{"docs":{},"都":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"的":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"实":{"docs":{},"现":{"docs":{},"上":{"docs":{},"只":{"docs":{},"有":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"才":{"docs":{},"指":{"docs":{},"示":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"里":{"docs":{},"只":{"docs":{},"能":{"docs":{},"返":{"docs":{},"回":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}},"空":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"也":{"docs":{},"被":{"docs":{},"认":{"docs":{},"为":{"docs":{},"是":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"。":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}},"这":{"docs":{},"里":{"docs":{},"i":{"docs":{},"是":{"docs":{},"从":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"j":{"docs":{},"是":{"docs":{},"从":{"docs":{},"p":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"上":{"docs":{},"述":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"运":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"：":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}}}}}}}}},"不":{"docs":{},"能":{"docs":{},"将":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}}}},"初":{"docs":{},"始":{"docs":{},"条":{"docs":{},"件":{"docs":{},"是":{"docs":{},"j":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}},"由":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.003430531732418525}},"于":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666}},"只":{"docs":{},"被":{"docs":{},"持":{"docs":{},"有":{"docs":{},"它":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"故":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"以":{"docs":{},"及":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"m":{"docs":{},",":{"docs":{},"n":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"得":{"docs":{},"到":{"docs":{},"m":{"docs":{},"n":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"里":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"而":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"处":{"docs":{},"理":{"docs":{},"原":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"。":{"docs":{},"处":{"docs":{},"理":{"docs":{},"时":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"递":{"docs":{},"增":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"用":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"读":{"docs":{},"出":{"docs":{},"数":{"docs":{},"据":{"docs":{},"并":{"docs":{},"计":{"docs":{},"算":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"容":{"docs":{},"器":{"docs":{},"存":{"docs":{},"储":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"并":{"docs":{},"同":{"docs":{},"时":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"和":{"docs":{},"读":{"docs":{},"取":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"找":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"层":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"右":{"docs":{},"往":{"docs":{},"左":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"先":{"docs":{},"加":{"docs":{},"入":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"再":{"docs":{},"加":{"docs":{},"入":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"奇":{"docs":{},"数":{"docs":{},"层":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"左":{"docs":{},"往":{"docs":{},"右":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"先":{"docs":{},"加":{"docs":{},"入":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"再":{"docs":{},"加":{"docs":{},"入":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"是":{"docs":{},"从":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"为":{"docs":{},"了":{"docs":{},"找":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"最":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"其":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"则":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"其":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"则":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"继":{"docs":{},"续":{"docs":{},"从":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"找":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"其":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"父":{"docs":{},"子":{"docs":{},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"即":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"没":{"docs":{},"有":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"是":{"docs":{},"先":{"docs":{},"从":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"采":{"docs":{},"用":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"每":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"进":{"docs":{},"行":{"docs":{},"累":{"docs":{},"加":{"docs":{},"，":{"docs":{},"即":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"记":{"docs":{},"录":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"编":{"docs":{},"号":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"编":{"docs":{},"号":{"docs":{},"等":{"docs":{},"于":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"什":{"docs":{},"么":{"docs":{},"问":{"docs":{},"题":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"法":{"docs":{},"比":{"docs":{},"较":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}},"该":{"docs":{},"方":{"docs":{},"案":{"docs":{},"中":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"可":{"docs":{},"满":{"docs":{},"足":{"docs":{},"上":{"docs":{},"文":{"docs":{},"提":{"docs":{},"到":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"内":{"docs":{},"一":{"docs":{},"个":{"docs":{},"独":{"docs":{},"立":{"docs":{},"备":{"docs":{},"份":{"docs":{},"的":{"docs":{},"要":{"docs":{},"求":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{},"新":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"该":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"虽":{"docs":{},"然":{"docs":{},"没":{"docs":{},"有":{"docs":{},"锁":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"访":{"docs":{},"问":{"docs":{},"某":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}},"法":{"docs":{},"为":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},"先":{"docs":{},"获":{"docs":{},"取":{"docs":{},"该":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}},"对":{"docs":{},"上":{"docs":{},"述":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"做":{"docs":{},"了":{"docs":{},"简":{"docs":{},"化":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}}}},"那":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}},"针":{"docs":{},"对":{"docs":{},"该":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}},"防":{"docs":{},"止":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"漏":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}}},"）":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{"Java/Java并发/ThreadLocal .html":{"ref":"Java/Java并发/ThreadLocal .html","tf":0.0017152658662092624}}}}}}},"偏":{"docs":{},"向":{"docs":{},"锁":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"是":{"docs":{},"偏":{"docs":{},"向":{"docs":{},"于":{"docs":{},"让":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"获":{"docs":{},"取":{"docs":{},"锁":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"在":{"docs":{},"之":{"docs":{},"后":{"docs":{},"获":{"docs":{},"取":{"docs":{},"该":{"docs":{},"锁":{"docs":{},"就":{"docs":{},"不":{"docs":{},"再":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"连":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"固":{"docs":{},"定":{"docs":{},"为":{"0":{"docs":{},"。":{"docs":{},"当":{"docs":{},"对":{"docs":{},"象":{"docs":{},"处":{"docs":{},"于":{"docs":{},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}},"docs":{}}}},"失":{"docs":{},"败":{"docs":{},"了":{"docs":{},"再":{"docs":{},"改":{"docs":{},"用":{"docs":{},"互":{"docs":{},"斥":{"docs":{},"量":{"docs":{},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}},"更":{"docs":{},"新":{"docs":{},"为":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}}}}}}}}}}}}}}}}},"空":{"docs":{},"间":{"docs":{},"中":{"docs":{},"的":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"：":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.007194244604316547},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182}},"（":{"docs":{},"取":{"docs":{},"决":{"docs":{},"于":{"docs":{},"所":{"docs":{},"用":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"）":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}},"docs":{},"n":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.005681818181818182}},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}},"^":{"2":{"docs":{},")":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704}}}},"docs":{}}}}}}}}}}},"记":{"docs":{},"录":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}},"到":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"情":{"docs":{},"况":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}},"串":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"各":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"和":{"docs":{},"它":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"束":{"docs":{},"返":{"docs":{},"回":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}}},"轻":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}},"是":{"docs":{},"相":{"docs":{},"对":{"docs":{},"于":{"docs":{},"传":{"docs":{},"统":{"docs":{},"的":{"docs":{},"重":{"docs":{},"量":{"docs":{},"级":{"docs":{},"锁":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"它":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java并发/锁优化.html":{"ref":"Java/Java并发/锁优化.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}},"给":{"docs":{},"线":{"docs":{},"程":{"docs":{},"起":{"docs":{},"个":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"的":{"docs":{},"名":{"docs":{},"字":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"可":{"docs":{},"以":{"docs":{},"方":{"docs":{},"便":{"docs":{},"找":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}},"定":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152}},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"至":{"docs":{},"少":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"请":{"docs":{},"找":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"里":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"如":{"docs":{},"果":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"数":{"docs":{},"字":{"2":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}},"docs":{}}}}}}}}}}},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"删":{"docs":{},"除":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"为":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"和":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"除":{"docs":{},"了":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"分":{"docs":{},"别":{"docs":{},"指":{"docs":{},"向":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"以":{"docs":{},"外":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"包":{"docs":{},"含":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669}},"'":{"docs":{},"(":{"docs":{},"'":{"docs":{},",":{"docs":{"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894}}}}}}}},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"，":{"docs":{},"删":{"docs":{},"除":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"使":{"docs":{},"得":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{},"要":{"docs":{},"求":{"docs":{},"直":{"docs":{},"接":{"docs":{},"在":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"上":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"创":{"docs":{},"建":{"docs":{},"新":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"函":{"docs":{},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{},"删":{"docs":{},"除":{"docs":{},"后":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{},"设":{"docs":{},"删":{"docs":{},"除":{"docs":{},"后":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"旋":{"docs":{},"转":{"docs":{},"后":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}}}}},"未":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"缺":{"docs":{},"失":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{},"要":{"docs":{},"求":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"，":{"docs":{},"请":{"docs":{},"找":{"docs":{},"出":{"docs":{},"其":{"docs":{},"中":{"docs":{},"第":{"docs":{},"k":{"docs":{},"大":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"k":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}}},"单":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"在":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}},"缩":{"docs":{},"小":{"docs":{},"同":{"docs":{},"步":{"docs":{},"范":{"docs":{},"围":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"减":{"docs":{},"少":{"docs":{},"锁":{"docs":{},"争":{"docs":{},"用":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"对":{"docs":{},"于":{"docs":{"Java/Java并发/Best Practices.html":{"ref":"Java/Java并发/Best Practices.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"JianZhiOffer/":{"ref":"JianZhiOffer/","tf":10.333333333333334}}}}}}}}},"终":{"docs":{},"于":{"docs":{},"刷":{"docs":{},"完":{"docs":{},"《":{"docs":{},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"》":{"docs":{},"啦":{"docs":{},"！":{"docs":{},"！":{"docs":{},"！":{"docs":{},"这":{"docs":{},"里":{"docs":{},"整":{"docs":{},"理":{"docs":{},"一":{"docs":{},"下":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"题":{"docs":{},"解":{"docs":{},"。":{"docs":{},"原":{"docs":{},"书":{"docs":{},"中":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"用":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"自":{"docs":{},"己":{"docs":{},"对":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"更":{"docs":{},"熟":{"docs":{},"悉":{"docs":{},"一":{"docs":{},"些":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"里":{"docs":{},"我":{"docs":{},"选":{"docs":{},"择":{"docs":{},"用":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"在":{"docs":{},"刷":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"参":{"docs":{},"考":{"docs":{},"并":{"docs":{},"用":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"再":{"docs":{},"现":{"docs":{},"了":{"docs":{},"书":{"docs":{},"上":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"外":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"些":{"docs":{},"题":{"docs":{},"目":{"docs":{},"我":{"docs":{},"也":{"docs":{},"补":{"docs":{},"充":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"我":{"docs":{},"在":{"docs":{},"其":{"docs":{},"他":{"docs":{},"地":{"docs":{},"方":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"《":{"docs":{},"算":{"docs":{},"法":{"docs":{},"竞":{"docs":{},"赛":{"docs":{},"入":{"docs":{},"门":{"docs":{},"经":{"docs":{},"典":{"docs":{},"》":{"docs":{},"等":{"docs":{},"看":{"docs":{},"到":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"比":{"docs":{},"较":{"docs":{},"有":{"docs":{},"意":{"docs":{},"思":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"对":{"docs":{},"于":{"docs":{},"“":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"公":{"docs":{},"共":{"docs":{},"节":{"docs":{},"点":{"docs":{},"”":{"docs":{},"这":{"docs":{},"道":{"docs":{},"题":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"“":{"docs":{},"两":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"”":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"要":{"docs":{},"比":{"docs":{},"书":{"docs":{},"上":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"更":{"docs":{},"加":{"docs":{},"直":{"docs":{},"观":{"docs":{},"，":{"docs":{},"效":{"docs":{},"率":{"docs":{},"更":{"docs":{},"高":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"“":{"docs":{},"正":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"”":{"docs":{},"这":{"docs":{},"道":{"docs":{},"题":{"docs":{},"，":{"docs":{},"书":{"docs":{},"上":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"些":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"长":{"docs":{},"度":{"docs":{},"很":{"docs":{},"长":{"docs":{},"的":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"效":{"docs":{},"果":{"docs":{},"会":{"docs":{},"很":{"docs":{},"差":{"docs":{},"，":{"docs":{},"而":{"docs":{},"选":{"docs":{},"用":{"docs":{},"一":{"docs":{},"种":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"则":{"docs":{},"会":{"docs":{},"大":{"docs":{},"大":{"docs":{},"提":{"docs":{},"升":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"。":{"docs":{},"此":{"docs":{},"外":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"“":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"”":{"docs":{},"这":{"docs":{},"道":{"docs":{},"题":{"docs":{},"，":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"书":{"docs":{},"上":{"docs":{},"第":{"docs":{},"一":{"docs":{},"种":{"docs":{},"解":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"选":{"docs":{},"取":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"每":{"docs":{},"次":{"docs":{},"只":{"docs":{},"选":{"docs":{},"取":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"作":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"某":{"docs":{},"些":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{},"比":{"docs":{},"较":{"docs":{},"多":{"docs":{},"的":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"下":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"产":{"docs":{},"生":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"应":{"docs":{},"该":{"docs":{},"随":{"docs":{},"机":{"docs":{},"地":{"docs":{},"选":{"docs":{},"取":{"docs":{},"基":{"docs":{},"准":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"JianZhiOffer/":{"ref":"JianZhiOffer/","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"路":{"1":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},"2":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.007692307692307693},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}},":":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}},"：":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}},"3":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},"4":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}},"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.012121212121212121},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.008823529411764706},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.010526315789473684},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02247191011235955},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0070921985815602835},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"同":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}}},"输":{"docs":{},"入":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"把":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"起":{"docs":{},"来":{"docs":{},"排":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"能":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"出":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"递":{"docs":{},"增":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"调":{"docs":{},"整":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"位":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"前":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"位":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"后":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"并":{"docs":{},"保":{"docs":{},"证":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"和":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"某":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"互":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"该":{"docs":{},"数":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"示":{"docs":{},"中":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{},"负":{"docs":{},"数":{"docs":{},"用":{"docs":{},"补":{"docs":{},"码":{"docs":{},"表":{"docs":{},"示":{"docs":{},"。":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"非":{"docs":{},"减":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"从":{"docs":{},"尾":{"docs":{},"到":{"docs":{},"头":{"docs":{},"反":{"docs":{},"过":{"docs":{},"来":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"反":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{},"后":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"表":{"docs":{},"头":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}},"输":{"docs":{},"出":{"docs":{},"该":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282}}}}}}}}}}}}}},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"（":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"以":{"docs":{},"及":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"外":{"docs":{},"向":{"docs":{},"里":{"docs":{},"以":{"docs":{},"顺":{"docs":{},"时":{"docs":{},"针":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"依":{"docs":{},"次":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"如":{"docs":{},"下":{"4":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"英":{"docs":{},"文":{"docs":{},"句":{"docs":{},"子":{"docs":{},"，":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"句":{"docs":{},"子":{"docs":{},"中":{"docs":{},"单":{"docs":{},"词":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"但":{"docs":{},"单":{"docs":{},"词":{"docs":{},"内":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"不":{"docs":{},"变":{"docs":{},"。":{"docs":{},"为":{"docs":{},"简":{"docs":{},"单":{"docs":{},"起":{"docs":{},"见":{"docs":{},"，":{"docs":{},"标":{"docs":{},"点":{"docs":{},"符":{"docs":{},"号":{"docs":{},"和":{"docs":{},"普":{"docs":{},"通":{"docs":{},"字":{"docs":{},"母":{"docs":{},"一":{"docs":{},"样":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},",":{"docs":{},"按":{"docs":{},"字":{"docs":{},"典":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"该":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"它":{"docs":{},"的":{"docs":{},"镜":{"docs":{},"像":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}},"求":{"docs":{},"该":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"。":{"docs":{},"从":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},"依":{"docs":{},"次":{"docs":{},"经":{"docs":{},"过":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"，":{"docs":{},"将":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"要":{"docs":{},"求":{"docs":{},"不":{"docs":{},"能":{"docs":{},"创":{"docs":{},"建":{"docs":{},"任":{"docs":{},"何":{"docs":{},"新":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"调":{"docs":{},"整":{"docs":{},"树":{"docs":{},"中":{"docs":{},"结":{"docs":{},"点":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"指":{"docs":{},"向":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"对":{"docs":{},"于":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"颗":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{},"为":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"单":{"docs":{},"调":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"合":{"docs":{},"成":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"合":{"docs":{},"成":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"也":{"docs":{},"要":{"docs":{},"求":{"docs":{},"单":{"docs":{},"调":{"docs":{},"递":{"docs":{},"增":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"找":{"docs":{},"出":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"公":{"docs":{},"共":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"表":{"docs":{},"示":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"请":{"docs":{},"判":{"docs":{},"断":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"能":{"docs":{},"为":{"docs":{},"该":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"均":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"序":{"docs":{},"列":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}},"某":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"请":{"docs":{},"重":{"docs":{},"建":{"docs":{},"出":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"中":{"docs":{},"都":{"docs":{},"不":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"：":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}},"docs":{}}}}},"：":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}},"题":{"docs":{},"目":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.012987012987012988},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.015151515151515152},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.03333333333333333},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.01282051282051282},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.01639344262295082},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.01694915254237288},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/13. Roman to Integer.html":{"ref":"LeetCode/13. Roman to Integer.html","tf":0.0047169811320754715},"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}},"大":{"docs":{},"意":{"docs":{"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315},"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943},"LeetCode/20. Valid Parentheses.html":{"ref":"LeetCode/20. Valid Parentheses.html","tf":0.008849557522123894},"LeetCode/21. Merge Two Sorted Lists.html":{"ref":"LeetCode/21. Merge Two Sorted Lists.html","tf":0.01639344262295082},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506},"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.012195121951219513},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}}},"[":{"0":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"1":{"docs":{},",":{"0":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"3":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}},".":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}},"1":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}},"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"ref":"LeetCode/80. Remove Duplicates from Sorted Array II.html","tf":0.005128205128205128}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061}}}}},"docs":{}}},"2":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}},"docs":{}}},"8":{"docs":{},",":{"6":{"docs":{},",":{"2":{"docs":{},",":{"5":{"docs":{},",":{"4":{"docs":{},",":{"8":{"docs":{},",":{"3":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}},".":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.007194244604316547},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}},"2":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}},"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}},",":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}},"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}},"4":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},")":{"docs":{},".":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}},",":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.008928571428571428}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"6":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}},"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.00980392156862745},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.008928571428571428}}},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152}}}},"5":{"docs":{},",":{"7":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},",":{"8":{"docs":{},",":{"1":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.00980392156862745}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.013824884792626729},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}},"6":{"docs":{},"]":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}},",":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.017094017094017096}}}},"7":{"docs":{},",":{"8":{"docs":{},",":{"9":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"2":{"docs":{},"]":{"docs":{"LeetCode/41. First Missing Positive.html":{"ref":"LeetCode/41. First Missing Positive.html","tf":0.00909090909090909}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.013824884792626729},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}},"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.038834951456310676},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.014705882352941176},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}},"[":{"1":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.009433962264150943}}}},"docs":{}},"docs":{}},"i":{"docs":{},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.017341040462427744}}}},"−":{"2":{"3":{"1":{"docs":{},",":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}},"docs":{}},"docs":{}},"docs":{}},"\"":{"4":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"8":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"3":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}},"5":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"3":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}},"6":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"9":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"5":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}},"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"2":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"6":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"8":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"3":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"6":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"3":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"\"":{"docs":{},"]":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"\"":{"docs":{},"]":{"docs":{"LeetCode/14. Longest Common Prefix.html":{"ref":"LeetCode/14. Longest Common Prefix.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.0136986301369863}}}}}},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"6":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"2":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"8":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"9":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"8":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"6":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"4":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"9":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"5":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"8":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"9":{"docs":{},"\"":{"docs":{},"]":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"丑":{"docs":{},"数":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":10}}}},"习":{"docs":{},"惯":{"docs":{},"上":{"docs":{},"我":{"docs":{},"们":{"docs":{},"把":{"1":{"docs":{},"当":{"docs":{},"做":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"。":{"docs":{},"求":{"docs":{},"按":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"第":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"置":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"束":{"docs":{},"后":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"超":{"docs":{},"过":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"确":{"docs":{},"实":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"判":{"docs":{},"断":{"docs":{},"当":{"docs":{},"前":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"和":{"docs":{},"是":{"docs":{},"大":{"docs":{},"于":{"docs":{},"还":{"docs":{},"是":{"docs":{},"小":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"并":{"docs":{},"将":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}},"至":{"docs":{},"多":{"docs":{},"只":{"docs":{},"能":{"docs":{},"增":{"docs":{},"加":{"docs":{},"到":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.006060606060606061}}}}}}}}},"保":{"docs":{},"存":{"docs":{},"它":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"和":{"docs":{},"其":{"docs":{},"他":{"docs":{},"数":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"抵":{"docs":{},"消":{"docs":{},"后":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"和":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"最":{"docs":{},"多":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"用":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}}}}}}}},"窗":{"docs":{},"口":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}},"已":{"docs":{},"经":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"过":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"已":{"docs":{},"经":{"docs":{},"包":{"docs":{},"含":{"docs":{},"在":{"docs":{},"了":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}},"走":{"docs":{},"过":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"当":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"已":{"docs":{},"经":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}},"偶":{"docs":{},"数":{"docs":{},"层":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}},"奇":{"docs":{},"数":{"docs":{},"层":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"在":{"docs":{},"处":{"docs":{},"理":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"过":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"它":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{},"每":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.008130081300813009}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"；":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}}}}}}}}}},"减":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}},"docs":{}}},"函":{"docs":{},"数":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808}},"。":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}},"应":{"docs":{},"用":{"docs":{},"于":{"docs":{},"该":{"docs":{},"题":{"docs":{},"中":{"docs":{},"则":{"docs":{},"在":{"docs":{},"某":{"docs":{},"些":{"docs":{},"测":{"docs":{},"试":{"docs":{},"用":{"docs":{},"例":{"docs":{},"下":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"当":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"大":{"docs":{},"量":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"：":{"docs":{},"每":{"docs":{},"次":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"选":{"docs":{},"择":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"，":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"比":{"docs":{},"该":{"docs":{},"数":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"排":{"docs":{},"在":{"docs":{},"它":{"docs":{},"的":{"docs":{},"左":{"docs":{},"边":{"docs":{},"，":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"比":{"docs":{},"该":{"docs":{},"数":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"排":{"docs":{},"在":{"docs":{},"它":{"docs":{},"的":{"docs":{},"右":{"docs":{},"边":{"docs":{},"。":{"docs":{},"由":{"docs":{},"此":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"便":{"docs":{},"确":{"docs":{},"定":{"docs":{},"了":{"docs":{},"该":{"docs":{},"数":{"docs":{},"在":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"正":{"docs":{},"确":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"一":{"docs":{},"般":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"书":{"docs":{},"中":{"docs":{},"对":{"docs":{},"于":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"计":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"当":{"docs":{},"时":{"docs":{},"在":{"docs":{},"学":{"docs":{},"习":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"这":{"docs":{},"门":{"docs":{},"课":{"docs":{},"程":{"docs":{},"时":{"docs":{},"，":{"docs":{},"都":{"docs":{},"会":{"docs":{},"学":{"docs":{},"习":{"docs":{},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"而":{"docs":{},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"就":{"docs":{},"是":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"都":{"docs":{},"为":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"将":{"docs":{},"这":{"docs":{},"种":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"即":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"随":{"docs":{},"机":{"docs":{},"选":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"同":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"基":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}}},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"后":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"是":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}},"找":{"docs":{},"到":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"返":{"docs":{},"回":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}},"docs":{}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"当":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"很":{"docs":{},"多":{"docs":{},"时":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"调":{"docs":{},"用":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"在":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"其":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}}},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"时":{"docs":{},"都":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"时":{"docs":{},"间":{"docs":{},"开":{"docs":{},"销":{"docs":{},"会":{"docs":{},"很":{"docs":{},"大":{"docs":{},"。":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"是":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"统":{"docs":{},"计":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}},"字":{"docs":{},"k":{"docs":{},"在":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"接":{"docs":{},"着":{"docs":{},"再":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"为":{"1":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.034482758620689655}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.0035971223021582736}}}}},")":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.009569377990430622},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.005025125628140704},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.007751937984496124}}},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.018433179723502304},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"LeetCode/15. 3Sum.html":{"ref":"LeetCode/15. 3Sum.html","tf":0.009708737864077669},"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186},"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091},"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.009900990099009901}},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152}}}},"向":{"docs":{},"前":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"位":{"docs":{},"。":{"docs":{},"接":{"docs":{},"着":{"docs":{},"判":{"docs":{},"断":{"5":{"docs":{},"和":{"6":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"5":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}},"；":{"docs":{},"反":{"docs":{},"之":{"docs":{},"，":{"docs":{},"当":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"]":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}}}}}}}},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"重":{"docs":{},"复":{"docs":{},"上":{"docs":{},"述":{"docs":{},"过":{"docs":{},"程":{"docs":{},"直":{"docs":{},"到":{"docs":{"LeetCode/26. Remove Duplicates from Sorted Array.html":{"ref":"LeetCode/26. Remove Duplicates from Sorted Array.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}},"归":{"docs":{},"并":{"docs":{},"之":{"docs":{},"后":{"docs":{},"得":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.009216589861751152}}}}}}},"辅":{"docs":{},"助":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.004608294930875576}}}}}},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"放":{"docs":{},"在":{"docs":{},"了":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"，":{"docs":{},"接":{"docs":{},"着":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"是":{"docs":{},"，":{"docs":{},"拿":{"docs":{},"它":{"docs":{},"和":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"放":{"docs":{},"到":{"docs":{},"它":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"去":{"docs":{},"。":{"docs":{},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"重":{"docs":{},"复":{"docs":{},"这":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"我":{"docs":{},"们":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}},";":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.006896551724137931},"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}},"%":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005025125628140704},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}},"列":{"docs":{},"的":{"docs":{},"方":{"docs":{},"格":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"机":{"docs":{},"器":{"docs":{},"人":{"docs":{},"从":{"docs":{},"坐":{"docs":{},"标":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}}}}}}}}}}}}}},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"。":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008264462809917356}},"在":{"docs":{},"进":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"格":{"docs":{},"子":{"docs":{},"之":{"docs":{},"前":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"能":{"docs":{},"进":{"docs":{},"入":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"能":{"docs":{},"进":{"docs":{},"入":{"docs":{},"则":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"地":{"docs":{},"上":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.01282051282051282}}}}}}},"机":{"docs":{},"器":{"docs":{},"人":{"docs":{},"的":{"docs":{},"运":{"docs":{},"动":{"docs":{},"范":{"docs":{},"围":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":10}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":10}}}}}},"的":{"docs":{},"列":{"docs":{},"数":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}}},"行":{"docs":{},"数":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012048192771084338}}}}}}},"了":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"个":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"算":{"docs":{},"出":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}},"；":{"docs":{},"同":{"docs":{},"理":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"前":{"docs":{},"面":{"docs":{},"还":{"docs":{},"有":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.00909090909090909}}}}}}}}},"还":{"docs":{},"在":{"docs":{},"左":{"docs":{},"边":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"在":{"docs":{},"左":{"docs":{},"边":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{},"同":{"docs":{},"理":{"docs":{},"可":{"docs":{},"以":{"docs":{},"找":{"docs":{},"到":{"docs":{"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"ref":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":10}}}}}}}}}}}},"k":{"docs":{},"大":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}},"旋":{"docs":{},"转":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"做":{"docs":{},"是":{"docs":{},"由":{"docs":{},"两":{"docs":{},"个":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"所":{"docs":{},"构":{"docs":{},"成":{"docs":{},"，":{"docs":{},"而":{"docs":{},"这":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"分":{"docs":{},"界":{"docs":{},"点":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"借":{"docs":{},"助":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"去":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"这":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"用":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":10},"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.016666666666666666}},"结":{"docs":{},"论":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.008547008547008548}}}}},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.010416666666666666}}}}}}},"肯":{"docs":{},"定":{"docs":{},"不":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"即":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.008695652173913044}}}}},"docs":{}}}}},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":10}}}}}}}},"种":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"，":{"docs":{},"n":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}}}}},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"从":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}},"总":{"docs":{},"共":{"docs":{},"有":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}}},"的":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"数":{"docs":{},"和":{"docs":{},"跳":{"docs":{},"上":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}}},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"即":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}}}},"等":{"docs":{},"于":{"docs":{},"跳":{"docs":{},"上":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}}}}}}}},"跳":{"1":{"docs":{},"次":{"docs":{},"，":{"1":{"docs":{},"次":{"docs":{},"跳":{"1":{"docs":{},"级":{"docs":{},"得":{"docs":{},"到":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"的":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"总":{"docs":{},"共":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"种":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"。":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"。":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}},"假":{"docs":{},"设":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.00909090909090909}}}}}}}}}}},"项":{"docs":{},"（":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"第":{"0":{"docs":{},"项":{"docs":{},"为":{"0":{"docs":{},"）":{"docs":{},"。":{"docs":{},"n":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.011904761904761904}}}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":10}}}}}}}}}}},"《":{"docs":{},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"》":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"。":{"docs":{},"当":{"docs":{},"没":{"docs":{},"有":{"docs":{},"*":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"情":{"docs":{},"况":{"docs":{},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"依":{"docs":{},"次":{"docs":{},"判":{"docs":{},"断":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"》":{"docs":{},"中":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"是":{"docs":{},"树":{"docs":{},"中":{"docs":{},"第":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}}}}},"余":{"docs":{},"下":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"*":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"匹":{"docs":{},"配":{"0":{"docs":{},"个":{"docs":{},"，":{"docs":{},"即":{"docs":{},"忽":{"docs":{},"略":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"匹":{"docs":{},"配":{"0":{"docs":{},"个":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}},"1":{"docs":{},"个":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.004784688995215311}}}}}}},"docs":{}}},"正":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":10}}}}}}}}},"反":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":10}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}},"复":{"docs":{},"制":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{},"复":{"docs":{},"制":{"docs":{},"节":{"docs":{},"点":{"docs":{},"直":{"docs":{},"接":{"docs":{},"链":{"docs":{},"接":{"docs":{},"到":{"docs":{},"原":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"后":{"docs":{},"面":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"将":{"docs":{},"复":{"docs":{},"制":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"直":{"docs":{},"接":{"docs":{},"链":{"docs":{},"接":{"docs":{},"到":{"docs":{},"原":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"后":{"docs":{},"面":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"不":{"docs":{},"设":{"docs":{},"置":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"复":{"docs":{},"制":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":10}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"该":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"构":{"docs":{},"成":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"构":{"docs":{},"成":{"docs":{},"复":{"docs":{},"制":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"出":{"docs":{},"来":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"环":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}},"证":{"docs":{},"明":{"docs":{},"：":{"docs":{},"设":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}},"走":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"则":{"docs":{},"说":{"docs":{},"明":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"环":{"docs":{},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"再":{"docs":{},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}}}}},"过":{"docs":{},"的":{"docs":{},"路":{"docs":{},"程":{"docs":{},"为":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.009708737864077669}}},"又":{"docs":{},"可":{"docs":{},"以":{"docs":{},"表":{"docs":{},"示":{"docs":{},"为":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0048543689320388345}}}}}}}}}}}}},"步":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"再":{"docs":{},"一":{"docs":{},"起":{"docs":{},"走":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"或":{"docs":{},"者":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"为":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"着":{"docs":{"LeetCode/19. Remove Nth Node From End of List.html":{"ref":"LeetCode/19. Remove Nth Node From End of List.html","tf":0.009433962264150943}}}}}},"便":{"docs":{},"于":{"docs":{},"被":{"docs":{},"g":{"docs":{},"c":{"docs":{},"发":{"docs":{},"现":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0058823529411764705}}}}}}}}},"否":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.011695906432748537}},"则":{"docs":{},"，":{"docs":{},"将":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"指":{"docs":{},"向":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0029411764705882353}}}}}}}}}}}}}}}},"小":{"docs":{},"于":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.023809523809523808}}}}}}}}}}}},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"在":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"继":{"docs":{},"续":{"docs":{},"在":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"第":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"我":{"docs":{},"们":{"docs":{},"把":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"按":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"排":{"docs":{},"列":{"docs":{},"并":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"编":{"docs":{},"号":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"求":{"docs":{},"出":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.014598540145985401}}}}}}}}},"及":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"3":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"一":{"docs":{},"共":{"docs":{},"存":{"docs":{},"在":{"6":{"docs":{},"个":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}},"其":{"docs":{},"所":{"docs":{},"有":{"docs":{},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{},"都":{"docs":{},"要":{"docs":{},"和":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}}}}}},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":10}}}}}},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}},"树":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.010638297872340425}},"作":{"docs":{},"为":{"docs":{},"数":{"docs":{},"据":{"docs":{},"容":{"docs":{},"器":{"docs":{},"，":{"docs":{},"将":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"因":{"docs":{},"子":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{},"据":{"docs":{},"之":{"docs":{},"差":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"插":{"docs":{},"入":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"读":{"docs":{},"取":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"为":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"再":{"docs":{},"分":{"docs":{},"析":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":10}}}}}}},"现":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"对":{"docs":{},"栈":{"docs":{},"执":{"docs":{},"行":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.005263157894736842}}}}}}}}}},",":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099},"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}},"h":{"docs":{},"i":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.005847953216374269}}}}}}},"改":{"docs":{},"写":{"docs":{},"。":{"docs":{},"用":{"docs":{},"变":{"docs":{},"量":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}}}}},"请":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"是":{"docs":{},"否":{"docs":{},"表":{"docs":{},"示":{"docs":{},"数":{"docs":{},"值":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.01282051282051282}}}}}}}}}}}}},"找":{"docs":{},"出":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"当":{"docs":{},"从":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"只":{"docs":{},"读":{"docs":{},"出":{"docs":{},"前":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"将":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"空":{"docs":{},"格":{"docs":{},"替":{"docs":{},"换":{"docs":{},"成":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"。":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.01098901098901099}}}}}},"打":{"docs":{},"印":{"docs":{},"从":{"1":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"n":{"docs":{},"位":{"docs":{},"数":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":10}}}}}}}}}},"docs":{}}}},"左":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"左":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"把":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"若":{"docs":{},"干":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"转":{"docs":{},"移":{"docs":{},"到":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"。":{"docs":{},"请":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"实":{"docs":{},"现":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"左":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"翻":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":10}}}}},"整":{"docs":{},"个":{"docs":{},"句":{"docs":{},"子":{"docs":{},"，":{"docs":{},"将":{"docs":{},"结":{"docs":{},"果":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"中":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.018518518518518517}}}}}},"各":{"docs":{},"个":{"docs":{},"值":{"docs":{},"的":{"docs":{},"含":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.008064516129032258}}}}}}}}}}},"码":{"docs":{},"为":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.03225806451612903}}}},"按":{"docs":{},"之":{"docs":{},"字":{"docs":{},"形":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"按":{"docs":{},"照":{"docs":{},"之":{"docs":{},"字":{"docs":{},"形":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"即":{"docs":{},"第":{"docs":{},"一":{"docs":{},"层":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"左":{"docs":{},"向":{"docs":{},"右":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"层":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"右":{"docs":{},"向":{"docs":{},"左":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"进":{"docs":{},"行":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"第":{"docs":{},"三":{"docs":{},"层":{"docs":{},"再":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"左":{"docs":{},"向":{"docs":{},"右":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"进":{"docs":{},"行":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"打":{"docs":{},"印":{"docs":{},"某":{"docs":{},"一":{"docs":{},"行":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"把":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"里":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"是":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"层":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"层":{"docs":{},"是":{"docs":{},"从":{"docs":{},"左":{"docs":{},"往":{"docs":{},"右":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"其":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"右":{"docs":{},"往":{"docs":{},"左":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"栈":{"docs":{},"后":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"保":{"docs":{},"存":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"应":{"docs":{},"该":{"docs":{},"先":{"docs":{},"保":{"docs":{},"存":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"再":{"docs":{},"保":{"docs":{},"存":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"同":{"docs":{},"理":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"层":{"docs":{},"，":{"docs":{},"则":{"docs":{},"保":{"docs":{},"存":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"先":{"docs":{},"保":{"docs":{},"存":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"再":{"docs":{},"保":{"docs":{},"存":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{},"值":{"docs":{},"大":{"docs":{},"小":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"4":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0072992700729927005}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"见":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"是":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"指":{"docs":{},"的":{"docs":{},"是":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"差":{"docs":{},"的":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"值":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"1":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"形":{"docs":{},"成":{"docs":{},"树":{"docs":{},"的":{"docs":{},"一":{"docs":{},"条":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"最":{"docs":{},"长":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"换":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.011235955056179775}}}}}}}}}},"具":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}}},"完":{"docs":{},"全":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{},"两":{"docs":{},"者":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"在":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}},"，":{"docs":{},"即":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}},"约":{"docs":{},"定":{"docs":{},"当":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},"和":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{},"均":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{},"是":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0035460992907801418}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":10}}}}},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"：":{"1":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},",":{"docs":{},"$":{"docs":{},",":{"3":{"docs":{},",":{"5":{"docs":{},",":{"docs":{},"$":{"docs":{},",":{"docs":{},"$":{"docs":{},",":{"6":{"docs":{},",":{"docs":{},"$":{"docs":{},",":{"docs":{},"$":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}},"docs":{}}}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"在":{"docs":{},"移":{"docs":{},"动":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"宽":{"docs":{},"度":{"docs":{},"会":{"docs":{},"减":{"docs":{},"小":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"得":{"docs":{},"到":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"是":{"docs":{},"可":{"docs":{},"取":{"docs":{},"的":{"docs":{},"。":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"穷":{"docs":{},"举":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"判":{"docs":{},"断":{"docs":{},"每":{"docs":{},"个":{"docs":{},"子":{"docs":{},"串":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"含":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"记":{"docs":{},"录":{"docs":{},"不":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{},"代":{"docs":{},"码":{"docs":{},"略":{"docs":{},"。":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"−":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}},"运":{"docs":{},"算":{"docs":{},"前":{"docs":{},"也":{"docs":{},"应":{"docs":{},"该":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"能":{"docs":{},"发":{"docs":{},"生":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"参":{"docs":{},"考":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"种":{"docs":{},"写":{"docs":{},"法":{"docs":{},"。":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.00847457627118644}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"暴":{"docs":{},"力":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"做":{"docs":{},"但":{"docs":{},"是":{"docs":{},"显":{"docs":{},"然":{"docs":{},"不":{"docs":{},"是":{"docs":{},"最":{"docs":{},"优":{"docs":{},"的":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"发":{"docs":{},"现":{"docs":{},"要":{"docs":{},"想":{"docs":{},"使":{"docs":{},"得":{"docs":{},"所":{"docs":{},"盛":{"docs":{},"水":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"最":{"docs":{},"大":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"一":{"docs":{},"方":{"docs":{},"面":{"docs":{},"可":{"docs":{},"以":{"docs":{},"增":{"docs":{},"加":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"能":{"docs":{},"蓄":{"docs":{},"水":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}}}}},"朝":{"docs":{},"着":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{"LeetCode/11. Container With Most Water.html":{"ref":"LeetCode/11. Container With Most Water.html","tf":0.01098901098901099}}}}}}},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"。":{"docs":{},"每":{"docs":{},"次":{"docs":{},"从":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"所":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"字":{"docs":{},"母":{"docs":{},"集":{"docs":{},"合":{"docs":{},"中":{"docs":{},"选":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"加":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"正":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"递":{"docs":{},"归":{"docs":{},"地":{"docs":{},"构":{"docs":{},"造":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{},"在":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"需":{"docs":{},"要":{"docs":{},"传":{"docs":{},"入":{"docs":{},"原":{"docs":{},"始":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"LeetCode/17. Letter Combinations of a Phone Number.html":{"ref":"LeetCode/17. Letter Combinations of a Phone Number.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"到":{"docs":{},"这":{"docs":{},"种":{"docs":{},"生":{"docs":{},"成":{"docs":{},"某":{"docs":{},"个":{"docs":{},"集":{"docs":{},"合":{"docs":{},"类":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"首":{"docs":{},"先":{"docs":{},"想":{"docs":{},"到":{"docs":{},"递":{"docs":{},"归":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"我":{"docs":{},"们":{"docs":{},"不":{"docs":{},"能":{"docs":{},"盲":{"docs":{},"目":{"docs":{},"地":{"docs":{},"生":{"docs":{},"成":{"docs":{},"括":{"docs":{},"号":{"docs":{},"组":{"docs":{},"合":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"那":{"docs":{},"样":{"docs":{},"的":{"docs":{},"话":{"docs":{},"还":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"组":{"docs":{},"合":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"效":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"应":{"docs":{},"该":{"docs":{},"只":{"docs":{},"生":{"docs":{},"成":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"组":{"docs":{},"合":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"把":{"docs":{},"'":{"docs":{},"(":{"docs":{},"'":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"开":{"docs":{},"括":{"docs":{},"号":{"docs":{},"，":{"docs":{},"把":{"docs":{},"'":{"docs":{},")":{"docs":{},"'":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"闭":{"docs":{},"括":{"docs":{},"号":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"分":{"docs":{},"别":{"docs":{},"用":{"docs":{"LeetCode/22. Generate Parentheses.html":{"ref":"LeetCode/22. Generate Parentheses.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}}}},"排":{"docs":{},"序":{"docs":{},"；":{"docs":{"LeetCode/23. Merge k Sorted Lists.html":{"ref":"LeetCode/23. Merge k Sorted Lists.html","tf":0.002840909090909091}}}}},"观":{"docs":{},"察":{"docs":{},"后":{"docs":{},"可":{"docs":{},"以":{"docs":{},"发":{"docs":{},"现":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"设":{"docs":{},"某":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"docs":{},"原":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{"LeetCode/33. Search in Rotated Sorted Array.html":{"ref":"LeetCode/33. Search in Rotated Sorted Array.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}},"逐":{"docs":{},"行":{"docs":{},"逐":{"docs":{},"列":{"docs":{},"逐":{"docs":{"LeetCode/36. Valid Sudoku.html":{"ref":"LeetCode/36. Valid Sudoku.html","tf":0.0049504950495049506}}}}}}},"≤":{"docs":{"LeetCode/38. Count and Say.html":{"ref":"LeetCode/38. Count and Say.html","tf":0.024390243902439025}}},"求":{"docs":{},"上":{"docs":{},"图":{"docs":{},"下":{"docs":{},"雨":{"docs":{},"后":{"docs":{},"能":{"docs":{},"盛":{"docs":{},"水":{"docs":{},"的":{"docs":{},"容":{"docs":{},"积":{"docs":{},"。":{"docs":{"LeetCode/42. Trapping Rain Water.html":{"ref":"LeetCode/42. Trapping Rain Water.html","tf":0.003875968992248062}}}}}}}}}}}}}}}},"length":10056},"corpusTokens":["!=","!stack2.isempty())","\"","\"\"","\"\",","\"\".","\"\";","\"%20\");","\"%20\"，由于是把1个字符替换为2个字符，所以其后所有的字符都需要向后移动2位，效率不高。可以先求出原字符串中空格的总数，据此计算出替换后的字符串的新的长度，利用两个指针","\"((()))\",","\"(()())\",","\"(())()\",","\"()\"","\"()(())\",","\"()()()\"","\"()[]{}\"","\"(4)7\".","\"([)]\"","\"(]\"","\");","\"+","\"+100\",","\",","\"0(4)2\".","\"000\"","\"1\"","\"1.2.3\",","\"1211\"","\"12e\",","\"12e+5.4\"","\"1a3.14\",","\"23\"","\"23\"，返回","\"3.1416\",","\"5e2\",","\"7(4)\".","\"=\"","\"a\");","\"aba\"","\"abba\"，两个","\"abc\"","\"abc\",","\"abc\"，#3","\"abc\"，2表示","\"abcabcbb\"","\"abcdefg\"","\"acb\",","\"ae\",","\"af\",","\"b\");","\"b\",","\"bab\"","\"babad\"","\"bac\",","\"bb\"","\"bbb\"","\"bbb\";","\"bbbbb\"","\"bca\",","\"bd\",","\"be\",","\"bf\",","\"c\");","\"cab\"","\"cba\"。","\"cbbd\"","\"cd\",","\"cdefgab\"。","\"ce\",","\"cf\"]","\"cf\"].","\"d\");","\"def\"","\"def\"。返回该字符串表示的所有可能的字母的组合。例如对于","\"fl\"","\"ghi\",","\"go\"","\"google\"","\"i","\"iii\"","\"iv\"","\"ix\"","\"jkl\",","\"lviii\"","\"main\"","\"mcmxciv\"","\"mno\",","\"one","\"pqrs\",","\"pwke\"","\"pwwkew\"","\"student.","\"tuv\",","\"two","\"v1\");","\"v2\");","\"v3\");","\"we","\"we%20are%20happy\"。","\"wke\",","\"wxyz\"};","\"{[]}\"","\"半个变量\"","\"实例变量\";","\"静态变量\";","#18","#19","#2","#3","#4","%","&","&&","'","'#';","'(',","'('；当","')","')',","')'。","'*')","'+'","'.'));","'.'.","'0'","'0';","'4'","'['","']',","']'的字符串，判断该字符串是不是有效的。一个有效的字符串满足下面两个条件：","'a',","'a.this'","'abstract'","'abstractclassexample'","'b',","'c'","'clone()'","'g'；当从该字符流中读出前6个字符","'interfaceexample'","'java.lang.object'","'l'。","'outerclass.this'","'private'","'protected'","'public'","'static'","'x'","'y'","'{',","'}',","(","(!(o","(!cleansomeslots(i,","(!deque.isempty()","(!interrupted())","(!isduplicated)","(!isfound)","(!pq.isempty())","(!queue.isempty())","(!queue1.isempty())","(!s.isempty()","(!stack.isempty())","(!stack1.isempty()","(!stack1.isempty())","(!stack2.isempty())","((k","((num","((size","()","();","(*)","(0","(0,","(1","(1)","(1),","(1)，同时由于","(10)","(100)","(1000)","(2","(2)","(2)。联立","(5","(5)","(50)","(500)","(;","(;;)","([ljava/lang/string;)v","(a","(accessord","(approxim","(aux[i]","(b","(begin","(blocking)","(blue","(board","(c","(carri","(clonedhead","(cloneexample)super.clone();","(clonenotsupportedexcept","(curr","(curr.length()","(curr.next","(curr.random","(curr.val","(curr1","(currclon","(diff","(digit","(e","(e)","(e.g.,","(e.getvalue()","(e.hash","(e.key","(eldest)","(elementdata","(end","(entri","(equalexample)","(evict","(fast","(first","(first_match","(h","(happen","(head","(head1","(head1.val","(head2","(height","(height[right]","(hi","(i","(i,","(i.e.,","(in","(index","(int","(int)(newcapac","(integercachehighpropvalu","(interruptedexcept","(isbitone(num,","(isequal(base,","(isequal)","(isfirst)","(j","(just","(k","(k1","(key","(l1","(l1.val","(l2","(last","(left","(left.val","(len","(len2","(length","(linkedhashmap.entry)e,","(list","(listnod","(listnode","(lo","(lock","(map","(map.containskey(curr))","(map.containskey(curr.random))","(map.entri","(map.entry)o;","(matrix","(matrix[row][col]","(max.peek()","(max.size()","(meetingnod","(mincapac","(n","(new","(new)","(newcapac","(next","(node","(node.left","(node.next","(node.right","(null","(num","(nummov","(nums.length","(nums[hi]","(nums[i]","(nums[lo]","(nums[mid]","(n是节点总数)","(o","(oldcapac","(open","(p","(p.isempty())","(p.length()","(p1","(p2","(parent","(parti","(partial","(permgen)。而在","(phead","(preorder","(prev","(push","(queue1.isempty())","(queue1.size()","(queue2.size()","(randomlistnod","(reentrant","(result","(retries++","(root","(root.left","(root1","(root1.val","(root2","(rootinord","(row","(runnable)","(s","(s.charat(0)","(s.length()","(seg","(size++","(slow","(small","(stack2.isempty())","(stack_min.isempty()","(start","(startpreord","(str","(str.charat(curr)","(string","(strs.length","(sub","(sum","(synchronizedexample.class)","(t)e.value;","(tabl","(tag","(task","(temp","(terminated)","(thi","(this)","(this.eden.size()","(threshold","(time","(unless","(v","(v1","(val.equals(\"$\"))","(via","(waiting)","(words.length","(x","(x.equals(y)","(x，编译器会自动进行这个优化。","(y","(youngest)","(保存旧","(具体过程略，需要查阅可以参考文末给出的博文)","(创建一个含n个节点的新链表的空间复杂度为o(n))","(包括整数和小数)。例如，字符串","(即fast","(含根、叶结点)","(因为","(因为一个数和自己异或的结果为0，因此所有出现两次的数都抵消掉了)，最后得到的结果就是那个只出现一次的数。现在我们考虑数组中恰有两个数出现1次，其他数都是出现两次。首先，从头到尾遍历数组，对每个数求异或，得到数","(在最坏情况下，字符串中的每个字符都要分别被i和j访问一次)","(如果子类的方法重写了父类的方法，那么子类中该方法的访问级别不允许低于父类的访问级别，这也是满足里式替换原则以确保可以使用父类实例的地方都可以使用子类实例)，即子类对象必须能够替换掉所有父类对象。而接口更像是一种","(尤其是使用线程池)","(本题与它不同的地方是，本题数组中不包含重复的元素)，在第二步对数组进行二分查找时，我们只需要在二分查找的过程中变换一下下标即可。","(根节点的值或根节点和左子节点或右子节点的值的平均值)。但是大部分的编程语言没有实现我们定义的这种","(没有公共结点)","(用","(而hashmap","(要构造含n个节点的新链表，构造每个节点需要o(logk))","(该数字在下标为","(调用deque.pollfirst)。由于队列头部和尾部都有可能删除数字，因此这也是我们需要双端队列的原因。","(调用deque.polllast())。同时，如果队列头部的数字已经从窗口中滑出，滑出的数字也需要从队列的头部删除",")","*","*/","+","++modcount;","++size;","+16。","+=",",",",hi);","..","...","...,","...]。假设当前数组中最大的丑数是","...，我们发现每一位上其实都是执行一个0","...，现在要求输入一个整数","/","/*","/**","//","//任务拒绝策略","//任务缓存队列，用来存放等待执行的任务","//分钟","//创建一个缓冲池，缓冲池容量大小为integer.max_valu","//创建固定容量大小的缓冲池","//创建容量为1的缓冲池","//反转字符串","//复制原链表的每个节点，并用next链接起来","//天","//小时","//左子树序列和右子树序列的分界点，表示右子树序列的第一个元素，同时也表示左子树序列中元素的个数","//微妙","//是否允许为核心线程设置存活时间","//核心池的大小（即线程池中的线程数目大于这个参数时，提交的任务会被放进任务缓存队列）","//毫秒","//注意，这里不能直接写成\"result.add(path)\"，那样相当于把path的引用传过去了，然而我们在下面遍历的过程中会改变path中的值，这样会导致之前加入result中的路径的内容也会跟着改变。应该用一个新的arraylist来承载path的值。","//用来存放工作集","//用来记录已经执行完毕的任务个数","//用来记录线程池中曾经出现过的最大线程数","//秒","//纳秒","//线存活时间","//线程工厂，用来创建线程","//线程池中当前的线程数","//线程池最大能容忍的线程数","//线程池的主要状态锁，对线程池状态（比如线程池大小、runstate等）的改变都要使用这个锁","//设置复制链表的random","/=","0","0)","0).","0);","0,","0.0)","0.75f,","00000010","00001111","00010000","001,","00100000","002,","009,","00，表示该对象处于轻量级锁状态。","01)","010,","011,","019,","01。同时使用","01，说明锁对象的锁处于未锁定（unlocked）状态。此时虚拟机在当前线程的虚拟机栈中创建","0:","0;","0;i","0?","0l,","0l;","0}","0};","0，所有调用","0，那么取模得到的结果和之前一样；","0：ascii","1","1\"","1)","1);","1)。此外，由于在寻找路径的过程中已经访问过的格子不能重复进入，因此我们还需要定义一个访问数组","1)，也就是旧容量的","1)，以此类推，注意当","1,","1,1]","1.","1.5","1.6","1.7","1.8","10","10);","10,","100","1000","1000,","1000.","10000);","100000000","1000;","1000。","10010000","10010000，它的掩码为","10110010","10;","10。","10，创建一个值为","11","11,","11.","11011000","11111110","11111111","11111111，可以使用以下方法得到：","111221","115%16=3。","115，使用除留余数法得到所在的桶下标","118%16=6。","118%16=6，插在","118，使用除留余数法得到所在的桶下标","11]。","12","12);","12,","120","1211","1211.","123","123\",","123;","127","127);","127;","128","128;","128~127。","12]]","13,","13.","14","14,","14.","15,","15.","15]","15],","15，所以结果打印出3个连续序列1","16","16\"","16,","16;","16。需要注意的是","16，也就是说默认创建","16，扩容之后","16；","17","17.","17;","19.","1994","1:","1;","1]","1],","1].","1];","1][p.length()","1]。","1e","1s\"","1};","1。","1。之后我们需要判断","1。数组中不包含重复的元素。时间复杂度要求为","1。现在我们按照这种规则对数组进行重组，即将每个元素交换到其正确的位置上，忽略元素值为0和元素值大于","1。通过","1开始，这是因为当s为空时也需要进行判断，比如s=\"\",p=\"a*\"，s和p也是匹配的","1是该入栈序列对应的一个出栈序列，但4,","1，num","1，不受","1，减到","1，即找到了数组中缺失的最小的正整数，即","1，因此尝试次数为","1，并进行等待，直到计数器为","1，而","1，表示所有的字符都还未出现过。之后每次","1，说明在最高位上发生了进位，此时需要再额外创建一个值为1的节点并将其链接到新链表中。","1，那么得到的结果为原来的结果","1：ascii","2","2)","2);","2)，而2","2,","2.","20)","20.","21","21.","2147483647，因此在进行","2147483648","22.","222","222);","2249069246763182397l;","23.","231","25bit","26.","2:","2;","2]","2])","2];","2]。","2]，1,","2]，最大的子序列为","2]，由于2在数组中出现了5次，因此输出2。假设数组中出现次数大于","2a","2b","2n","2。","2。过了一段时间之后，thread1","2中1和2的出现次数相互抵消，3,","2中3和2的出现次数相互抵消，2,","2只能得到2，所以此时我们还要再乘一个","2可以看成是(2","2就不可能是该入栈序列的出栈序列。两个序列的长度相等。","2级台阶跳1次，1次跳2级得到，因此跳上","2赋给","2，retri","2，则找到该数；当","2，即为数组中出现次数最多的数。","2，找到第一个大于","2，说明中位数在右半部分，继续在右半部分找；当","2，说明中位数在左半部分，继续在左半部分找。","2：ascii","3","3)","3,","3.","30,","31","31，因为它是一个奇素数，如果是偶数的话，当出现乘法溢出，信息就会丢失，因为与","32","32,","321","321}，则打印出这三个数字能排成的最小数字为321323。","32bit","32：","33.","34.","342","36.","38.","3999.","3:","3;","3]，那么对应的输出是重复的数字2或3。","3sum","3x3","3。","3一直到999。","3和5的数称作丑数","3的子板","3，输出4。","3；","4","4)","4);","4,","4.","4.1","4.2","40","400","41.","42.","465","46810121416null","49","49.","4950","4:","4;","4]","4],","4],[5,","4],[6,","4]。","4]，我们可以首先可以得到","4。","4中2和5,","4可以看成是(2","4的出现次数相互抵消，最后","4矩阵：","5","5\",","5,","5.","50","50,","500","572。和该题不同的是，这里要求树","58","5:","5;","5]","5],[7,","5]。","5]，k","5]，由于没有哪棵二叉搜索树的后序遍历结果是这个序列，因此返回","5中找到一个最小的数作为下一个丑数。但是这样需要把","5同理。","5是某栈的入栈顺序，序列4,","5，其实这并不是必须的，由于数组是排好序的，对于乘以2而言，数组中肯定存在一个数","6","6,","6.","60l,","64","6:","6]","6],[7,","6]，则重建二叉树并返回。","6]，逆序对数目为1。接着再将","6，所以7大于6前面所有的元素包括6，因此逆序对数目+","7","7)","7))","7,","7.","7]","7],","7]，其旋转后的数组可以为","7]，输出8。","7]，逆序对数目为1；[6],","7，string","7，返回21。","8","8'","8,","8.","80.","807.","8;","8]","8]，则最小的","8]，返回","8。","8都是丑数，但14不是，因为它包含质因子7。","9","9,","9.","90","90.","900,","900.","997","9:","9x9","9x9.","9不重复的数字","9中的数字，isexponential()","9的全排列，因此我们可以用递归解决这个问题。","9的数位。如果是一个小数，则会遇到小数点。此外，如果是用科学计数法表示的数值，在整数或者小数的后面还有可能遇到","9的数独板是不是有效的。一个数独板是有效的要求：","9，每个数字表示手机九宫格键盘上的字母，比如1表示",":",";","=","=0","==","==0",">",">1",">2",">3",">4",">4,",">5",">5,",">5.",">5。",">5，删除值为3的节点后的链表为1",">5，删除重复节点后的链表为1",">6",">=",">>",">>>",">valu","?","@overrid","@suppresswarnings(\"unchecked\")","[","[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]","[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],","[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],","[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],","[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],","[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],","[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],","[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],","[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],","[\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],","[\"ad\",","[\"dog\",\"racecar\",\"car\"]","[\"flower\",\"flow\",\"flight\"]","[0,","[0,0,1,1,1,1,2,3,3],","[0,0,1,1,1,2,2,3,3,4],","[0,1,0,2,1,0,1,3,2,1,2,1]","[0,1,0,2,1,0,1,3,2,1,2,1].","[0,1,2,4,5,6,7]","[1,","[1,1,1,2,2,3],","[1,1,2],","[1,2,0]","[1,8,6,2,5,4,8,3,7]","[1,8,6,2,5,4,8,3,7].","[10,","[2,","[3,","[3,4,","[3,4]","[4,","[4,5,6,7,0,1,2]).","[4,5,6,7,0,1,2],","[4,6]","[4]","[5,","[5,7,7,8,8,10],","[5]","[5],","[6,","[6],","[7,","[7,8,9,11,12]","[7]","[7],","[[10,","[][]","[i,","[−231,","\\","\\u0000","\\u007f","]","];","^","^=","a();","a)","a,","a.befor","a.join();","a.start();","a.x;","a.y;","a1","a1,","a2","a2,","a;","a[index];","aba","abc","abov","abstract","abstract;","abstractclassexampl","abstractclassexample();","abstractexecutorservic","abstractexecutorservice。","abstractextendclassexampl","abstractextendclassexample();","ac1","ac2","ac2.func1();","acc_public,","acc_stat","access","accessible;","accessord","accessorder;","accord","accur","ad","add","add(","add()","add100()","addentry(0,","addentry(hash,","addentry(int","addtwonumbers(listnod","after()","afternodeaccess()","afternodeaccess(nod","afternodeinsertion()","afternodeinsertion(boolean","ai","ai)","ai).","ai+1","ai，则","aj","algorithm","algorithm'","aliv","alloc","allow","allowcorethreadtimeout(boolean)","allowcorethreadtimeout;","although","alway","amongst","an","analyz","anoth","ans;","answer","answer.","ans，之后将","appear","append()","append。当需要找出字符流中第一个不重复的字符时，根据题目","appli","area","args)","args_size=1","arithmet","arr","arr;","array","array,","array.","array?","array[hi]","array[lo]","array[lo]，说明最小的数在","array[mid]","arrayblockingqueu","arrayblockingqueue;","arrayblockingqueue<>(5);","arrayblockingqueue：基于数组的先进先出队列，此队列创建时必须指定大小；","arrayindexoutofboundsexception(index);","arraylist","arraylist<>(),","arraylist<>();","arraylist<>(path));","arraylist<>(pq);","arraylist。","arraylist：基于动态数组实现，支持随机访问。","arrays.copyof()","arrays.copyof(elementdata,","arrays.copyof(elements,","arrays.sort(nums);","array”","as,","ascend","ascii","assign","assign：把一个从执行引擎接收到的值赋给工作内存的变量","associ","assum","astore_1","async","atomicexampl","atomicexample();","atomicinteg","atomicinteger();","atomiclong","atomicstampedrefer","atomicsynchronizedexampl","atomicsynchronizedexample();","aux","aux;","aux[i","aux[i];","aux[j","aux[j])","aux[j];","avl","avoid","await()","await()/signal()/signalall()","awaitsignalexampl","awaitsignalexample();","away,","axi","a，b判断","a，才将","a，那","a：","b","b(a","b(a);","b,","b.after","b.start();","b;","backtrack","bar","barrieraction)","base","base,","base。","be","becom","befor","before()","before..before..before..before..before..before..before..before..before..before..after..after..after..after..after..after..after..after..after..after..","beforehand.","before原则)","begin,","begin;","behaviour","below.","best","between","beyond","bia","bias)","bias）后恢复到未锁定状态或者轻量级锁状态。","bias，然后再用二分查找查找","big","big;","bigdecim","big以让序列包含更多的数；如果小于","binari","bit","block","blockingqueu","blockingqueue，通常可以取下面三种类型：","board","board)","board.length","boolean","boolean/~","boolean[]","boolean[][]","boolean[n][n];","boolean[s.length()","boolean[str.length()],","bound","box","box,","boxes)","bracket","brackets.","break;","brokenbarrierexcept","bucketindex","bucketindex)","bucketindex);","bug。","bug没改好就不要去睡觉！","buttons)","byte","byte/8位/1字节","byte[]","b。","b。当执行操作时，只有当","b，其中","b，后来又被改回为","b，操作","b：","c","c++","c,","ca","cach","cache.get(1);","cache.put(1,","cache.put(2,","cache.put(3,","cache.put(4,","cache[];","cachedthreadpool：一个任务创建一个线程；","call()","callabl","callable()","caller","caller.","cancel(true)","cap","cap)","capac","carri","carry;","case,","catch","catch(","cell","ch","chang","char","char/16位/2字节","char[256];","char[]","char[str.length()],","charact","characters.","characterstream","characterstream()","charsequ","chs,","chs.length)","clarification:","class","class.","classname，从而简化代码，但会大大降低可读性。","clear","clientcount","clipboarderrorcopi","clone","clone()","clone()，其它类就不能直接去调用该类实例的","clone()，可以使用拷贝构造函数或者拷贝工厂来拷贝一个对象。","cloneabl","cloneconstructorexampl","cloneconstructorexample()","cloneconstructorexample();","cloneconstructorexample(e1);","clonedcurr","clonedcurr.next","clonedcurr.next;","clonedhead","clonedhead;","clonednod","clonednode);","clonednode.next","clonednode.next;","clonednode.random","clonednode;","cloneexampl","cloneexample();","clonenod","clonenodes(phead);","clonenotsupportedexcept","clonenotsupportedexception。","clonenotsupportedexception，这是因为","close","close,","cm","cnt","cnt++;","cnt.get();","cnt.incrementandget();","cnt;","cnt，每次调用","code","code)","code:","coder","coder;","code），可以在代码执行的任何时刻中断它，转而去执行另外一段代码（包括递归调用它本身），而在控制权返回后，原来的程序不会出现任何错误。","col","collect","collections.sort(nodes_val);","collections.synchronizedlist();","collections.synchronizedlist(list);","collections.unmodifiablemap(map);","collections.unmodifiablexxx()","collis","cols)","column","com.xxx.classname.*","combin","combination1","combination1.compareto(combination2);","combination2","common","compar","comparable,","comparator()","compare(integ","compare(listnod","compare(str","compareandswapint()","compareto()","compat","completedtaskcount;","complex","complexity.","comput","compute()","concatstring()","concatstring(str","concurr","concurrentcach","concurrentcache(int","concurrenthashmap","concurrenthashmap<>(size);","concurrentmodificationexception。","condit","condition.await();","condition.signalall();","configur","confus","connectnod","connectnodes(phead);","consciou","consid","constant","consum","contain","container,","containsvalu","context","continu","continue;","contribut","convert","convert(treenod","convertcore(root);","convertcore(root.left);","convertcore(root.right);","convertcore(treenod","coordin","copi","copy)","copyonwritearraylist","copyonwritearraylist<>();","corepools","corepoolsize,int","corepoolsize;","corepoolsize。但是如果调用了","corepoolsize，则每来一个任务，会尝试将其添加到任务缓存队列当中，若添加成功，则该任务会等待空闲线程将其取出去执行；若添加失败（一般来说是任务缓存队列已满），则会尝试创建新的线程去执行这个任务；","corepoolsize，则每来一个任务，就会创建一个线程去执行这个任务；","corepoolsize：核心池的大小，这个参数跟后面讲述的线程池的实现原理有非常大的关系。在创建了线程池后，默认情况下，线程池中并没有任何线程，而是等待有任务到来才创建线程去执行任务，除非调用了","corepoolsize；如果允许为核心池中的线程设置存活时间，那么核心池中的线程空闲时间超过","corner","correct","count","count++","count++;","count++，之后将最后一位移出继续判断余下的数。","count,","count.","count;","countandsay(int","countdown()","countdownlatch","countdownlatch(threadsize);","countdownlatch(totalthread);","countdownlatch.await();","countdownlatch.countdown();","countdownlatchexampl","counterpart","cpu","createentry(hash,","createentry(int","createmap(t,","creek","curr","curr++;","curr,","curr.left;","curr.next","curr.next;","curr.random.next;","curr.val","curr.val)","curr1","curr1.next;","curr1;","curr2","curr2)","curr2.next;","curr2;","curr;","curr_long","curr_short","currclon","currcloned.random","currcloned=null;","currsum","curr，当前正在构造的字符串","cyclicbarri","cyclicbarrier(int","cyclicbarrier(totalthread);","cyclicbarrier,","cyclicbarrier.await();","cyclicbarrierexampl","c。","c，那么操作","d","daemon","data","deal","deepcloneexampl","deepcloneexample()","deepcloneexample();","default","default_initial_capac","defaultcapacity_empty_elementdata)","deleteduplicatednodes(listnod","deletenode(listnod","deletenodes(listnod","depth(root.right))","depth(treenod","dequ","deque.offer(i);","deque.peekfirst()","deque.pollfirst();","deque.polllast();","deque保存有可能是滑动窗口最大值的数字的下标。在存入一个数字的下标之前，首先要判断队列里已有数字是否小于待存入的数字。如果已有数字小于待存入的数字，说明这些数字已经不可能是滑动窗口的最大值，因此它们会依次从队列的尾部删除","describ","descriptor:","deserialize(str","deserializecore(string[]","deserializecore(strs);","determin","dfs(digits,","dfs(int","dfs(n,","dfs(str,","dfs(string","diff","differ","diff。之后，先在长链表上走","digit","digit.","digits)","digits,","digits.charat(curr)","digits.length()","digits.length())","digits，当前选取的","digit可能会发生溢出，由于32位","digit，用","dir_i","dir_x","doc","doesn't","dog","dog(\"a\");","dog(\"b\");","dog(str","dog)","dog.setname(\"b\");","dog@4554617c","dog@74a14482","doubl","double/64位/8字节","doubli","dp","dp[0]","dp[i","dp[i]","dp[i][j]表示s(i,","dp[i][j]表示s(i:)和p(j:)是否匹配","dp[n","dp[n]","dp[s.length()][p.length()]","dp。","dp。dp[i,","dp。dp[i]","dp。我们先来分析跳上2级台阶总共有多少种跳法。可以跳2次，1次跳1级，也可以一次跳2级，这样就有2种跳法。现在假设跳上","drawn","due","dummyhead","dummyhead.next;","dummyhead;","dup","duplic","dynam","dynamicarray","dynamicarray()","e","e(...)","e)","e);","e.get();","e.getkey();","e.getvalue();","e.key)","e.next","e.next)","e.next;","e.printstacktrace();","e.recordaccess(this);","e.valu","e.value;","e1","e1.clone();","e1.func1());","e1.func2());","e1.set(2,","e2","e2.func1());","e2.func2());","e;","each","eden","eden;","eldest","eldest)","element","elementcount)","elementdata","elementdata(index);","elementdata,","elementdata.length","elementdata.length;","elementdata[","elementdata[elementcount++]","elementdata[size++]","elements.","elements.length;","elev","empti","empty_table)","encod","end","end\");","end));","end+1;","end,","endi","endinord","endinorder)","endpoint","endpreord","endpreorder,","endx","ensur","ensurecapacityhelper(elementcount","ensurecapacityinternal()","ensurecapacityinternal(int","ensurecapacityinternal(s","ensureexplicitcapacity(int","ensureexplicitcapacity(mincapacity);","entri","entry(int","entry(key,","entry(threadloc","entry<>(hash,","entry[]","entry[newcapacity];","entrynodeofloop(listnod","entry。","entry。该方法中的","entry的路程，b","environ","equalexampl","equalexample(1,","equalexample(int","equals()","equals(object","error","evennum","evennum++;","evict","evict)","exactli","exampl","example,","example.add();","example.add100());","example.after());","example.before());","example.test();","example:","except","exception。其中","exception，此时程序崩溃并且无法恢复。","exchang","execute()","execute(runnable)，返回值为","executionexception,","executor","executorinterruptexample$$lambda$1/1160460865.run(unknown","executorinterruptexample.lambda$main$0(executorinterruptexample.java:9)","executors.newcachedthreadpool();","executors.newfixedthreadpool(int);","executors.newsinglethreadexecutor();","executorservic","executorservice.execute(()","executorservice.shutdown();","executorservice.shutdownnow();","executor：","exist","exist).","exp","exp)","expandaroundcenter(str","expectedmodcount","explanation:","expon","expungestaleentri","exp。求","extend","extra","e。函数","factor).","fail","failur","fals","false,","false;","false。","false。jvm","false。备注：代码中尽管有一个两重循环，但是对于每个数字最多只需要进行一次交换和一次遍历就能找到其正确的位置，因此总的时间复杂度是","false。接着递归得在左子树序列和右子树序列中继续判断。","false，在这里为","false，如果需要让它为","false，此时维护的是插入顺序，当设置为","false；","fast","fast)","fast.next","fast.next.next;","fast移动到链表的最后一个节点时，slow","fast，fast","few","fibonacci(int","fibonacci(n","field","fifo","fill","filled)","filled,","final","finalizabledelegatedexecutorservic","finalize()","final和stat","final，因此它不可被继承。","final，如果在子类中定义的方法和基类中的一个","final，被","final，这意味着","find","findcontinuoussequence(int","findduplicatednumber(int[]","findfirstbitone(int","findfirstbitone(temp);","findfirstcommonnod","findgreatestsumofsubarray(int[]","findkthtotail(listnod","findmeetingnode(head);","findnumberswithsum(int[]","findnumsappearonce(int[]","findpath(treenod","first","first,","first.key;","first;","first_match","firstappearingonce()","firstmissingpositive(int[]","firstnotrepeatingchar(str","firsttask","firsttask;","firsttask，在调用","first。","five","fixedthreadpool。","fixedthreadpool：所有任务只能使用固定大小的线程；","flags:","float","float/32位/4字节","follow","following:","for(int","foreach","forkjoin","forkjoinexampl","forkjoinexample(1,","forkjoinexample(int","forkjoinpool","forkjoinpool();","forkjoinpool.submit(example);","form","found","four","four.","ft","fun()","fun3();","func","func()","func(dog","func(dog);","func1()","func1();","func1(){","func2()","func2();","func2(){","function","function,","futur","futuretask","futuretask(new","futuretask<>(mc);","futuretaskexampl","garbag","gc","gener","generateparenthesis(int","get()","get(int","get(k","get(object[]","getandaddint()","getandaddint(object","getarray();","getclass()","getfirst(int[]","getfirst(nums,","getfirstk(int[]","getfirstk(nums,","getintvolatile(var1,","getkey()","getkey();","getlast(int[]","getlast(nums,","getlastk(nums,","getleastknumbers(int[]","getlength(head1);","getlength(head2);","getmap(t);","getmap(thread","getmedian()","getname()","getnextnode(nod","getnumberofk(int[]","getobjectaddress()","gettask()","gettask())","getuglynumber(int","getvalue()","getvalue();","give","given","goe","grid","grow()","grow(int","grow(mincapacity);","guarante","h","h,","h;","handler);","handler;","handler：表示当拒绝处理任务时的策略，有以下四种取值：","happy\"，则经过替换之后的字符串为","hascode()","hash","hash(key)","hash(key);","hash(object","hash,","hash;","hashcod","hashcode()","hashentri","hashentry[]","hashmap","hashmap<>();","hashmap，因此具有和","hashmap，默认大小为","hashmap：基于哈希表实现。","hashseed;","hashset","hashset();","hashset<>();","hashset，hashset","hashset：基于哈希表实现，支持快速查找，但不支持有序性操作。并且失去了元素的插入顺序信息，也就是说使用","hashtabl","hashtable。","hashtable：和","haspath(char[][]","hassubtree(root1.left,","hassubtree(root1.right,","hassubtree(treenod","head","head)","head,","head.","head.next","head.next;","head1","head1,","head1;","head2","head2)","head2;","head;","head。","height","height)","height.length","height[0];","height[height.length","height[i]);","height[i]。","height[i]求出。","height[j]);","height[left]","height[left];","height[right];","height[right]时，说明当前位置的蓄水量取决于右边，同理进行处理。","helper()","helper(char[]","helper(chs,","helper(int[]","helper(left.left,","helper(left.right,","helper(nums,","helper(preorder,","helper(root,","helper(root.left,","helper(root.right,","helper(root1,","helper(root1.left,","helper(root1.right,","helper(treenod","here","hi","hi)","hi);","hi,","hi;","hi]中的最小数字","hi]拷贝给aux，nums用来承载排序后的结果","hidden","high","high;","hi，lo","hi，说明当前子数组中只有一个元素，直接返回tru","hi；当","hold","hotspot","however,","hugecapacity(mincapacity);","i\"。","i)","i);","i++;","i,","i/o","i;","i=0;","i]","i]中每个元素累加的和","id","id).","identifi","ie1","ie2","ie2.func1();","if(root==null)","if:","ignor","ii","ii.","iii","iiii.","illeg","illegalmonitorstateexception。","image!","immut","immutableexampl","immutableexample.main(immutableexample.java:9)","implement","implicit","import","imposs","inclusive,","increment","incrementandget()","independ","index","index)","index))","index++;","index+1","index+1,","index,","index;","indexfor(e.hash,","indexfor(hash,","indexfor(int","index，那么其在旋转后数组中的下标为","indic","inflatetable(threshold);","initi","initialordertest()","initialvalue();","innerclass","innerclass();","inord","inorder)","inorder,","inorder.length","input","input:","insert","insert(int","instanc","instanceof","instanti","instead,","int","int,","int/32位/4字节","int[10];","int[256];","int[2];","int[]","int[]{","int[]{first,","int[]{};","int[height.length];","int[nums.length];","integ","integer(1);","integer(123)","integer(123),","integer(123);","integer,","integer.","integer.max_valu","integer.max_value,","integer.max_value;","integer.max_value，使用的synchronousqueue，也就是说来了任务就创建线程运行，当线程空闲超过60秒，就销毁线程。","integer.min_value;","integer.valueof(123)","integer.valueof(123);","integer[(high","integercache.low","integercachehighpropvalu","integers,","integers.","interfac","interfaceexampl","interfaceexample();","interfaceimplementexampl","interfaceimplementexample();","intern","intern()","interning?","interrupt","interrupt()","interrupted()","interruptedexcept","interruptedexception，从而提前结束线程，不执行之后的语句。","interruptedexception，从而提前结束该线程。但是不能中断","interruptedexception，因为异常不能跨线程传播回","interruptexampl","interruptexample$$lambda$1/713338599.run(unknown","interruptexample.lambda$main$0(interruptexample.java:5)","int。","int，使用","invalid.","inversepairs(int[]","inversepairscore(int[]","inversepairscore(nums,","invokespeci","is:","isbalanc","isbalanced()","isbalanced;","isbalancedtree(treenod","isbalancedtreecore(root);","isbalancedtreecore(root.left);","isbalancedtreecore(root.right);","isbalancedtreecore(treenod","isbitone(int","isdupl","isequ","isfirst","isfound","isfound;","ismatch(s,","ismatch(s.substring(1),","ismatch(str","ismatchcore(s,","ismatchcore(str","isn't","isnumeric(str","ispoporder(int[]","issymmetrical(treenod","isvalid(str","isvalidsudoku(char[][]","it.","item;","iter","itself.","iv","iv.","ix.","i，从","i，如果当前字符还未出现过，则将当前字符在字符流中的下标","i，如果是，说明","i，我们只需要将","i，我们对所有","j","j'","j'，我们没有必要一点点地去移动","j)","j);","j)构成的子串是否是回文的","j++;","j.u.c","j.u.c组件","j]","java","java.io.ioexception{","java.io.serializable,","java.lang.clonenotsupportedexception:","java.lang.interruptedexception:","java.lang.thread.run(thread.java:745)","java.lang.thread.sleep(n","java.lang.threadloc","java.lang.unsupportedoperationexcept","java.uitl.concurrent.threadpoolexecutor","java.util.collections$unmodifiablemap.put(collections.java:1457)","java.util.concurr","java.util.concurrent.blockingqueu","java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)","java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)","java.util.concurrent（j.u.c）包中的锁。","java.util.concurrent（j.u.c）大大提高了并发性能，aq","java/lang/str","java/lang/string.\"\":(ljava/lang/string;)v","java?","javap","java®","java中的threadpoolexecutor类","java内存模型","java基础","java容器","java并发","java并发编程：线程池的使用","java异常处理框架只能处理运行时错误，编译错误不在其考虑范围之内。","java异常的层级结构","java轻量级锁简介","java进阶（七）正确理解thread","jdk","join","join()","joinexampl","joinexample();","jumpingstairs(int","jvm","j，如果","j，直到","k","k)","k);","k,","k.hashcode();","k1","k1.equals(k2)))","k2","k3","k;","keepalivetim","keepalivetime,timeunit","keepalivetime;","keepalivetime，则会终止，直到线程池中的线程数不超过","keepalivetime，线程也会被终止。","keepalivetime：表示线程没有任务执行时最多保持多久时间会终止。默认情况下，只有当线程池中的线程数大于","key","key)","key,","key.equals(k)))","key.threadlocalhashcod","key;","key。不可变的特性可以使得","key，","key，复制节点作为","known","kthnode(treenod","kthnodecore()","kthnodecore(root,","kthnodecore(root.right,","kthnodecore(treenod","k。因为要查找的数字在长度为","k最后一次出现的位置","k第一次出现的位置","k，我们从当前位置出发分别沿左，右两个方向顺序地寻找","k，我们继续在前半部分中用二分查找寻找","k，数组的大小为","k，由于","k，说明当前节点就是第","k，说明第","l","l,","l1","l1,","l1;","l2","l2)","l2);","l2;","label)","label;","lambda","largest","largestpools","largestpoolsize;","last","last)","last.aft","last;","last};","ldc","lead","leav","leetcod","left","left++;","left,","left;","left_max","left_max)","left_max[0]","left_max，否则，累加","left_max，更新","leftrotatestring(str","left，取余下的部分作为子串","len","len)])","len1","len1)","len1，短链表的长度","len2","len2);","len2，两个链表的长度差","length","length(head))","length)","length.","lengthoflongestsubstring(str","length，其中","letter","lettercombinations(str","letters.","levelorder(treenod","lexicograph","line","lines,","link","linkedblockingqueu","linkedblockingqueue()));","linkedblockingqueue());","linkedblockingqueue;","linkedblockingqueue：基于链表的先进先出队列，如果创建时没有指定此队列大小，则默认为integer.max_value；","linkedhashmap","linkedhashmap.entri","linkedhashmap：使用双向链表来维护元素的顺序，顺序为插入顺序或者最近最少使用（lru）顺序。","linkedhashset：具有","linkedlist","linkedlist<>();","linkedlist：可以用它来实现队列或双向队列。","linkedlist：基于双向链表实现，只能顺序访问，但是可以快速地在链表中间插入和删除元素。不仅如此，linkedlist","list","list,","list.","list:","list>","listnod","listnode(0);","listnode(1);","listnode(node.val);","listnode(sum","listnode(val);","listnode。我们从头开始遍历整个链表，用","lists)","lists,","lists.","lists.length","lists[lo];","lists”","lo","lo)","lo,","lo;","load","load_factor。","loadfactor","loadfactor);","loadfactor;","loadfactor。","load、assign、stor","load、store、read","load：在","local","locals=2,","local的原理与适用场景","lock","lock.lock();","lock.newcondition();","lock.unlock();","locked）和重量级锁状态（inflated）。","lockexampl","lockexample();","lockexample.func());","locking.","locksupport.park()","locksupport.parknanos()","locksupport.parkuntil()","locksupport.unpark(thread)","lock：作用于主内存的变量，把一个变量标识为一条线程独占的状态","long","long/64位/8字节","longest","longestcommonprefix(string[]","longestpalindrome(str","longterm","longterm;","longterm，longterm","low","low)","low;","lowercas","lru","lrucach","lrucache()","lrucache<>();","lru缓存","m","m,","m.","m;","machin","made","main","main()","main(java.lang.string[]);","main(string[]","mainlock","maintain","majorityelement(int[]","make","manipul","map","map.entri","map.entry))","map.entryset())","map.get(curr);","map.get(curr.random);","map.getentry(this);","map.getordefault(num,","map.put(\"k1\",","map.put(\"k2\",","map.put(\"k3\",","map.put(curr,","map.put(num,","map.put(s.charat(j),","map.set(this,","mapreduc","map。如果该","map。将复杂链表的复制分为两步，第一步，复制原链表的每个节点，并用","map。这里也可以将数组排序后用双指针法做，但是由于题目要求返回两个数的下标，排序后会打乱元素的下标，因此这里用这个方法不合适。","map，但它或多或少都需要锁来保证线程的安全性","map，找到出现次数大于","map，故需保证该","map，那就不存在多线程写的问题，也就不需要锁。该方案如下图所示。","map，键是","marco","mark","mask","mask+1","math.abs(left","math.abs(len1","math.max(default_capacity,","math.max(depth(root.left),","math.max(i,","math.max(left,","math.max(left_max,","math.max(result,","math.max(right_max[i","math.min(i,","matrix","matrix)","matrix,","matrix.length","matrix.length()","matrix.length;","matrix.length[0];","matrix[0].length","matrix[0].length;","matrix[i][j]，说明当前字符能够构成路径，我们继续从当前字符出发分别沿着上、下、左、右4个方向继续寻找路径中的下一个字符str(curr","matrix[i][j]，说明矩阵中的当前字符不能构成路径，需要进行回溯。如果str(curr)","matter","max","max.offer(num);","max.size()","max;","max_entri","max_entries;","max_left，向右求出右边最大的高度","max_right)","max_right，那么位置","max_scan_retri","maxarea(int[]","maxarea，之后使较短的","maximum","maximum_capac","maximum_capacity)","maximumpools","maximumpoolsize,long","maximumpoolsize;","maximumpoolsize，则会采取任务拒绝策略进行处理；","maximumpoolsize，如果还有任务到来就会采取任务拒绝策略，通常有以下四种策略：","maximumpoolsize：线程池最大线程数，这个参数也是一个非常重要的参数，它表示在线程池中最多能创建多少个线程；","maxinwindows(int[]","max{nums[i],","mc","mean","meetingnod","meetingnode)","meetingnode;","memory.","mention","merg","merge(l1,","merge(listnod","mergeklists(listnode[]","mergetwolists(listnod","method","method)","mid","mid)","mid);","mid)，之后我们将7放到","mid;","mid指向的数字相同时，此时无法判断mid指向的数字属于前一个子数组还是后一个子数组，此时需要用顺序遍历找到nums[lo,","mid！为此我们应该采用更为科学的","min","min(left_max[i],","min(max_left,","min.offer(num);","min.peek())","min.peek();","min.poll();","min.size();","min;","mincapac","mincapacity)","mincapacity);","minindex","minnumberinrotatearray(int[]","mirror(root.left);","mirror(root.right);","mirror(treenod","miss","mn","modcount","modcount!!","modcount++;","modcount;","modif","modifi","modifiers:","monitor","monitorent","monitorexit。","move","movingcount(int","mt","mt.start();","much","multipl","mycal","mycallable();","myqueu","myqueue()","myrunn","myrunnable());","myrunnable();","mystack","mystack()","mythread","mythread();","mythread1","mythread1();","mythread2","mythread2();","m之前的丑数分别","m，小于","m，需要存储的键值对数量为","n","n)","n).","n);","n,","n/m","n/m，因此平均查找次数的复杂度为","n1","n1.random","n2","n2m","n2m+1","n;","n]，即","name)","name;","nanos)","nativ","necessarili","need","neg","new","new_head","new_head;","newcachedthreadpool","newcachedthreadpool()","newcapac","newcapacity)","newcapacity);","newel","newelements[len]","newfixedthreadpool","newfixedthreadpool(int","newsinglethreadexecutor","newsinglethreadexecutor()","newstringtest","newtabl","newtable)","newtable.length;","newtable;","newtable[i]","newtable[i];","newvalue)","newvalue;","next","next.next","next.next;","next.val)","next.val;","next;","nextindex(i,","nextpo","nextpos;","next，让","nfe)","nine,","nm","nm+1","nm+2","node","node)","node.next","node.next;","node.parent;","node.right;","node.v","node;","nodes_v","nodes_val)","nodes_val.add(curr.val);","nodesinloop","nodesinloop++;","node，然后令nod","node，这个节点即是当前","non","normal","note","note:","note：给出的所有元素都大于0，若数组大小为0，请返回0。","notify()","notify()。首先，countdownlatch,","notifyall()","notifyall();","nth","nthreads)","nthreads,","null","null)","null);","null)，slow","null,","null;","null。当","null。所以典型用法中常常重载该方法。上例中即在内部匿名类中将其重载。","null，也可以返回tru","null，从","null，从而使得该值可被回收。另外，会在","null，借由上一条语句知root2","null，则先创建该","null，则直接将该","null，则通过setinitialvalue()方法设置该","null，即一个链表已经遍历到了末尾，另一个链表还没有遍历末尾，此时需要把","null，所以root1和root2的结构不相同，返回fals","null，该","null，说明root1和root2之前的结构完全相同，这时就算root1","null，说明头结点是需要删除的节点，将","null，说明链表中只剩下一个节点，直接返回该节点即可。","null，返回","null，这说明头结点是重复节点，此时我们需要把","null；当","num","num)","num,","num;","number","numberformatexcept","numberof1(int","number。例如6,","number，然后用一个循环打印出从1到","numer","numeral,","nummov","nummoved);","nums)","nums,","nums,int","nums.length","nums.length)","nums.length;","nums[0,","nums[0]","nums[0];","nums[1]","nums[deque.peeklast()])","nums[hi]","nums[hi])","nums[hi];","nums[i","nums[i++]","nums[i]","nums[i]}","nums[index","nums[j];","nums[lo])","nums[lo];","nums[mid","nums[mid]","nums[n","nums。为了保证新数组中每个元素至多出现2次，我们只需要判断当前元素是否大于","nums，从中找到值为","nums，就地","nums，找到所有","n操作可以将n的二进制表示中最右边的1变成0”","n，则这种方法时间复杂度为","n，因此我们可以根据下标来重排这个数组。从头到尾扫描这个数组，当扫描到下标为","n，如果哈希函数满足均匀性的要求，那么每条链表的长度大约为","n，所以相遇节点到","n，按顺序打印出从1到最大的","n，系统只检查数组前","n，请你输出斐波那契数列的第","n，那么这个数组应该是","o(1)","o(1)。","o(1)。如果数组是无序的，插入数据的时间复杂度是","o(1)。我们分别使用两个指针","o(1)。注意到题目中说所有数字的范围都在","o(1)，treeset","o(1)，读取中位数可以使用","o(k)，我们可以利用堆将比较的时间复杂度降到","o(kn)，显然不是最优的。实际上，一个滑动窗口可以看成是一个队列。当窗口滑动时，处于窗口的第一个数字被删除，同时在窗口的末尾添加一个新的数字。这符合队列先进先出的特性。正常情况下我们需要扫描整个队列才能找到队列中的最大数，我们看看能不能在","o(log","o(logk)。首先将","o(logn)。","o(logn)。对于数组","o(logn)，如果","o(logn)，读取中位数的平均时间复杂度为o(logn)，但是在最坏情况下，即二叉搜索树退化为一个单链表时，插入和读取的时间复杂度是","o(logn)，读取中位数的时间复杂度为","o(logn)，那么想到题目应该是用二分查找去求解，但是二分查找要求数组是有序的，这里旋转后的数组不一定有序，那么怎么去求解呢？其实旋转后的数组我们仍然可以把它看成是有序的，只不过我们需要把原有序数组中每个元素的下标做一个变换。比如原有序数组：","o(n)","o(n)。","o(n)。我们可以使用一个改进的","o(n)。我们来看看有没有更好的方法。","o(n)。接下来我们看看能不能把空间复杂度优化为","o(n)（关于","o(n)，可以看出","o(n)，总的时间复杂度为","o(n)，空间复杂度为","o(n)，空间复杂度是","o(n)，读取中位数时由于数组是有序的因此直接读就可以了，时间复杂度是","o(n/m)。","o(n^2)。注意题目要求不能包含重复的三元组，因此当找完三元组的第一个元素之后，需要将指针移动到和上一个元素不同的地方。其次，在找到剩下的两个元素时，也要进行指针的移动，具体见代码的","o(n^2)，显然效率很低。可以利用归并排序的思想。对于","o(nlogk)","o(nlogn)。也可以用一个","o)","o.getclass())","o1,","o1.val","o1;","o2","o2)","o2.val;","o;","obj)","object","object.notify()","object.notifyall()","object.wait()","object[]","objects.hashcode(getkey())","objects.hashcode(getvalue());","objects.hashcode(key)","objects.hashcode(value);","object类中的方法","obtain","occurr","occurrence;","occurrence[c]","occurrence[i]","occurrence[i]。在函数","occurrence，并用","oddnum","oddnum++;","offer","offer()","offer(int","oldcapac","oldtabl","oldtable.length;","oldvalu","oldvalue;","on","onc","one'","open","open,","order","order,","order.","original)","original.hash;","original.value;","otherthread.start();","otherwis","out","outerclass","outerclass();","outerclass.new","outofmemoryerror","output:","overflow","overflow;","overflows.","own,","p","p)","p));","p,","p.after","p.after;","p.befor","p.before,","p.charat(0)","p.charat(1)","p.length","p.length()","p.next;","p.substring(1));","p.substring(2))","p1","p1,","p1.next;","p1.val;","p2","p2)","p2.next;","p2.val;","p2，p1","p2，然后向新数组中按照顺序放入奇数和偶数。","p;","pair","palindrom","parent","parent.parent;","parent.right)","parent;","parenthes","parentheses,","parentheses.","pars","parseint(integercachehighpropvalue);","parti","partial","parties,","partit","partition(listnode[]","partition(lists,","partition(nums,","pass","pass?","passbyvalueexampl","path","path,","path.add(root.val);","path.remove(path.size()","per","permutation(str","pertain","phead)","phead;","phone","pivot","place","place)","point","poll","poll()","pool","pool:","poolsize;","pool。","pool）保存着所有字符串字面量（liter","pool，即字符串常量池中取得引用。只有","pop","pop()","pop)","pop.length","pop。","pop到","pop，由于栈的后进先出特性可知出栈元素应该是3，然而直接操作","posit","possibl","power(doubl","pq","pq.offer(head);","pq.offer(node.next);","pq.poll();","practic","prefix","prefix,","preorder,","preorder.length","preorder[startpreorder];","prestartallcorethreads()","prestartallcorethreads()：初始化所有核心线程","prestartcorethread()","prestartcorethread()：初始化一个核心线程；","prev","prev,","prev.left","prev.left;","prev.next","prev.right","prev;","previou","primit","principl","print","print(temp),","print(treenod","printlistfromtailtohead(head.next);","printlistfromtailtohead(listnod","printmatrix(int","printminnumber(int[]","printtomaxdigits(int","priorityblockingqueu","priorityqueu","priorityqueue<>();","priorityqueue<>(new","priorityqueue：基于堆结构实现，可以用它来实现优先队列。","privat","problem,","produc","produce..produce..consume..consume..produce..consume..produce..consume..produce..consume..","producerconsum","product","program","proper","properti","protect","protected。","provid","public","public。","public，一个类不显式去重写","purpos","push","push()","push(int","push,int[]","push.length","put","put()","put(k","putfornullkey(v","putfornullkey(value);","put、get","put操作","p。如果前一个数字大于后一个数字，则这两个数字组成一个逆序对。输入一个数组，求出在这个数组中的逆序对的总数。例如，在数组","p的下一个字符是'*'","p，实现一个支持.和*的正则匹配。模式中的字符.表示任意一个字符，而*表示它前面的字符可以出现任意次（含0次）。在本题中，匹配是指字符串的所有字符匹配整个模式。例如字符串\"aaa\"与模式\"a.a\"和\"ab*ac*a\"匹配，但与“aa.a”和\"ab*a\"均不匹配。","q","queue","queue.offer(root);","queue.put(\"product\");","queue.size();","queue.take();","queue1","queue1.offer(num);","queue1.offer(queue2.poll());","queue1.poll();","queue1;","queue1，第二列表示","queue2","queue2.offer(num);","queue2.offer(queue1.poll());","queue2.poll();","queue2。现在我们向栈中依次","queue2，此时两个","r","rain","raining.","random","random;","randomaccess","randomclon","randomcloned;","randomcloned=null;","randomlistnod","randomlistnode(curr.label);","random。","random。若","rang","range:","rangecheck(index);","re","read","ready。","read、load、use、assign、store、write、lock","read：把一个变量的值从主内存传输到工作内存中","reconnectnod","reconnectnodes(phead);","reconstructbinarytree(int[]","record","record)","recursivetask","redund","reentrantlock","reentrantlock();","reentrantlock。","reentrantlock，并发度与","refer","referenc","reference,","reference.","reference”","rehash","rehash();","rejectedexecutionhandl","remov","remove()，以避免出现","remove(int","removeduplicates(int[]","removeduplicates(nums);","removeeldestentry()","removeeldestentry(first))","removeeldestentry(map.entri","removenode(hash(key),","removenthfromend(listnod","reorderarray(int[]","repeat","repetition.","replaceall()。","replacespace(stringbuild","replacestaleentri","replacestaleentry(key,","repres","represent.","request）的处理方式，这种处理方式的广泛应用使得很多","reset()","resize()","resize(2","resize(int","resort","respectively.","result","result)","result);","result.","result.add(curr);","result.add(matrix[endy][i]);","result.add(matrix[i][start]);","result.add(new","result.add(nums[deque.peekfirst()]);","result.add(selected.tostring());","result.add(string.valueof(chs));","result.add(string.valueof(selected));","result.add(temp);","result.length()))","result;","result[0]","result[1]","result。","retri","retries_before_lock","retries_before_lock)","return","return;","revers","reverse(int","reverse(reverse(left)","reverse(right));","reverse(str","reverse(str);","reverse(temp.substring(start));","reverse(temp.substring(start,","reverselist(listnod","reverselist(next);","reversesentence(str","right","right)","right);","right.","right.left);","right.right)","right.val)","right;","right_max","right_max)","right_max[height.length","right_max[i]","right_max[i])","right_max，left_max[i]","right，判断","right，将","roman","romantoint(str","root","root)","root){","root,","root,int","root.left","root.left;","root.right","root.right);","root.right;","root.val);","root.val;","root.val，同时将当前节点加入到","root1","root1,","root1和root2同时访问到null才返回true，一个为null一个不为null或者两个节点的val值不相同都返回fals","root2","root2)","root2);","root2.left)","root2.right);","root2.val)","root;","rootinord","rootvalu","rootvalue)","rotat","row","row++；如果该数字大于","rows,","rule","rules.","rules:","run","run\");","run()","run..run..run..run..run..run..run..run..run..run..end","runabl","runnabl","runnablefutur","runnable类型，从字面意思可以理解，就是用来执行传进去的任务的；","running...","running...\");","runstat","runstate;","runtask()","runtask(task);","runtim","runtime.getruntime().availableprocessors()","s","s(i","s(i)","s(i,","s(j)","s)","s,","s.","s.defaultwriteobject();","s.isempty();","s.length","s.length()","s.length())","s.length();","s.substring(0,","s.substring(i,","s.substring(n);","s.substring(start,","s.writeint(size);","s1","s1,","s1.intern()","s1.intern();","s1。","s1，设置","s2","s2);","s2,","s3","s3)","s3;","s4","s4);","s5","s6","s6);","s[0]","s[i]表示s[0,","s[j]","s[j]不在","same","sb","sb)","sb);","sb.append(\"","sb.append(\"$\");","sb.append(\",\"","sb.append(\",$\");","sb.append(c);","sb.append(root.val);","sb.append(s1);","sb.append(s2);","sb.append(s3);","sb.append(str);","sb.append(word);","sb.append(words[i]);","sb.charat(i)","sb.length()","sb.tostring();","sb，很快就会发现它的动态作用域被限制在","sb，根据","sb，用一个","scandigits()","scandigits(str);","search","search(int[]","search.","searchmatrix(int[][]","searchrange(int[]","second","section)","seg","seg.count;","seg.modcount;","segment","segment[]","segmentat(segments,","segments;","segment。","segment，它继承自重入锁","select","selected,","semaphor","semaphore(clientcount);","semaphore.acquire();","semaphore.release();","semaphoreexampl","sequenc","sequence.","serializ","serialize(treenod","serializecore(root,","serializecore(root.left,","serializecore(root.right,","serializecore(treenod","serialversionuid","set","set(t","set(threadloc","set.add(e1);","set.add(e2);","setarray(newelements);","setarray(object[]","setcorepoolsize：设置核心池大小","setdaemon()","setinitialvalue()","setinitialvalue();","setmaximumpoolsize()，","setmaximumpoolsize：设置线程池最大能创建的线程数目大小","setname(str","setvalue(v","seven","shallowcloneexampl","shallowcloneexample()","shallowcloneexample();","short","short/16位/2字节","shutdown","shutdown()","shutdown()：不会立即终止线程池，而是要等所有任务缓存队列中的任务都执行完后才终止，但再也不会接受新的任务","shutdownnow()","shutdownnow()，其中：","shutdownnow()：立即终止线程池，并尝试打断正在执行的任务，并且清空任务缓存队列，返回尚未执行的任务","si","sign","signal()","signalall()","simpli","singl","singlethreadexecutor：相当于大小为","six","size","size()","size(root.left)+size(root.right)+1;","size(root.left);","size(treenod","size)","size++;","size,","size;","size]","size操作","size，那么就将","sj","slant","sleep","sleep()","slow","slow)","slow.next;","small","small;","smallest","solut","solution,","solvable.","sort","source)","space","space.","special","specif","splice","src","src[j]","src[j];","stack","stack.pop();","stack.push(curr);","stack1","stack1.pop();","stack1.push(node.left);","stack1.push(node.right);","stack1.push(num);","stack1.push(root);","stack1;","stack1中，pop","stack2","stack2.pop();","stack2.push(node.left);","stack2.push(node.right);","stack2.push(stack1.pop());","stack2;","stack<>();","stack=3,","stack_data","stack_data.push(num);","stack_min","stack_min，栈顶元素记录当前栈中所有元素的最小值。入栈时，如果入栈元素","stackclosedexampl","stackclosedexample();","stackoverflow","stackoverflow:","stack。如果出栈序列中的当前元素刚好是栈顶元素，那么直接弹出。否则，我们把入栈序列中还没有入栈的数字压入","stack，直到把下一个需要出栈的元素压入栈为止。如果入栈序列中所有的数字都入栈了仍然没有找到下一个需要出栈的数字，那么该序列不可能是一个出栈序列。","start","start()","start);","start++;","start;","startinord","startinorder,","startinorder;","startpreord","startpreorder,","state","static","staticfield","staticinnerclass","staticinnerclass();","static修饰。当一个线程结束时，它所使用的所有","stop","storage.","store","store：把工作内存的一个变量的值传送到主内存中","str","str)","str,","str.charat(curr)","str.length()","str.length())","str.split(\"","str.split(\",\");","str.tochararray();","str.tostring().replaceall(\"","str;","string","string#intern","string(\"aaa\");","string(\"abc\")","string(\"abc\");","string()","string(str","string)","string,","string.","string[]","string[nums.length];","stringbuff","stringbuffer();","stringbuffer,","stringbuidl","stringbuild","stringbuilder(),","stringbuilder();","stringbuilder(s).reverse().tostring();","strings.","strings），这些字面量在编译时期就确定。不仅如此，还可以使用","strs)","strs.length","strs[0];","strs[curr++];","strs[j].charat(i))","strs[j].length()","student\"，则输出","stuff","sub","subject","submit()","subsequ","substr","substring,","substring.","subtract","such","sudoku","sum","sum)","sum;","sum，如果sum","sum，我们增大","sum，打印出所有和为","sum：如果小于","sun.misc.hashing.stringhash32((string)","sun.misc.vm.getsavedproperty(\"java.lang.integer.integercache.high\");","super","super(k);","super(max_entries,","super.clone();","super.tostring();","suppos","swap(nums,","swap，cas）。ca","symbol","symbols:","synchron","synchronizedexampl","synchronizedexample();","synchronized。这是因为","synchronized，jdk","synchronized，对一个变量执行","synchronized，应该尽量使用同步块而不是同步方法。","synchronized，而且1.8","synchronized，而另一个是","synchronousqueue());","synchronousqueue;","synchronousqueue：这个队列比较特殊，它不会保存提交的任务，而是将直接新建一个线程来执行新来的任务。","synchronous。线程池的排队策略与blockingqueue有关。","synlist","system.arraycopy()","system.arraycopy(elementdata,","system.out.print(\"after..\");","system.out.print(\"before..\");","system.out.print(\"consume..\");","system.out.print(\"produce..\");","system.out.print(\"run..\");","system.out.print(semaphore.availablepermits()","system.out.println(\"123\");","system.out.println(\"a\");","system.out.println(\"after\");","system.out.println(\"b\");","system.out.println(\"before\");","system.out.println(\"end\");","system.out.println(\"func1\");","system.out.println(\"func2\");","system.out.println(\"main","system.out.println(\"oth","system.out.println(\"thread","system.out.println(\"普通语句块\");","system.out.println(\"构造函数\");","system.out.println(\"静态语句块\");","system.out.println(cache.keyset());","system.out.println(dog.getname());","system.out.println(dog.getobjectaddress());","system.out.println(e1.equals(e2));","system.out.println(e2.get(2));","system.out.println(example.get());","system.out.println(ft.get());","system.out.println(futuretask.get());","system.out.println(head.val);","system.out.println(interfaceexample.x);","system.out.println(m","system.out.println(node.val);","system.out.println(result.get());","system.out.println(s1","system.out.println(s3","system.out.println(s5","system.out.println(set.size());","system.out.println(threadlocal.get());","system.out.println(x","system.out.println(x.equals(y));","system.out.println(z","sz","sz)","s。如果有多对数字的和等于s，输出任意一对即可。例如输入数组","s，则","s，则通过","s，在数组中查找两个数，使得他们的和正好是","t","t)","t.threadlocals;","t1","t2","t2，在它之前的丑数乘以2都小于已有的最大丑数，而它之后的丑数乘以2又太大，我们只需要记录这个丑数的位置并且在每次求出当前数组的最大丑数时更新这个","tab","tab.length;","tab[i","tab[i]","tab[i];","tabl","table,","table.length);","table;","table[0];","table[bucketindex]","table[bucketindex]))","table[bucketindex];","table[i];","tablesizefor(int","table。","tag","tail","tail)","tail;","take()","target","target)","target);","target){","target,","target.","target。在第二步查找","target，则该数字所在列的所有数字都大于","target，则该数字所在行的所有数都小于","target，剔除该列，即","target，剔除该行，即","target，我们就找到了这个数；如果该数字小于","target，移动","task","task1","task2","telephon","temp","temp.add(node.val);","temp.indexof(\"","temp.next;","temp.val","temp;","temp[p1++]","temp[p2++]","temp。在异或的过程中，由于所有出现2次的数都抵消掉了，所以","term","termin","test()","th","thank","that.x)","that.y)","that.z;","think","this.a","this.eden","this.eden.clear();","this.eden.get(k);","this.eden.put(k,","this.first","this.getintvolatile(var1,","this.hash","this.i","this.label","this.last","this.lock;","this.longterm","this.longterm.get(k);","this.longterm.putall(this.eden);","this.nam","this.name;","this.segments;","this.siz","this.valu","this.x","this.y;","this.z","this:","this）与目标实例的映射添加进","thread","thread(()","thread(ft);","thread(instance);","thread(new","thread.","thread.currentthread();","thread.join()","thread.setdaemon(true);","thread.sleep()","thread.sleep(1000);","thread.sleep(2000);","thread.sleep(3000);","thread.sleep(millisec)","thread.start();","thread.yield()","thread.yield();","thread1","thread1.interrupt();","thread1.start();","thread2","thread2.interrupt();","thread2.start();","threadfactori","threadfactory);","threadfactory,rejectedexecutionhandl","threadfactory;","threadfactory：线程工厂，主要用来创建线程；","threadloal","threadloc","threadlocal();","threadlocal.","threadlocal.remove();","threadlocal.set(1);","threadlocal.set(2);","threadlocal.threadlocalmap","threadlocal1","threadlocal1.set(1);","threadlocal1.set(2);","threadlocal2","threadlocal2.set(1);","threadlocal2.set(2);","threadlocalexampl","threadlocalexample1","threadlocalmap","threadlocalmap.entri","threadlocalmap。从如下该方法的定义可见，该","threadlocalmap与内存泄漏","threadlocalmap中。若为","threadlocalmap，也即该对象不会在多个线程中共享，也就不存在线程安全的问题。","threadlocal为解决多线程程序的并发问题提供了一种新的思路","threadlocal的介绍","threadlocal的目的是为了解决多线程访问资源时的共享问题","threadlocal，为表述方便，后文用","threadlocal，先看以下代码：","threadpoolexecutor","threadpoolexecutor(0,","threadpoolexecutor(1,","threadpoolexecutor(int","threadpoolexecutor(nthreads,","threadpoolexecutor.abortpolicy:丢弃任务并抛出rejectedexecutionexception异常。","threadpoolexecutor.callerrunspolicy：由调用线程处理该任务","threadpoolexecutor.discardoldestpolicy：丢弃队列最前面的任务，然后重新尝试执行任务（重复此过程）","threadpoolexecutor.discardpolicy：也是丢弃任务，但是不抛出异常。","threadpoolexecutor，abstractexecutorservice，executorservice和executor的继承关系","threadpoolexecutor，只不过参数都已配置好了。","threadsiz","threadunsafeexampl","threadunsafeexample();","thread。","thread，值是它在该","threesum(int[]","threshold","threshold)","threshold,","threshold;","throw","throwabl","time","timeout","timeout)","timeout,","timeunit","timeunit.days;","timeunit.hours;","timeunit.microseconds;","timeunit.milliseconds,","timeunit.milliseconds;","timeunit.minutes;","timeunit.nanoseconds;","timeunit.seconds,","timeunit.seconds;","togeth","together.","tomcat","top","tostring()","totalblank","totalrequestcount","totalthread","transact","transfer(entry[]","transfer(newtable);","transient","transit","trap","trap(int[]","trapped.","tree","treemap：基于红黑树实现。","treenod","treenode(integer.parseint(val));","treenode(rootvalue);","treeset：基于红黑树实现，支持有序性操作，例如根据一个范围查找元素的操作。但是查找效率不如","tri","triplet","triplets.","true","true);","true;","true。","true。同时，当我们找到一个回文子串时，检查它的长度是否是最大的。","true。因此可以在循环体中使用","true。而给定树","true，0","true，则会将该节点移到链表尾部。也就是说指定为","true，否则，数组中没有重复数字并且算法结束后所有的数字都放置了它正确的位置上个，返回","true，因为这个整数序列是下图所示二叉搜索树的后序遍历结果。","true，开启","true，需要继承","true；","try...catch...","twelv","twenti","twice","twice.","two","twosum(int[]","type","typic","t，如果","ugli","unbound","undergo","uniqu","unit","unit,","unit：参数","unknown","unlock","unlock，在虚拟机实现上对应的字节码指令为","unlock：作用于主内存的变量，把一个处于锁定状态的变量释放出来","unmodifiablemap","unmodifiablemap.put(\"a\",","unsaf","unsafe.getandaddint(this,","unsort","unsupportedoperationexception();","unsynchron","up","up:","us","used:","user","use：把工作内存中一个变量的值传递给执行引擎","usual","utf8","v","v)","v);","v,","v1","v1.equals(v2)))","v2","v;","v=","val","val;","valid","valid.","valu","value)","value);","value,","value.","value;","value[];","valueof()","valueof(int","valueoffset,","values={\"\",","values[digit];","value}.","value”?","value）；第二步，设置复制链表中每个节点的","var1+var2","var1,","var2)","var2);","var2,","var4)","var4));","var5","var5+var4。","var5,","var5;","var5，那么就更新内存地址为","variabl","variable.","variables.","vector","vector，因为同步操作完全可以由程序员自己来控制；","vector：和","verbos","verifysequenceofbst(int[]","verifysequenceofbstcore(int[]","verifysequenceofbstcore(nums,","vertic","virtual","vis,","visibility.","vis。","void","void，参数为","volatil","vs","v、旧的预期值","wait()","wait()/notify()/notifyall()","wait();","wait(long","waiting)","waitnotifyexampl","waitnotifyexample();","want.","water","water.","weakhashmap","weakhashmap<>(size);","weakrefer","weakreference>","weakreference，被","web","well","well.","while(!this.compareandswapint(var1,","width","win:","wish","within","without","word","word);","word)，然后使用","words.length","words[i]);","word。mark","word。而右侧就是一个锁对象，包含了","work","worker","workerdone(this);","workqueu","workqueue);","workqueue,rejectedexecutionhandl","workqueue,threadfactori","workqueue;","workqueue，它用来存放等待执行的任务。","workqueue：一个阻塞队列，用来存储等待执行的任务，这个参数的选择也很重要，会对线程池的运行过程产生重大影响，一般来说，这里的阻塞队列有以下几种选择：","write","writeobject(java.io.objectoutputstream","write：在","written","x","x)","x,","x.equals(null)","x.equals(null);","x.equals(x);","x.equals(y)","x.equals(y);","x.equals(z);","x;","xc","xecutor","xii,","xx","xxvii,","y","y%x","y&(x","y);","y,","y.equals(x);","y.equals(z))","y;","yield()","z","z)","z.","z;","zero,","zero.","{","{0,","{3,","{@code","{}","|","|=","||","|括起来的部分表示r进制整数中的一位。","|，|","}","});","}copi","“%20”。例如，当字符串为","“(n","“21.","“26.","“pass","“两次迭代”法，即通过两次迭代即可找出两个链表的第一个公共节点。用两个指针分别指示两条链表，第一次迭代时如果第一条链表的指针到达第一条链表的末尾时，将其置为第二条链表的头结点；如果第二条链表的指针到达第二条链表的末尾时，将其置为第一条链表的头结点。这样经过一轮迭代后就消除了两个链表之间的长度差，之后两个指针每次向前前进一个节点，最终到达两个链表的第一个公共节点。采用这种方法免去了分别计算两个链表长度的麻烦。","“数组中出现次数超过一半的数字”","“第一个只出现一次的字符”","“连续子序列之和等于两个前缀和之差”，即设","ⅰ","ⅱ","ⅲ","ⅳ","ⅴ","−","≤","。","。设想一个没有缺失正整数的数组应该是怎样的？设数组长度是","。首先利用二分查找找到","《algorithm》中的方法。要求的是树中第","《剑指offer》的解法。当没有*的时候，情况比较简单，我们只需要从左到右依次判断","一、线程状态转换","一个","一个可以用回溯法解决的典型题。首先在矩阵中任选一个格子作为路径的起点。设矩阵中的当前字符为matrix[i][j]，路径字符串的当前字符为str(curr)。如果str(curr)","一个字符时，设当前字符的","一个对象的初始化完成（构造函数执行结束）先行发生于它的","一个数与","一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是","一个线程执行完毕之后会自动结束，如果在运行过程中发生异常也会提前结束。","一个链表中包含环，找到环的入口节点。","一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个","一样的快速查找特性。","一次性分配辅助数组的空间","一致性","一般取","一起走时用","一起走，每次走1步。当","三、基础线程机制","上一节的示例代码中连续的","上一题中假设在","上调用","上述代码虽然思路很简洁，但是代码比较繁琐。观察数字产生的规律：000,","上述思路的","上述方案中，出现锁的问题，原因在于多线程访问同一个","上面描述的问题在于，threadloc","上面提到了可以用","下图左侧是一个线程的虚拟机栈，其中有一部分称为","下图演示了两个线程同时对","下面我们来看一下任务从提交到最终执行完毕经历了哪些过程：","下面是对","下面是这三个静态方法的具体实现：","下面的代码中，新建了两个等价的对象，并将它们添加到","下面的几个","下面示例中，s1","下面解释下一下构造器中各个参数的含义：","下面这个方法是书中该题的第一个方法。数组中有一个数字出现的次数超过数组长度的一半，也就是说它出现的次数比其他所有数字出现次数的和还要多。因此我们在遍历数组的时候用一个变量","下面这个方法是书中该题的第一个方法，我们称它为","下，由于","不为","不为负数的前提下我们调用","不会。","不可变","不可变。","不可变性可以保证参数不可变。例如在作为网络连接参数的情况下如果","不可变性天生具备线程安全，可以在多个线程中安全地使用。","不可变的好处","不可变的类型：","不可变（immutable）的对象一定是线程安全的，不需要再采取任何的线程安全保障措施。只要一个不可变的对象被正确地构建出来，永远也不会看到它在多个线程之中处于不一致的状态。多线程环境下，应当尽量使对象成为不可变，来满足线程安全。","不可变，因此是线程安全的","不可访问，那就不存在多线程间共享的问题","不同的是，threadlocalmap","不同，则","不在数组中返回","不常用的对象放入","不恰当的理解","不支持多重继承，因此继承了","不支持；","不是所有的","不是插在","不是线程安全的","不是链表的尾节点时，我们可以先把该节点的下一个节点","不用担心没有释放锁而导致死锁问题，因为","不能保证随着时间的推移","不能大于链表的长度，为此需要先求出链表的长度。","不能被回收而造成的内存泄漏的问题。","不能被回收，可能会造成内存泄漏。后文会介绍","不行。","不过这里为什么要","不适合内存敏感以及对实时性要求很高的场景。","与","与arraylist的比较","与具体实例的映射。与","与实例的映射","丑数","两个变量确定。","两个变量确定，中序序列可以用","两个指针分别指向数组的开头和结尾，当两个指针指向的元素的和等于","两个指针指向的数得到。如果容器中数据的数目是奇数，则中位数由","两个指针指示正数序列，small","两个指针，i","两个数字，如果","两个链表的第一个公共节点","两种，collect","个","个丑数。约定1是第一个丑数。","个元素。","个元素加入到队列中时，由于此时窗口还没有开始滑动，我们只需要在队列中保存前","个单位，然后两个指针再一起走，每次走一个单位。当两个指针相遇时，相遇节点就是环的入口节点。关键是如何求出环中的节点个数。借由上一题的分析，我们可以让","个合并后的链表，然后对这","个头结点加入到堆中，当堆不为空为执行以下操作：从堆中","个字符，再反转字符串的后面部分，再反转整个字符串，即可得到字符串左旋转","个客户端同时访问，请求总数为","个序列，构造的规律是：遍历前一个序列，如果当前数字和前一个数字不同，将前一个数字出现的个数和前一个数字的值添加到序列中。例如当前一个序列是\"1211\"，遍历该序列，发现1出现了1次，2出现了1次，1出现了2次，因此当前序列为\"111221\"。","个排序的链表。","个操作数，分别是内存地址","个操作来完成主内存和工作内存的交互操作。","个数。","个数。代码略。","个数字。例如输入","个数字不一定是排好序的）。","个数字中最大的数即可，此时队列的队头就是当前窗口中最大的数。当窗口开始滑动时，一方面我们需要将当前数字和队列中的数字进行比较，如果当前数字比队列中的数字大，则队列中比当前数字小的元素不可能成为窗口的最大值，将其从队列中移除，另一方面，我们需要判断代表当前窗口最大值的队头元素是否已经滑出窗口，如果已经滑出窗口，我们也需要将其进行移除。那么如何判断当前窗口是否包含一个数字呢？我们需要在队列里存入数字在数组中的下标，而不是数值。当队头元素的下标与当前处理的数字的下标之差大于等于窗口的大小时，说明这个数字已经从窗口中滑出了。在实现上，我们使用一个双端队列","个数字和第","个数字就是最小的","个数字是1,","个数字来进行调整，使得所有小于第","个数字的数都排在它的右边。这样调整之后，位于数组左边的","个数字的数都排在它的左边，所有大于第","个数字进行交换，把","个数字（但是这","个数就是最小的","个数，之后从","个数，我们可以先用一个大顶堆保存数组的前","个整数的数组","个整数，","个桶存放键为","个线程同时对","个线程对它进行自增操作之后，得到的值为","个线程或者一个线程。默认情况下，在创建了线程池后，线程池中的线程数为0，当有任务来之后，就会创建一个线程去执行任务，当线程池中的线程数目达到","个结点。","个节点","个节点)","个节点。n","个节点。注意，这种方法要求","个节点。由于这里需要将链表的倒数第","个节点中选取一个最小值，如果采用顺序遍历的话时间复杂度为","个节点删除，因此我们可以在","个节点时即可利用","个节点，之后两个指针再一起移动，当","个节点，先让第一个指针从链表头开始在链表上走","个节点，我们可以定义两个指针","个这样的中心。为什么是","个链表的","个链表的头结点的值进行比较，将较小的节点加入到新链表中，然后再依次比较各个链表剩下的节点。每次比较我们需要从","个链表的头结点的最小值，把它加入到新链表中，接着将","个链表继续进行划分和合并。","个链表配成","个：load、assign、store。","中","中*前面的字符还和","中hashcode()","中pop，如果","中。","中。在函数回退的时候记得在","中。当然，如果映射已经存在，就直接覆盖。另外，如果获取到的","中。当遍历到叶节点并且","中。我们希望将这两个对象当成一样的，只在集合中添加一个对象，但是因为","中一个","中余下的字符和","中依次取出每个值构建节点来扩展新链表。","中元素的情况如下图所示：","中再从","中出现了，set.add(...)","中创建一个字符串对象，指向这个","中删除1。","中删除3。执行出栈后两个","中删除当前节点。","中包含","中去掉1个字符，判断","中取出值即为所需访问的本线程对应的实例。如果获取到的","中启动一个线程之后再中断它，由于线程中调用了","中声明的所有方法；","中声明的方法，在","中字符串的引用；否则，就会在","中定义了一个volatile变量，另外定义了几个","中对应的","中对应的映射均删除，否则可能会引起内存泄漏。（后面会介绍避免内存泄漏的方法）","中已经存在一个字符串和该字符串值相等（使用","中并没有对其进行重写，这个方法也是用来向线程池提交任务的，但是它和","中开括号和闭括号的数量。当","中引入了自适应的自旋锁。自适应意味着自旋的次数不再固定了，而是由前一次在同一个锁上的自旋次数及锁的拥有者的状态来决定。","中我们可以得到启发，我们同样可以用","中找出对应的实例即可。该方案如下图所示","中找到了和","中找到和","中时，说明链表中有环并且当前节点就是环的入口节点。","中有不同的副本（实际是不同的实例，后文会详细阐述）。这里有几点需要注意","中每个字符的出现次数，然后再遍历一遍","中每个数是不是丑数的方法，因为那样对每个数即使是非丑数都要进行求余和除法的操作，时间效率很低。可以事先求出","中添加一个新的字符串，并返回这个新字符串的引用。","中添加一个映射，而每个线程结束时，应该清除该映射。这里就有两个问题：","中由于每个元素都有一个桶去引用，因此不会被垃圾回收器回收)。","中的","中的1,2插入到","中的1插入到","中的一个线程，可以通过使用","中的元素次序是不变的。","中的字符串对象作为","中的实现","中的思想，我们每次对","中的思路，设","中的所有字符，然后我们向右移动","中的所有对象都放入","中的所有数","中的方法，先遍历一遍","中的最后一个位置。","中的某个子树完全相同。例如给定树","中的每个元素置为","中的第一个位置，当nums[mid]","中的较小者作为当前结点，之后递归构造下一个节点。","中的锁是非公平的，reentrantlock","中的键值对个数。","中计算数组容量的代码：","中设置","中还会不断优化和完善。","中还没有","中进行了具体的实现，这个方法是threadpoolexecutor","中间的数。如果","中（原节点作为","中，#19","中，aux","中，eden","中，integ","中，string","中，一共存在5个逆序对，分别是","中，从而保证经常被访问的节点不容易被回收。","中，再从","中，利用虚拟机回收掉一部分不经常使用的对象。","中，因为反转会修改","中，因此必须在本地进行处理。线程中抛出的其它异常也同样需要在本地进行处理。","中，因此这一步是很费时的。","中，如果","中，如果在，我们就找到了这两个数，如果不在，我们把当前元素和它的下标值加入","中，将","中，并不提倡我们直接使用threadpoolexecutor，而是使用","中，我们继续移动","中，我们遍历","中，此时，我们找到了以","中，然后从","中，然后返回这个字符串引用。因此","中，规则如下：","中；出栈时，原栈和","中；如果两个队列一个未空，另一个不为空，我们将元素插入到那个非空的队列中。当执行","为","为0","为00)，mark","为1。由于两个链表的长度可能不同，因此遍历两个链表的指针可能不是同时到达各自链表的末尾。若","为主。","为了便于理解，以下源码分析以","为了方便讨论，将内存间的交互操作简化为","为了求链表中倒数第","为了理解","为了让查找的成本降低，应该尽可能使得","为偏移值，而这个偏移值恰好是旋转后数组中最小元素的下标，在上例中","为原来的两倍。","为奇数时，例如当","为数组的长度，bia","为止。","为环的入口节点。当","为环的长度。由于相遇时","为空，则先将","为负数，在我们求出","为起点的子串的最大长度，即","主内存和工作内存","主要有三种","主要有有三种实现可见性的方式：","主要用于并行计算中，和","主要用来实现缓存，通过使用","之前的所有丑数都乘以2,","之前，string","之前，会转化为","之前，如果一个接口想要添加新的方法，那么要修改所有实现了该接口的类。","之前，它可以看成是一个完全抽象的类，也就是说它不能有任何的方法实现。","之后执行，把","之后还要求其倒数。在","之后，string","之后，在","之间可以作为一个中心。我们遍历每一个中心并对其进行扩展，在得到一个回文子串时检查它的长度是否是最大的。","之间的双向链接关系即可。","之间的宽度。我们使用两个指针","之间的映射关系，这次我们直接在原链表上完成复制。","之间，移动","乐观锁需要操作和冲突检测这两个步骤具备原子性，这里就不能再使用互斥同步来保证了，只能靠硬件来完成。硬件支持的原子性操作最典型的是：比较并交换（compar","也会打印出来，这个空行是由","也作了很多优化。","也可以使用","也可以通过","习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第","书上","书上的思路。求字符串的排列可以分成两步：首先求所有可能出现在第一个位置的字符，即把第一个字符和后面的字符依次交换（也可以和它自己交换）；第二步固定第一个字符，求后面所有字符的排列。这个时候仍把后面的所有字符分成两部分，后面字符的第一个字符以及这个字符之后的所有字符，然后把第一个字符逐一和它后面的字符交换。这是一个递归的过程。为了方便交换，我们在代码中将字符串转换为字符数组。","书上的方法。定义两个指针，设环中有","书上讲到，最好不要去使用","了，那么这个","二、使用线程","二叉搜索树与双向链表","二叉搜索树的后序遍历序列","二叉搜索树的第k大节点","二叉树中和为某一值的路径","二叉树的下一个节点","二叉树的层次遍历。","二叉树的深度","二叉树的镜像","二维数组中的查找","二进制中1的个数","互斥同步","互斥同步属于一种悲观的并发策略，总是认为只要不去做正确的同步措施，那就肯定会出现问题。无论共享数据是否真的会出现竞争，它都要进行加锁（这里讨论的是概念模型，实际上虚拟机会优化掉很大一部分不必要的加锁）、用户态核心态转换、维护锁计数器和检查是否有被阻塞的线程需要唤醒等操作。","互斥同步最主要的问题就是线程阻塞和唤醒所带来的性能问题，因此这种同步也称为阻塞同步。","互斥同步进入阻塞状态的开销都很大，应该尽量避免。在许多应用中，共享数据的锁定状态只会持续很短的一段时间。自旋锁的思想是让一个线程在请求一个共享数据的锁时执行忙循环（自旋）一段时间，如果在这段时间内能获得锁，就可以避免进入阻塞状态。","互斥锁来保证操作的原子性。它对应的内存间交互操作为：lock","交互模型中的“一个请求对应一个服务器线程”（thread","产生的。","什么是java异常","介绍","从","从1开始计数。例如给定如下二叉搜索树：","从head","从上到下打印二叉树","从上往下打印出二叉树的每个节点，同层节点从左至右打印。","从上面的代码可以得知，threadpoolexecutor","从下向上（至少要有三行两列）","从下面的添加元素代码中可以看出，当需要扩容时，令","从使用上来看，一个类可以实现多个接口，但是不能继承多个抽象类。","从头开始找到第一个偶数，hi","从头开始遍历数组，同时用一个","从头开始遍历链表，用一个","从头遍历字符串，依次转换每个罗马数字即可。注意对","从头部删除队列中已经滑出窗口的元素","从它们的具体实现来看，它们实际上也是调用了","从尾到头打印链表","从尾开始找到第一个奇数，然后交换","从尾部删除队列中等于或小于当前元素的元素，因为这些元素不可能成为滑动窗口的最大值","从左向右","从理论上讲并不是用来解决多线程并发问题的，因为根本不存在多线程竞争。","从相遇的地方继续向前走，每次也走1步，当","从相遇节点处继续向前走，并记录走过的节点个数，当再次回到这个节点时，即可得出环中的节点个数。","从而使得该","从表头开始先向后移动","从设计层面上看，抽象类提供了一种","从链表的第一个节点开始向前走，每次走1步，slow","代码略。","代码的","代表","代表具体类型（如","令","令一个数","以上抛出了","以下代码中","以下代码使用了","以下代码是","以下代码模拟了对某个服务的并发请求，每次只能有","以下使用","以下是","以下是使用","以二维数组矩阵中右上角的数字为基准，如果该数字等于","以作为新的头节点。","以减小和。","以减小序列的和；如果等于","以删除当前节点，如果","以及shutdown","以增大和；当和大于","以求出相对于该位置左边最大的高度和右边最大的高度。我们可以把相对于每个位置左边最大的高度和右边最大的高度事先保存起来，即利用动态规划的思想。建立两个数组","任务拒绝策略","任务的执行","任务缓存队列及排队策略","任务，thread1","优先级队列","会使用缓存池中的对象，多次调用会取得同一个对象的引用。","会在编译时期将","会引发","会拿出","会确保锁的释放。","会返回","会释放锁，sleep()","传递性","但是","但是当","但是调用","但是，这里又可能出现另外一种内存泄漏的问题。threadlocalmap","位上为","位为1。我们根据数组中每个数的二进制中的第","位以上数：","位作为子串","位数","位数。比如输入3，则打印出1,","位数据（long，double）的读写操作划分为两次","位数时，程序会产生溢出，因此我们需要尝试其他的方法。","位是否为1,可以把原数组分成两个数组，可知，出现2次的数一定被分到了一个数组当中。接着，我们分别对两个数组按照开始的思路求异或，即可得到两个出现1次的数。","位的操作来进行，即","位的结果。","位级表示的第","位置上，该操作的时间复杂度为","余下的字符；如果是*，或者匹配0个，即忽略","作用于整个类。","作用于整个类，也就是说两个线程调用同一个类的不同对象上的这种同步语句，也会进行同步。","作用等同于deque.offerlast()","使引用不变，也就不能引用其它对象，但是被引用的对象本身是可以修改的。","使得代码耦合度更低，且实现更优雅。","使得实现更简洁。","使得线程等待某个条件满足，线程在等待时会被挂起，当其他线程的运行使得这个条件满足时，其它线程会调用","使数值不变；","使用","使用。这是也是","使用一个辅助栈","使用一个辅助栈即可。","使用了","使用了一个特殊的机制，可以降低重新计算桶下标的操作。","使用二分查找查找target","使用分段锁机制来实现并发更新操作，核心类为","使用弱引用的原因在于，当没有强引用指向","使用抽象类：","使用拉链法来解决冲突，同一个链表中存放哈希值相同的","使用接口：","使用本地变量和不可变类来保证线程安全。","使用第","使用线程池而不是直接创建线程，这是因为创建线程代价很高，线程池可以有效地利用有限的线程来启动任务。","使用较少，一般使用","使用这种方式一共会创建两个字符串对象（前提是","使用选择","使用链表的头插法，也就是新的键值对插在链表的头部，而不是链表的尾部。","例如给定如下的二叉树：","依次构造从1到","依然可以读入旧值。可以看出，这两个线程虽然执行了两次自增运算，但是主内存中","依然按照元素值从小到大的排列的话，那么可以写为：","依然是","便于被gc发现","保存中序遍历的前一个节点，在处理当前节点","保存偶数层的节点","保存奇数层的节点","保存它的出现次数和其他数的出现次数抵消后的值。如果当前数和","保存已经扫描过的数字，如果当前数字已经包含在了","保存已经走过的节点。当当前节点已经存在于","保存当前出现次数最多的数，用另一个变量","保存当前窗口","保存当前节点的中序遍历的下一个节点","保存所有节点的值；","保存所有链表的所有节点的值","保存遍历过的元素和它的下标。每遍历一个元素时，我们先判断","修改","修饰的","修饰的，保证了获取时的可见性。","修饰，不能解决线程不安全问题，因为","倍。","倍空间，而","值","值也不可变，因此只需要进行一次计算。","值对桶个数取模：hash%capacity，如果能保证","值是相等的，它使用的linkedblockingqueue；","值来调整","值经常被使用，例如","值，使得空间效率和时间效率都能得到保证。","值，它的值被改成了","假设原数组长度","假设数据在容器中已经排好序，中位数可以由","偏向锁","偏向锁的思想是偏向于让第一个获取锁对象的线程，这个线程在之后获取该锁就不再需要进行同步操作，甚至连","做与运算，可以去除","允许插入键为","先于","先反转字符串的前","先在长链表上走diff步","先对原始的集合进行拷贝，需要对集合进行修改的方法都直接抛出异常。","先对数组进行一个排序，然后遍历数组中的每个元素，将其作为三元组的第一个元素，之后找其余的两个数，即用一个","先对整个句子作一个翻转，再依次将句子中的每个单词作一个翻转，即得到结果。","先将句子划分成一个个单词，然后从后向前构造出结果。注意，如果原先的句子中没有单词，则直接返回原先的句子即可。","先开始走","先找出是否已经存在键为","先根据前序序列的第一个数字创建根节点，接下来在中序序列中找到根节点的位置，这样就能确定左右子树节点的数量，然后在新的前序序列和中序序列中递归地构建其左子树和右子树。前序序列用","先求出最大的","先求出长链表的长度","先考虑一种简单的情况，数组中只有一个数出现1次，其他数都是出现2次。我们可以从头到尾遍历数组，对每个数求异或，","先考虑如何求一个数的掩码，对于","先行发生于操作","先行发生原则","先遍历一遍字符串，用一个","先遍历一遍链表，将每一个节点都压入一个","入栈","入门之异常处理","公平锁","公平锁是指多个线程在等待同一个锁时，必须按照申请锁的时间顺序来依次获得锁。","共享","共同指向；如果容器中数据的数目是偶数，则中位数是","关于","关于线程的具体介绍参加","关于轻量级锁的简介见","关系。","关系，它只是提供一种方法实现契约，并不要求接口和实现接口的类具有","关系，那么就必须满足里式替换原则","关联的对象在下一次垃圾回收时会被回收","关键字。","关键字修饰的基本数据类型","关键字修饰的字段在构造器中一旦初始化完成，并且没有发生","关键字修饰，因此是线程安全的。","关键字进行声明。抽象类一般会包含抽象方法，抽象方法一定位于抽象类中。","关键字通过添加内存屏障的方式来禁止指令重排，即重排序时不能把后面的指令放到内存屏障之前。","其中","其中锁的问题，是","其次，要知道","具有相同的结构。","典型的递归的思路。每次从当前数字所表示的字母集合中选取一个数加到当前正在构造的字符串中，然后递归地构造后面的字符。在递归函数中需要传入原始字符串","内存占用：在写操作时需要复制一个新的数组，使得内存占用为原来的两倍左右；","内存模型中，允许编译器和处理器对指令进行重排序，重排序过程不会影响到单线程程序的执行，却会影响到多线程并发执行的正确性。","内存模型保证了","内存模型允许虚拟机将没有被","内存模型定义了","内存模型是通过在变量修改后将新值同步回主内存，在变量读取前从主内存刷新变量值来实现可见性的。","内存模型的三大特性","内存模型约定：所有的变量都存储在主内存中，每个线程还有自己的工作内存，工作内存存储在高速缓存或者寄存器中，保存了该线程使用的变量的主内存副本拷贝。","内存模型试图屏蔽各种硬件和操作系统的内存访问差异，以实现让","内存间交互操作","内有自己的实例副本，且该副本只能由当前","内的实例。线程通过该","内维护该","内部使用","内部包含了一个","内部没有改变","内部维护了一个双向链表，用来维护插入顺序或者","写操作在一个复制的数组上进行，读操作还是在原始数组中进行，读写分离，互不影响。","写操作结束之后需要把原始数组指向新的复制数组。","写操作需要加锁，防止并发写入时导致写入数据丢失。","决定了顺序，默认为","减为0，则将","出一个节点","函数","函数。partit","函数应用于该题中则在某些测试用例下会产生死循环，当数组中存在大量重复元素时，partit","函数执行完后prev指向的是双向链表的尾节点","函数来解决这个问题。我们基于数组的第","函数用来判断","函数的不同。","函数的思路是：每次我们从数组中选择一个数作为基准，将数组中所有比该数小的数排在它的左边，将数组中所有比该数大的数排在它的右边。由此，我们便确定了该数在排序数组中的正确位置。但是一般的数据结构书中对于","函数的设计。我们当时在学习数据结构这门课程时，都会学习快速排序，而快速排序的关键就是","函数的设计默认都为将数组中第一个数作为基准，但是如果将这种","函数的设计，即在当前数组中随机选取一个数作为基准。","函数返回的","函数，时间复杂度为","分为两种：","分别指向最大堆和最小堆的堆顶。","分别表示前一个节点，当前节点和下一个节点。遍历链表，如果当前节点的值不等于","分别表示当前位置右边最大的高度和左边最大的高度。当","列的方格。一个机器人从坐标","则为","则打印出由字符","则是可变的。","创建一个大顶堆","创建一个新的链表用来保存相加后的结果。同时遍历两个链表，将两个链表当前节点的值相加得到","创建一个新的链表，从","创建一个测试类，其","创建后尚未启动。","创建的线程池","创建线程，相当于创建了一个匿名内部线程。","初始值为","初始化dp，当s和p同时到达末尾时匹配成功","初始化顺序","初始指向数组的开头，hi","初始指向数组的结尾，这样初始我们便拥有了最大的宽度，然后我们求出当前的","删除元素","删除元素的代价是非常高的。","删除数组中的重复元素使得每个元素至多出现2次，返回删除后数组的长度。要求不能分配额外的数组空间。","删除该节点。注意考虑删除节点为链表的第一个节点这种特殊情况。","删除链表中倒数第","删除链表的节点","判断s的当前字符和p的当前字符是否匹配","判断一个9","判断两个值是否相等，基本类型没有","判断两个变量是否引用同一个对象，而","判断引用的对象是否等价。","判断是否有重复数字。虽然逻辑很简单但是代码有点长，并且同一个元素可能会被访问多次。代码略。","判断每个关键域是否相等。","到","到底解决了什么问题，又适用于什么样的场景？","到达数组的末尾，此时","到这里，大部分朋友应该对任务提交给线程池之后到被执行的整个过程有了一个基本的了解，下面总结一下：","前序遍历该树，对每个非叶节点交换其左右两个子节点。","前面。","前面我们对","前面的线程不安全示例代码中，cnt","剑指offer","加入","加入高速缓存带来了一个新的问题：缓存一致性。如果多个缓存共享同一块主内存区域，那么多个缓存的数据可能会不一致，需要一些协议来解决这个问题。","加到","加锁","加锁。","包含min函数的栈","包含了操作系统线程状态中的","包提供了一个带有标记的原子引用类","包装类型","包里面的整数原子类","匹配0个","匹配1个","匹配1个或多个","区获取，如果没有找到的话再到","半个变量\"","单一线程原则","单位为毫秒。","单独处理","即为旋转后数组中0的下标。","即为该数。例如对于","即删除了所有和","即可。","即可。对于3,","即可。当要删除的节点是链表的尾节点时，我们就不能这么做了，需要从从链表头开始顺序地查找该节点并删除。","即可。我们使用一个","即当前访问的","原子性","原理","原理类似，都是把大的计算任务拆分成多个小任务并行计算。","原生地支持它，而","原链表的当前节点","去取新的任务来执行，那么去哪里取呢？自然是从任务缓存队列里面去取，因此一个","参数","参数也会起作用，直到线程池中的线程数为0；","参数传递","参数的","及其所有后继节点都要和","及滑动窗口的大小3，那么一共存在6个滑动窗口，它们的最大值分别是","反序列化","反转字符串","反转链表","取字符串的前","取模","取模效果是一样的：","受检异常","变量","变量与具体实例的映射，如果不删除这些引用（映射），则这些","变量与具体实例的映射，当","变量使用","变量后，都会在自己的","变量在该线程中对应的具体实例的初始值。","变量时，它可被回收，从而避免上文所述","变量来统计该","变量用来保证线程之间的可见性；","变量的","变量的线程都有自己的一个“本地”实例副本。一个可能的方案是","变量的问题。既然变量不共享，那就更谈不上同步的问题。","变量表示","变量表示线程池的各个状态：","变量被回收后，该映射的键变为","变量规则","变量通常被privat","变量，它的基本原理是，同一个","只修改这条语句","只是一个用来起记录作用的变量，用来记录线程池中曾经有过的最大线程数目，跟线程池的容量没有任何关系。","只有两个值：true、false，可以使用","只有在构建","只能用在同步方法或者同步控制块中使用，否则会在运行时抛出","只要在java语句执行中产生了异常，一个异常对象就会被创建，jre就会试图寻找异常处理程序来处理异常。如果有合适的异常处理程序，异常对象就会被异常处理程序接管，否则，将引发运行环境异常，jre终止程序执行。","只访问自己的","可中断，而","可以以非常方便的形式满足该需求。","可以使用","可以保证可见性，但是对前面的线程不安全示例中的","可以借助","可以先对数组进行排序，然后从头到尾遍历数组找到重复的数字，时间复杂度为","可以同时绑定多个","可以在","可以在类中使用一个","可以将原数组中的奇数和偶数按照一定的顺序放入一个新数组中。先遍历一遍原数组，求出奇数和偶数的个数，确定新数组中指示奇数的下标","可以指定等待的条件，因此更加灵活。","可以插入键为","可以是线程结束任务之后自己结束，或者产生了异常而结束。","可以有返回值，返回值通过","可以用来表示任何可以作为异常抛出的类，分为两种：","可以用递归的思想解决这个问题。比较两个链表当前节点的值，将较小的节点作为新节点，同时递归构造新节点的下一个节点，最后将新节点返回即可。按照这种方法，当两个链表中的任意为","可以看到","可以缓存","可以被重复使用以执行不同的任务，节省了频繁创建和销毁线程的成本。而且，这里有一个非常巧妙的设计方式，假如我们来设计线程池，可能会有一个任务分派线程，当发现有线程空闲时，就从任务缓存队列中取一个任务交给空闲线程执行。但是在这里，并没有采用这样的方式，因为这样会要额外地对任务分派线程进行管理，无形地会增加难度和复杂度，这里直接让执行完任务的线程去任务缓存队列里面取任务来执行。","可变","可变性","可用于异步获取执行结果或取消执行任务的场景。当一个计算任务需要执行很长时间，那么就可以用","可知","可能为","可能会抛出","可能正在运行，也可能正在等待","可能永远不等于","可能的几个取值。","可被回收。通过这种方式，threadloc","可见性","可见性指当一个线程修改了共享变量的值，其它线程能够立即得知这个修改。java","可运行","可重入代码","可重入代码有一些共同的特征，例如不依赖存储在堆上的数据和公用的系统资源、用到的状态量都由参数中传入、不调用非可重入的方法等。","可防止内存泄漏。","各个值的含义如下：","合并","合并两个排序的链表","合并两个排序的链表。","合理的理解","同","同时从链表的第一个节点开始向前走，fast","同时执行出栈。","同样也是需要实现","同样是用空间换时间的思想，但是不同于上一个思路中用额外的存储空间存储节点和节点的","同步","同步一个代码块","同步一个方法","同步一个类","同步一个静态方法","后序遍历该二叉树，求出当前节点左子树的深度","后手动调用","后面的元素都复制到","后面的部分已经反转完成了，考虑如何反转当前节点。我们需要把next","后面，而是插入在链表头部。","后，只要求","后，就会把到达的任务放到缓存队列当中；","后，通过map.getentry(this)方法获取该","向前移动一个位置。重复上述过程直到","向前移动一个单位。接着判断5和6，因为5","向前移动一个单位；反之，当height[left]","向数据流中插入一个数据","否","否则，将prev指向next","含义","呢？","呢？这是因为除了每个字符可以作为一个中心外，每两个字符中间的位置也可以作为中心，比如","命名的由来","和","和1进行位与运算判断其最后一位是不是1，如果是1则","和endpreord","和hashtable的比较","和hi","和一个慢指针","和一个模式","和中序遍历序列","和为","和为s的两个数字","和其它信息。","和出栈","和出队","和右子树的深度","和扩容相关的参数主要有：capacity、size、threshold","和指示偶数的下标","和数字15，输出","和数字2，该函数将返回左旋转两位得到的结果","和新值","和树","和结果集合","四、中断","回溯法。","回溯法。在进入一个新的格子之前先判断是否能进入，如果能进入则","因为","因为每个","因此我们可以用一个最大堆保存左边部分的数据，用一个最小堆保存右边部分的数据，p1","固定为0。当对象处于轻量级锁状态时","在","在1前面会多打印出来一个空行，这是因为","在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。","在一个字符串","在一个循环中进行，发生冲突的做法是不断的进行重试。","在一个排序的链表中，删除重复的结点。例如给定链表1","在一个线程内，在程序前面的操作先行发生于后面的操作。","在一个长度为","在一些场景","在了解将任务提交给线程池到任务执行完毕整个过程之前，我们先来看一下","在二叉搜索树的后序遍历序列中，最后一个是根节点，在根节点前所有小于根节点的数构成根节点的左子树，所有大于根节点的数构成根节点的右子树。据此可以在原数组中划分出左子树序列和右子树序列，其中左子树序列中的所有数都比根节点的值小，右子树序列中所有数的值都比根节点的值大。如果在右子树序列中出现小于根节点值的数，说明该序列不是二叉搜索树的后序遍历结果，返回","在介绍","在任意位置添加删除元素更快。","在使用这些基本类型对应的包装类型时，就可以直接使用缓冲池中的对象。","在使用静态变量和方法时不用再指明","在写操作的同时允许读操作，大大提高了读操作的性能，因此很适合读多写少的应用场景。","在前面我们多次提到了任务缓存队列，即","在后半数组中继续查找；如果","在堆中创建一个字符串对象，并且使用","在实际中如果需要线程池创建之后立即创建线程，可以通过以下两个方法办到：","在当前线程的","在很多情况下，接口优先于抽象类。因为接口没有抽象类严格的类层次结构要求，可以灵活地为一个类添加行为。并且从","在我们的循环不变式中，lo指向前一个递增子数组，hi指向后一个递增子数组，因此这里循环条件是nums[lo]","在所有线程都到达屏障的时候会执行一次。","在执行","在插入数据时我们需要确保数据被平均分配到两个堆中，即两个堆中数据的数目之差不能超过1。为了实现实现平均分配，我们约定在数据的总数目是偶数时把数据插入到最小堆中，否则插入到最大堆中。同时，我们还要保证最大堆中的所有数据都要小于最小堆中的数据。当数据的总数目是偶数时，按照我们的约定会把数据插入到最小堆中，如果这个数据比最大堆中的一些数据要小该怎么办呢？我们可以先把数据插入到最大堆中，然后拿出此时最大堆中最大的元素，即堆顶元素，将其插入到最小堆中，这样就保证了最小堆中的所有数字都大于最大堆中的数字。当需要把一个数据插入到最大堆但是这个数据比最小堆中的一些数据要大时同理进行分析。","在数组中出现的次数，也可以先用二分查找找到一个","在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组,求出这个数组中的逆序对的总数","在数组中的出现次数了。","在环中走过的路程，n","在线程中调用另一个线程的","在覆盖","在进行序列化或者迭代等操作时，需要比较操作前后","在进行扩容时，需要把键值对重新放到对应的桶上。hashmap","在链表上顺序查找，时间复杂度显然和链表的长度成正比。","地上有一个","基于partition函数的解法","基于动态数组实现，linkedlist","基于双向链表实现，使用","基于双向链表实现；","基于堆或红黑树的解法","基本类型","基本类型对应的缓冲池如下：","基本类型都有对应的包装类型，基本类型与其对应的包装类型之间的赋值使用自动装箱与拆箱完成。","增加线程与减少线程均需要写","声明数据为常量，可以是编译时常量，也可以是在运行时被初始化后不能被改变的常量。","声明方法不能被子类重写。","声明类不允许被继承。","处。","处理器上的寄存器的读写的速度比内存快几个数量级，为了解决这种速度矛盾，在它们之间加入了高速缓存。","处，同时","复制链表中每个节点，将复制节点直接链接到原节点的后面","复制链表中的每个节点并将复制的节点直接链接到原节点的后面，此时不设置每个节点的","复制链表的头结点","复制链表的当前节点","复杂链表的复制","多个线程访问同一个方法的局部变量时，不会出现线程安全问题，因为局部变量存储在虚拟机栈中，属于线程私有的。","多次调用","多用同步工具少用","多用并发集合少用同步集合，例如应该使用","多线程开发的良好实践","多走了一圈，因此","大于等于","大体思路同上，用","大家都知道斐波那契数列，即1,","大的节点。","大的节点并把该节点赋值给","大致相同。","失败了再改用互斥量进行同步。","头插法，链表头部指向新的键值对","如上文所述，threadloc","如何得到一个数据流中的中位数？如果从数据流中读出奇数个数值，那么中位数就是所有数值排序之后位于中间的数值。如果从数据流中读出偶数个数值，那么中位数就是所有数值排序之后中间两个数值的平均值。","如何解决该问题。","如果","如果curr和next不是重复节点，继续判断下一个节点","如果curr和next是重复节点，找到第一个比curr的值大的节点并将其赋值给next","如果lo","如果node不是链表的尾节点","如果node是链表的尾节点","如果roo1","如果root2","如果一个","如果一个变量初次读取的时候是","如果一个线程的","如果一段代码中所需要的数据必须与其他代码共享，那就看看这些共享数据的代码是否能保证在同一个线程中执行。如果能保证，我们就可以把共享数据的可见范围限制在同一个线程之内，这样，无须同步也能保证线程之间不出现数据争用的问题。","如果一系列的连续操作都对同一个对象反复加锁和解锁，频繁的加锁操作就会导致性能损耗。","如果不要求返回两个数在数组中的下标而是两个数的值的话可以用双指针法做。先对数组进行排序，用","如果为","如果以","如果再执行一次","如果单看其中某一点，替代方法很多。比如可通过在线程内创建局部变量可实现每个线程有自己的实例，使用静态变量可实现变量在方法间的共享。但如果要同时满足变量在线程间的隔离与方法间的共享，threadlocal再合适不过。","如果只想中断","如果在方法中改变对象的字段值会改变原对象该字段值，因为改变的是同一个地址指向的内容。","如果头节点是重复节点，将next作为新的头节点","如果尝试的次数超过","如果当前字符已经出现过，将occurrence[c]赋为","如果当前数据流中数据的总数是偶数，将其插入到最小堆中","如果当前线程池中的线程数目","如果当前线程池中的线程数目小于","如果当前线程池中的线程数目达到","如果我们将数组按从小到大进行排序，那么数组中出现次数超过一半的数字就是数组的中位数，直接返回排序后数组中间位置的那个数即可。","如果我们把它旋转后的数组","如果操作","如果数据流中数据的总数为偶数，返回中间的两个数的平均值","如果数据流中数据的总数为奇数，返回中间的数","如果数组已经是排好序的，那么第一个元素即数组的最小元素","如果数组本身已经是排好序的，第一个数字是最小的数字","如果是采用","如果线程池中的线程数量大于","如果获取到的","如果要求调整后奇数和奇数，偶数和偶数之间的相对顺序保持不变，应该怎么做呢？","如果调用了","如果输入数组是","如果采用二叉搜索树作为数据容器的话，插入数据的平均时间复杂度是","如果采用暴力法，可以扫描每一个滑动窗口中的所有数字找出其中的最大值，如果滑动窗口的大小为","如果顺序遍历数组，对于每个元素向后继续遍历数组统计其逆序对的数目，那么时间复杂度是","如此以来我们的思路就清晰了，我们需要先求出旋转后数组中最小元素的下标","子类（实例变量、普通语句块）","子类（构造函数）","子类（静态变量、静态语句块）","字段我们可以看出","字段的值。","字符串字面量；","字符串对象）。","字符串常量池（string","字符串的排列","字符流中字符的个数","字符流中第一个只出现一次的字符","存储字符串字面量","存储指向锁记录","存储着对象的集合，而","存储着键值对。它包含了四个字段，从","存储着键值对（两个对象）的映射表。","存储结构","存储链表节点信息。","存在继承的情况下，初始化顺序为：","它们都属于","它只作用于同一个对象，如果调用两个对象上的同步代码块，就不会进行同步。","它和同步代码块一样，作用于同一个对象。","它所对应的底层结构图为：","它的哈希值如果在第","它的实现与","守护线程是程序运行时在后台提供服务的线程，不属于程序中不可或缺的部分。","安全性","完全一样。两者的区别在","完全一样，即","定义栈的数据结构，实现一个能够得到栈中最小元素的","定义，该值为","实例","实例使用自动装箱来创建并且值相同，那么就会引用相同的对象。","实例变量","实例变量：每创建一个实例就会产生一个实例变量，它与该实例同生共死。","实例需要在多个方法中共享，但不希望被多线程共享","实现","实现callable接口","实现runnable接口","实现一个函数，判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。","实现上类似，最主要的差别是","实现两个函数，分别用来序列化和反序列化二叉树。","实现了","实现了工作窃取算法来提高","实现接口","实现接口会更好一些，因为：","实现生产者消费者问题","实现生产者消费者问题。","实现的","实现的。","实现的一个","实现的一种锁机制，jvm","实现的，而","实现线程安全的","实现，不用担心会被回收（伊甸园）；","实现，这些老对象会被垃圾收集器回收。","实现，需要注意的是，扩容操作同样需要把","实际中，如果","容器主要包括","容易想到的做法是每遇到一个空格，将其替换为","容易想到的是用一个数组保存数据流中的所有数据，如果数据是有序的，则我们在插入一个新数据到数据流时需要移动其他数据以保持数据的有序性，时间复杂度为","对","对synchron","对一个","对于一个","对于一些看起来没有加锁的代码，其实隐式的加了很多锁。例如下面的字符串拼接代码就隐式加了锁：","对于以下代码，thread1","对于以下代码，两个线程调用了不同对象的同步代码块，因此这两个线程就不需要同步。从输出结果可以看出，两个线程交叉执行。","对于以下代码，使用","对于以下代码，在","对于以下代码，虽然","对于基本类型，==","对于基本类型，final","对于已经不再被使用且已被回收的","对于引用类型，==","对于引用类型，final","对于第一点，每个线程拥有自己实例，实现它的方式很多。例如可以在线程内部构建一个单独的实例。threadloc","对于第二点，可以在满足第一点（每个线程有自己的实例）的条件下，通过方法间引用传递的形式实现。threadloc","对于集合类型，可以使用","对任何不是","对右半部分数组进行排序并统计逆序对的数目","对圆括号，生成所有有效的括号组合。","对左半部分数组进行排序并统计逆序对的数目","对应了五个状态，这些状态在右侧的","对当前元素的下标做一个变换。在求解第一步中最小元素的下标时，我们可以利用","对称性","对称的二叉树","对线程","对象。","对象与具体实例的映射，该","对象与具体实例的映射，这一点与上文分析一致。","对象与对应实例初始值的映射添加进该线程的","对象再将映射添加其中。","对象已经被创建过了，那么就会从","对象无法被回收的问题","对象时就指定大概的容量大小，减少扩容操作的次数。","对象本身从而防止内存泄漏","对象的","对象的值（即为具体实例）以及","对象的结束先行发生于","对象的连续","对象的那一方以为现在连接的是其它主机，而实际情况却不一定是。","对象终结规则","对象进行转型；","对象（即代码中的","对象，它在每个线程内对应的实例由于被线程的","对象，并且只有该线程自己可以访问它，其它线程不会访问该","对象，然后将","对象，然后直接将","对象，若该对象不为","对象，通过调用该对象的","对这部分缓存进行回收。","对静态方法","对，每次合并一对，合并完成后得到","将","将nums[lo,","将复制后的链表拆分成原链表和复制链表并返回复制链表的头结点","将阻塞，直到队列中有内容；如果队列为满","将阻塞，直到队列有空闲位置。","小于stack_min","小的节点在根节点的左子树中，因此需要继续在左子树中寻找第","小的节点，假设我们把树中的节点按节点值从小到大排列并从0开始编号，首先求出根节点左子树的节点数","小的节点；如果","尝试次数使用","就会将最近最久未使用的数据移除。","就地删除要求我们在原数组上进行操作而不能分配额外的数组。我们还是按照","就已经有了具体的实现，在threadpoolexecutor","就必须进行扩容操作。","就是","尽可能大，也就是说","尽可能小，因此需要保证","属于","属于字符串字面量，因此编译时期会在","属于非守护线程。","左旋转字符串。字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的末尾。请定义一个函数实现字符串的左旋转操作。例如输入字符串","已经被放在了正确的位置上，接着扫描下一个数字。如果不是，拿它和下标为","平衡二叉树。输入一棵二叉树，判断该二叉树是否是平衡二叉树。一个二叉树是平衡二叉树指的是树中所有节点的左子树的深度和右子树的深度差的绝对值不超过1。","并不支持","并不能保证操作的原子性。","并不解决多线程","并不解决线程间共享数据的问题","并且","并且不会导致数据不一致。它是遗留类，不应该去使用它。现在可以使用","并且置访问标记为","并且覆盖这个方法的实现，这在实现","并且还没有将修改后的值写入主内存，t2","并发包下的","并维护了","序列化","序列化二叉树","序列化结果为：1,2,4,$,3,5,$,$,6,$,$","应相应修改为：","应该注意到链表的插入是以头插法方式进行的，例如上面的","应该注意的是，clone()","开始再和","开始向左求出左边最大的高度","开始遍历数组中剩下的数，如果当前数比堆顶元素小，将堆顶元素出堆，同时将当前元素进堆。遍历完成后堆中保存的即是最小的","开始，一个桶存储的链表长度大于","开始，接口也可以拥有默认的方法实现，这是因为不支持默认方法的接口的维护成本太高了。在","开始，接口也可以有默认的方法实现，使得修改接口的成本也变的很低。","异常","异常是发生在程序执行过程中阻碍程序正常执行的错误事件。比如：用户输入错误数据、硬件故障、网络阻塞等都会导致出现异常。","引入了偏向锁和轻量级锁，从而让锁拥有了四个状态：无锁状态（unlocked）、偏向锁状态（biasble）、轻量级锁状态（lightweight","引入了分段锁。","引用的字符串放到","引用的是同一个字符串。","引用而无法被回收造成内存泄漏。","引用访问到初始化了一半的对象），那么其它线程就能看见","强引用，无法被回收，可能会造成内存泄漏。","归并之后得","当lo,","当一个字符串调用","当一个节点被访问时，如果","当上述参数从小变大时，threadpoolexecutor","当创建线程池后，初始时，线程池处于","当前数据流中数据的总数","当前是偶数层","当前是奇数层;","当前最长回文子串","当前节点在中序序列中的位置","当多个线程可以一起工作去解决某个问题时，如果某些部分必须在其它部分之前完成，那么就需要对线程进行协调。","当尝试获取一个锁对象时，如果锁对象标记为","当我们用二分查找在数组中找到一个","当所有非守护线程结束时，程序也就终止，同时会杀死所有守护线程。","当持有锁的线程长期不释放锁的时候，正在等待的线程可以选择放弃等待，改为处理其他事情。","当有另外一个线程去尝试获取这个锁对象时，偏向状态就宣告结束，此时撤销偏向（revok","当根节点为空时，返回0；否则，返回左子树的深度和右子树的深度的最大值并加1。","当然，我们可以顺序遍历数组来统计","当线程池处于","当线程池的任务缓存队列已满并且线程池中的线程数目达到","当要删除的节点","当调用","当调用一个","当锁对象第一次被线程获得的时候，进入偏向状态，标记为","形成树的一条路径，最长的路径的长度为树的深度。","很多操作都需要先确定一个键值对所在的桶下标。","很难实现复杂控制流；其次，这些同步类是由最好的企业编写和维护，在后续的","很难描述，不过感觉很无聊...","得","得到一个线程安全的","得到以下实现：","得到旧的预期值，通过调用","得到的值放入主内存的变量中","得到的值放入工作内存的变量副本中","得到的结果是不确定的。","循环。curr","循环里面不断通过","必须保证为","必须包含1","思路","思路1","思路2","思路2:","思路2：","思路3","思路4","思路同","性能","总是有效的。","总的来说，threadloc","总结","总结上述过程我们可以得到以下结论：整个过程中我们保持两个队列中至少一个队列为空。当执行","我们不难发现一个回文子串是围绕着它的中心进行扩展的，对于一个长度为","我们以第一个字符串为基准，从头开始比较其余字符串和第一个字符串的相应位上的字符是否相同。","我们先来分析这样一个问题：如何判断一个链表中是否存在环？我们可以让一个快指针","我们则将当前序列打印出来。由于序列至少需要包含2个数，因此","我们发现在暴力法中对于每一个可能蓄水的位置我们都要遍历一遍","我们可以对上述方法做一个优化，其实没有必要每次按顺序合并两个链表，我们可以采用分治法，每一轮将","我们可以对思路2进一步进行优化。当","我们可以每次合并2个链表，合并","我们可以用","我们可以用字符串表示大数，进而我们需要在字符串上模拟整数的加1操作。","我们可以进一步将上述方法的空间复杂度优化为","我们将复杂链表的复制过程分为三个步骤：","我们知道，位运算的代价比求模运算小的多，因此在进行这种计算时用位运算的话能带来更高的性能。","我们知道，如果给定一棵二叉树的前序遍历序列和中序遍历序列，我们可以从中构造出一棵二叉树。因此我们可以先把一棵二叉树序列化成一个前序遍历序列和一个中序遍历序列，然后在反序列化时通过这两个序列重构出原二叉树。但是这个思路有两个缺点，一是二叉树中不能有数值重复的节点，否则我们无法通过这种方法构造出原二叉树。二是只有当两个序列中的数据都读出后才能开始反序列化。如果两个序列是从一个流中读出来的，那么可能就需要等待很长的时间。实际上如果二叉树的序列化是从根节点开始的话，那么相应的反序列化在根节点的数值读出来后就可以开始了。因此我们可以根据前序遍历来序列化和反序列化二叉树。在序列化时，如果当前节点不为空，我们在字符串中加入当前节点的值；如果当前节点为空，我们在字符串中加入一个特殊字符，比如$。在反序列化时，我们每次从字符流中读入一个字符，如果当前字符不是$，我们创建一个新节点，并继续构建该节点的左子树和右子树；否则，返回空。","我们通过一系列栈的","或","或者","或者找到第一个公共节点。","所代表的子树中包含和","所代表的子树和","所以","所包含的对象（对threadlocal而言即为","所能排列出来的所有字符串","才会起作用，直到线程池中的线程数不大于","打印从1到最大的n位数","执行","执行了两个线程，由于调用的是同一个对象的同步代码块，因此这两个线程会进行同步，当一个线程进入同步语句块时，另一个线程就必须等待。","执行了自增的操作。","执行完firsttask","执行自增操作，操作结束之后它的值有可能小于","扩容","扩容使用","扩容操作需要调用","扩展","扩展1","扩展2","找出其中最小的","找到target在nums中的最后一个位置","找到target在nums中的第一个位置","找到出现次数大于n/2的元素返回","找到第一个不重复的字符。但是使用这种方法，当字符流中的字符很多时，每次调用","找到第一个和","找当前字符流中第一个不重复的字符时都要遍历一遍字符流，那么时间开销会很大。更好的做法是用一个数组","把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。","把原数组整个复制到新数组中，这个操作代价很高，因此最好在创建","把只包含质因子2,","把数组排成最小的数","把数组进行排序，排在最前面的","抽象类","抽象类与接口","抽象类和抽象方法都使用","抽象类和接口","抽象类和普通类最大的区别是，抽象类不能被实例化，需要继承抽象类才能实例化其子类。","拆箱","拉链法的工作原理","拷贝对象和原始对象的引用类型引用不同对象。","拷贝对象和原始对象的引用类型引用同一个对象。","挂起期间，线程会释放锁。这是因为，如果没有释放锁，那么其它线程就无法进入对象的同步方法或者同步控制块中，那么就无法执行","指令需要有","指向","指向。","指向下一个节点，另一个指针","指向当前节点的父节点","指向的元素7和6，同时将较大的元素保存到一个辅助数组","指向的元素的不同的元素，把它放到","指向的就是删除后数组的最后一个元素。","指向的就是链表的倒数第","指向的数据是右边部分最小的数，见下图：","指向的数据是左边部分最大的数，p2","指向的数的平均值。注意到整个数据容器被我们分成了两部分，左边部分的数据比右边部分的数据小，并且","指向链表中任意一个节点），返回结果为复制后的复杂链表的头结点。","指示","指示curr和next是否是重复节点","指示入栈序列中的元素","指示出栈序列中的元素","指示删除后的数组，j","指示字符串str的当前字符","指示对象内存地址，var2","指示序列化字符串中当前正在反序列的字符的下标","指示序列的最后一个数。初始时","指示序列的第一个数，big","指示当前中序遍历到的节点的编号，从1开始","指示当前单词是不是要构造的第一个单词","指示当前字符。判断的过程是，首先看第一个字符是不是正负号。如果是，在字符串上移动一个字符，继续扫描剩余的字符串中0","指示当前数组，初始时两个指针都指向数组的第一个元素。我们遍历","指示当前数组，初始时两个指针都指向数组的第一个元素。由于数组是排好序的，因此重复元素都集中在一起，我们移动","指示当前正在序列化的节点是不是第一个节点","指示当前节点的下一个节点。依次反转每个节点并向前移动指针。注意，反转时首先保存原链表中当前节点的下一个节点到","指示当前节点的下一个节点，如果curr","指示当前节点的前一个节点，next","指示当前节点，prev","指示操作需要加的数值，这里为","指示数组的最后一个数，mid","指示数组的第一个数，hi","指示数组的第一个数，hi指示数组的最后一个数，当","指示新的字符串的末尾，从后向前进行替换。","指示旧的字符串的末尾，p2","指示的刚好是链表中倒数第","指示的窗口中的某个字符重复时，假设这个字符的下标为","指示的这两个数，重复进行直到","指示计数器的初始值，barrieract","指示该字段相对对象内存地址的偏移，var4","指示这个辅助数组，初始时","指针。如果","指针。遍历原链表，如果节点","指针为","指针和一个","指针指向两个子数组中间的元素，也就是第一个数组的最后一个元素7，比较","指针指向当前节点，并且将","指针的方法。这样搜索剩下两个数的时间复杂度为","指针置为","指针，fast","指针：","按之字形顺序打印二叉树。实现一个函数按照之字形顺序打印二叉树，即第一层按照从左向右的顺序打印，第二层按照从右向左的顺序进行打印，第三层再按照从左向右的顺序进行打印，以此类推。","按之字形顺序打印二叉树需要两个栈。我们在打印某一行节点的时候，把下一层的节点保存到相应的栈里。如果当前打印的是奇数层，由于奇数层是从左往右打印，其下一层需要从右往左打印，根据栈后进先出的特性，我们在保存下一层节点的时候应该先保存左子节点，再保存右子节点。同理，如果当前打印的是偶数层，则保存下一层节点的时候先保存右子节点，再保存左子节点。","按节点数值大小排序，第三个的节点应该是4。","排序；","接口","接口。","接口中的","接口又调用了","接口只是规定，如果一个类没有实现","接口是抽象类的延伸，在","接口有以下阻塞队列的实现：","接口的字段只能是","接口的字段默认都是","接口的成员只能是","接口的成员（字段","接口的方法，而是","接口的类只能当做一个可以在线程中运行的任务，不是真正意义上的线程，因此最后还需要通过","接口继承了executor接口，并声明了一些方法：submit、invokeall、invokeani","接口，其","接口，因此支持随机访问。","接口，基本实现了","接口，该接口继承自","接口，这使得","接口；","提供。该类的实例维护某个","提供了两个方法，用于线程池的关闭，分别是","提供了两种锁机制来控制多个线程对共享资源的互斥访问，第一个是","提供了动态调整线程池容量大小的方法：setcorepoolsize()","提供了线程本地的实例。它与普通变量的区别在于，每个使用该变量的线程都会初始化一个完全独立的实例副本。threadloc","提供了阻塞的","提供的三个静态方法能满足要求，就尽量使用它提供的三个方法，因为自己去手动配置threadpoolexecutor","插入","插入新键值对","操作。","操作之前直至最后一个","操作之前，必须把变量值同步回主内存。","操作之后，这样只需要加锁一次就可以了。","操作也不再需要。","操作先行发生于后面对同一个锁的","操作先行发生于后面对这个变量的","操作具有原子性，例如对一个","操作可以不具备原子性。如果有多个线程共享一个并未声明为","操作失败了，虚拟机首先会检查对象的","操作失败时使用内置锁","操作将对象的","操作将线程","操作就会误认为它从来没有被改变过。","操作成功了，那么线程就获取了该对象上的锁，并且对象的","操作成功，这个线程以后每次进入这个锁相关的同步块就不需要再进行任何同步操作。","操作时先尝试不加锁，如果连续两次不加锁操作得到的结果一致，那么可以认为这个结果是正确的。","操作时，需要遍历所有","操作来分析两个队列模拟一个栈的过程。表格的第一列表示","操作来支持更高的并发度，在","操作来避免重量级锁使用互斥量的开销。对于绝大部分的锁，在整个同步周期内都是不存在竞争的，因此也就不需要都使用互斥量进行同步，可以先采用","操作进行同步，如果","操作：","支持范型，如","支持随机访问，linkedlist","改写。用变量","放到它正确的位置上去。接下来重复这个过程，直到我们找到了一个重复的数字，返回","数值的整数次方","数字在排序数组中出现的次数","数据","数据不一致：读操作不能读取实时性的数据，因为部分写操作的数据还未同步到读数组中。","数据流中的中位数","数据类型","数组。","数组中出现次数超过一半的数字","数组中只出现一次的两个数字","数组中的逆序对","数组中重复的数字","数组内容，而是都会指向同一个","数组初始化之后就不能再引用其它数组。并且","数组存储字符串，同时使用","数组存储数据。","数组来表示","数组来表示。","数组的方法，因此可以保证","数组的默认大小为","数组被声明为","数组，而是使用","数量相等。","斐波那契数列","新建","新建一个","新版本","新链表的虚拟头结点","新链表的虚拟头结点，这样做可以免去单独处理头结点的麻烦","方案获取实例时，只需要以线程为键，从","方法","方法。","方法。cloneabl","方法。它的思路是由于","方法不同，它能够返回任务执行的结果，去看","方法中使用这种方式来创建字符串对象。","方法中通过","方法中都有一个同步块。虚拟机观察变量","方法中，0:","方法中，通过","方法之后计数器会减","方法之外","方法会休眠当前正在执行的线程，millisec","方法会等待线程都执行完毕之后再关闭，但是如果调用的是","方法会让计数器的值减","方法会设置线程的中断标记，此时调用","方法会返回","方法使线程等待，其它线程调用","方法使线程进入限期等待或者无限期等待时，常常用“挂起一个线程”进行描述。","方法使线程进入限期等待状态时，常常用“使一个线程睡眠”进行描述。","方法内部。也就是说，sb","方法取得一个字符串引用。intern()","方法可以循环使用，所以它才叫做循环屏障。","方法启动一个线程时，虚拟机会将该线程放入就绪队列中等待被调度，当一个线程被调度时会执行该线程的","方法唤醒等待的线程。","方法回收键为","方法在运行过程中将字符串添加到","方法实现，在节点多于","方法实际上是","方法将一个线程设置为守护线程。","方法将所有键为","方法将键和值为","方法就可以中断线程。","方法就属于这类情况。如果虚拟机探测到由这样的一串零碎的操作都对同一个对象加锁，将会把加锁的范围扩展（粗化）到整个操作序列的外部。对于上一节的示例代码就是扩展到第一个","方法就无法使线程提前结束。","方法并不是","方法执行一个无限循环，并且没有执行","方法时应当总是覆盖","方法时，会先从","方法时，先得到当前线程的","方法时，如果","方法是在","方法来保证容量足够，如果不够时，需要使用","方法来判断线程是否处于中断状态，从而提前结束线程。","方法来启动线程。","方法来拷贝一个对象即复杂又有风险，它会抛出异常，并且还需要类型转换。effect","方法来提交一个线程，它会返回一个","方法来获取一个不可变的集合。","方法检测到是否有中断发生。","方法每次可以确定一个数在排序数组中的正确位置，因此当","方法源码如下：","方法的实现可以看出，它首先执行的是通过构造器传进来的任务","方法的实现比较简单，就是先判断值是否在缓存池中，如果在的话就直接返回缓存池的内容。","方法的实现，会发现它实际上还是调用的","方法的开始。","方法的调用先行发生于被中断线程的代码检测到中断事件的发生，可以通过","方法的重写，r取31，r进制整数的第一位取17，因此该r进制整数可以看作|","方法签名相同，此时子类的方法不是重写基类方法，而是在子类中定义了一个新的方法。","方法类似。","方法结果不变","方法而在等待的线程就会被唤醒。","方法而在等待的线程才能继续执行。","方法设置线程内实例的值，如下所示。","方法调用先行发生于此线程的每一个动作。","方法返回","方法返回。","方法进行扩容，新容量的大小为","方法进行确定），那么就会返回","方法通过调用","方法隐式地被指定为","方法）默认都是","方法，b","方法，且默认返回","方法，也就无法确定该键值对的桶下标，只能通过强制指定一个桶下标来存放。hashmap","方法，从这2个方法的名字就可以看出，是预创建线程的意思，即在没有任务到来之前就创建","方法，会将当前线程挂起，而不是忙等待，直到目标线程结束。","方法，保证等价的两个对象散列值也相等。","方法，则相当于调用每个线程的","方法，则线程池处于","方法，只不过它利用了","方法，因为","方法，因此会抛出一个","方法，因此多个","方法，因此这两个对象的散列值是不同的，最终导致集合添加了两个等价的对象。","方法，在线程池中的线程数不大于","方法，它不是","方法，就会抛出","方法，无法被重载。","方法：如果队列为空","方法；","旋转之后的数组可以看做是由两个递增的子数组所构成，而这个最小的数就是这两个子数组的分界点。可以借助二分查找的思想去寻找这个最小的数。初始时用","旋转数组的最小数字","无同步方案","无法处理的错误，而except","无法被移除。从而使得实例被该","无限期等待","无需等待其它线程显式地唤醒，在一定时间之后会被系统自动唤醒。","既可以当做一个任务执行，也可以有返回值。","既无共享，何来同步问题，又何来解决同步问题一说？","既然每个","既然每个访问","时会将链表转换为红黑树。","时会移除最晚的节点，也就是链表首部节点","时即找到了第","时向","时将数","时我们向前移动","时我们知道它可以有返回值，返回值通过","时间内删除该节点。输入保证要删除的节点在链表中。","时间内找到","时间复杂度","时间复杂度：o(2n)","时间复杂度：o(kn)","时间复杂度：o(logn)","时间复杂度：o(n)","时间复杂度：o(n)。","时间复杂度：o(n^2)","时间复杂度：o(n^3)","时间复杂度：o(nlogk)","时间复杂度：o(nlogn)","时间片。","时间结束","时间，它只适用于共享数据的锁定状态很短的场景。","时，5","时，keepalivetim","时，prev","时，从","时，减小","时，即找到了这两个数。","时，即找到了这两个数；当和小于target","时，如果一个线程空闲的时间达到","时，如果两个队列均为空，我们约定将元素插入到","时，如果前面没有","时，如果某线程空闲时间超过","时，将","时，将另一个链表的头结点作为新节点返回。","时，建立当前节点和","时，我们不断将非空的那个队列中的元素出队，直到该队列只含有一个元素，此时该元素即为出栈的元素，我们将该元素出队并返回。","时，我们判断","时，我们向后移动","时，我们需要利用","时，第一个只出现一次的字符是","时，表示维护的是","时，需要向","是","是一个不可变的类，编译器会对","是一个指针，存储的是对象的地址。在将一个参数传入一个方法时，本质上是将对象的地址以值的方式传递到形参中。因此在方法中使指针引用其它对象，那么这两个指针此时指向的是完全不同的对象，在一方改变其所指向对象的内容时对另一方没有影响。","是一个链表。即数组中的每个位置被当成一个桶，一个桶存放一个链表。hashmap","是一个顶层接口，在它里面只声明了一个方法","是不可变的，才可能使用","是不是","是不是target，如果是，说明","是不是合法的。","是不是等于","是可变的，那么在网络连接过程中，string","是同步的，因此开销就比","是否为负数，如果","是否匹配。和上一个思路把匹配分为匹配0个，匹配1个，匹配多个相比，这里把匹配1个和匹配多个在逻辑上统一成匹配多个了。","是否匹配；要么匹配多个，即从","是否可以构成一个回文子串。如果","是否在","是否指向当前线程的虚拟机栈，如果是的话说明当前线程已经拥有了这个锁对象，那就可以直接进入同步块继续执行，否则说明这个锁对象已经被其他线程线程抢占了。如果有两条以上的线程争用同一个锁，那轻量级锁就不再有效，要膨胀为重量级锁。","是否改变，如果改变了需要抛出","是否适用于海量数据","是否需要修改输入数组","是回文子串，dp[i,","是大于原始数字的最小的","是数组中那两个只出现1次的数异或的结果。由于这两个数不相同，所以","是用来关闭线程池的。","是用来判断两个对象是否等价。等价的两个对象散列值一定相同，但是散列值相同的两个对象不一定等价。","是用来起到什么作用的；","是线程安全的，内部使用","是节点总数，选取每个节点需要比较","是通过","是重复节点，由于链表是排好序的，因此重复节点是连续的，我们找到第一个比","暴力法。遍历每一个可能蓄水的位置","暴力法可以做但是显然不是最优的。我们可以发现要想使得所盛水的容量最大，我们一方面可以增加","更新为","更新结果。但是要注意，result","替代方案","替换空格","最后一位数","最后一次出现的位置。找到了","最后才是构造函数的初始化。","最大堆","最小堆","最小的k个数","最重要的是以下用于维护顺序的函数，它们会在","最长回文子串的开始","最长回文子串的结尾","有一个错误认识就是，int","有三种使用线程的方法：","有两个构造函数，其中","有其缺陷：","有内存泄漏的情况，应该尽可能在每次使用","有序性","有序性是指：在本线程内观察，所有操作都是有序的。在一个线程观察另一个线程，所有操作都是无序的，无序是因为发生了指令重排序。在","有很多关于","有自己的实例副本，且其它","服务端应用都可以使用线程本地存储来解决线程安全问题。","朝着另一个","未采用该方案的一个原因。","本身，而用","机器人的运动范围","来中断该线程，如果该线程处于阻塞、限期等待或者无限期等待状态，那么就会抛出","来保证有序性。除此之外，jvm","来保证有序性，它保证每个时刻只有一个线程执行同步代码，相当于是让线程顺序执行同步代码。","来启动，它是一个特殊的线程池，线程数量取决于","来唤醒挂起的线程。","来唤醒挂起的线程，造成死锁。","来存储，但是具体大小没有明确规定。jvm","来实现缓存功能。","来封装这个任务，主线程在完成自己的任务之后再去获取结果。","来引用缓存对象，由","来执行，这样就避免发生竞争。但是如果队列中只有一个任务时还是会发生竞争。","来支持线程安全，并且","来标识使用了哪种编码。","来求","来获取一个","来获取任务执行结果。","来表示","来解决这个问题，它可以通过控制变量值的版本来保证","来调用。可以说任务是通过线程驱动从而执行的。","来进行","来进行同步。","构造函数允许用户传入的容量不是","构造函数的参数。","构造函数的源码，可以看到，在将一个字符串对象作为另一个字符串对象的构造函数参数时，并不会完全复制","枚举类型","查找数组中最小元素的下标，并将其赋给bia","查找的时间复杂度为","查找需要分成两步进行：","栈中的元素类型为","栈封闭","栈的压入、弹出序列","树","树作为数据容器，将平衡因子定义为左右子树节点数据之差，这样插入的时间复杂度为o(logn)，读取的时间复杂为","树的子结构","树，因此我们需要再分析其他的方法。","核心意思是","核数。","根据","根据结论","根节点的值","检查是否为同一个对象的引用，如果是直接返回","检查是否是同一个类型，如果不是，直接返回","概览","次。代码略。","次即可得到倒数第","次方。","次方。虽然我们可以采用连乘的方法去求，但那不是最优的。这里我们采用递归的方法去求。例如2","次方，因为它可以自动地将传入的容量转换为","次方，那么就可以将这个操作转换为位运算。","次，就需要对每个","次，总共需要选取","次，所以上面两种方法的时间复杂度都是","正则表达式匹配","此时该链表中奇数位置的节点构成原链表，偶数位置的节点构成复制链表，将其拆分出来即可。","步，接着","步，然后两个链表再一起走，直到或者两个链表中有一个为","死亡","每一个3","每一列必须包含1","每一行必须包含所有1","每个","每个线程持有一个","每个线程需要有自己单独的实例","每个链表存储了","每次从矩阵的左上角开始一轮打印，每轮打印包括从左向右、从上向下、从右向左以及从下向上四个方向，每个方向的打印都有相应的前提条件，从上向下打印需要当前打印的矩阵至少包含两行，从右向左打印需要当前打印的矩阵至少包含两行两列，从下向上打印需要当前打印的矩阵至少包含三行两列。","每次取出","每次扩容请求其大小的","每次走1步。如果两个指针相遇则说明链表中存在环，如果","每次走1步，fast","每次走2步，slow","每次走2步，所以","每次选取","每次都会新建一个对象；","比","比较","比较，如果该字段内存地址中的值等于","求上图下雨后能盛水的容积。","没有实现","没有设置","注意初始条件是j","注意这里i是从s.length()开始，j是从p.length()","注意，java","注意，空的字符串也被认为是有效的。","注意，虽然在前面的分析中，如果数据流中数据的总数是奇数，p1和p2同时指向数据流中间的那个数，这里无论是返回最小堆的堆顶元素还是最大堆的堆顶元素应该都是可以的。但是在实现上只有最小堆的堆顶才指示中间的那个数，因此这里只能返回最小堆的堆顶元素","注意，这种方法能够得到正确结果的关键在于","注意：上述代码的运行结果为：","注意：不能将","注：entry虽然是弱引用，但它是","浅拷贝","消费者”模式）都会将产品的消费过程尽量在一个线程中消费完。其中最重要的一个应用实例就是经典","深入剖析线程池实现原理","深入理解","深入解析","深拷贝","添加元素时使用","源码，var1","滑动窗口。使用","滑动窗口的最大值","然后","然后把","然后拿到该线程对应的","父类（实例变量、普通语句块）","父类（构造函数）","父类（静态变量、静态语句块）","版本。","版本都支持。并且使用","状态。","状态，并且所有工作线程已经销毁，任务缓存队列已经清空或执行结束后，线程池被设置为","状态，此时线程池不能够接受新的任务，它会等待所有任务执行完毕；","状态，此时线程池不能接受新的任务，并且会去尝试终止正在执行的任务；","状态；","环中的节点个数","现在我们对栈执行","理想的散列函数应当具有均匀性，即不相等的对象应当均匀分布到所有可能的散列值上。这就要求了散列函数要把所有域的值都考虑进来。可以将每个域都当成","用一个","用一个辅助栈","用两个指针","用两个栈实现一个队列，完成队列的入队","用两个栈实现队列","用两个队列实现一个栈，完成栈的入栈","用于","用于存储对象分代年龄，2bit","用于存储对象哈希码，4bit","用于存储锁标志位，1bit","用做","用来扫描0","用来控制一个线程等待多个线程。","用来控制多个线程互相等待，只有当多个线程都到达时，这些线程才会继续执行。","用来表示","用来记录","由","由于","由于下一层是偶数层需要从右往左打印，因此先加入左子节点，再加入右子节点","由于下一层是奇数层需要从左往右打印，因此先加入右子节点，再加入左子节点","由于中序遍历是从左子树开始的，因此为了找出当前节点中序遍历的下一个节点，我们只需要在当前节点的右子树和父节点中寻找即可。如果当前节点的右子树不为空，则当前节点的下一个节点是右子树中最左边的那个节点；如果当前节点的右子树为空，则我们需要从当前节点的父节点中寻找当前节点的下一个节点。如果当前节点是其父节点的左子树，则当前节点的下一个节点就是其父节点；如果当前节点是父节点的右子树，则我们需要继续从当前的父节点的父节点中寻找，直到找到当前节点是其父节点的左子树，或者父子树为空，即当前节点没有下一个节点。","由于二叉搜索树的中序遍历序列是递增的，因此模拟一遍二叉搜索树的中序遍历，每次记录当前节点的编号，当前节点的编号等于","由于前序遍历是先从根节点开始访问，因此采用前序遍历处理。每遍历一个节点将当前节点的值进行累加，即target","由于只被持有它的线程访问，故不存在线程安全以及锁的问题","由于我们需要从一个数据流中读出数据并计算中位数，因此我们需要用一个数据容器存储数据流中的所有数据并同时考虑插入数据和读取中位数这两个操作的时间复杂度。","由于数组是递增排序的，初始时用","由于是找最小的","由于需要将m,n两个数字拼接得到mn，因此这里将数组中的每个数字转换为字符串","由于需要转换成一个排序的双向链表，而二叉搜索树的中序遍历序列是排序的，因此可以采用中序遍历处理原二叉搜索树。处理时用一个变量","的","的next","的。","的一个","的一个区别是，cyclicbarri","的一个旋转，该数组的最小值为1。","的一部分，而不属于","的三元组。要求三元组不能重复。","的下一个丑数是多少。我们可以将","的下一个位置","的下一个位置，再将","的下一个字符是不是*，如果不是*，继续判断","的下一个节点","的丑数已经求出，我们需要求出","的个数）。","的中断操作","的临界值，当","的二进制表示中一定有一位为1。假设其第","的优化。","的位置都出现了)。如果它和下标为","的值不同，我们移动只需要移动","的值更新为","的值最后为","的值相同的重复节点。注意在将","的值等于","的值设置为","的值赋给","的元素。假设数组非空并且出现次数大于","的元素。重组后，我们从头开始遍历数组，若当前位置的元素不满足","的元素一定存在。","的元素，如果找到了返回其下标，如果没有找到返回","的判断还要再看它们后面的一位。","的利用率。每个线程都维护了一个双端队列，用来存储需要执行的任务。工作窃取算法允许空闲的线程从其它线程的双端队列中窃取一个任务来执行。窃取的任务必须是最晚的任务，避免和队列所属线程发生竞争。例如下图中，thread2","的前一个节点，这样当找到倒数第","的区别","的区别在于：","的区域，这是在轻量级锁运行过程创建的，用于存放锁对象的","的原子类","的参数是以值传递的形式传入方法中，而不是引用传递。","的参数有点麻烦，要根据实际任务的类型和数量来进行配置。","的变量为","的右边最大的高度。分别求出这两个数组后，每个位置","的含义；","的大小为256。初始时，occurr","的大小超过了","的子结构。","的子结构。我们约定空树不是任意一个树的子结构。例如给定树","的字符串对象，它指向","的字符串，我们可以找到","的字符出现了一次，第一次出现的位置为","的字符出现了多次","的字符还未出现过","的实例是","的实现也在链表过长时会转换为红黑树。","的容量大小，默认为","的对象","的局部变量)，其他线程无法访问到它，因此可以进行消除。","的左边和右边也有可能有","的左边最大的高度，right_max[i]","的差的绝对值是否大于1，如果是，说明该二叉树不是平衡二叉树。下面的代码中函数","的库函数","的底层数据结构导致","的异同。既然是作比较，那应该是认为这两者解决相同或类似的问题。","的引用为弱引用，避免了","的弱引用），而非具体实例的的弱引用，所以无法避免具体实例相关的内存泄漏。","的弱引用，这一点从super(k)可看出。另外，每个","的强引用。","的当前字符和*，继续看","的当前字符是否匹配即可。如果有*并且","的当前字符是否匹配，接着看","的当前字符相同，我们分为三种情况去处理：匹配0个、匹配1个和匹配多个。","的影响。","的情况非常罕见，在目前商用","的所有引用永远不会逃逸到","的所有路径。路径和为路径中所有节点的和，路径定义为从根结点向下到某个叶结点所经过的结点形成的一个序列。例如给定二叉树如下：","的所有键值对重新插入","的拼接自动优化。在","的指针。","的操作，那么调用线程的","的改动","的效率会更高，因为","的数值。(不过这种读取到","的数字不等，就把第","的数字时，首先比较这个数字","的数字的位置","的数字相等，我们就找到了一个重复的数字","的数字进行比较，如果它和下标为","的数并返回。","的数总是存在。例如给定一个长度为9的数组","的数据结构并非固定，根据不同的状态会有不同的结构。其中","的数组中有可能出现","的数组中，所有的数字都在","的数，对于3和5同理，然后再从2,","的整数数组，找到出现次数大于","的方式会在堆中创建一个字符串对象。","的方式新建了两个不同字符串，而","的方法调用了","的方法，而","的时候才为","的时候，那些因为调用","的时间内找到队列中的最大数。我们并不把滑动窗口里的每一个数都存入队列中，而是只把有可能成为滑动窗口最大值的数存入到一个双端队列中。我们使用队列的队头保存当前滑动窗口的最大值。当把数组前","的时间单位，有7种取值，在","的时间复杂度分析比较复杂，详见《算法导论》）。","的替代方案","的最后一个元素6，mid","的最后一个元素7，另一个指针","的最后一个元素。因为7","的最大连续子序列的和，状态转移方程如下：","的构造函数将","的查找效率，且内部使用双向链表维护元素的插入顺序。","的栈顶元素，则同时将","的核心。(aqs源码暂时没看...)","的核心方法，通过这个方法可以向线程池提交一个任务，交由线程池去执行。","的根节点的值一样的节点，然后判断该节点所代表的子树是不是和","的根节点的值相同的节点","的格子。请问问该机器人能够到达多少个格子。例如给定threshold","的格子开始移动，它每次可以向左、右、上、下移动一格，但不能进入行坐标和列坐标的数位之和大于","的正确性。大部分情况下","的每一个数。","的每个","的每个丑数并将其排好序存在一个数组里，例如","的比较","的深入解析见","的源码，它调用了","的状态下，mark","的第一个位置和最后一个位置。要求时间复杂度为","的第一个元素和最后一个元素，并用","的类型为","的线程安全问题。因为每个线程有且只有一个","的结构","的结构完全一样的结构即可。而这里要求","的缓存中特别有用，通过移除最近最久未使用的节点，从而保证缓存空间足够，并且缓存的数据都是热点数据。","的节点并将其链接到新链表中，同时需要设置进位","的节点，返回删除后链表的头节点。例如给定链表1","的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。找出数组中任意一个重复的数字。例如如果输入长度为7的数","的蓄水量就为","的蓄水量就可以用","的计数器通过调用","的话会从队头删除元素，也就是删除1。此时我们可以先把","的话，我们就把","的调用声明了当前线程已经完成了生命周期中最重要的部分，可以切换给其它线程来执行。该方法只是对线程调度器的一个建议，而且也只是建议具有相同优先级的其它线程可以运行。","的距离和","的距离是相同的。","的连续正数序列。输入一个正数","的连续正数序列（至少含有两个数）。例如输入15，由于1","的迭代器是","的适用场景以及解决的问题，描述的并不清楚，甚至是错的。下面是常见的对于","的锁标记变为","的键值对。","的键值对。但是因为无法调用","的键值对，如果存在的话就更新这个键值对的值为","的长度等于两个数组的长度之和，我们用","的队列中拿出最晚的","的需要","的静态方法；","的高度，另一方面可以增加两个","的高级功能，否则优先使用","的，并且不允许定义为","的，而抽象类的成员可以有多种访问权限。","直接使用","相乘可以转换成移位和减法：31*x","相乘相当于向左移一位。","相似，都是通过维护计数器来实现的。线程执行","相同，则count++；如果当前数和","相同，说明curr","相对的实例副本都可被回收。","相比于","相比，callabl","相遇时，相遇节点就是环的入口节点。","相遇时，设","看到这种生成某个集合类的题目首先想到递归。这里我们不能盲目地生成括号组合，如果那样的话还要判断每一个组合是否有效。我们应该只生成有效的组合。我们把'('叫做开括号，把')'叫做闭括号，并在递归函数中分别用","睡眠和挂起是用来描述行为，而阻塞和等待用来描述状态。","矩阵中的路径","矩阵的列数","矩阵的行数","码为","确定桶下标","确定桶下标的最后一步是将","种跳法，n","移动到","移动，虽然在移动的过程中我们的宽度会减小，但是我们可能会得到更大的高度，因此是可取的。","程序在各种平台下都能达到一致的内存访问效果。","穷举所有的子串，分别判断每个子串中是否含有重复字符，记录不含重复字符的最长子串的长度。代码略。","空间中的","空间复杂度：o(1)","空间复杂度：o(1)。","空间复杂度：o(1)（取决于所用的排序算法）","空间复杂度：o(n)","空间复杂度：o(n)。","空间复杂度：o(n^2)","符合这种特点的应用并不少见，大部分使用消费队列的架构模式（如“生产者","第k大的节点","第一个只出现一次的字符","第一次出现的位置和最后一次出现的位置，我们就可以算出","第一次出现的位置还在左边，继续在左边寻找；否则，mid","第一次出现的位置，返回。同理可以找到","第一次出现的位置；同理，我们可以得到","第一次出现的位置；如果前面还有","等价与相等","等价关系","等会抛出","等原子性的类型在多线程环境中不会出现线程安全问题。以下代码演示了","等大数据类型。但同为","等待其它线程显式地唤醒，否则不会被分配","等待可中断","等待获取一个排它锁，如果其线程释放了锁就会结束此状态。","等操作之后执行，当","等数值包装类型，biginteg","等方法中调用。","等方法进入。","等；","管理多个异步任务的执行，而无需程序员显式地管理线程的生命周期。这里的异步是指多个任务的执行互不干扰，不需要进行同步操作。","管程锁定规则","类","类。","类中其他的一些比较重要成员变量：","类中提供了四个构造方法：","类中提供的几个静态方法来创建线程池：","类中有7种静态属性：","类中有几个非常重要的方法：","类也实现了","类似于操作系统中的信号量，可以控制对互斥资源的访问线程数。","类似，但它是线程安全的，这意味着同一时刻多个线程可以同时写入","类似，但它的每个方法都用","类似，但是使用了","类似，唯一的区别就是其中的核心数据如","类可能只要求可执行就行，继承整个","类型变量），在不同的","类型变量，1000","类型的变量执行","类型的变量，并且同时对它们进行读取和修改操作，那么某些线程可能会读取到一个既非原值，也不是其他线程修改值的代表了","类型的对象！","类型的弱引用（也即上文所述它是对","类型的数据转换为","类型的数有4个字节，共32位，因此循环32次，每次用","类型的数组","类型的整数","类型的浮点数","类型的范围是","类型的，而抽象类的字段没有这种限制。","类实现了","类就无法继承其它类，但是可以实现多个接口；","类库中提供了","类开销过大。","类是线程池中最核心的一个类，因此如果要透彻地了解java中的线程池，必须先了解这个类。下面我们来看一下","类来实现线程之间的协调，可以在","类来实现线程本地存储功能。","类的","类的一个字段，即由","类的具体实现源码。","类的实现改用","类的对象都有一个","类的对象，worker","类的静态内部类","类，并提供了四个构造器，事实上，通过观察每个构造器的源码具体实现，发现前面三个构造器都是调用的第四个构造器进行的初始化工作。","累计起来。","约定当root1和root2均为null，root2是root1的子结构，返回tru","级台阶从","级台阶总共有","级台阶的跳法数和跳上","级台阶的跳法数的和，即","级台阶的跳法数等于跳上","级台阶跳1次，1次跳1级得到，也可以从","级的台阶总共有多少种跳法。","线程","线程中断规则","线程中调用了","线程之间的协作","线程会等待","线程先启动，但是因为在","线程只能直接操作工作内存中的变量，不同线程之间的变量值传递需要通过主内存来完成。","线程启动规则","线程基础","线程安全","线程安全。虽然可以用","线程安全指的是：多个线程不管以何种方式访问某个类，并且在主调代码中不需要进行同步，都能表现正确的行为。","线程安全有以下几种实现方式：","线程本地存储","线程池","线程池中的线程初始化","线程池容量的动态调整","线程池的关闭","线程池的状态","线程的","线程的输出。","线程的输出先于","线程结束才继续执行，因此最后能够保证","线程结束时，需要保证它所访问的所有","终于刷完《剑指offer》啦！！！这里整理一下自己的题解。原书中的代码是用c++实现的，由于自己对java更熟悉一些，因此这里我选择用java实现。在刷的过程中，除了参考并用java再现了书上的解法外，对于一些题目我也补充了一些我在其他地方，比如leetcode，《算法竞赛入门经典》等看到的一些比较有意思的解法，比如对于“两个链表的第一个公共节点”这道题，用一个“两次迭代”的解法要比书上的解法更加直观，效率更高，对于“正则表达式匹配”这道题，书上的解法对于一些字符串长度很长的case效果会很差，而选用一种动态规划的方法则会大大提升程序的性能。此外，对于“数组中出现次数超过一半的数字”这道题，在使用书上第一种解法的时候要注意partition函数的选取。如果在partition函数中每次只选取第一个元素作为基准元素，那么在某些数组中的重复数字比较多的case下可能会产生死循环。为了避免产生死循环，我们应该随机地选取基准元素。","经典的内存泄漏甚至是造成自身业务混乱的风险。","经常作为参数，string","经常使用的对象放入","结构发生变化的次数。结构发生变化是指添加或者删除至少一个元素的所有操作，或者是调整内部数组的大小，仅仅只是设置元素的值不算结构发生变化。","结果都为","给定","给定一个","给定一个二叉树和其中的一个节点，找到中序遍历的下一个节点。树中的节点除了有两个分别指向左右子节点的指针以外，还有一个指向父节点的指针。","给定一个包含","给定一个包含'(',","给定一个单链表，删除链表中所有节点值为","给定一个大小为","给定一个字符串","给定一个字符串，其中包含数字2","给定一个排序的数组","给定一个排序的数组，删除数组中的重复元素使得每个元素在数组中只出现一次。要求直接在原数组上修改，不能创建新的数组。函数返回删除后数组的长度。设删除后数组的长度为","给定一个数组和滑动窗口的大小，请找出所有滑动窗口里的最大值。例如如果输入数组","给定一个数组，返回它的最大连续子序列的和，子序列的长度至少为1。例如给定数组","给定一个旋转后的排序数组","给定一个有序的整数数组，找到","给定一个未排序的整数数组，返回数组中缺失的最小的正整数。要求时间复杂度为","给定一棵二叉搜索树，请找出其中第k大的节点，k","给定单向链表的头指针和一个节点指针，定义一个函数在","给线程起个有意义的名字，这样可以方便找","统计数字k在排序数组中出现的次数。例如输入数组","统计数组中每个数字的出现次数","统计数组中每个数字的出现次数，然后遍历","统计每个字符的出现次数，接着再遍历一遍字符串，找到第一个出现次数为1的字符，并返回它的位置。","继承","继承thread类","继承了abstractexecutorservic","继承了类","继承自","继续判断下一个节点即可；当","继续判断下一个节点；否则，我们需要将","维护","维护一个","维护了一个","维护了一个计数器","维护，从而使得每个","缓存池","缓存池的大小默认为","缓存：","编译器会在自动装箱过程调用","缩小同步范围，从而减少锁争用。例如对于","置为1。遍历结束后如果数组中超过一半的数字确实存在，那么","置为1，big","置为2，然后，我们判断当前序列的和是大于还是小于","置为当前数字并将","翻转字符串","翻转整个句子，将结果保存到temp中","而不是","而使用","肯定不为0，即","能保证多个线程修改的原子性。","能够使用的比例，threshold","自反性","自定义比较规则，对于","自旋锁","自旋锁虽然能避免进入阻塞状态从而减少开销，但是它需要进行忙循环操作占用","至多只能增加到","获取到","获取到就把对象放入","获取当前数据流中所有数据的中位数","获取，当从","虚拟机中不会出现。因为在实际开发中，目前各种平台下的商用虚拟机几乎都选择把64位数据的读写操作作为原子操作来对待。)","虚拟机中对象未被锁定","虚拟机对象头的内存布局，这些数据被称为","虽然","虽然刷是刷了一遍，但是自我感觉对于某些题目的理解还是不够深，等以后有时间了再刷一遍吧！^_^","行","行使用","表格中给出。比如在32位的","表示","表示)","表示上、下、左、右4个方向","表示当前线程池的状态，它是一个","表示数值的字符串","表示的数当做0再和","表示的数相加。此外，如果两个链表都已经遍历完了但是","表示相对于","表示窗口。我们用一个","被声明为","被改变，改变","被放在运行时常量池中，它属于永久代","被移到堆中。这是因为永久代的空间有限，在大量使用字符串的场景下会导致","被认为是","被调用的线程执行完毕","装箱","装载因子，tabl","要保证线程安全，并不是一定就要进行同步。如果一个方法本来就不涉及共享数据，那它自然就无须任何同步措施去保证正确性。","要大，访问速度更慢。最好使用","要尽可能大。hashmap","要知道任务提交给线程池之后的处理策略，这里总结一下主要有4点：","覆盖","见代码。","观察后可以发现，如果设某个元素在原排序数组的下标为","规则","解决什么问题","解法比较","计算hash值","计算数组容量","计算键值对所在的桶；","记录","记录slow","记录到","记录字符串中每个字符的下一个字符的位置。","记录字符流中每个字符的出现情况","记录字符流，每次","记录当前字符流中各个字符的出现情况，occurr","记录当前已经生成的字符串","记录第一个只出现一次的字符和它的下标。遍历结束返回","设","设定最大缓存空间","设置","设置clonedhead","设置为","设置为0，将","设置了","设置初始值","设置初始值方法如下","设置复制节点的","设置复制节点的random","设置实例","设计一个函数，用来判断一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。","证明：设","该方案中，map","该方案可满足上文提到的每个线程内一个独立备份的要求。每个新线程访问该","该方案虽然没有锁的问题，但是由于每个线程访问某","该方法为","该方法先获取该线程的","该方法对上述方法的逻辑做了简化。首先判断","语句捕获并进行处理，并且可以从异常中恢复；","请实现一个函数用来判断字符串是否表示数值","请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符","请实现一个函数，将一个字符串中的每个空格替换成","读写分离","读取","读取实例","读取实例方法如下所示","读取实例时，线程首先通过getmap(t)方法获取自身的","调整数组顺序使奇数位于偶数前面","调用","赋值操作，这个操作就是原子性的。但是","赋值给","赋给","赋给occurrence[i]；如果当前字符已经出现过，则我们就不需要考虑这个字符了，约定把","走到链表的末尾两个指针还没有相遇则说明链表中不存在环。现在我们再设置一个指针","走到链表的末尾时","走过的路程为","走过的路程又可以表示为","超过尝试次数，则对每个","转换后的结果为：","轻量级锁","轻量级锁是相对于传统的重量级锁而言，它使用","辅助数组","输入","输入一个复杂链表（每个节点中有节点值以及两个指针，一个指针","输入一个字符串,按字典序打印出该字符串中字符的所有排列。例如输入字符串","输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。假设输入的数组的任意两个数字都互不相同。例如输入数组","输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，并保证奇数和奇数。","输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。","输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。例如输入数组","输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。例如输入如下4","输入一个英文句子，翻转句子中单词的顺序，但单词内字符的顺序不变。为简单起见，标点符号和普通字母一样处理。例如输入字符串","输入一个递增排序的数组和一个数字","输入一个链表的头结点，从尾到头反过来打印出每个节点的值。","输入一个链表，反转链表后，输出新链表的表头。","输入一个链表，输出该链表中倒数第","输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。例如数组","输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。例如对于如下的二叉搜索树：","输入一棵二叉树，求该树的深度。从根结点到叶结点依次经过的结点","输入一棵二叉树，输出它的镜像。例如输入二叉树如下：","输入一颗二叉树的根节点和一个整数，打印出二叉树中所有路径和为","输入两个单调递增的链表，输出两个链表合成后的链表，合成后的链表也要求单调递增。","输入两个整数序列，第一个序列表示栈的入栈顺序，请判断第二个序列是否可能为该栈的出栈顺序。假设压入栈的所有数字均不相等。例如序列1,","输入两个链表，找出它们的第一个公共节点。","输入两棵二叉树","输入数字","输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列","输出结果为：1,","输出：","运算前也应该先判断是否可能发生溢出。可以参考下面这种写法。","返回","返回k在数组中第一次出现的位置","返回num的二进制表示中从右向左第一个1的位置","返回num的二进制表示的第index位是不是1","返回root中的节点总数","返回当前节点的深度。","返回散列值，而","返回的值大于","返回的值小于","返回的值是","返回该二叉树中所有路径和为22的路径，则返回结果应该为：","还可以用作栈、队列和双向队列。","还有很多文章在对比","还规定了先行发生原则，让一个操作无需任何同步控制就能先于另一个操作完成。","这4个子数组，然后将相邻的两个子数组归并成一个数组，同时统计逆序对的数目。比如","这一系列操作整体上看不具备原子性，那么在","这个字符串字面量。在","这个性质和","这个结论，我们可以写出如下代码进一步提高运算效率。","这些单个操作具备原子性，但是","这些同步类简化了编码操作，而用","这样一来，当某个数已经在之前的某一行、某一列或某个","这种代码也叫做纯代码（pure","这种字面量的形式创建字符串，会自动地将字符串放入","这种方式调用，则","这种等待方式，await()","这里对于start和end值的取定不太好想，需要找几个例子算一下","这里并不需要考虑","这里的锁优化主要是指","进1,2,3三个数，由于初始时","进入方法","进制的整数。r","进制的某一位，然后组成一个","进堆中。","进行了很多优化，例如自旋锁等，synchron","进行了详细地介绍，不过在","进行反编译，得到以下内容：","进行同步","进行同步。","进行封装。","进行封装。futuretask","进行归并并统计逆序对的数目。我们首先用一个指针","进行拼接即可。","进行操作，虽然","进行线程赋值，还可能立即创建新的线程来执行任务。","连续子数组的最大和","迭代器。","退出方法","适用于变量在线程间隔离且在方法间共享的场景","适用于如下两种场景","适用于每个线程需要自己独立的实例且该实例需要在多个方法中被使用，也即变量在线程间隔离而在方法或类间共享的场景。后面会通过实例详细阐述该观点。另外，该场景下，并非必须使用","适用场景","逃逸（其它线程通过","逐行逐列逐","递归。","递归。假设当前节点","通过","通过调用一个线程的","通过隐式的在不同线程内创建独立实例副本避免了实例线程安全的问题","遍历","遍历所有链表并用一个","遍历数组，找到第一个当前数字比前一个数字小的数字，该数字就是数组中最小的数字。","遍历矩阵中的每一个数，我们按照我们定义的规则将该数编码为一个字符串放入","那","部分子类，如","都不是。","都不能表示最大的","都包含了一个对","都可以。我们不妨将1,2,3依次插入到","都是一个对","都是接口，collect","都是用","都是空的，因此插入哪个queue","都表示数值，但","都设置为1，也使用的linkedblockingqueue；","采取的是分代缓存：","采用","采用了分段锁（segment），每个分段锁维护着几个桶（hashentry），多个线程可以同时访问不同分段锁上的桶，从而使其并发度更高（并发度就是","采用动态扩容来根据当前的","采用最大堆和最小堆作为数据容器时，插入数据的时间复杂度为","里的方法","里，那么就找到了一个重复的数字，时间复杂度为","重写","重写之前线程不安全的代码之后得到以下线程安全实现：","重复执行上述步骤以求得最后的结果。","重建二叉树","重新计算桶下标","针对该问题，threadlocalmap","链接起来，同时将原节点和复制节点存到","链表中倒数第k个节点","链表中没有环","链表中环的入口节点","链表转红黑树","锁优化","锁消除","锁消除主要是通过逃逸分析来支持，如果堆上的共享数据不可能逃逸出去被其它线程访问到，那么就可以把它们当成私有数据对待，也就可以将它们的锁进行消除。","锁消除是指对于被检测出不可能存在竞争的共享数据的锁进行消除。","锁的实现","锁粗化","锁绑定多个条件","锁阻塞。","错误。","键","键为","键值对插入到该","键值对数量。","键值对，先计算","长度为","问题不会影响程序并发的正确性，如果需要解决","问题，改用传统的互斥同步可能会比原子类更高效。","队列","队列中的元素类型为","防止内存泄漏","阻塞","阻塞和","阻塞和等待的区别在于，阻塞是被动的，它是在等待获取一个排它锁。而等待是主动的，通过调用","限期等待","除了使用原子类之外，也可以使用","除了通过initialvalue()方法设置实例的初始值，还可通过","除非需要使用","随着硬件指令集的发展，我们可以使用基于冲突检测的乐观并发策略：先进行操作，如果没有其它线程争用共享数据，那操作就成功了，否则采取补偿措施（不断地重试，直到成功为止）。这种乐观的并发策略的许多实现都不需要将线程阻塞，因此这种同步操作称为非阻塞同步。","需要使用多重继承。","需要在几个相关的类中共享代码。","需要实现","需要注意的几点是，线程池中每一个工作线程被包装成一个","需要继承非静态和非常量字段。","需要能控制继承来的成员的访问权限，而不是都为","需要让不相关的类都实现一个方法，例如不相关的类都可以实现","需要调用","静态内部类","静态内部类不能访问外部类的非静态的变量和方法。","静态变量","静态变量和静态语句块优先于实例变量和普通语句块，静态变量和静态语句块的初始化顺序取决于它们在代码中的顺序。","静态变量：又称为类变量，也就是说这个变量属于类的，类所有的实例都共享静态变量，可以直接通过类名来访问它。静态变量在内存中只存在一份。","静态导包","静态方法","静态方法只能访问所属类的静态字段和静态方法，并且方法中不能有","静态方法在类加载的时候就存在了，它不依赖于任何实例。所以静态方法必须有实现，也就是说它不能是抽象方法。","静态语句块","静态语句块在类初始化时运行一次。","非受检异常","非常大导致","非阻塞同步","非静态内部类依赖于外部类的实例，而静态内部类不需要。","项（从0开始，第0项为0）。n","顺序。","顺序之后，在每次访问一个节点时，会将这个节点移到链表尾部，保证链表尾部是最近访问的节点，那么链表首部就是最近最久未使用的节点。","顺序；","顺时针打印矩阵","题目","题目大意","首先在","首先我们需要处理一些无效的输入，例如0","首先把","首先摒弃逐一判断","首先注意到头结点也有可能是重复节点，也有可能被删除，因此函数的返回值应该为","首先看到时间复杂度要求为","首先，要清楚","首先，通过initialvalue()方法获取初始值。该方法为","鬼雕のblog","默认为","默认创建的是小顶堆。","默认情况下也是非公平的，但是也可以是公平的。","默认情况下，创建线程池之后，线程池中是没有线程的，需要提交任务之后才会创建线程。","默认的并发级别为","）的实例。","，以及","，其它方式完全可以实现同样的效果，只是","，即当线程池中的线程数大于","，空间复杂度为","，线程将被终止，直至线程池中的线程数目不大于","，要求时间复杂度为","：linkedblockingqueue、arrayblockingqueue（固定长度）","：priorityblockingqueu","：是程序运行时错误，例如除","：需要用","；如果"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"介绍","keywords":"","body":"鬼雕のblog\nbug没改好就不要去睡觉！\n"},"Java/":{"url":"Java/","title":"Java","keywords":"","body":""},"Java/Java基础/":{"url":"Java/Java基础/","title":"Java基础","keywords":"","body":""},"Java/Java基础/数据类型.html":{"url":"Java/Java基础/数据类型.html","title":"数据类型","keywords":"","body":"数据类型\n基本类型\n\nbyte/8位/1字节\nchar/16位/2字节\nshort/16位/2字节\nint/32位/4字节\nfloat/32位/4字节\nlong/64位/8字节\ndouble/64位/8字节\nboolean/~\n\nboolean 只有两个值：true、false，可以使用 1 bit 来存储，但是具体大小没有明确规定。JVM 会在编译时期将 boolean 类型的数据转换为 int，使用 1 来表示 true，0 表示 false。JVM 并不支持 boolean 数组，而是使用 byte 数组来表示 int 数组来表示。\n\nPrimitive Data Types\nThe Java® Virtual Machine Specification\n\n包装类型\n基本类型都有对应的包装类型，基本类型与其对应的包装类型之间的赋值使用自动装箱与拆箱完成。\nInteger x = 2;     // 装箱\nint y = x;         // 拆箱\n\n缓存池\nnew Integer(123) 与 Integer.valueOf(123) 的区别在于：\n\nnew Integer(123) 每次都会新建一个对象；\nInteger.valueOf(123) 会使用缓存池中的对象，多次调用会取得同一个对象的引用。\n\nInteger x = new Integer(123);\nInteger y = new Integer(123);\nSystem.out.println(x == y);    // false\nInteger z = Integer.valueOf(123);\nInteger k = Integer.valueOf(123);\nSystem.out.println(z == k);   // true\n\nvalueOf() 方法的实现比较简单，就是先判断值是否在缓存池中，如果在的话就直接返回缓存池的内容。\npublic static Integer valueOf(int i) {\n    if (i >= IntegerCache.low && i \n在 Java 8 中，Integer 缓存池的大小默认为 -128~127。\nstatic final int low = -128;\nstatic final int high;\nstatic final Integer cache[];\n\nstatic {\n    // high value may be configured by property\n    int h = 127;\n    String integerCacheHighPropValue =\n        sun.misc.VM.getSavedProperty(\"java.lang.Integer.IntegerCache.high\");\n    if (integerCacheHighPropValue != null) {\n        try {\n            int i = parseInt(integerCacheHighPropValue);\n            i = Math.max(i, 127);\n            // Maximum array size is Integer.MAX_VALUE\n            h = Math.min(i, Integer.MAX_VALUE - (-low) -1);\n        } catch( NumberFormatException nfe) {\n            // If the property cannot be parsed into an int, ignore it.\n        }\n    }\n    high = h;\n\n    cache = new Integer[(high - low) + 1];\n    int j = low;\n    for(int k = 0; k = 127;\n}\n\n编译器会在自动装箱过程调用 valueOf() 方法，因此多个 Integer 实例使用自动装箱来创建并且值相同，那么就会引用相同的对象。\nInteger m = 123;\nInteger n = 123;\nSystem.out.println(m == n); // true\n\n基本类型对应的缓冲池如下：\n\nboolean values true and false\nall byte values\nshort values between -128 and 127\nint values between -128 and 127\nchar in the range \\u0000 to \\u007F\n\n在使用这些基本类型对应的包装类型时，就可以直接使用缓冲池中的对象。\nStackOverflow : Differences between new Integer(123), Integer.valueOf(123) and just 123\n"},"Java/Java基础/String.html":{"url":"Java/Java基础/String.html","title":"String","keywords":"","body":"String\n概览\nString 被声明为 final，因此它不可被继承。\n在 Java 8 中，String 内部使用 char 数组存储数据。\npublic final class String\n    implements java.io.Serializable, Comparable, CharSequence {\n    /** The value is used for character storage. */\n    private final char value[];\n}\n\n在 Java 9 之后，String 类的实现改用 byte 数组存储字符串，同时使用 coder 来标识使用了哪种编码。\npublic final class String\n    implements java.io.Serializable, Comparable, CharSequence {\n    /** The value is used for character storage. */\n    private final byte[] value;\n\n    /** The identifier of the encoding used to encode the bytes in {@code value}. */\n    private final byte coder;\n}\n\nvalue 数组被声明为 final，这意味着 value 数组初始化之后就不能再引用其它数组。并且 String 内部没有改变 value 数组的方法，因此可以保证 String 不可变。\n不可变的好处\n1. 可以缓存 hash 值\n因为 String 的 hash 值经常被使用，例如 String 用做 HashMap 的 key。不可变的特性可以使得 hash 值也不可变，因此只需要进行一次计算。\n2. String Pool 的需要\n如果一个 String 对象已经被创建过了，那么就会从 String Pool，即字符串常量池中取得引用。只有 String 是不可变的，才可能使用 String Pool。\n3. 安全性\nString 经常作为参数，String 不可变性可以保证参数不可变。例如在作为网络连接参数的情况下如果 String 是可变的，那么在网络连接过程中，String 被改变，改变 String 对象的那一方以为现在连接的是其它主机，而实际情况却不一定是。\n4. 线程安全\nString 不可变性天生具备线程安全，可以在多个线程中安全地使用。\nProgram Creek : Why String is immutable in Java?\nString, StringBuffer and StringBuilder\n1. 可变性\n\nString 不可变\nStringBuffer 和 StringBuilder 可变\n\n2. 线程安全\n\nString 不可变，因此是线程安全的\nStringBuilder 不是线程安全的\nStringBuffer 是线程安全的，内部使用 synchronized 进行同步\n\nStackOverflow : String, StringBuffer, and StringBuilder\nString Pool\n字符串常量池（String Pool）保存着所有字符串字面量（literal strings），这些字面量在编译时期就确定。不仅如此，还可以使用 String 的 intern() 方法在运行过程中将字符串添加到 String Pool 中。\n当一个字符串调用 intern() 方法时，如果 String Pool 中已经存在一个字符串和该字符串值相等（使用 equals() 方法进行确定），那么就会返回 String Pool 中字符串的引用；否则，就会在 String Pool 中添加一个新的字符串，并返回这个新字符串的引用。\n下面示例中，s1 和 s2 采用 new String() 的方式新建了两个不同字符串，而 s3 和 s4 是通过 s1.intern() 方法取得一个字符串引用。intern() 首先把 s1 引用的字符串放到 String Pool 中，然后返回这个字符串引用。因此 s3 和 s4 引用的是同一个字符串。\nString s1 = new String(\"aaa\");\nString s2 = new String(\"aaa\");\nSystem.out.println(s1 == s2);           // false\nString s3 = s1.intern();\nString s4 = s1.intern();\nSystem.out.println(s3 == s4);           // true\n\n如果是采用 \"bbb\" 这种字面量的形式创建字符串，会自动地将字符串放入 String Pool 中。\nString s5 = \"bbb\";\nString s6 = \"bbb\";\nSystem.out.println(s5 == s6);  // true\n\n在 Java 7 之前，String Pool 被放在运行时常量池中，它属于永久代 (PermGen)。而在 Java 7，String Pool 被移到堆中。这是因为永久代的空间有限，在大量使用字符串的场景下会导致 OutOfMemoryError 错误。\n\nStackOverflow : What is String interning?\n深入解析 String#intern\n\nnew String(\"abc\")\n使用这种方式一共会创建两个字符串对象（前提是 String Pool 中还没有 \"abc\" 字符串对象）。\n\n\"abc\" 属于字符串字面量，因此编译时期会在 String Pool 中创建一个字符串对象，指向这个 \"abc\" 字符串字面量；\n而使用 new 的方式会在堆中创建一个字符串对象。\n\n创建一个测试类，其 main 方法中使用这种方式来创建字符串对象。\npublic class NewStringTest {\n    public static void main(String[] args) {\n        String s = new String(\"abc\");\n    }\n}\n\n使用 javap -verbose 进行反编译，得到以下内容：\n// ...\nConstant pool:\n// ...\n   #2 = Class              #18            // java/lang/String\n   #3 = String             #19            // abc\n// ...\n  #18 = Utf8               java/lang/String\n  #19 = Utf8               abc\n// ...\n\n  public static void main(java.lang.String[]);\n    descriptor: ([Ljava/lang/String;)V\n    flags: ACC_PUBLIC, ACC_STATIC\n    Code:\n      stack=3, locals=2, args_size=1\n         0: new           #2                  // class java/lang/String\n         3: dup\n         4: ldc           #3                  // String abc\n         6: invokespecial #4                  // Method java/lang/String.\"\":(Ljava/lang/String;)V\n         9: astore_1\n// ...\n\n在 Constant Pool 中，#19 存储字符串字面量 \"abc\"，#3 是 String Pool 的字符串对象，它指向 #19 这个字符串字面量。在 main 方法中，0: 行使用 new #2 在堆中创建一个字符串对象，并且使用 ldc #3 将 String Pool 中的字符串对象作为 String 构造函数的参数。\n以下是 String 构造函数的源码，可以看到，在将一个字符串对象作为另一个字符串对象的构造函数参数时，并不会完全复制 value 数组内容，而是都会指向同一个 value 数组。\npublic String(String original) {\n    this.value = original.value;\n    this.hash = original.hash;\n}\n\n"},"Java/Java基础/参数传递.html":{"url":"Java/Java基础/参数传递.html","title":"参数传递","keywords":"","body":"参数传递\nJava 的参数是以值传递的形式传入方法中，而不是引用传递。\n以下代码中 Dog dog 的 dog 是一个指针，存储的是对象的地址。在将一个参数传入一个方法时，本质上是将对象的地址以值的方式传递到形参中。因此在方法中使指针引用其它对象，那么这两个指针此时指向的是完全不同的对象，在一方改变其所指向对象的内容时对另一方没有影响。\npublic class Dog {\n\n    String name;\n\n    Dog(String name) {\n        this.name = name;\n    }\n\n    String getName() {\n        return this.name;\n    }\n\n    void setName(String name) {\n        this.name = name;\n    }\n\n    String getObjectAddress() {\n        return super.toString();\n    }\n}Copy to clipboardErrorCopied\npublic class PassByValueExample {\n    public static void main(String[] args) {\n        Dog dog = new Dog(\"A\");\n        System.out.println(dog.getObjectAddress()); // Dog@4554617c\n        func(dog);\n        System.out.println(dog.getObjectAddress()); // Dog@4554617c\n        System.out.println(dog.getName());          // A\n    }\n\n    private static void func(Dog dog) {\n        System.out.println(dog.getObjectAddress()); // Dog@4554617c\n        dog = new Dog(\"B\");\n        System.out.println(dog.getObjectAddress()); // Dog@74a14482\n        System.out.println(dog.getName());          // B\n    }\n}\n\n如果在方法中改变对象的字段值会改变原对象该字段值，因为改变的是同一个地址指向的内容。\nclass PassByValueExample {\n    public static void main(String[] args) {\n        Dog dog = new Dog(\"A\");\n        func(dog);\n        System.out.println(dog.getName());          // B\n    }\n\n    private static void func(Dog dog) {\n        dog.setName(\"B\");\n    }\n}\n\nStackOverflow: Is Java “pass-by-reference” or “pass-by-value”?\n"},"Java/Java基础/抽象类和接口.html":{"url":"Java/Java基础/抽象类和接口.html","title":"抽象类和接口","keywords":"","body":"抽象类与接口\n1. 抽象类\n抽象类和抽象方法都使用 abstract 关键字进行声明。抽象类一般会包含抽象方法，抽象方法一定位于抽象类中。\n抽象类和普通类最大的区别是，抽象类不能被实例化，需要继承抽象类才能实例化其子类。\npublic abstract class AbstractClassExample {\n\n    protected int x;\n    private int y;\n\n    public abstract void func1();\n\n    public void func2() {\n        System.out.println(\"func2\");\n    }\n}\n\npublic class AbstractExtendClassExample extends AbstractClassExample {\n    @Override\n    public void func1() {\n        System.out.println(\"func1\");\n    }\n}\n\n// AbstractClassExample ac1 = new AbstractClassExample(); // 'AbstractClassExample' is abstract; cannot be instantiated\nAbstractClassExample ac2 = new AbstractExtendClassExample();\nac2.func1();\n\n2. 接口\n接口是抽象类的延伸，在 Java 8 之前，它可以看成是一个完全抽象的类，也就是说它不能有任何的方法实现。\n从 Java 8 开始，接口也可以拥有默认的方法实现，这是因为不支持默认方法的接口的维护成本太高了。在 Java 8 之前，如果一个接口想要添加新的方法，那么要修改所有实现了该接口的类。\n接口的成员（字段 + 方法）默认都是 public 的，并且不允许定义为 private 或者 protected。\n接口的字段默认都是 static 和 final 的。\npublic interface InterfaceExample {\n\n    void func1();\n\n    default void func2(){\n        System.out.println(\"func2\");\n    }\n\n    int x = 123;\n    // int y;               // Variable 'y' might not have been initialized\n    public int z = 0;       // Modifier 'public' is redundant for interface fields\n    // private int k = 0;   // Modifier 'private' not allowed here\n    // protected int l = 0; // Modifier 'protected' not allowed here\n    // private void fun3(); // Modifier 'private' not allowed here\n}\n\npublic class InterfaceImplementExample implements InterfaceExample {\n    @Override\n    public void func1() {\n        System.out.println(\"func1\");\n    }\n}\n\n// InterfaceExample ie1 = new InterfaceExample(); // 'InterfaceExample' is abstract; cannot be instantiated\nInterfaceExample ie2 = new InterfaceImplementExample();\nie2.func1();\nSystem.out.println(InterfaceExample.x);\n\n3. 比较\n\n从设计层面上看，抽象类提供了一种 IS-A 关系，那么就必须满足里式替换原则 (如果子类的方法重写了父类的方法，那么子类中该方法的访问级别不允许低于父类的访问级别，这也是满足里式替换原则以确保可以使用父类实例的地方都可以使用子类实例)，即子类对象必须能够替换掉所有父类对象。而接口更像是一种 LIKE-A 关系，它只是提供一种方法实现契约，并不要求接口和实现接口的类具有 IS-A 关系。\n从使用上来看，一个类可以实现多个接口，但是不能继承多个抽象类。\n接口的字段只能是 static 和 final 类型的，而抽象类的字段没有这种限制。\n接口的成员只能是 public 的，而抽象类的成员可以有多种访问权限。\n\n4. 使用选择\n使用接口：\n\n需要让不相关的类都实现一个方法，例如不相关的类都可以实现 Compareable 接口中的 compareTo() 方法；\n需要使用多重继承。\n\n使用抽象类：\n\n需要在几个相关的类中共享代码。\n需要能控制继承来的成员的访问权限，而不是都为 public。\n需要继承非静态和非常量字段。\n\n在很多情况下，接口优先于抽象类。因为接口没有抽象类严格的类层次结构要求，可以灵活地为一个类添加行为。并且从 Java 8 开始，接口也可以有默认的方法实现，使得修改接口的成本也变的很低。\n\n深入理解 abstract class 和 interface\nWhen to Use Abstract Class and Interface\n\n"},"Java/Java基础/Object类中的方法.html":{"url":"Java/Java基础/Object类中的方法.html","title":"Object类中的方法","keywords":"","body":"Object类中的方法\n概览\npublic native int hashCode()\n\npublic boolean equals(Object obj)\n\nprotected native Object clone() throws CloneNotSupportedException\n\npublic String toString()\n\npublic final native Class getClass()\n\nprotected void finalize() throws Throwable {}\n\npublic final native void notify()\n\npublic final native void notifyAll()\n\npublic final native void wait(long timeout) throws InterruptedException\n\npublic final void wait(long timeout, int nanos) throws InterruptedException\n\npublic final void wait() throws InterruptedException\n\nequals()\n1. 等价关系\nⅠ 自反性\nx.equals(x); // true\n\nⅡ 对称性\nx.equals(y) == y.equals(x); // true\n\nⅢ 传递性\nif (x.equals(y) && y.equals(z))\n    x.equals(z); // true\n\nⅣ 一致性\n多次调用 equals() 方法结果不变\nx.equals(y) == x.equals(y); // true\n\nⅤ 与 null 的比较\n对任何不是 null 的对象 x 调用 x.equals(null) 结果都为 false\nx.equals(null); // false\n\n2. 等价与相等\n\n对于基本类型，== 判断两个值是否相等，基本类型没有 equals() 方法。\n对于引用类型，== 判断两个变量是否引用同一个对象，而 equals() 判断引用的对象是否等价。\n\nInteger x = new Integer(1);\nInteger y = new Integer(1);\nSystem.out.println(x.equals(y)); // true\nSystem.out.println(x == y);      // false\n\n3. 实现\n\n检查是否为同一个对象的引用，如果是直接返回 true；\n检查是否是同一个类型，如果不是，直接返回 false；\n将 Object 对象进行转型；\n判断每个关键域是否相等。\n\npublic class EqualExample {\n\n    private int x;\n    private int y;\n    private int z;\n\n    public EqualExample(int x, int y, int z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n\n        EqualExample that = (EqualExample) o;\n\n        if (x != that.x) return false;\n        if (y != that.y) return false;\n        return z == that.z;\n    }\n}\n\nhashCode()\nhashCode() 返回散列值，而 equals() 是用来判断两个对象是否等价。等价的两个对象散列值一定相同，但是散列值相同的两个对象不一定等价。\n在覆盖 equals() 方法时应当总是覆盖 hashCode() 方法，保证等价的两个对象散列值也相等。\n下面的代码中，新建了两个等价的对象，并将它们添加到 HashSet 中。我们希望将这两个对象当成一样的，只在集合中添加一个对象，但是因为 EqualExample 没有实现 hasCode() 方法，因此这两个对象的散列值是不同的，最终导致集合添加了两个等价的对象。\nEqualExample e1 = new EqualExample(1, 1, 1);\nEqualExample e2 = new EqualExample(1, 1, 1);\nSystem.out.println(e1.equals(e2)); // true\nHashSet set = new HashSet<>();\nset.add(e1);\nset.add(e2);\nSystem.out.println(set.size());   // 2\n\n理想的散列函数应当具有均匀性，即不相等的对象应当均匀分布到所有可能的散列值上。这就要求了散列函数要把所有域的值都考虑进来。可以将每个域都当成 R 进制的某一位，然后组成一个 R 进制的整数。R 一般取 31，因为它是一个奇素数，如果是偶数的话，当出现乘法溢出，信息就会丢失，因为与 2 相乘相当于向左移一位。\n一个数与 31 相乘可以转换成移位和减法：31*x == (x，编译器会自动进行这个优化。\n下面是对 EqualExample 中hashCode() 方法的重写，R取31，R进制整数的第一位取17，因此该R进制整数可以看作| 17 | x | y | z |，| |括起来的部分表示R进制整数中的一位。\n@Override\npublic int hashCode() {\n    int result = 17;\n    result = 31 * result + x;\n    result = 31 * result + y;\n    result = 31 * result + z;\n    return result;\n}\n\nclone()\n1. cloneable\nclone() 是 Object 的 protected 方法，它不是 public，一个类不显式去重写 clone()，其它类就不能直接去调用该类实例的 clone() 方法。\npublic class CloneExample {\n    private int a;\n    private int b;\n}\n\nCloneExample e1 = new CloneExample();\n// CloneExample e2 = e1.clone(); // 'clone()' has protected access in 'java.lang.Object'\n\n重写 clone() 得到以下实现：\npublic class CloneExample {\n    private int a;\n    private int b;\n\n    @Override\n    public CloneExample clone() throws CloneNotSupportedException {\n        return (CloneExample)super.clone();\n    }\n}\n\nCloneExample e1 = new CloneExample();\ntry {\n    CloneExample e2 = e1.clone();\n} catch (CloneNotSupportedException e) {\n    e.printStackTrace();\n}\n\njava.lang.CloneNotSupportedException: CloneExample\n\n以上抛出了 CloneNotSupportedException，这是因为 CloneExample 没有实现 Cloneable 接口。\n应该注意的是，clone() 方法并不是 Cloneable 接口的方法，而是 Object 的一个 protected 方法。Cloneable 接口只是规定，如果一个类没有实现 Cloneable 接口又调用了 clone() 方法，就会抛出 CloneNotSupportedException。\npublic class CloneExample implements Cloneable {\n    private int a;\n    private int b;\n\n    @Override\n    public Object clone() throws CloneNotSupportedException {\n        return super.clone();\n    }\n}\n\n2. 浅拷贝\n拷贝对象和原始对象的引用类型引用同一个对象。\npublic class ShallowCloneExample implements Cloneable {\n\n    private int[] arr;\n\n    public ShallowCloneExample() {\n        arr = new int[10];\n        for (int i = 0; i \nShallowCloneExample e1 = new ShallowCloneExample();\nShallowCloneExample e2 = null;\ntry {\n    e2 = e1.clone();\n} catch (CloneNotSupportedException e) {\n    e.printStackTrace();\n}\ne1.set(2, 222);\nSystem.out.println(e2.get(2)); // 222\n\n3. 深拷贝\n拷贝对象和原始对象的引用类型引用不同对象。\npublic class DeepCloneExample implements Cloneable {\n\n    private int[] arr;\n\n    public DeepCloneExample() {\n        arr = new int[10];\n        for (int i = 0; i \nDeepCloneExample e1 = new DeepCloneExample();\nDeepCloneExample e2 = null;\ntry {\n    e2 = e1.clone();\n} catch (CloneNotSupportedException e) {\n    e.printStackTrace();\n}\ne1.set(2, 222);\nSystem.out.println(e2.get(2)); // 2\n\n4. clone() 的替代方案\n使用 clone() 方法来拷贝一个对象即复杂又有风险，它会抛出异常，并且还需要类型转换。Effective Java 书上讲到，最好不要去使用 clone()，可以使用拷贝构造函数或者拷贝工厂来拷贝一个对象。\npublic class CloneConstructorExample {\n\n    private int[] arr;\n\n    public CloneConstructorExample() {\n        arr = new int[10];\n        for (int i = 0; i \nCloneConstructorExample e1 = new CloneConstructorExample();\nCloneConstructorExample e2 = new CloneConstructorExample(e1);\ne1.set(2, 222);\nSystem.out.println(e2.get(2)); // 2\n\n"},"Java/Java基础/final和static.html":{"url":"Java/Java基础/final和static.html","title":"final和static","keywords":"","body":"final和static\nfinal\n1. 数据\n声明数据为常量，可以是编译时常量，也可以是在运行时被初始化后不能被改变的常量。\n\n对于基本类型，final 使数值不变；\n对于引用类型，final 使引用不变，也就不能引用其它对象，但是被引用的对象本身是可以修改的。\n\n2. 方法\n声明方法不能被子类重写。\nprivate 方法隐式地被指定为 final，如果在子类中定义的方法和基类中的一个 private 方法签名相同，此时子类的方法不是重写基类方法，而是在子类中定义了一个新的方法。\n3. 类\n声明类不允许被继承。\nstatic\n1. 静态变量\n\n静态变量：又称为类变量，也就是说这个变量属于类的，类所有的实例都共享静态变量，可以直接通过类名来访问它。静态变量在内存中只存在一份。\n实例变量：每创建一个实例就会产生一个实例变量，它与该实例同生共死。\n\npublic class A {\n\n    private int x;         // 实例变量\n    private static int y;  // 静态变量\n\n    public static void main(String[] args) {\n        // int x = A.x;  // Non-static field 'x' cannot be referenced from a static context\n        A a = new A();\n        int x = a.x;\n        int y = A.y;\n    }\n}\n\n2. 静态方法\n静态方法在类加载的时候就存在了，它不依赖于任何实例。所以静态方法必须有实现，也就是说它不能是抽象方法。\npublic abstract class A {\n    public static void func1(){\n    }\n    // public abstract static void func2();  // Illegal combination of modifiers: 'abstract' and 'static'\n}\n\n静态方法只能访问所属类的静态字段和静态方法，并且方法中不能有 this 和 super 关键字。\npublic class A {\n\n    private static int x;\n    private int y;\n\n    public static void func1(){\n        int a = x;\n        // int b = y;  // Non-static field 'y' cannot be referenced from a static context\n        // int b = this.y;     // 'A.this' cannot be referenced from a static context\n    }\n}\n\n3. 静态语句块\n静态语句块在类初始化时运行一次。\npublic class A {\n    static {\n        System.out.println(\"123\");\n    }\n\n    public static void main(String[] args) {\n        A a1 = new A();\n        A a2 = new A();\n    }\n}\n\n123\n\n4. 静态内部类\n非静态内部类依赖于外部类的实例，而静态内部类不需要。\npublic class OuterClass {\n\n    class InnerClass {\n    }\n\n    static class StaticInnerClass {\n    }\n\n    public static void main(String[] args) {\n        // InnerClass innerClass = new InnerClass(); // 'OuterClass.this' cannot be referenced from a static context\n        OuterClass outerClass = new OuterClass();\n        InnerClass innerClass = outerClass.new InnerClass();\n        StaticInnerClass staticInnerClass = new StaticInnerClass();\n    }\n}\n\n静态内部类不能访问外部类的非静态的变量和方法。\n5. 静态导包\n在使用静态变量和方法时不用再指明 ClassName，从而简化代码，但会大大降低可读性。\nimport static com.xxx.ClassName.*\n\n6. 初始化顺序\n静态变量和静态语句块优先于实例变量和普通语句块，静态变量和静态语句块的初始化顺序取决于它们在代码中的顺序。\npublic static String staticField = \"静态变量\";\n\nstatic {\n    System.out.println(\"静态语句块\");\n}\n\npublic String field = \"实例变量\";\n\n{\n    System.out.println(\"普通语句块\");\n}\n\n最后才是构造函数的初始化。\npublic InitialOrderTest() {\n    System.out.println(\"构造函数\");\n}\n\n存在继承的情况下，初始化顺序为：\n\n父类（静态变量、静态语句块）\n子类（静态变量、静态语句块）\n父类（实例变量、普通语句块）\n父类（构造函数）\n子类（实例变量、普通语句块）\n子类（构造函数）\n\n"},"Java/Java基础/异常.html":{"url":"Java/Java基础/异常.html","title":"异常","keywords":"","body":"异常\n什么是Java异常\n异常是发生在程序执行过程中阻碍程序正常执行的错误事件。比如：用户输入错误数据、硬件故障、网络阻塞等都会导致出现异常。 只要在Java语句执行中产生了异常，一个异常对象就会被创建，JRE就会试图寻找异常处理程序来处理异常。如果有合适的异常处理程序，异常对象就会被异常处理程序接管，否则，将引发运行环境异常，JRE终止程序执行。 Java异常处理框架只能处理运行时错误，编译错误不在其考虑范围之内。\nJava异常的层级结构\nThrowable 可以用来表示任何可以作为异常抛出的类，分为两种： Error 和 Exception。其中 Error 用来表示 JVM 无法处理的错误，而Exception 分为两种：\n\n受检异常 ：需要用 try...catch... 语句捕获并进行处理，并且可以从异常中恢复；\n非受检异常 ：是程序运行时错误，例如除 0 会引发 Arithmetic Exception，此时程序崩溃并且无法恢复。\n\n\n\nJava 入门之异常处理\n\n"},"Java/Java容器/":{"url":"Java/Java容器/","title":"Java容器","keywords":"","body":"概览\n容器主要包括 Collection 和 Map 两种，Collection 和 Map 都是接口，Collection 存储着对象的集合，而 Map 存储着键值对（两个对象）的映射表。\nCollection\n\n1. Set\n\nTreeSet：基于红黑树实现，支持有序性操作，例如根据一个范围查找元素的操作。但是查找效率不如 HashSet，HashSet 查找的时间复杂度为 O(1)，TreeSet 则为 O(logN)。\nHashSet：基于哈希表实现，支持快速查找，但不支持有序性操作。并且失去了元素的插入顺序信息，也就是说使用 Iterator 遍历 HashSet 得到的结果是不确定的。\nLinkedHashSet：具有 HashSet 的查找效率，且内部使用双向链表维护元素的插入顺序。\n\n2. List\n\nArrayList：基于动态数组实现，支持随机访问。\nVector：和 ArrayList 类似，但它的每个方法都用 synchronized 关键字修饰，因此是线程安全的。\nLinkedList：基于双向链表实现，只能顺序访问，但是可以快速地在链表中间插入和删除元素。不仅如此，LinkedList 还可以用作栈、队列和双向队列。\n\n3. Queue\n\nLinkedList：可以用它来实现队列或双向队列。\nPriorityQueue：基于堆结构实现，可以用它来实现优先队列。\n\nMap\n\n\nTreeMap：基于红黑树实现。\nHashMap：基于哈希表实现。\nHashTable：和 HashMap 类似，但它是线程安全的，这意味着同一时刻多个线程可以同时写入 HashTable 并且不会导致数据不一致。它是遗留类，不应该去使用它。现在可以使用 ConcurrentHashMap 来支持线程安全，并且 ConcurrentHashMap 的效率会更高，因为 ConcurrentHashMap 引入了分段锁。\nLinkedHashMap：使用双向链表来维护元素的顺序，顺序为插入顺序或者最近最少使用（LRU）顺序。\n\n"},"Java/Java容器/ArrayList.html":{"url":"Java/Java容器/ArrayList.html","title":"ArrayList","keywords":"","body":"ArrayList\n1. 概览\n\n实现了 RandomAccess 接口，因此支持随机访问。\n数组的默认大小为 10。\n\n2. 扩容\n添加元素时使用 ensureCapacityInternal() 方法来保证容量足够，如果不够时，需要使用 grow() 方法进行扩容，新容量的大小为 oldCapacity + (oldCapacity >> 1)，也就是旧容量的 1.5 倍。\n扩容操作需要调用 Arrays.copyOf() 把原数组整个复制到新数组中，这个操作代价很高，因此最好在创建 ArrayList 对象时就指定大概的容量大小，减少扩容操作的次数。\npublic boolean add(E e) {\n    ensureCapacityInternal(size + 1);  // Increments modCount!!\n    elementData[size++] = e;\n    return true;\n}\n\nprivate void ensureCapacityInternal(int minCapacity) {\n    if (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) {\n        minCapacity = Math.max(DEFAULT_CAPACITY, minCapacity);\n    }\n    ensureExplicitCapacity(minCapacity);\n}\n\nprivate void ensureExplicitCapacity(int minCapacity) {\n    modCount++;\n    // overflow-conscious code\n    if (minCapacity - elementData.length > 0)\n        grow(minCapacity);\n}\n\nprivate void grow(int minCapacity) {\n    // overflow-conscious code\n    int oldCapacity = elementData.length;\n    int newCapacity = oldCapacity + (oldCapacity >> 1);\n    if (newCapacity - minCapacity  0)\n        newCapacity = hugeCapacity(minCapacity);\n    // minCapacity is usually close to size, so this is a win:\n    elementData = Arrays.copyOf(elementData, newCapacity);\n}\n\n3. 删除元素\n需要调用 System.arraycopy() 将 index+1 后面的元素都复制到 index 位置上，该操作的时间复杂度为 O(N)，可以看出 ArrayList 删除元素的代价是非常高的。\npublic E remove(int index) {\n    rangeCheck(index);\n    modCount++;\n    E oldValue = elementData(index);\n    int numMoved = size - index - 1;\n    if (numMoved > 0)\n        System.arraycopy(elementData, index+1, elementData, index, numMoved);\n    elementData[--size] = null; // clear to let GC do its work\n    return oldValue;\n}\n\n4. Fail-Fast\nmodCount 用来记录 ArrayList 结构发生变化的次数。结构发生变化是指添加或者删除至少一个元素的所有操作，或者是调整内部数组的大小，仅仅只是设置元素的值不算结构发生变化。\n在进行序列化或者迭代等操作时，需要比较操作前后 modCount 是否改变，如果改变了需要抛出 ConcurrentModificationException。\nprivate void writeObject(java.io.ObjectOutputStream s)\n    throws java.io.IOException{\n    // Write out element count, and any hidden stuff\n    int expectedModCount = modCount;\n    s.defaultWriteObject();\n\n    // Write out size as capacity for behavioural compatibility with clone()\n    s.writeInt(size);\n\n    // Write out all elements in the proper order.\n    for (int i=0; i\n"},"Java/Java容器/ConcurrentHashMap.html":{"url":"Java/Java容器/ConcurrentHashMap.html","title":"ConcurrentHashMap","keywords":"","body":"ConcurrentHashMap\n1. 存储结构\nHashEntry 的结构 和 HashMap 中的 Entry 类似，唯一的区别就是其中的核心数据如 value ，以及 next 都是用 volatile 修饰的，保证了获取时的可见性。\nstatic final class HashEntry {\n    final int hash;\n    final K key;\n    volatile V value;\n    volatile HashEntry next;\n}\n\nConcurrentHashMap 和 HashMap 实现上类似，最主要的差别是 ConcurrentHashMap 采用了分段锁（Segment），每个分段锁维护着几个桶（HashEntry），多个线程可以同时访问不同分段锁上的桶，从而使其并发度更高（并发度就是 Segment 的个数）。\nSegment 继承自 ReentrantLock。\nstatic final class Segment extends ReentrantLock implements Serializable {\n\n    private static final long serialVersionUID = 2249069246763182397L;\n\n    static final int MAX_SCAN_RETRIES =\n        Runtime.getRuntime().availableProcessors() > 1 ? 64 : 1;\n\n    transient volatile HashEntry[] table;\n\n    transient int count;\n\n    transient int modCount;\n\n    transient int threshold;\n\n    final float loadFactor;\n}\n\nfinal Segment[] segments;\n\n默认的并发级别为 16，也就是说默认创建 16 个 Segment。\n\n2. size操作\n每个 Segment 维护了一个 count 变量来统计该 Segment 中的键值对个数。\n/**\n * The number of elements. Accessed only either within locks\n * or among other volatile reads that maintain visibility.\n */\ntransient int count;\n\n在执行 size 操作时，需要遍历所有 Segment 然后把 count 累计起来。\nConcurrentHashMap 在执行 size 操作时先尝试不加锁，如果连续两次不加锁操作得到的结果一致，那么可以认为这个结果是正确的。\n尝试次数使用 RETRIES_BEFORE_LOCK 定义，该值为 2，retries 初始值为 -1，因此尝试次数为 3。\n如果尝试的次数超过 3 次，就需要对每个 Segment 加锁。\n/**\n * Number of unsynchronized retries in size and containsValue\n * methods before resorting to locking. This is used to avoid\n * unbounded retries if tables undergo continuous modification\n * which would make it impossible to obtain an accurate result.\n */\nstatic final int RETRIES_BEFORE_LOCK = 2;\n\npublic int size() {\n    // Try a few times to get accurate count. On failure due to\n    // continuous async changes in table, resort to locking.\n    final Segment[] segments = this.segments;\n    int size;\n    boolean overflow; // true if size overflows 32 bits\n    long sum;         // sum of modCounts\n    long last = 0L;   // previous sum\n    int retries = -1; // first iteration isn't retry\n    try {\n        for (;;) {\n            // 超过尝试次数，则对每个 Segment 加锁\n            if (retries++ == RETRIES_BEFORE_LOCK) {\n                for (int j = 0; j  seg = segmentAt(segments, j);\n                if (seg != null) {\n                    sum += seg.modCount;\n                    int c = seg.count;\n                    if (c  RETRIES_BEFORE_LOCK) {\n            for (int j = 0; j \n3. JDK 1.8 的改动\nJDK 1.7 使用分段锁机制来实现并发更新操作，核心类为 Segment，它继承自重入锁 ReentrantLock，并发度与 Segment 数量相等。\nJDK 1.8 使用了 CAS 操作来支持更高的并发度，在 CAS 操作失败时使用内置锁 synchronized，JDK 1.7 使用分段锁机制来实现并发更新操作，核心类为 Segment，它继承自重入锁 ReentrantLock，并发度与 Segment 数量相等。\nJDK 1.8 使用了 CAS 操作来支持更高的并发度，在 CAS 操作失败时使用内置锁 synchronized，而且1.8 对synchronized 也作了很多优化。\nJDK 1.8 的实现也在链表过长时会转换为红黑树。\n"},"Java/Java容器/CopyOnWriteArrayList.html":{"url":"Java/Java容器/CopyOnWriteArrayList.html","title":"CopyOnWriteArrayList","keywords":"","body":"CopyOnWriteArrayList\n1. 读写分离\n\n写操作在一个复制的数组上进行，读操作还是在原始数组中进行，读写分离，互不影响。\n写操作需要加锁，防止并发写入时导致写入数据丢失。\n写操作结束之后需要把原始数组指向新的复制数组。\n\npublic boolean add(E e) {\n    final ReentrantLock lock = this.lock;\n    lock.lock();\n    try {\n        Object[] elements = getArray();\n        int len = elements.length;\n        Object[] newElements = Arrays.copyOf(elements, len + 1);\n        newElements[len] = e;\n        setArray(newElements);\n        return true;\n    } finally {\n        lock.unlock();\n    }\n}\n\nfinal void setArray(Object[] a) {\n    array = a;\n}\n\n@SuppressWarnings(\"unchecked\")\nprivate E get(Object[] a, int index) {\n    return (E) a[index];\n}\n\n2. 适用场景\nCopyOnWriteArrayList 在写操作的同时允许读操作，大大提高了读操作的性能，因此很适合读多写少的应用场景。\n但是 CopyOnWriteArrayList 有其缺陷：\n\n内存占用：在写操作时需要复制一个新的数组，使得内存占用为原来的两倍左右；\n数据不一致：读操作不能读取实时性的数据，因为部分写操作的数据还未同步到读数组中。\n\n所以 CopyOnWriteArrayList 不适合内存敏感以及对实时性要求很高的场景。\n"},"Java/Java容器/HashMap.html":{"url":"Java/Java容器/HashMap.html","title":"HashMap","keywords":"","body":"HashMap\n为了便于理解，以下源码分析以 JDK 1.7 为主。\n1. 存储结构\n内部包含了一个 Entry 类型的数组 table。\ntransient Entry[] table;\n\nEntry 存储着键值对。它包含了四个字段，从 next 字段我们可以看出 Entry 是一个链表。即数组中的每个位置被当成一个桶，一个桶存放一个链表。HashMap 使用拉链法来解决冲突，同一个链表中存放哈希值相同的 Entry。\n\nstatic class Entry implements Map.Entry {\n    final K key;\n    V value;\n    Entry next;\n    int hash;\n\n    Entry(int h, K k, V v, Entry n) {\n        value = v;\n        next = n;\n        key = k;\n        hash = h;\n    }\n\n    public final K getKey() {\n        return key;\n    }\n\n    public final V getValue() {\n        return value;\n    }\n\n    public final V setValue(V newValue) {\n        V oldValue = value;\n        value = newValue;\n        return oldValue;\n    }\n\n    public final boolean equals(Object o) {\n        if (!(o instanceof Map.Entry))\n            return false;\n        Map.Entry e = (Map.Entry)o;\n        Object k1 = getKey();\n        Object k2 = e.getKey();\n        if (k1 == k2 || (k1 != null && k1.equals(k2))) {\n            Object v1 = getValue();\n            Object v2 = e.getValue();\n            if (v1 == v2 || (v1 != null && v1.equals(v2)))\n                return true;\n        }\n        return false;\n    }\n\n    public final int hashCode() {\n        return Objects.hashCode(getKey()) ^ Objects.hashCode(getValue());\n    }\n\n    public final String toString() {\n        return getKey() + \"=\" + getValue();\n    }\n}\n\n2. 拉链法的工作原理\nHashMap map = new HashMap<>();\nmap.put(\"K1\", \"V1\");\nmap.put(\"K2\", \"V2\");\nmap.put(\"K3\", \"V3\");\n\n\n新建一个 HashMap，默认大小为 16；\n插入  键值对，先计算 K1 的 hashCode 为 115，使用除留余数法得到所在的桶下标 115%16=3。\n插入  键值对，先计算 K2 的 hashCode 为 118，使用除留余数法得到所在的桶下标 118%16=6。\n插入  键值对，先计算 K3 的 hashCode 为 118，使用除留余数法得到所在的桶下标 118%16=6，插在  前面。\n\n应该注意到链表的插入是以头插法方式进行的，例如上面的  不是插在  后面，而是插入在链表头部。\n查找需要分成两步进行：\n\n计算键值对所在的桶；\n在链表上顺序查找，时间复杂度显然和链表的长度成正比。\n\n\n3. put操作\npublic V put(K key, V value) {\n    if (table == EMPTY_TABLE) {\n        inflateTable(threshold);\n    }\n    // 键为 null 单独处理\n    if (key == null)\n        return putForNullKey(value);\n    int hash = hash(key);\n    // 确定桶下标\n    int i = indexFor(hash, table.length);\n    // 先找出是否已经存在键为 key 的键值对，如果存在的话就更新这个键值对的值为 value\n    for (Entry e = table[i]; e != null; e = e.next) {\n        Object k;\n        if (e.hash == hash && ((k = e.key) == key || key.equals(k))) {\n            V oldValue = e.value;\n            e.value = value;\n            e.recordAccess(this);\n            return oldValue;\n        }\n    }\n\n    modCount++;\n    // 插入新键值对\n    addEntry(hash, key, value, i);\n    return null;\n}\n\nHashMap 允许插入键为 null 的键值对。但是因为无法调用 null 的 hashCode() 方法，也就无法确定该键值对的桶下标，只能通过强制指定一个桶下标来存放。HashMap 使用第 0 个桶存放键为 null 的键值对。\nprivate V putForNullKey(V value) {\n    for (Entry e = table[0]; e != null; e = e.next) {\n        if (e.key == null) {\n            V oldValue = e.value;\n            e.value = value;\n            e.recordAccess(this);\n            return oldValue;\n        }\n    }\n    modCount++;\n    addEntry(0, null, value, 0);\n    return null;\n}\n\n使用链表的头插法，也就是新的键值对插在链表的头部，而不是链表的尾部。\nvoid addEntry(int hash, K key, V value, int bucketIndex) {\n    if ((size >= threshold) && (null != table[bucketIndex])) {\n        resize(2 * table.length);\n        hash = (null != key) ? hash(key) : 0;\n        bucketIndex = indexFor(hash, table.length);\n    }\n\n    createEntry(hash, key, value, bucketIndex);\n}\n\nvoid createEntry(int hash, K key, V value, int bucketIndex) {\n    Entry e = table[bucketIndex];\n    // 头插法，链表头部指向新的键值对\n    table[bucketIndex] = new Entry<>(hash, key, value, e);\n    size++;\n}\n\nEntry(int h, K k, V v, Entry n) {\n    value = v;\n    next = n;\n    key = k;\n    hash = h;\n}\n\n4. 确定桶下标\n很多操作都需要先确定一个键值对所在的桶下标。\nint hash = hash(key);\nint i = indexFor(hash, table.length);\n\n4.1 计算hash值\nfinal int hash(Object k) {\n    int h = hashSeed;\n    if (0 != h && k instanceof String) {\n        return sun.misc.Hashing.stringHash32((String) k);\n    }\n\n    h ^= k.hashCode();\n\n    // This function ensures that hashCodes that differ only by\n    // constant multiples at each bit position have a bounded\n    // number of collisions (approximately 8 at default load factor).\n    h ^= (h >>> 20) ^ (h >>> 12);\n    return h ^ (h >>> 7) ^ (h >>> 4);\n}\n\npublic final int hashCode() {\n    return Objects.hashCode(key) ^ Objects.hashCode(value);\n}\n\n4.2 取模\n令 x = 1\nx   : 00010000\nx-1 : 00001111\n令一个数 y 与 x-1 做与运算，可以去除 y 位级表示的第 4 位以上数：\ny       : 10110010\nx-1     : 00001111\ny&(x-1) : 00000010\n这个性质和 y 对 x 取模效果是一样的：\ny   : 10110010\nx   : 00010000\ny%x : 00000010\n我们知道，位运算的代价比求模运算小的多，因此在进行这种计算时用位运算的话能带来更高的性能。\n确定桶下标的最后一步是将 key 的 hash 值对桶个数取模：hash%capacity，如果能保证 capacity 为 2 的 n 次方，那么就可以将这个操作转换为位运算。\nstatic int indexFor(int h, int length) {\n    return h & (length-1);\n}\n\n5. 扩容\n设 HashMap 的 table 长度为 M，需要存储的键值对数量为 N，如果哈希函数满足均匀性的要求，那么每条链表的长度大约为 N/M，因此平均查找次数的复杂度为 O(N/M)。\n为了让查找的成本降低，应该尽可能使得 N/M 尽可能小，因此需要保证 M 尽可能大，也就是说 table 要尽可能大。HashMap 采用动态扩容来根据当前的 N 值来调整 M 值，使得空间效率和时间效率都能得到保证。\n和扩容相关的参数主要有：capacity、size、threshold 和 load_factor。\n\n\n\n参数\n含义\n\n\n\n\ncapacity\ntable 的容量大小，默认为 16。需要注意的是 capacity 必须保证为 2 的 n 次方。\n\n\nsize\n键值对数量。\n\n\nthreshold\nsize 的临界值，当 size 大于等于 threshold 就必须进行扩容操作。\n\n\nloadFactor\n装载因子，table 能够使用的比例，threshold = capacity * loadFactor。\n\n\n\nstatic final int DEFAULT_INITIAL_CAPACITY = 16;\n\nstatic final int MAXIMUM_CAPACITY = 1 \n从下面的添加元素代码中可以看出，当需要扩容时，令 capacity 为原来的两倍。\nvoid addEntry(int hash, K key, V value, int bucketIndex) {\n    Entry e = table[bucketIndex];\n    table[bucketIndex] = new Entry<>(hash, key, value, e);\n    if (size++ >= threshold)\n        resize(2 * table.length);\n}\n\n扩容使用 resize() 实现，需要注意的是，扩容操作同样需要把 oldTable 的所有键值对重新插入 newTable 中，因此这一步是很费时的。\nvoid resize(int newCapacity) {\n    Entry[] oldTable = table;\n    int oldCapacity = oldTable.length;\n    if (oldCapacity == MAXIMUM_CAPACITY) {\n        threshold = Integer.MAX_VALUE;\n        return;\n    }\n    Entry[] newTable = new Entry[newCapacity];\n    transfer(newTable);\n    table = newTable;\n    threshold = (int)(newCapacity * loadFactor);\n}\n\nvoid transfer(Entry[] newTable) {\n    Entry[] src = table;\n    int newCapacity = newTable.length;\n    for (int j = 0; j  e = src[j];\n        if (e != null) {\n            src[j] = null;\n            do {\n                Entry next = e.next;\n                int i = indexFor(e.hash, newCapacity);\n                e.next = newTable[i];\n                newTable[i] = e;\n                e = next;\n            } while (e != null);\n        }\n    }\n}\n\n6. 扩容-重新计算桶下标 (*)\n在进行扩容时，需要把键值对重新放到对应的桶上。HashMap 使用了一个特殊的机制，可以降低重新计算桶下标的操作。\n假设原数组长度 capacity 为 16，扩容之后 new capacity 为 32：\ncapacity     : 00010000\nnew capacity : 00100000\n\n对于一个 Key，\n\n它的哈希值如果在第 5 位上为 0，那么取模得到的结果和之前一样；\n如果为 1，那么得到的结果为原来的结果 +16。\n\n7. 计算数组容量\nHashMap 构造函数允许用户传入的容量不是 2 的 n 次方，因为它可以自动地将传入的容量转换为 2 的 n 次方。\n先考虑如何求一个数的掩码，对于 10010000，它的掩码为 11111111，可以使用以下方法得到：\nmask |= mask >> 1    11011000    // >> 先于 |= 执行\nmask |= mask >> 2    11111110\nmask |= mask >> 4    11111111\nmask+1 是大于原始数字的最小的 2 的 n 次方。\nnum     10010000\nmask+1 100000000\n以下是 HashMap 中计算数组容量的代码：\nstatic final int tableSizeFor(int cap) {\n    int n = cap - 1;    // 不过这里为什么要 cap - 1 呢？\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    return (n = MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;\n}\n\n8. 链表转红黑树\n从 JDK 1.8 开始，一个桶存储的链表长度大于 8 时会将链表转换为红黑树。\n9. 和HashTable的比较\n\nHashTable 使用 synchronized 来进行同步。\n\nHashMap 可以插入键为 null 的 Entry。\n\nHashMap 的迭代器是 fail-fast 迭代器。\n\nHashMap 不能保证随着时间的推移 Map 中的元素次序是不变的。\n\n\n"},"Java/Java容器/LinkedHashMap.html":{"url":"Java/Java容器/LinkedHashMap.html","title":"LinkedHashMap","keywords":"","body":"LinkedHashMap\n1. 存储结构\n继承自 HashMap，因此具有和 HashMap 一样的快速查找特性。\npublic class LinkedHashMap extends HashMap implements Map\n\n内部维护了一个双向链表，用来维护插入顺序或者 LRU 顺序。\n/**\n * The head (eldest) of the doubly linked list.\n */\ntransient LinkedHashMap.Entry head;\n\n/**\n * The tail (youngest) of the doubly linked list.\n */\ntransient LinkedHashMap.Entry tail;\n\naccessOrder 决定了顺序，默认为 false，此时维护的是插入顺序，当设置为 true 时，表示维护的是 LRU 顺序。\nfinal boolean accessOrder;\n\nLinkedHashMap 最重要的是以下用于维护顺序的函数，它们会在 put、get 等方法中调用。\nvoid afterNodeAccess(Node p) { }\nvoid afterNodeInsertion(boolean evict) { }\n\n2. afterNodeAccess()\n当一个节点被访问时，如果 accessOrder 为 true，则会将该节点移到链表尾部。也就是说指定为 LRU 顺序之后，在每次访问一个节点时，会将这个节点移到链表尾部，保证链表尾部是最近访问的节点，那么链表首部就是最近最久未使用的节点。\nvoid afterNodeAccess(Node e) { // move node to last\n    LinkedHashMap.Entry last;\n    if (accessOrder && (last = tail) != e) {\n        LinkedHashMap.Entry p =\n            (LinkedHashMap.Entry)e, b = p.before, a = p.after;\n        p.after = null;\n        if (b == null)\n            head = a;\n        else\n            b.after = a;\n        if (a != null)\n            a.before = b;\n        else\n            last = b;\n        if (last == null)\n            head = p;\n        else {\n            p.before = last;\n            last.after = p;\n        }\n        tail = p;\n        ++modCount;\n    }\n}\n\n3. afterNodeInsertion()\n在 put 等操作之后执行，当 removeEldestEntry() 方法返回 true 时会移除最晚的节点，也就是链表首部节点 first。\nevict 只有在构建 Map 的时候才为 false，在这里为 true。\nvoid afterNodeInsertion(boolean evict) { // possibly remove eldest\n    LinkedHashMap.Entry first;\n    if (evict && (first = head) != null && removeEldestEntry(first)) {\n        K key = first.key;\n        removeNode(hash(key), key, null, false, true);\n    }\n}\n\nremoveEldestEntry() 默认为 false，如果需要让它为 true，需要继承 LinkedHashMap 并且覆盖这个方法的实现，这在实现 LRU 的缓存中特别有用，通过移除最近最久未使用的节点，从而保证缓存空间足够，并且缓存的数据都是热点数据。\nprotected boolean removeEldestEntry(Map.Entry eldest) {\n    return false;\n}\n\n4. LRU缓存\n以下是使用 LinkedHashMap 实现的一个 LRU 缓存：\n\n设定最大缓存空间 MAX_ENTRIES 为 3；\n使用 LinkedHashMap 的构造函数将 accessOrder 设置为 true，开启 LRU 顺序；\n覆盖 removeEldestEntry() 方法实现，在节点多于 MAX_ENTRIES 就会将最近最久未使用的数据移除。\n\nclass LRUCache extends LinkedHashMap {\n    private static final int MAX_ENTRIES = 3;\n\n    protected boolean removeEldestEntry(Map.Entry eldest) {\n        return size() > MAX_ENTRIES;\n    }\n\n    LRUCache() {\n        super(MAX_ENTRIES, 0.75f, true);\n    }\n}\n\npublic static void main(String[] args) {\n    LRUCache cache = new LRUCache<>();\n    cache.put(1, \"a\");\n    cache.put(2, \"b\");\n    cache.put(3, \"c\");\n    cache.get(1);\n    cache.put(4, \"d\");\n    System.out.println(cache.keySet());\n}\n\n"},"Java/Java容器/LinkedList.html":{"url":"Java/Java容器/LinkedList.html","title":"LinkedList","keywords":"","body":"LinkedList\n1. 概览\n基于双向链表实现，使用 Node 存储链表节点信息。\nprivate static class Node {\n    E item;\n    Node next;\n    Node prev;\n}\n\n每个链表存储了 first 和 last 指针：\ntransient Node first;\ntransient Node last;\n\n\n2. 与ArrayList的比较\n\nArrayList 基于动态数组实现，LinkedList 基于双向链表实现；\nArrayList 支持随机访问，LinkedList 不支持；\nLinkedList 在任意位置添加删除元素更快。\n\n"},"Java/Java容器/Vector.html":{"url":"Java/Java容器/Vector.html","title":"Vector","keywords":"","body":"Vector\n1. 同步\n它的实现与 ArrayList 类似，但是使用了 synchronized 进行同步。\npublic synchronized boolean add(E e) {\n    modCount++;\n    ensureCapacityHelper(elementCount + 1);\n    elementData[elementCount++] = e;\n    return true;\n}\n\npublic synchronized E get(int index) {\n    if (index >= elementCount)\n        throw new ArrayIndexOutOfBoundsException(index);\n\n    return elementData(index);\n}\n\n2. 与ArrayList的比较\n\nVector 是同步的，因此开销就比 ArrayList 要大，访问速度更慢。最好使用 ArrayList 而不是 Vector，因为同步操作完全可以由程序员自己来控制；\nVector 每次扩容请求其大小的 2 倍空间，而 ArrayList 是 1.5 倍。\n\n3. 替代方案\n可以使用 Collections.synchronizedList(); 得到一个线程安全的 ArrayList。\nList list = new ArrayList<>();\nList synList = Collections.synchronizedList(list);\n\n也可以使用 concurrent 并发包下的 CopyOnWriteArrayList 类。\nList list = new CopyOnWriteArrayList<>();\n\n"},"Java/Java容器/WeakHashMap.html":{"url":"Java/Java容器/WeakHashMap.html","title":"WeakHashMap","keywords":"","body":"WeakHashMap\n1. 存储结构\nWeakHashMap 的 Entry 继承自 WeakReference，被 WeakReference 关联的对象在下一次垃圾回收时会被回收 (而HashMap 中由于每个元素都有一个桶去引用，因此不会被垃圾回收器回收)。\nWeakHashMap 主要用来实现缓存，通过使用 WeakHashMap 来引用缓存对象，由 JVM 对这部分缓存进行回收。\nprivate static class Entry extends WeakReference implements Map.Entry\n\n2. Tomcat 中的 ConcurrentCache (*)\nTomcat 中的 ConcurrentCache 使用了 WeakHashMap 来实现缓存功能。\nConcurrentCache 采取的是分代缓存：\n\n经常使用的对象放入 eden 中，eden 使用 ConcurrentHashMap 实现，不用担心会被回收（伊甸园）；\n不常用的对象放入 longterm，longterm 使用 WeakHashMap 实现，这些老对象会被垃圾收集器回收。\n当调用 get() 方法时，会先从 eden 区获取，如果没有找到的话再到 longterm 获取，当从 longterm 获取到就把对象放入 eden 中，从而保证经常被访问的节点不容易被回收。\n当调用 put() 方法时，如果 eden 的大小超过了 size，那么就将 eden 中的所有对象都放入 longterm 中，利用虚拟机回收掉一部分不经常使用的对象。\n\npublic final class ConcurrentCache {\n\n    private final int size;\n\n    private final Map eden;\n\n    private final Map longterm;\n\n    public ConcurrentCache(int size) {\n        this.size = size;\n        this.eden = new ConcurrentHashMap<>(size);\n        this.longterm = new WeakHashMap<>(size);\n    }\n\n    public V get(K k) {\n        V v = this.eden.get(k);\n        if (v == null) {\n            v = this.longterm.get(k);\n            if (v != null)\n                this.eden.put(k, v);\n        }\n        return v;\n    }\n\n    public void put(K k, V v) {\n        if (this.eden.size() >= size) {\n            this.longterm.putAll(this.eden);\n            this.eden.clear();\n        }\n        this.eden.put(k, v);\n    }\n}\n\n"},"Java/Java并发/":{"url":"Java/Java并发/","title":"Java并发","keywords":"","body":""},"Java/Java并发/线程基础.html":{"url":"Java/Java并发/线程基础.html","title":"线程基础","keywords":"","body":"线程基础\n一、线程状态转换\n\n新建 (New)\n创建后尚未启动。\n可运行 (Runnable)\n可能正在运行，也可能正在等待 CPU 时间片。\n包含了操作系统线程状态中的 Running 和 Ready。\n阻塞 (Blocking)\n等待获取一个排它锁，如果其线程释放了锁就会结束此状态。\n无限期等待 (Waiting)\n等待其它线程显式地唤醒，否则不会被分配 CPU 时间片。\n\n\n\n进入方法\n退出方法\n\n\n\n\n没有设置 Timeout 参数的 Object.wait() 方法\nObject.notify() / Object.notifyAll()\n\n\n没有设置 Timeout 参数的 Thread.join() 方法\n被调用的线程执行完毕\n\n\nLockSupport.park() 方法\nLockSupport.unpark(Thread)\n\n\n\n限期等待 (Timed Waiting)\n无需等待其它线程显式地唤醒，在一定时间之后会被系统自动唤醒。\n调用 Thread.sleep() 方法使线程进入限期等待状态时，常常用“使一个线程睡眠”进行描述。\n调用 Object.wait() 方法使线程进入限期等待或者无限期等待时，常常用“挂起一个线程”进行描述。\n睡眠和挂起是用来描述行为，而阻塞和等待用来描述状态。\n阻塞和等待的区别在于，阻塞是被动的，它是在等待获取一个排它锁。而等待是主动的，通过调用 Thread.sleep() 和 Object.wait() 等方法进入。\n\n\n\n进入方法\n退出方法\n\n\n\n\nThread.sleep() 方法\n时间结束\n\n\n设置了 Timeout 参数的 Object.wait() 方法\n时间结束 / Object.notify() / Object.notifyAll()\n\n\n设置了 Timeout 参数的 Thread.join() 方法\n时间结束 / 被调用的线程执行完毕\n\n\nLockSupport.parkNanos() 方法\nLockSupport.unpark(Thread)\n\n\nLockSupport.parkUntil() 方法\nLockSupport.unpark(Thread)\n\n\n\n死亡 (Terminated)\n可以是线程结束任务之后自己结束，或者产生了异常而结束。\n二、使用线程\n有三种使用线程的方法：\n\n实现 Runnable 接口；\n实现 Callable 接口；\n继承 Thread 类。\n\n实现 Runnable 和 Callable 接口的类只能当做一个可以在线程中运行的任务，不是真正意义上的线程，因此最后还需要通过 Thread 来调用。可以说任务是通过线程驱动从而执行的。\n1. 实现Runnable接口\n需要实现 run() 方法。\n通过 Thread 调用 start() 方法来启动线程。\npublic class MyRunnable implements Runnable {\n    public void run() {\n        // ...\n    }\n}\n\npublic static void main(String[] args) {\n    MyRunnable instance = new MyRunnable();\n    Thread thread = new Thread(instance);\n    thread.start();\n}\n\n2. 实现Callable接口\n与 Runnable 相比，Callable 可以有返回值，返回值通过 FutureTask 进行封装。\npublic class MyCallable implements Callable {\n    public Integer call() {\n        return 123;\n    }\n}\n\npublic static void main(String[] args) throws ExecutionException, InterruptedException {\n    MyCallable mc = new MyCallable();\n    FutureTask ft = new FutureTask<>(mc);\n    Thread thread = new Thread(ft);\n    thread.start();\n    System.out.println(ft.get());\n}\n\n3. 继承Thread类\n同样也是需要实现 run() 方法，因为 Thread 类也实现了 Runable 接口。\n当调用 start() 方法启动一个线程时，虚拟机会将该线程放入就绪队列中等待被调度，当一个线程被调度时会执行该线程的 run() 方法。\npublic class MyThread extends Thread {\n    public void run() {\n        // ...\n    }\n}\n\npublic static void main(String[] args) {\n    MyThread mt = new MyThread();\n    mt.start();\n}\n\n实现接口 VS 继承 Thread\n实现接口会更好一些，因为：\n\nJava 不支持多重继承，因此继承了 Thread 类就无法继承其它类，但是可以实现多个接口；\n类可能只要求可执行就行，继承整个 Thread 类开销过大。\n\n三、基础线程机制\nExecutor\nxecutor 管理多个异步任务的执行，而无需程序员显式地管理线程的生命周期。这里的异步是指多个任务的执行互不干扰，不需要进行同步操作。\n主要有三种 Executor：\n\nCachedThreadPool：一个任务创建一个线程；\nFixedThreadPool：所有任务只能使用固定大小的线程；\nSingleThreadExecutor：相当于大小为 1 的 FixedThreadPool。\n\npublic static void main(String[] args) {\n    ExecutorService executorService = Executors.newCachedThreadPool();\n    for (int i = 0; i \n关于线程的具体介绍参加 线程池\nDaemon\n守护线程是程序运行时在后台提供服务的线程，不属于程序中不可或缺的部分。\n当所有非守护线程结束时，程序也就终止，同时会杀死所有守护线程。\nmain() 属于非守护线程。\n使用 setDaemon() 方法将一个线程设置为守护线程。\npublic static void main(String[] args) {\n    Thread thread = new Thread(new MyRunnable());\n    thread.setDaemon(true);\n}\n\nsleep()\nThread.sleep(millisec) 方法会休眠当前正在执行的线程，millisec 单位为毫秒。\nsleep() 可能会抛出 InterruptedException，因为异常不能跨线程传播回 main() 中，因此必须在本地进行处理。线程中抛出的其它异常也同样需要在本地进行处理。\npublic void run() {\n    try {\n        Thread.sleep(3000);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n}\n\nyield()\n对静态方法 Thread.yield() 的调用声明了当前线程已经完成了生命周期中最重要的部分，可以切换给其它线程来执行。该方法只是对线程调度器的一个建议，而且也只是建议具有相同优先级的其它线程可以运行。\npublic void run() {\n    Thread.yield();\n}\n\n四、中断\n一个线程执行完毕之后会自动结束，如果在运行过程中发生异常也会提前结束。\nInterruptedException\n通过调用一个线程的 interrupt() 来中断该线程，如果该线程处于阻塞、限期等待或者无限期等待状态，那么就会抛出 InterruptedException，从而提前结束该线程。但是不能中断 I/O 阻塞和 synchronized 锁阻塞。\n对于以下代码，在 main() 中启动一个线程之后再中断它，由于线程中调用了 Thread.sleep() 方法，因此会抛出一个 InterruptedException，从而提前结束线程，不执行之后的语句。\npublic class InterruptExample {\n\n    private static class MyThread1 extends Thread {\n        @Override\n        public void run() {\n            try {\n                Thread.sleep(2000);\n                System.out.println(\"Thread run\");\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n\npublic static void main(String[] args) throws InterruptedException {\n    Thread thread1 = new MyThread1();\n    thread1.start();\n    thread1.interrupt();\n    System.out.println(\"Main run\");\n}\n\nMain run\njava.lang.InterruptedException: sleep interrupted\n    at java.lang.Thread.sleep(Native Method)\n    at InterruptExample.lambda$main$0(InterruptExample.java:5)\n    at InterruptExample$$Lambda$1/713338599.run(Unknown Source)\n    at java.lang.Thread.run(Thread.java:745)\n\ninterrupted()\n如果一个线程的 run() 方法执行一个无限循环，并且没有执行 sleep() 等会抛出 InterruptedException 的操作，那么调用线程的 interrupt() 方法就无法使线程提前结束。\n但是调用 interrupt() 方法会设置线程的中断标记，此时调用 interrupted() 方法会返回 true。因此可以在循环体中使用 interrupted() 方法来判断线程是否处于中断状态，从而提前结束线程。\npublic class InterruptExample {\n\n    private static class MyThread2 extends Thread {\n        @Override\n        public void run() {\n            while (!interrupted()) {\n                // ..\n            }\n            System.out.println(\"Thread end\");\n        }\n    }\n}\n\npublic static void main(String[] args) throws InterruptedException {\n    Thread thread2 = new MyThread2();\n    thread2.start();\n    thread2.interrupt();\n}\n\nThread end\n\n \nExecutor 的中断操作\n调用 Executor 的 shutdown() 方法会等待线程都执行完毕之后再关闭，但是如果调用的是 shutdownNow() 方法，则相当于调用每个线程的 interrupt() 方法。\n以下使用 Lambda 创建线程，相当于创建了一个匿名内部线程。\npublic static void main(String[] args) {\n    ExecutorService executorService = Executors.newCachedThreadPool();\n    executorService.execute(() -> {\n        try {\n            Thread.sleep(2000);\n            System.out.println(\"Thread run\");\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    });\n    executorService.shutdownNow();\n    System.out.println(\"Main run\");\n}\n\nMain run\njava.lang.InterruptedException: sleep interrupted\n    at java.lang.Thread.sleep(Native Method)\n    at ExecutorInterruptExample.lambda$main$0(ExecutorInterruptExample.java:9)\n    at ExecutorInterruptExample$$Lambda$1/1160460865.run(Unknown Source)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n\n如果只想中断 Executor 中的一个线程，可以通过使用 submit() 方法来提交一个线程，它会返回一个 Future 对象，通过调用该对象的 cancel(true) 方法就可以中断线程。\n"},"Java/Java并发/线程池.html":{"url":"Java/Java并发/线程池.html","title":"线程池","keywords":"","body":"线程池\nJava中的ThreadPoolExecutor类\njava.uitl.concurrent.ThreadPoolExecutor 类是线程池中最核心的一个类，因此如果要透彻地了解Java中的线程池，必须先了解这个类。下面我们来看一下 ThreadPoolExecutor 类的具体实现源码。\n在 ThreadPoolExecutor 类中提供了四个构造方法：\npublic class ThreadPoolExecutor extends AbstractExecutorService {\n    ...\n\n    public ThreadPoolExecutor(int corePoolSize,int maximumPoolSize,long keepAliveTime,TimeUnit unit, BlockingQueue workQueue);\n\n    public ThreadPoolExecutor(int corePoolSize,int maximumPoolSize,long keepAliveTime,TimeUnit unit, BlockingQueue workQueue,ThreadFactory threadFactory);\n\n    public ThreadPoolExecutor(int corePoolSize,int maximumPoolSize,long keepAliveTime,TimeUnit unit, BlockingQueue workQueue,RejectedExecutionHandler handler);\n\n    public ThreadPoolExecutor(int corePoolSize,int maximumPoolSize,long keepAliveTime,TimeUnit unit, BlockingQueue workQueue,ThreadFactory threadFactory,RejectedExecutionHandler handler);\n\n    ...\n}\n\n从上面的代码可以得知，ThreadPoolExecutor 继承了AbstractExecutorService 类，并提供了四个构造器，事实上，通过观察每个构造器的源码具体实现，发现前面三个构造器都是调用的第四个构造器进行的初始化工作。\n下面解释下一下构造器中各个参数的含义：\n\ncorePoolSize：核心池的大小，这个参数跟后面讲述的线程池的实现原理有非常大的关系。在创建了线程池后，默认情况下，线程池中并没有任何线程，而是等待有任务到来才创建线程去执行任务，除非调用了 prestartAllCoreThreads() 或者 prestartCoreThread() 方法，从这2个方法的名字就可以看出，是预创建线程的意思，即在没有任务到来之前就创建 corePoolSize 个线程或者一个线程。默认情况下，在创建了线程池后，线程池中的线程数为0，当有任务来之后，就会创建一个线程去执行任务，当线程池中的线程数目达到 corePoolSize 后，就会把到达的任务放到缓存队列当中；\n\nmaximumPoolSize：线程池最大线程数，这个参数也是一个非常重要的参数，它表示在线程池中最多能创建多少个线程；\n\nkeepAliveTime：表示线程没有任务执行时最多保持多久时间会终止。默认情况下，只有当线程池中的线程数大于 corePoolSize 时，keepAliveTime 才会起作用，直到线程池中的线程数不大于 corePoolSize ，即当线程池中的线程数大于 corePoolSize 时，如果一个线程空闲的时间达到 keepAliveTime，则会终止，直到线程池中的线程数不超过 corePoolSize。但是如果调用了 allowCoreThreadTimeOut(boolean) 方法，在线程池中的线程数不大于 corePoolSize 时，keepAliveTime 参数也会起作用，直到线程池中的线程数为0；\n\nunit：参数 keepAliveTime 的时间单位，有7种取值，在 TimeUnit 类中有7种静态属性：\n\n\nTimeUnit.DAYS;               //天\nTimeUnit.HOURS;             //小时\nTimeUnit.MINUTES;           //分钟\nTimeUnit.SECONDS;           //秒\nTimeUnit.MILLISECONDS;      //毫秒\nTimeUnit.MICROSECONDS;      //微妙\nTimeUnit.NANOSECONDS;       //纳秒\n\nworkQueue：一个阻塞队列，用来存储等待执行的任务，这个参数的选择也很重要，会对线程池的运行过程产生重大影响，一般来说，这里的阻塞队列有以下几种选择：\n\nArrayBlockingQueue;\nLinkedBlockingQueue;\nSynchronousQueue;\nArrayBlockingQueue 和 PriorityBlockingQueue 使用较少，一般使用 LinkedBlockingQueue 和 Synchronous。线程池的排队策略与BlockingQueue有关。\n\nthreadFactory：线程工厂，主要用来创建线程；\n\nhandler：表示当拒绝处理任务时的策略，有以下四种取值：\n\n\nThreadPoolExecutor.AbortPolicy:丢弃任务并抛出RejectedExecutionException异常。 \nThreadPoolExecutor.DiscardPolicy：也是丢弃任务，但是不抛出异常。 \nThreadPoolExecutor.DiscardOldestPolicy：丢弃队列最前面的任务，然后重新尝试执行任务（重复此过程）\nThreadPoolExecutor.CallerRunsPolicy：由调用线程处理该任务\nThreadPoolExecutor，AbstractExecutorService，ExecutorService和Executor的继承关系\nExecutor 是一个顶层接口，在它里面只声明了一个方法 execute(Runnable)，返回值为 void，参数为 Runnable类型，从字面意思可以理解，就是用来执行传进去的任务的；\n然后 ExecutorService 接口继承了Executor接口，并声明了一些方法：submit、invokeAll、invokeAny 以及shutDown 等；\n抽象类 AbstractExecutorService 实现了 ExecutorService 接口，基本实现了 ExecutorService 中声明的所有方法；\n然后 ThreadPoolExecutor 继承了类 AbstractExecutorService。\n在 ThreadPoolExecutor 类中有几个非常重要的方法：\nexecute()\nsubmit()\nshutdown()\nshutdownNow()\nexecute() 方法实际上是 Executor 中声明的方法，在 ThreadPoolExecutor 中进行了具体的实现，这个方法是ThreadPoolExecutor 的核心方法，通过这个方法可以向线程池提交一个任务，交由线程池去执行。\nsubmit() 方法是在 ExecutorService 中声明的方法，在 AbstractExecutorService 就已经有了具体的实现，在ThreadPoolExecutor 中并没有对其进行重写，这个方法也是用来向线程池提交任务的，但是它和 execute() 方法不同，它能够返回任务执行的结果，去看 submit() 方法的实现，会发现它实际上还是调用的 execute() 方法，只不过它利用了 Future 来获取任务执行结果。\nshutdown() 和 shutdownNow() 是用来关闭线程池的。\n深入剖析线程池实现原理\n1. 线程池的状态\n在 ThreadPoolExecutor 中定义了一个volatile变量，另外定义了几个 static final 变量表示线程池的各个状态：\nvolatile int runState;\nstatic final int RUNNING    = 0;\nstatic final int SHUTDOWN   = 1;\nstatic final int STOP       = 2;\nstatic final int TERMINATED = 3;\n\nrunState 表示当前线程池的状态，它是一个 volatile 变量用来保证线程之间的可见性；\n下面的几个 static final 变量表示 runState 可能的几个取值。\n当创建线程池后，初始时，线程池处于 RUNNING 状态；\n如果调用了 shutdown() 方法，则线程池处于 SHUTDOWN 状态，此时线程池不能够接受新的任务，它会等待所有任务执行完毕；\n如果调用了 shutdownNow() 方法，则线程池处于 STOP 状态，此时线程池不能接受新的任务，并且会去尝试终止正在执行的任务；\n当线程池处于 SHUTDOWN 或 STOP 状态，并且所有工作线程已经销毁，任务缓存队列已经清空或执行结束后，线程池被设置为 TERMINATED 状态。\n2. 任务的执行\n在了解将任务提交给线程池到任务执行完毕整个过程之前，我们先来看一下 ThreadPoolExecutor 类中其他的一些比较重要成员变量：\nprivate final BlockingQueue workQueue;              //任务缓存队列，用来存放等待执行的任务\nprivate final ReentrantLock mainLock = new ReentrantLock();   //线程池的主要状态锁，对线程池状态（比如线程池大小、runState等）的改变都要使用这个锁\nprivate final HashSet workers = new HashSet();  //用来存放工作集\n\nprivate volatile long keepAliveTime;    //线存活时间   \nprivate volatile boolean allowCoreThreadTimeOut;   //是否允许为核心线程设置存活时间\nprivate volatile int corePoolSize;     //核心池的大小（即线程池中的线程数目大于这个参数时，提交的任务会被放进任务缓存队列）\nprivate volatile int maximumPoolSize;   //线程池最大能容忍的线程数\n\nprivate volatile int poolSize;       //线程池中当前的线程数\n\nprivate volatile RejectedExecutionHandler handler; //任务拒绝策略\n\nprivate volatile ThreadFactory threadFactory;   //线程工厂，用来创建线程\n\nprivate int largestPoolSize;   //用来记录线程池中曾经出现过的最大线程数\n\nprivate long completedTaskCount;   //用来记录已经执行完毕的任务个数\n\n其中 largestPoolSize 只是一个用来起记录作用的变量，用来记录线程池中曾经有过的最大线程数目，跟线程池的容量没有任何关系。\n下面我们来看一下任务从提交到最终执行完毕经历了哪些过程：\n(具体过程略，需要查阅可以参考文末给出的博文)\n需要注意的几点是，线程池中每一个工作线程被包装成一个 Worker 类的对象，Worker 类实现了 Runnable 接口，其 run() 方法源码如下：\npublic void run() {\n    try {\n        Runnable task = firstTask;\n        firstTask = null;\n        while (task != null || (task = getTask()) != null) {\n            runTask(task);\n            task = null;\n        }\n    } finally {\n        workerDone(this);\n    }\n}\n\n从 run() 方法的实现可以看出，它首先执行的是通过构造器传进来的任务 firstTask，在调用 runTask() 执行完firstTask 之后，在 while 循环里面不断通过 getTask() 去取新的任务来执行，那么去哪里取呢？自然是从任务缓存队列里面去取，因此一个 Worker 可以被重复使用以执行不同的任务，节省了频繁创建和销毁线程的成本。而且，这里有一个非常巧妙的设计方式，假如我们来设计线程池，可能会有一个任务分派线程，当发现有线程空闲时，就从任务缓存队列中取一个任务交给空闲线程执行。但是在这里，并没有采用这样的方式，因为这样会要额外地对任务分派线程进行管理，无形地会增加难度和复杂度，这里直接让执行完任务的线程去任务缓存队列里面取任务来执行。\n到这里，大部分朋友应该对任务提交给线程池之后到被执行的整个过程有了一个基本的了解，下面总结一下：\n\n首先，要清楚 corePoolSize 和 maximumPoolSize 的含义；\n其次，要知道 Worker 是用来起到什么作用的；\n要知道任务提交给线程池之后的处理策略，这里总结一下主要有4点：\n如果当前线程池中的线程数目小于 corePoolSize，则每来一个任务，就会创建一个线程去执行这个任务；\n如果当前线程池中的线程数目 >= corePoolSize，则每来一个任务，会尝试将其添加到任务缓存队列当中，若添加成功，则该任务会等待空闲线程将其取出去执行；若添加失败（一般来说是任务缓存队列已满），则会尝试创建新的线程去执行这个任务；\n如果当前线程池中的线程数目达到 maximumPoolSize，则会采取任务拒绝策略进行处理；\n如果线程池中的线程数量大于 corePoolSize 时，如果某线程空闲时间超过 keepAliveTime ，线程将被终止，直至线程池中的线程数目不大于 corePoolSize；如果允许为核心池中的线程设置存活时间，那么核心池中的线程空闲时间超过 keepAliveTime，线程也会被终止。\n\n\n\n3. 线程池中的线程初始化\n默认情况下，创建线程池之后，线程池中是没有线程的，需要提交任务之后才会创建线程。\n在实际中如果需要线程池创建之后立即创建线程，可以通过以下两个方法办到：\n\nprestartCoreThread()：初始化一个核心线程；\nprestartAllCoreThreads()：初始化所有核心线程\n\n4. 任务缓存队列及排队策略\n在前面我们多次提到了任务缓存队列，即 workQueue，它用来存放等待执行的任务。\nworkQueue 的类型为 BlockingQueue，通常可以取下面三种类型：\n\nArrayBlockingQueue：基于数组的先进先出队列，此队列创建时必须指定大小；\nLinkedBlockingQueue：基于链表的先进先出队列，如果创建时没有指定此队列大小，则默认为Integer.MAX_VALUE；\nsynchronousQueue：这个队列比较特殊，它不会保存提交的任务，而是将直接新建一个线程来执行新来的任务。\n\n5. 任务拒绝策略\n当线程池的任务缓存队列已满并且线程池中的线程数目达到 maximumPoolSize，如果还有任务到来就会采取任务拒绝策略，通常有以下四种策略：\nThreadPoolExecutor.AbortPolicy:丢弃任务并抛出RejectedExecutionException异常。\nThreadPoolExecutor.DiscardPolicy：也是丢弃任务，但是不抛出异常。\nThreadPoolExecutor.DiscardOldestPolicy：丢弃队列最前面的任务，然后重新尝试执行任务（重复此过程）\nThreadPoolExecutor.CallerRunsPolicy：由调用线程处理该任务\n6. 线程池的关闭\nThreadPoolExecutor 提供了两个方法，用于线程池的关闭，分别是 shutdown() 和 shutdownNow()，其中：\n\nshutdown()：不会立即终止线程池，而是要等所有任务缓存队列中的任务都执行完后才终止，但再也不会接受新的任务\n\nshutdownNow()：立即终止线程池，并尝试打断正在执行的任务，并且清空任务缓存队列，返回尚未执行的任务\n\n\n7. 线程池容量的动态调整\nThreadPoolExecutor 提供了动态调整线程池容量大小的方法：setCorePoolSize() 和 setMaximumPoolSize()，\n\nsetCorePoolSize：设置核心池大小\n\nsetMaximumPoolSize：设置线程池最大能创建的线程数目大小\n\n\n当上述参数从小变大时，ThreadPoolExecutor 进行线程赋值，还可能立即创建新的线程来执行任务。\n使用\n前面我们对 ThreadPoolExecutor 进行了详细地介绍，不过在 java doc 中，并不提倡我们直接使用ThreadPoolExecutor，而是使用 Executors 类中提供的几个静态方法来创建线程池：\nExecutors.newCachedThreadPool();        //创建一个缓冲池，缓冲池容量大小为Integer.MAX_VALUE\nExecutors.newSingleThreadExecutor();   //创建容量为1的缓冲池\nExecutors.newFixedThreadPool(int);    //创建固定容量大小的缓冲池\n\n下面是这三个静态方法的具体实现：\npublic static ExecutorService newFixedThreadPool(int nThreads) {\n    return new ThreadPoolExecutor(nThreads, nThreads,\n                                  0L, TimeUnit.MILLISECONDS,\n                                  new LinkedBlockingQueue());\n}\npublic static ExecutorService newSingleThreadExecutor() {\n    return new FinalizableDelegatedExecutorService\n        (new ThreadPoolExecutor(1, 1,\n                                0L, TimeUnit.MILLISECONDS,\n                                new LinkedBlockingQueue()));\n}\npublic static ExecutorService newCachedThreadPool() {\n    return new ThreadPoolExecutor(0, Integer.MAX_VALUE,\n                                  60L, TimeUnit.SECONDS,\n                                  new SynchronousQueue());\n}\n\n从它们的具体实现来看，它们实际上也是调用了 ThreadPoolExecutor，只不过参数都已配置好了。\nnewFixedThreadPool 创建的线程池 corePoolSize 和 maximumPoolSize 值是相等的，它使用的LinkedBlockingQueue；\nnewSingleThreadExecutor 将 corePoolSize 和 maximumPoolSize 都设置为1，也使用的LinkedBlockingQueue；\nnewCachedThreadPool 将 corePoolSize 设置为0，将 maximumPoolSize 设置为 Integer.MAX_VALUE，使用的SynchronousQueue，也就是说来了任务就创建线程运行，当线程空闲超过60秒，就销毁线程。\n实际中，如果 Executors 提供的三个静态方法能满足要求，就尽量使用它提供的三个方法，因为自己去手动配置ThreadPoolExecutor 的参数有点麻烦，要根据实际任务的类型和数量来进行配置。\nJava并发编程：线程池的使用\n"},"Java/Java并发/互斥同步.html":{"url":"Java/Java并发/互斥同步.html","title":"互斥同步","keywords":"","body":"互斥同步\nJava 提供了两种锁机制来控制多个线程对共享资源的互斥访问，第一个是 JVM 实现的 synchronized，而另一个是 JDK 实现的 ReentrantLock。\nsynchronized\n1. 同步一个代码块\npublic void func() {\n    synchronized (this) {\n        // ...\n    }\n}\n\n它只作用于同一个对象，如果调用两个对象上的同步代码块，就不会进行同步。\n对于以下代码，使用 ExecutorService 执行了两个线程，由于调用的是同一个对象的同步代码块，因此这两个线程会进行同步，当一个线程进入同步语句块时，另一个线程就必须等待。\npublic class SynchronizedExample {\n\n    public void func1() {\n        synchronized (this) {\n            for (int i = 0; i \npublic static void main(String[] args) {\n    SynchronizedExample e1 = new SynchronizedExample();\n    ExecutorService executorService = Executors.newCachedThreadPool();\n    executorService.execute(() -> e1.func1());\n    executorService.execute(() -> e1.func1());\n}\n\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\n\n对于以下代码，两个线程调用了不同对象的同步代码块，因此这两个线程就不需要同步。从输出结果可以看出，两个线程交叉执行。\npublic static void main(String[] args) {\n    SynchronizedExample e1 = new SynchronizedExample();\n    SynchronizedExample e2 = new SynchronizedExample();\n    ExecutorService executorService = Executors.newCachedThreadPool();\n    executorService.execute(() -> e1.func1());\n    executorService.execute(() -> e2.func1());\n}\n\n0 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9\n\n2. 同步一个方法\npublic synchronized void func () {\n    // ...\n}\n\n它和同步代码块一样，作用于同一个对象。\n3. 同步一个类\npublic void func() {\n    synchronized (SynchronizedExample.class) {\n        // ...\n    }\n}\n\n作用于整个类，也就是说两个线程调用同一个类的不同对象上的这种同步语句，也会进行同步。\npublic class SynchronizedExample {\n\n    public void func2() {\n        synchronized (SynchronizedExample.class) {\n            for (int i = 0; i \npublic static void main(String[] args) {\n    SynchronizedExample e1 = new SynchronizedExample();\n    SynchronizedExample e2 = new SynchronizedExample();\n    ExecutorService executorService = Executors.newCachedThreadPool();\n    executorService.execute(() -> e1.func2());\n    executorService.execute(() -> e2.func2());\n}\n\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\n\n4. 同步一个静态方法\npublic synchronized static void fun() {\n    // ...\n}\n\n作用于整个类。\nReentrantLock\nReentrantLock 是 java.util.concurrent（J.U.C）包中的锁。\npublic class LockExample {\n\n    private Lock lock = new ReentrantLock();\n\n    public void func() {\n        lock.lock();\n        try {\n            for (int i = 0; i \npublic static void main(String[] args) {\n    LockExample lockExample = new LockExample();\n    ExecutorService executorService = Executors.newCachedThreadPool();\n    executorService.execute(() -> lockExample.func());\n    executorService.execute(() -> lockExample.func());\n}\n\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\n\n比较\n1. 锁的实现\nsynchronized 是 JVM 实现的，而 ReentrantLock 是 JDK 实现的。\n2. 性能\n新版本 Java 对 synchronized 进行了很多优化，例如自旋锁等，synchronized 与 ReentrantLock 大致相同。\n3. 等待可中断\n当持有锁的线程长期不释放锁的时候，正在等待的线程可以选择放弃等待，改为处理其他事情。\nReentrantLock 可中断，而 synchronized 不行。\n4. 公平锁\n公平锁是指多个线程在等待同一个锁时，必须按照申请锁的时间顺序来依次获得锁。\nsynchronized 中的锁是非公平的，ReentrantLock 默认情况下也是非公平的，但是也可以是公平的。\n5. 锁绑定多个条件\n一个 ReentrantLock 可以同时绑定多个 Condition 对象。\n使用选择\n除非需要使用 ReentrantLock 的高级功能，否则优先使用 synchronized。这是因为 synchronized 是 JVM 实现的一种锁机制，JVM 原生地支持它，而 ReentrantLock 不是所有的 JDK 版本都支持。并且使用 synchronized 不用担心没有释放锁而导致死锁问题，因为 JVM 会确保锁的释放。\n"},"Java/Java并发/线程之间的协作.html":{"url":"Java/Java并发/线程之间的协作.html","title":"线程之间的协作","keywords":"","body":"线程之间的协作\n当多个线程可以一起工作去解决某个问题时，如果某些部分必须在其它部分之前完成，那么就需要对线程进行协调。\njoin()\n在线程中调用另一个线程的 join() 方法，会将当前线程挂起，而不是忙等待，直到目标线程结束。\n对于以下代码，虽然 b 线程先启动，但是因为在 b 线程中调用了 a 线程的 join() 方法，b 线程会等待 a 线程结束才继续执行，因此最后能够保证 a 线程的输出先于 b 线程的输出。\npublic class JoinExample {\n\n    private class A extends Thread {\n        @Override\n        public void run() {\n            System.out.println(\"A\");\n        }\n    }\n\n    private class B extends Thread {\n\n        private A a;\n\n        B(A a) {\n            this.a = a;\n        }\n\n        @Override\n        public void run() {\n            try {\n                a.join();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            System.out.println(\"B\");\n        }\n    }\n\n    public void test() {\n        A a = new A();\n        B b = new B(a);\n        b.start();\n        a.start();\n    }\n}\n\npublic static void main(String[] args) {\n    JoinExample example = new JoinExample();\n    example.test();\n}\n\nA\nB\nwait()/notify()/notifyAll()\n调用 wait() 使得线程等待某个条件满足，线程在等待时会被挂起，当其他线程的运行使得这个条件满足时，其它线程会调用 notify() 或者 notifyAll() 来唤醒挂起的线程。\n它们都属于 Object 的一部分，而不属于 Thread。\n只能用在同步方法或者同步控制块中使用，否则会在运行时抛出 IllegalMonitorStateException。\n使用 wait() 挂起期间，线程会释放锁。这是因为，如果没有释放锁，那么其它线程就无法进入对象的同步方法或者同步控制块中，那么就无法执行 notify() 或者 notifyAll() 来唤醒挂起的线程，造成死锁。\npublic class WaitNotifyExample {\n\n    public synchronized void before() {\n        System.out.println(\"before\");\n        notifyAll();\n    }\n\n    public synchronized void after() {\n        try {\n            wait();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        System.out.println(\"after\");\n    }\n}\n\npublic static void main(String[] args) {\n    ExecutorService executorService = Executors.newCachedThreadPool();\n    WaitNotifyExample example = new WaitNotifyExample();\n    executorService.execute(() -> example.after());\n    executorService.execute(() -> example.before());\n}\n\nbefore\nafter\n\nwait() 和 sleep() 的区别\n\nwait() 是 Object 的方法，而 sleep() 是 Thread 的静态方法；\nwait() 会释放锁，sleep() 不会。\n\nawait()/signal()/signalAll()\njava.util.concurrent 类库中提供了 Condition 类来实现线程之间的协调，可以在 Condition 上调用 await() 方法使线程等待，其它线程调用 signal() 或 signalAll() 方法唤醒等待的线程。\n相比于 wait() 这种等待方式，await() 可以指定等待的条件，因此更加灵活。\n使用 Lock 来获取一个 Condition 对象。\npublic class AwaitSignalExample {\n\n    private Lock lock = new ReentrantLock();\n    private Condition condition = lock.newCondition();\n\n    public void before() {\n        lock.lock();\n        try {\n            System.out.println(\"before\");\n            condition.signalAll();\n        } finally {\n            lock.unlock();\n        }\n    }\n\n    public void after() {\n        lock.lock();\n        try {\n            condition.await();\n            System.out.println(\"after\");\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        } finally {\n            lock.unlock();\n        }\n    }\n}\n\npublic static void main(String[] args) {\n    ExecutorService executorService = Executors.newCachedThreadPool();\n    AwaitSignalExample example = new AwaitSignalExample();\n    executorService.execute(() -> example.after());\n    executorService.execute(() -> example.before());\n}\n\nbefore\nafter\n\n"},"Java/Java并发/J.U.C组件.html":{"url":"Java/Java并发/J.U.C组件.html","title":"J.U.C组件","keywords":"","body":"J.U.C组件\njava.util.concurrent（J.U.C）大大提高了并发性能，AQS 被认为是 J.U.C 的核心。(AQS源码暂时没看...)\nCountDownLatch\n用来控制一个线程等待多个线程。\n维护了一个计数器 cnt，每次调用 countDown() 方法会让计数器的值减 1，减到 0 的时候，那些因为调用 await() 方法而在等待的线程就会被唤醒。\n\npublic class CountdownLatchExample {\n\n    public static void main(String[] args) throws InterruptedException {\n        final int totalThread = 10;\n        CountDownLatch countDownLatch = new CountDownLatch(totalThread);\n        ExecutorService executorService = Executors.newCachedThreadPool();\n        for (int i = 0; i  {\n                System.out.print(\"run..\");\n                countDownLatch.countDown();\n            });\n        }\n        countDownLatch.await();\n        System.out.println(\"end\");\n        executorService.shutdown();\n    }\n}\n\nrun..run..run..run..run..run..run..run..run..run..end\n\nCyclicBarrier\n用来控制多个线程互相等待，只有当多个线程都到达时，这些线程才会继续执行。\n和 CountdownLatch 相似，都是通过维护计数器来实现的。线程执行 await() 方法之后计数器会减 1，并进行等待，直到计数器为 0，所有调用 await() 方法而在等待的线程才能继续执行。\nCyclicBarrier 和 CountdownLatch 的一个区别是，CyclicBarrier 的计数器通过调用 reset() 方法可以循环使用，所以它才叫做循环屏障。\nCyclicBarrier 有两个构造函数，其中 parties 指示计数器的初始值，barrierAction 在所有线程都到达屏障的时候会执行一次。\npublic CyclicBarrier(int parties, Runnable barrierAction) {\n    if (parties \n\npublic class CyclicBarrierExample {\n\n    public static void main(String[] args) {\n        final int totalThread = 10;\n        CyclicBarrier cyclicBarrier = new CyclicBarrier(totalThread);\n        ExecutorService executorService = Executors.newCachedThreadPool();\n        for (int i = 0; i  {\n                System.out.print(\"before..\");\n                try {\n                    cyclicBarrier.await();\n                } catch (InterruptedException | BrokenBarrierException e) {\n                    e.printStackTrace();\n                }\n                System.out.print(\"after..\");\n            });\n        }\n        executorService.shutdown();\n    }\n}\n\nbefore..before..before..before..before..before..before..before..before..before..after..after..after..after..after..after..after..after..after..after..\n\nSemaphore\nSemaphore 类似于操作系统中的信号量，可以控制对互斥资源的访问线程数。\n以下代码模拟了对某个服务的并发请求，每次只能有 3 个客户端同时访问，请求总数为 10。\npublic class SemaphoreExample {\n\n    public static void main(String[] args) {\n        final int clientCount = 3;\n        final int totalRequestCount = 10;\n        Semaphore semaphore = new Semaphore(clientCount);\n        ExecutorService executorService = Executors.newCachedThreadPool();\n        for (int i = 0; i {\n                try {\n                    semaphore.acquire();\n                    System.out.print(semaphore.availablePermits() + \" \");\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                } finally {\n                    semaphore.release();\n                }\n            });\n        }\n        executorService.shutdown();\n    }\n}\n\n2 1 2 2 2 2 2 1 2 2\n\nFutureTask\n在介绍 Callable 时我们知道它可以有返回值，返回值通过 Future 进行封装。FutureTask 实现了 RunnableFuture 接口，该接口继承自 Runnable 和 Future 接口，这使得 FutureTask 既可以当做一个任务执行，也可以有返回值。\npublic class FutureTask implements RunnableFuture\n\npublic class FutureTask implements RunnableFuture\n\nFutureTask 可用于异步获取执行结果或取消执行任务的场景。当一个计算任务需要执行很长时间，那么就可以用 FutureTask 来封装这个任务，主线程在完成自己的任务之后再去获取结果。\npublic class FutureTaskExample {\n\n    public static void main(String[] args) throws ExecutionException, InterruptedException {\n        FutureTask futureTask = new FutureTask(new Callable() {\n            @Override\n            public Integer call() throws Exception {\n                int result = 0;\n                for (int i = 0; i  {\n            System.out.println(\"other task is running...\");\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        otherThread.start();\n        System.out.println(futureTask.get());\n    }\n}\n\nother task is running...\n4950\n\nBlockingQueue\njava.util.concurrent.BlockingQueue 接口有以下阻塞队列的实现：\n\nFIFO 队列 ：LinkedBlockingQueue、ArrayBlockingQueue（固定长度）\n优先级队列 ：PriorityBlockingQueue\n\n提供了阻塞的 take() 和 put() 方法：如果队列为空 take() 将阻塞，直到队列中有内容；如果队列为满 put() 将阻塞，直到队列有空闲位置。\n使用 BlockingQueue 实现生产者消费者问题\npublic class ProducerConsumer {\n\n    private static BlockingQueue queue = new ArrayBlockingQueue<>(5);\n\n    private static class Producer extends Thread {\n        @Override\n        public void run() {\n            try {\n                queue.put(\"product\");\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            System.out.print(\"produce..\");\n        }\n    }\n\n    private static class Consumer extends Thread {\n\n        @Override\n        public void run() {\n            try {\n                String product = queue.take();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            System.out.print(\"consume..\");\n        }\n    }\n}\n\npublic static void main(String[] args) {\n    for (int i = 0; i \nproduce..produce..consume..consume..produce..consume..produce..consume..produce..consume..\n\nForkJoin\n主要用于并行计算中，和 MapReduce 原理类似，都是把大的计算任务拆分成多个小任务并行计算。\npublic class ForkJoinExample extends RecursiveTask {\n\n    private final int threshold = 5;\n    private int first;\n    private int last;\n\n    public ForkJoinExample(int first, int last) {\n        this.first = first;\n        this.last = last;\n    }\n\n    @Override\n    protected Integer compute() {\n        int result = 0;\n        if (last - first \npublic static void main(String[] args) throws ExecutionException, InterruptedException {\n    ForkJoinExample example = new ForkJoinExample(1, 10000);\n    ForkJoinPool forkJoinPool = new ForkJoinPool();\n    Future result = forkJoinPool.submit(example);\n    System.out.println(result.get());\n}\n\nForkJoin 使用 ForkJoinPool 来启动，它是一个特殊的线程池，线程数量取决于 CPU 核数。\npublic class ForkJoinPool extends AbstractExecutorService\n\nForkJoinPool 实现了工作窃取算法来提高 CPU 的利用率。每个线程都维护了一个双端队列，用来存储需要执行的任务。工作窃取算法允许空闲的线程从其它线程的双端队列中窃取一个任务来执行。窃取的任务必须是最晚的任务，避免和队列所属线程发生竞争。例如下图中，Thread2 从 Thread1 的队列中拿出最晚的 Task1 任务，Thread1 会拿出 Task2 来执行，这样就避免发生竞争。但是如果队列中只有一个任务时还是会发生竞争。\n\n"},"Java/Java并发/Java内存模型.html":{"url":"Java/Java并发/Java内存模型.html","title":"Java内存模型","keywords":"","body":"Java内存模型\nJava 内存模型试图屏蔽各种硬件和操作系统的内存访问差异，以实现让 Java 程序在各种平台下都能达到一致的内存访问效果。\n主内存和工作内存\n处理器上的寄存器的读写的速度比内存快几个数量级，为了解决这种速度矛盾，在它们之间加入了高速缓存。\n加入高速缓存带来了一个新的问题：缓存一致性。如果多个缓存共享同一块主内存区域，那么多个缓存的数据可能会不一致，需要一些协议来解决这个问题。\n\nJava 内存模型约定：所有的变量都存储在主内存中，每个线程还有自己的工作内存，工作内存存储在高速缓存或者寄存器中，保存了该线程使用的变量的主内存副本拷贝。\n线程只能直接操作工作内存中的变量，不同线程之间的变量值传递需要通过主内存来完成。\n\n内存间交互操作\nJava 内存模型定义了 8 个操作来完成主内存和工作内存的交互操作。\n\n\nread：把一个变量的值从主内存传输到工作内存中\nload：在 read 之后执行，把 read 得到的值放入工作内存的变量副本中\nuse：把工作内存中一个变量的值传递给执行引擎\nassign：把一个从执行引擎接收到的值赋给工作内存的变量\nstore：把工作内存的一个变量的值传送到主内存中\nwrite：在 store 之后执行，把 store 得到的值放入主内存的变量中\nlock：作用于主内存的变量，把一个变量标识为一条线程独占的状态\nunlock：作用于主内存的变量，把一个处于锁定状态的变量释放出来\n\n内存模型的三大特性\n1. 原子性\nJava 内存模型保证了 read、load、use、assign、store、write、lock 和 unlock 操作具有原子性，例如对一个 int 类型的变量执行 assign 赋值操作，这个操作就是原子性的。但是 Java 内存模型允许虚拟机将没有被 volatile 修饰的 64 位数据（long，double）的读写操作划分为两次 32 位的操作来进行，即 load、store、read 和 write 操作可以不具备原子性。如果有多个线程共享一个并未声明为 volatile 的 long 或 double 类型的变量，并且同时对它们进行读取和修改操作，那么某些线程可能会读取到一个既非原值，也不是其他线程修改值的代表了 \"半个变量\" 的数值。(不过这种读取到 \" 半个变量\" 的情况非常罕见，在目前商用 Java 虚拟机中不会出现。因为在实际开发中，目前各种平台下的商用虚拟机几乎都选择把64位数据的读写操作作为原子操作来对待。)\n有一个错误认识就是，int 等原子性的类型在多线程环境中不会出现线程安全问题。以下代码演示了 1000 个线程同时对 cnt 执行自增操作，操作结束之后它的值有可能小于 1000。\npublic class ThreadUnsafeExample {\n\n    private int cnt = 0;\n\n    public void add() {\n        cnt++;\n    }\n\n    public int get() {\n        return cnt;\n    }\n}\n\npublic static void main(String[] args) throws InterruptedException {\n    final int threadSize = 1000;\n    ThreadUnsafeExample example = new ThreadUnsafeExample();\n    final CountDownLatch countDownLatch = new CountDownLatch(threadSize);\n    ExecutorService executorService = Executors.newCachedThreadPool();\n    for (int i = 0; i  {\n            example.add();\n            countDownLatch.countDown();\n        });\n    }\n    countDownLatch.await();\n    executorService.shutdown();\n    System.out.println(example.get());\n}\n\n997\n\n前面的线程不安全示例代码中，cnt 属于 int 类型变量，1000 个线程对它进行自增操作之后，得到的值为 997 而不是 1000。\n为了方便讨论，将内存间的交互操作简化为 3 个：load、assign、store。\n下图演示了两个线程同时对 cnt 进行操作，虽然 load、assign、store 这些单个操作具备原子性，但是 load、assign、store 这一系列操作整体上看不具备原子性，那么在 T1 修改 cnt 并且还没有将修改后的值写入主内存，T2 依然可以读入旧值。可以看出，这两个线程虽然执行了两次自增运算，但是主内存中 cnt 的值最后为 1 而不是 2。\n\nAtomicInteger 能保证多个线程修改的原子性。\n\n使用 AtomicInteger 重写之前线程不安全的代码之后得到以下线程安全实现：\npublic class AtomicExample {\n    private AtomicInteger cnt = new AtomicInteger();\n\n    public void add() {\n        cnt.incrementAndGet();\n    }\n\n    public int get() {\n        return cnt.get();\n    }\n}\n\npublic static void main(String[] args) throws InterruptedException {\n    final int threadSize = 1000;\n    AtomicExample example = new AtomicExample(); // 只修改这条语句\n    final CountDownLatch countDownLatch = new CountDownLatch(threadSize);\n    ExecutorService executorService = Executors.newCachedThreadPool();\n    for (int i = 0; i  {\n            example.add();\n            countDownLatch.countDown();\n        });\n    }\n    countDownLatch.await();\n    executorService.shutdown();\n    System.out.println(example.get());\n}\n\n1000\n\n除了使用原子类之外，也可以使用 synchronized 互斥锁来保证操作的原子性。它对应的内存间交互操作为：lock 和 unlock，在虚拟机实现上对应的字节码指令为 monitorenter 和 monitorexit。\npublic class AtomicSynchronizedExample {\n    private int cnt = 0;\n\n    public synchronized void add() {\n        cnt++;\n    }\n\n    public synchronized int get() {\n        return cnt;\n    }\n}\n\npublic static void main(String[] args) throws InterruptedException {\n    final int threadSize = 1000;\n    AtomicSynchronizedExample example = new AtomicSynchronizedExample();\n    final CountDownLatch countDownLatch = new CountDownLatch(threadSize);\n    ExecutorService executorService = Executors.newCachedThreadPool();\n    for (int i = 0; i  {\n            example.add();\n            countDownLatch.countDown();\n        });\n    }\n    countDownLatch.await();\n    executorService.shutdown();\n    System.out.println(example.get());\n}\n\n1000\n\n1. 可见性\n可见性指当一个线程修改了共享变量的值，其它线程能够立即得知这个修改。Java 内存模型是通过在变量修改后将新值同步回主内存，在变量读取前从主内存刷新变量值来实现可见性的。\n主要有有三种实现可见性的方式：\n\nvolatile\nsynchronized，对一个变量执行 unlock 操作之前，必须把变量值同步回主内存。\nfinal，被 final 关键字修饰的字段在构造器中一旦初始化完成，并且没有发生 this 逃逸（其它线程通过 this 引用访问到初始化了一半的对象），那么其它线程就能看见 final 字段的值。\n\n虽然 volatile 可以保证可见性，但是对前面的线程不安全示例中的 cnt 变量使用 volatile 修饰，不能解决线程不安全问题，因为 volatile 并不能保证操作的原子性。\n3. 有序性\n有序性是指：在本线程内观察，所有操作都是有序的。在一个线程观察另一个线程，所有操作都是无序的，无序是因为发生了指令重排序。在 Java 内存模型中，允许编译器和处理器对指令进行重排序，重排序过程不会影响到单线程程序的执行，却会影响到多线程并发执行的正确性。\nvolatile 关键字通过添加内存屏障的方式来禁止指令重排，即重排序时不能把后面的指令放到内存屏障之前。\n也可以通过 synchronized 来保证有序性，它保证每个时刻只有一个线程执行同步代码，相当于是让线程顺序执行同步代码。\n先行发生原则 (happens-before原则)\n上面提到了可以用 volatile 和 synchronized 来保证有序性。除此之外，JVM 还规定了先行发生原则，让一个操作无需任何同步控制就能先于另一个操作完成。\n1. 单一线程原则\n\nSingle Thread rule\n\n在一个线程内，在程序前面的操作先行发生于后面的操作。\n\n2. 管程锁定规则\n\nMonitor Lock Rule\n\n一个 unlock 操作先行发生于后面对同一个锁的 lock 操作。\n\nvolatile 变量规则\n\nVolatile Variable Rule\n\n对一个 volatile 变量的 write 操作先行发生于后面对这个变量的 read 操作。\n\n4. 线程启动规则\n\nThread Start Rule\n\nThread 对象的 start() 方法调用先行发生于此线程的每一个动作。\n\n5. 线程 join 规则\n\nThread Join Rule\n\nThread 对象的结束先行发生于 join() 方法返回。\n\n6. 线程中断规则\n\nThread Interruption Rule\n\n对线程 interrupt() 方法的调用先行发生于被中断线程的代码检测到中断事件的发生，可以通过 interrupted() 方法检测到是否有中断发生。\n7. 对象终结规则\n\nFinalizer Rule\n\n一个对象的初始化完成（构造函数执行结束）先行发生于它的 finalize() 方法的开始。\n8. 传递性\n\nTransitivity\n\n如果操作 A 先行发生于操作 B，操作 B 先行发生于操作 C，那么操作 A 先行发生于操作 C。\n"},"Java/Java并发/线程安全.html":{"url":"Java/Java并发/线程安全.html","title":"线程安全","keywords":"","body":"线程安全\n线程安全指的是：多个线程不管以何种方式访问某个类，并且在主调代码中不需要进行同步，都能表现正确的行为。\n线程安全有以下几种实现方式：\n不可变\n不可变（Immutable）的对象一定是线程安全的，不需要再采取任何的线程安全保障措施。只要一个不可变的对象被正确地构建出来，永远也不会看到它在多个线程之中处于不一致的状态。多线程环境下，应当尽量使对象成为不可变，来满足线程安全。\n不可变的类型：\n\nfinal 关键字修饰的基本数据类型\nString\n枚举类型\nNumber 部分子类，如 Long 和 Double 等数值包装类型，BigInteger 和 BigDecimal 等大数据类型。但同为 Number 的原子类 AtomicInteger 和 AtomicLong 则是可变的。\n\n对于集合类型，可以使用 Collections.unmodifiableXXX() 方法来获取一个不可变的集合。\npublic class ImmutableExample {\n    public static void main(String[] args) {\n        Map map = new HashMap<>();\n        Map unmodifiableMap = Collections.unmodifiableMap(map);\n        unmodifiableMap.put(\"a\", 1);\n    }\n}\n\nException in thread \"main\" java.lang.UnsupportedOperationException\n    at java.util.Collections$UnmodifiableMap.put(Collections.java:1457)\n    at ImmutableExample.main(ImmutableExample.java:9)\n\nCollections.unmodifiableXXX() 先对原始的集合进行拷贝，需要对集合进行修改的方法都直接抛出异常。\npublic V put(K key, V value) {\n    throw new UnsupportedOperationException();\n}\n\n互斥同步\nsynchronized 和 ReentrantLock。\n非阻塞同步\n互斥同步最主要的问题就是线程阻塞和唤醒所带来的性能问题，因此这种同步也称为阻塞同步。\n互斥同步属于一种悲观的并发策略，总是认为只要不去做正确的同步措施，那就肯定会出现问题。无论共享数据是否真的会出现竞争，它都要进行加锁（这里讨论的是概念模型，实际上虚拟机会优化掉很大一部分不必要的加锁）、用户态核心态转换、维护锁计数器和检查是否有被阻塞的线程需要唤醒等操作。\n1. CAS\n随着硬件指令集的发展，我们可以使用基于冲突检测的乐观并发策略：先进行操作，如果没有其它线程争用共享数据，那操作就成功了，否则采取补偿措施（不断地重试，直到成功为止）。这种乐观的并发策略的许多实现都不需要将线程阻塞，因此这种同步操作称为非阻塞同步。\n乐观锁需要操作和冲突检测这两个步骤具备原子性，这里就不能再使用互斥同步来保证了，只能靠硬件来完成。硬件支持的原子性操作最典型的是：比较并交换（Compare-and-Swap，CAS）。CAS 指令需要有 3 个操作数，分别是内存地址 V、旧的预期值 A 和新值 B。当执行操作时，只有当 V 的值等于 A，才将 V 的值更新为 B。\n2. AtomicInteger\nJ.U.C 包里面的整数原子类 AtomicInteger 的方法调用了 Unsafe 类的 CAS 操作。\n以下代码使用了 AtomicInteger 执行了自增的操作。\nprivate AtomicInteger cnt = new AtomicInteger();\n\npublic void add() {\n    cnt.incrementAndGet();\n}\n\n以下代码是 incrementAndGet() 的源码，它调用了 Unsafe 的 getAndAddInt() 。\npublic final int incrementAndGet() {\n    return unsafe.getAndAddInt(this, valueOffset, 1) + 1;\n}\n\n以下代码是 getAndAddInt() 源码，var1 指示对象内存地址，var2 指示该字段相对对象内存地址的偏移，var4 指示操作需要加的数值，这里为 1。通过 getIntVolatile(var1, var2) 得到旧的预期值，通过调用 compareAndSwapInt() 来进行 CAS 比较，如果该字段内存地址中的值等于 var5，那么就更新内存地址为 var1+var2 的变量为 var5+var4。\n可以看到 getAndAddInt() 在一个循环中进行，发生冲突的做法是不断的进行重试。\npublic final int getAndAddInt(Object var1, long var2, int var4) {\n    int var5;\n    do {\n        var5 = this.getIntVolatile(var1, var2);\n    } while(!this.compareAndSwapInt(var1, var2, var5, var5 + var4));\n\n    return var5;\n}\n\n3. ABA\n如果一个变量初次读取的时候是 A 值，它的值被改成了 B，后来又被改回为 A，那 CAS 操作就会误认为它从来没有被改变过。\nJ.U.C 包提供了一个带有标记的原子引用类 AtomicStampedReference 来解决这个问题，它可以通过控制变量值的版本来保证 CAS 的正确性。大部分情况下 ABA 问题不会影响程序并发的正确性，如果需要解决 ABA 问题，改用传统的互斥同步可能会比原子类更高效。\n无同步方案\n要保证线程安全，并不是一定就要进行同步。如果一个方法本来就不涉及共享数据，那它自然就无须任何同步措施去保证正确性。\n1. 栈封闭\n多个线程访问同一个方法的局部变量时，不会出现线程安全问题，因为局部变量存储在虚拟机栈中，属于线程私有的。\npublic class StackClosedExample {\n    public void add100() {\n        int cnt = 0;\n        for (int i = 0; i \npublic static void main(String[] args) {\n    StackClosedExample example = new StackClosedExample();\n    ExecutorService executorService = Executors.newCachedThreadPool();\n    executorService.execute(() -> example.add100());\n    executorService.execute(() -> example.add100());\n    executorService.shutdown();\n}\n\n100\n100\n\n2. 线程本地存储\n如果一段代码中所需要的数据必须与其他代码共享，那就看看这些共享数据的代码是否能保证在同一个线程中执行。如果能保证，我们就可以把共享数据的可见范围限制在同一个线程之内，这样，无须同步也能保证线程之间不出现数据争用的问题。\n符合这种特点的应用并不少见，大部分使用消费队列的架构模式（如“生产者-消费者”模式）都会将产品的消费过程尽量在一个线程中消费完。其中最重要的一个应用实例就是经典 Web 交互模型中的“一个请求对应一个服务器线程”（Thread-per-Request）的处理方式，这种处理方式的广泛应用使得很多 Web 服务端应用都可以使用线程本地存储来解决线程安全问题。\n可以使用 java.lang.ThreadLocal 类来实现线程本地存储功能。\n对于以下代码，thread1 中设置 threadLocal 为 1，而 thread2 设置 threadLocal 为 2。过了一段时间之后，thread1 读取 threadLocal 依然是 1，不受 thread2 的影响。\npublic class ThreadLocalExample {\n    public static void main(String[] args) {\n        ThreadLocal threadLocal = new ThreadLocal();\n        Thread thread1 = new Thread(() -> {\n            threadLocal.set(1);\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            System.out.println(threadLocal.get());\n            threadLocal.remove();\n        });\n        Thread thread2 = new Thread(() -> {\n            threadLocal.set(2);\n            threadLocal.remove();\n        });\n        thread1.start();\n        thread2.start();\n    }\n}\n\n1\n\n为了理解 ThreadLocal，先看以下代码：\npublic class ThreadLocalExample1 {\n    public static void main(String[] args) {\n        ThreadLocal threadLocal1 = new ThreadLocal();\n        ThreadLocal threadLocal2 = new ThreadLocal();\n        Thread thread1 = new Thread(() -> {\n            threadLocal1.set(1);\n            threadLocal2.set(1);\n        });\n        Thread thread2 = new Thread(() -> {\n            threadLocal1.set(2);\n            threadLocal2.set(2);\n        });\n        thread1.start();\n        thread2.start();\n    }\n}\n\n它所对应的底层结构图为：\n\n每个 Thread 类的对象都有一个 ThreadLocal.ThreadLocalMap 对象。\n/* ThreadLocal values pertaining to this thread. This map is maintained\n * by the ThreadLocal class. */\nThreadLocal.ThreadLocalMap threadLocals = null;\n\n当调用一个 ThreadLocal 的 set(T value) 方法时，先得到当前线程的 ThreadLocalMap 对象，然后将 ThreadLocal->value 键值对插入到该 Map 中。\npublic void set(T value) {\n    Thread t = Thread.currentThread();\n    ThreadLocalMap map = getMap(t);\n    if (map != null)\n        map.set(this, value);\n    else\n        createMap(t, value);\n}\n\nget() 方法类似。\npublic T get() {\n    Thread t = Thread.currentThread();\n    ThreadLocalMap map = getMap(t);\n    if (map != null) {\n        ThreadLocalMap.Entry e = map.getEntry(this);\n        if (e != null) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T)e.value;\n            return result;\n        }\n    }\n    return setInitialValue();\n}\n\nThreadLocal 从理论上讲并不是用来解决多线程并发问题的，因为根本不存在多线程竞争。\n在一些场景 (尤其是使用线程池) 下，由于 ThreadLocal.ThreadLocalMap 的底层数据结构导致 ThreadLocal 有内存泄漏的情况，应该尽可能在每次使用 ThreadLocal 后手动调用 remove()，以避免出现 ThreadLocal 经典的内存泄漏甚至是造成自身业务混乱的风险。\n关于 ThreadLocal 的深入解析见 ThreadLocal \n3. 可重入代码 (Reentrant Code)\n这种代码也叫做纯代码（Pure Code），可以在代码执行的任何时刻中断它，转而去执行另外一段代码（包括递归调用它本身），而在控制权返回后，原来的程序不会出现任何错误。\n可重入代码有一些共同的特征，例如不依赖存储在堆上的数据和公用的系统资源、用到的状态量都由参数中传入、不调用非可重入的方法等。\n"},"Java/Java并发/ThreadLocal .html":{"url":"Java/Java并发/ThreadLocal .html","title":"ThreadLocal ","keywords":"","body":"ThreadLocal\nThreadLocal 解决什么问题\n由于 ThreadLocal 支持范型，如 ThreadLocal，为表述方便，后文用 变量 代表 ThreadLocal 本身，而用 实例 代表具体类型（如 StringBuidler ）的实例。\n不恰当的理解\n有很多关于 ThreadLocal 的适用场景以及解决的问题，描述的并不清楚，甚至是错的。下面是常见的对于 ThreadLocal的介绍\n\nThreadLocal为解决多线程程序的并发问题提供了一种新的思路\nThreadLocal的目的是为了解决多线程访问资源时的共享问题\n\n还有很多文章在对比 ThreadLocal 与 synchronize 的异同。既然是作比较，那应该是认为这两者解决相同或类似的问题。\n上面描述的问题在于，ThreadLocal 并不解决多线程 共享 变量的问题。既然变量不共享，那就更谈不上同步的问题。\n合理的理解\nThreadLoal 变量，它的基本原理是，同一个 ThreadLocal 所包含的对象（对ThreadLocal而言即为 String 类型变量），在不同的 Thread 中有不同的副本（实际是不同的实例，后文会详细阐述）。这里有几点需要注意\n\n因为每个 Thread 内有自己的实例副本，且该副本只能由当前 Thread 使用。这是也是 ThreadLocal 命名的由来\n既然每个 Thread 有自己的实例副本，且其它 Thread 不可访问，那就不存在多线程间共享的问题\n既无共享，何来同步问题，又何来解决同步问题一说？\n\n那 ThreadLocal 到底解决了什么问题，又适用于什么样的场景？\n\nThis class provides thread-local variables. These variables differ from their normal counterparts in that each thread that accesses one (via its get or set method) has its own, independently initialized copy of the variable. ThreadLocal instances are typically private static fields in classes that wish to associate state with a thread (e.g., a user ID or Transaction ID).\nEach thread holds an implicit reference to its copy of a thread-local variable as long as the thread is alive and the ThreadLocal instance is accessible; after a thread goes away, all of its copies of thread-local instances are subject to garbage collection (unless other references to these copies exist).\n\n核心意思是\n\nThreadLocal 提供了线程本地的实例。它与普通变量的区别在于，每个使用该变量的线程都会初始化一个完全独立的实例副本。ThreadLocal 变量通常被private static修饰。当一个线程结束时，它所使用的所有 ThreadLocal 相对的实例副本都可被回收。\n\n总的来说，ThreadLocal 适用于每个线程需要自己独立的实例且该实例需要在多个方法中被使用，也即变量在线程间隔离而在方法或类间共享的场景。后面会通过实例详细阐述该观点。另外，该场景下，并非必须使用 ThreadLocal ，其它方式完全可以实现同样的效果，只是 ThreadLocal 使得实现更简洁。\nThreadLocal 原理\n既然每个访问 ThreadLocal 变量的线程都有自己的一个“本地”实例副本。一个可能的方案是 ThreadLocal 维护一个 Map，键是 Thread，值是它在该 Thread 内的实例。线程通过该 ThreadLocal 的 get() 方案获取实例时，只需要以线程为键，从 Map 中找出对应的实例即可。该方案如下图所示\n\n该方案可满足上文提到的每个线程内一个独立备份的要求。每个新线程访问该 ThreadLocal 时，需要向 Map 中添加一个映射，而每个线程结束时，应该清除该映射。这里就有两个问题：\n\n增加线程与减少线程均需要写 Map，故需保证该 Map 线程安全。虽然可以用 ConcurrentHashMap 实现线程安全的 Map，但它或多或少都需要锁来保证线程的安全性\n线程结束时，需要保证它所访问的所有 ThreadLocal 中对应的映射均删除，否则可能会引起内存泄漏。（后面会介绍避免内存泄漏的方法）\n\n其中锁的问题，是 JDK 未采用该方案的一个原因。\nThread 维护 ThreadLocal 与实例的映射\n上述方案中，出现锁的问题，原因在于多线程访问同一个 Map。如果该 Map 由 Thread 维护，从而使得每个 Thread 只访问自己的 Map，那就不存在多线程写的问题，也就不需要锁。该方案如下图所示。\n\n该方案虽然没有锁的问题，但是由于每个线程访问某 ThreadLocal 变量后，都会在自己的 Map 内维护该 ThreadLocal 变量与具体实例的映射，如果不删除这些引用（映射），则这些 ThreadLocal 不能被回收，可能会造成内存泄漏。后文会介绍 JDK 如何解决该问题。\nThreadLocal 在 JDK 8 中的实现\nThreadLocalMap与内存泄漏\n该方案中，Map 由 ThreadLocal 类的静态内部类 ThreadLocalMap 提供。该类的实例维护某个 ThreadLocal 与具体实例的映射。与 HashMap 不同的是，ThreadLocalMap 的每个 Entry 都是一个对 键 的弱引用，这一点从super(k)可看出。另外，每个 Entry 都包含了一个对 值 的强引用。\nstatic class Entry extends WeakReference> {\n  /** The value associated with this ThreadLocal. */\n  Object value;\n\n  Entry(ThreadLocal k, Object v) {\n    super(k);\n    value = v;\n  }\n}\n\n使用弱引用的原因在于，当没有强引用指向 ThreadLocal 变量时，它可被回收，从而避免上文所述 ThreadLocal 不能被回收而造成的内存泄漏的问题。\n但是，这里又可能出现另外一种内存泄漏的问题。ThreadLocalMap 维护 ThreadLocal 变量与具体实例的映射，当 ThreadLocal 变量被回收后，该映射的键变为 null，该 Entry 无法被移除。从而使得实例被该 Entry 引用而无法被回收造成内存泄漏。\n注：Entry虽然是弱引用，但它是 ThreadLocal 类型的弱引用（也即上文所述它是对 键 的弱引用），而非具体实例的的弱引用，所以无法避免具体实例相关的内存泄漏。\n读取实例\n读取实例方法如下所示\npublic T get() {\n  Thread t = Thread.currentThread();\n  ThreadLocalMap map = getMap(t);\n  if (map != null) {\n    ThreadLocalMap.Entry e = map.getEntry(this);\n    if (e != null) {\n      @SuppressWarnings(\"unchecked\")\n      T result = (T)e.value;\n      return result;\n    }\n  }\n  return setInitialValue();\n}\n\n读取实例时，线程首先通过getMap(t)方法获取自身的 ThreadLocalMap。从如下该方法的定义可见，该 ThreadLocalMap 的实例是 Thread 类的一个字段，即由 Thread 维护 ThreadLocal 对象与具体实例的映射，这一点与上文分析一致。\nThreadLocalMap getMap(Thread t) {\n  return t.threadLocals;\n}\n\n获取到 ThreadLocalMap 后，通过map.getEntry(this)方法获取该 ThreadLocal 在当前线程的 ThreadLocalMap 中对应的 Entry。该方法中的 this 即当前访问的 ThreadLocal 对象。\n如果获取到的 Entry 不为 null，从 Entry 中取出值即为所需访问的本线程对应的实例。如果获取到的 Entry 为 null，则通过setInitialValue()方法设置该 ThreadLocal 变量在该线程中对应的具体实例的初始值。\n设置初始值\n设置初始值方法如下\nprivate T setInitialValue() {\n  T value = initialValue();\n  Thread t = Thread.currentThread();\n  ThreadLocalMap map = getMap(t);\n  if (map != null)\n    map.set(this, value);\n  else\n    createMap(t, value);\n  return value;\n}\n\n该方法为 private 方法，无法被重载。\n首先，通过initialValue()方法获取初始值。该方法为 public 方法，且默认返回 null。所以典型用法中常常重载该方法。上例中即在内部匿名类中将其重载。\n然后拿到该线程对应的 ThreadLocalMap 对象，若该对象不为 null，则直接将该 ThreadLocal 对象与对应实例初始值的映射添加进该线程的 ThreadLocalMap中。若为 null，则先创建该 ThreadLocalMap 对象再将映射添加其中。\n这里并不需要考虑 ThreadLocalMap 的线程安全问题。因为每个线程有且只有一个 ThreadLocalMap 对象，并且只有该线程自己可以访问它，其它线程不会访问该 ThreadLocalMap，也即该对象不会在多个线程中共享，也就不存在线程安全的问题。\n设置实例\n除了通过initialValue()方法设置实例的初始值，还可通过 set 方法设置线程内实例的值，如下所示。\npublic void set(T value) {\n  Thread t = Thread.currentThread();\n  ThreadLocalMap map = getMap(t);\n  if (map != null)\n    map.set(this, value);\n  else\n    createMap(t, value);\n}\n\n该方法先获取该线程的 ThreadLocalMap 对象，然后直接将 ThreadLocal 对象（即代码中的 this）与目标实例的映射添加进 ThreadLocalMap 中。当然，如果映射已经存在，就直接覆盖。另外，如果获取到的 ThreadLocalMap 为 null，则先创建该 ThreadLocalMap 对象。\n防止内存泄漏\n对于已经不再被使用且已被回收的 ThreadLocal 对象，它在每个线程内对应的实例由于被线程的 ThreadLocalMap 的 Entry 强引用，无法被回收，可能会造成内存泄漏。\n针对该问题，ThreadLocalMap 的 set 方法中，通过 replaceStaleEntry 方法将所有键为 null 的 Entry 的值设置为 null，从而使得该值可被回收。另外，会在 rehash 方法中通过 expungeStaleEntry 方法将键和值为 null 的 Entry 设置为 null 从而使得该 Entry 可被回收。通过这种方式，ThreadLocal 可防止内存泄漏。\nprivate void set(ThreadLocal key, Object value) {\n  Entry[] tab = table;\n  int len = tab.length;\n  int i = key.threadLocalHashCode & (len-1);\n\n  for (Entry e = tab[i]; e != null; e = tab[i = nextIndex(i, len)]) {\n    ThreadLocal k = e.get();\n    if (k == key) {\n      e.value = value;\n      return;\n    }\n    if (k == null) {\n      replaceStaleEntry(key, value, i);\n      return;\n    }\n  }\n  tab[i] = new Entry(key, value);\n  int sz = ++size;\n  if (!cleanSomeSlots(i, sz) && sz >= threshold)\n    rehash();\n}\n\n适用场景\n如上文所述，ThreadLocal 适用于如下两种场景\n\n每个线程需要有自己单独的实例\n实例需要在多个方法中共享，但不希望被多线程共享\n\n对于第一点，每个线程拥有自己实例，实现它的方式很多。例如可以在线程内部构建一个单独的实例。ThreadLocal 可以以非常方便的形式满足该需求。\n对于第二点，可以在满足第一点（每个线程有自己的实例）的条件下，通过方法间引用传递的形式实现。ThreadLocal 使得代码耦合度更低，且实现更优雅。\n如果单看其中某一点，替代方法很多。比如可通过在线程内创建局部变量可实现每个线程有自己的实例，使用静态变量可实现变量在方法间的共享。但如果要同时满足变量在线程间的隔离与方法间的共享，ThreadLocal再合适不过。\n总结\n\nThreadLocal 并不解决线程间共享数据的问题\n\nThreadLocal 通过隐式的在不同线程内创建独立实例副本避免了实例线程安全的问题\n\n每个线程持有一个 Map 并维护了 ThreadLocal 对象与具体实例的映射，该 Map 由于只被持有它的线程访问，故不存在线程安全以及锁的问题\n\nThreadLocalMap 的 Entry 对 ThreadLocal 的引用为弱引用，避免了 ThreadLocal 对象无法被回收的问题\n\nThreadLocalMap 的 set 方法通过调用 replaceStaleEntry 方法回收键为 null 的 Entry 对象的值（即为具体实例）以及 Entry 对象本身从而防止内存泄漏\n\nThreadLocal 适用于变量在线程间隔离且在方法间共享的场景\n\n\nJava进阶（七）正确理解Thread Local的原理与适用场景\n"},"Java/Java并发/锁优化.html":{"url":"Java/Java并发/锁优化.html","title":"锁优化","keywords":"","body":"锁优化\n这里的锁优化主要是指 JVM 对 synchronized 的优化。\n自旋锁\n互斥同步进入阻塞状态的开销都很大，应该尽量避免。在许多应用中，共享数据的锁定状态只会持续很短的一段时间。自旋锁的思想是让一个线程在请求一个共享数据的锁时执行忙循环（自旋）一段时间，如果在这段时间内能获得锁，就可以避免进入阻塞状态。\n自旋锁虽然能避免进入阻塞状态从而减少开销，但是它需要进行忙循环操作占用 CPU 时间，它只适用于共享数据的锁定状态很短的场景。\n在 JDK 1.6 中引入了自适应的自旋锁。自适应意味着自旋的次数不再固定了，而是由前一次在同一个锁上的自旋次数及锁的拥有者的状态来决定。\n锁消除\n锁消除是指对于被检测出不可能存在竞争的共享数据的锁进行消除。\n锁消除主要是通过逃逸分析来支持，如果堆上的共享数据不可能逃逸出去被其它线程访问到，那么就可以把它们当成私有数据对待，也就可以将它们的锁进行消除。\n对于一些看起来没有加锁的代码，其实隐式的加了很多锁。例如下面的字符串拼接代码就隐式加了锁：\npublic static String concatString(String s1, String s2, String s3) {\n    return s1 + s2 + s3;\n}\n\nString 是一个不可变的类，编译器会对 String 的拼接自动优化。在 JDK 1.5 之前，会转化为 StringBuffer 对象的连续 append() 操作：\npublic static String concatString(String s1, String s2, String s3) {\n    StringBuffer sb = new StringBuffer();\n    sb.append(s1);\n    sb.append(s2);\n    sb.append(s3);\n    return sb.toString();\n}\n\n每个 append() 方法中都有一个同步块。虚拟机观察变量 sb，很快就会发现它的动态作用域被限制在 concatString() 方法内部。也就是说，sb 的所有引用永远不会逃逸到 concatString() 方法之外 (因为 sb 是 concatString() 的局部变量)，其他线程无法访问到它，因此可以进行消除。\n锁粗化\n如果一系列的连续操作都对同一个对象反复加锁和解锁，频繁的加锁操作就会导致性能损耗。\n上一节的示例代码中连续的 append() 方法就属于这类情况。如果虚拟机探测到由这样的一串零碎的操作都对同一个对象加锁，将会把加锁的范围扩展（粗化）到整个操作序列的外部。对于上一节的示例代码就是扩展到第一个 append() 操作之前直至最后一个 append() 操作之后，这样只需要加锁一次就可以了。\n轻量级锁 (*)\nJDK 1.6 引入了偏向锁和轻量级锁，从而让锁拥有了四个状态：无锁状态（unlocked）、偏向锁状态（biasble）、轻量级锁状态（lightweight locked）和重量级锁状态（inflated）。\n以下是 HotSpot 虚拟机对象头的内存布局，这些数据被称为 Mark Word。Mark Word 的数据结构并非固定，根据不同的状态会有不同的结构。其中 tag bits 对应了五个状态，这些状态在右侧的 state 表格中给出。比如在32位的 HotSpot 虚拟机中对象未被锁定 (tag bits 为0 01) 的状态下，Mark Word 的 32bit 空间中的 25bit 用于存储对象哈希码，4bit 用于存储对象分代年龄，2bit 用于存储锁标志位，1bit 固定为0。当对象处于轻量级锁状态时 (tag bits 为00)，Mark Word 存储指向锁记录 (Lock Record) 的指针。\n\n下图左侧是一个线程的虚拟机栈，其中有一部分称为 Lock Record 的区域，这是在轻量级锁运行过程创建的，用于存放锁对象的 Mark Word。而右侧就是一个锁对象，包含了 Mark Word 和其它信息。\n\n轻量级锁是相对于传统的重量级锁而言，它使用 CAS 操作来避免重量级锁使用互斥量的开销。对于绝大部分的锁，在整个同步周期内都是不存在竞争的，因此也就不需要都使用互斥量进行同步，可以先采用 CAS 操作进行同步，如果 CAS 失败了再改用互斥量进行同步。\n当尝试获取一个锁对象时，如果锁对象标记为 0 01，说明锁对象的锁处于未锁定（unlocked）状态。此时虚拟机在当前线程的虚拟机栈中创建 Lock Record (保存旧 Mark Word)，然后使用 CAS 操作将对象的 Mark Word 更新为 Lock Record 指针。如果 CAS 操作成功了，那么线程就获取了该对象上的锁，并且对象的 Mark Word 的锁标记变为 00，表示该对象处于轻量级锁状态。\n\n如果 CAS 操作失败了，虚拟机首先会检查对象的 Mark Word 是否指向当前线程的虚拟机栈，如果是的话说明当前线程已经拥有了这个锁对象，那就可以直接进入同步块继续执行，否则说明这个锁对象已经被其他线程线程抢占了。如果有两条以上的线程争用同一个锁，那轻量级锁就不再有效，要膨胀为重量级锁。\n关于轻量级锁的简介见 JAVA轻量级锁简介\n偏向锁\n偏向锁的思想是偏向于让第一个获取锁对象的线程，这个线程在之后获取该锁就不再需要进行同步操作，甚至连 CAS 操作也不再需要。\n当锁对象第一次被线程获得的时候，进入偏向状态，标记为 1 01。同时使用 CAS 操作将线程 ID 记录到 Mark Word 中，如果 CAS 操作成功，这个线程以后每次进入这个锁相关的同步块就不需要再进行任何同步操作。\n当有另外一个线程去尝试获取这个锁对象时，偏向状态就宣告结束，此时撤销偏向（Revoke Bias）后恢复到未锁定状态或者轻量级锁状态。\n"},"Java/Java并发/Best Practices.html":{"url":"Java/Java并发/Best Practices.html","title":"Best Practices","keywords":"","body":"多线程开发的良好实践\n\n给线程起个有意义的名字，这样可以方便找 Bug。\n缩小同步范围，从而减少锁争用。例如对于 synchronized，应该尽量使用同步块而不是同步方法。\n多用同步工具少用 wait() 和 notify()。首先，CountDownLatch, CyclicBarrier, Semaphore 和 Exchanger 这些同步类简化了编码操作，而用 wait() 和 notify() 很难实现复杂控制流；其次，这些同步类是由最好的企业编写和维护，在后续的 JDK 中还会不断优化和完善。\n使用 BlockingQueue 实现生产者消费者问题。\n多用并发集合少用同步集合，例如应该使用 ConcurrentHashMap 而不是 Hashtable。\n使用本地变量和不可变类来保证线程安全。\n使用线程池而不是直接创建线程，这是因为创建线程代价很高，线程池可以有效地利用有限的线程来启动任务。\n\n"},"JianZhiOffer/":{"url":"JianZhiOffer/","title":"剑指offer","keywords":"","body":"剑指offer\n终于刷完《剑指offer》啦！！！这里整理一下自己的题解。原书中的代码是用C++实现的，由于自己对Java更熟悉一些，因此这里我选择用Java实现。在刷的过程中，除了参考并用Java再现了书上的解法外，对于一些题目我也补充了一些我在其他地方，比如LeetCode，《算法竞赛入门经典》等看到的一些比较有意思的解法，比如对于“两个链表的第一个公共节点”这道题，用一个“两次迭代”的解法要比书上的解法更加直观，效率更高，对于“正则表达式匹配”这道题，书上的解法对于一些字符串长度很长的case效果会很差，而选用一种动态规划的方法则会大大提升程序的性能。此外，对于“数组中出现次数超过一半的数字”这道题，在使用书上第一种解法的时候要注意partition函数的选取。如果在partition函数中每次只选取第一个元素作为基准元素，那么在某些数组中的重复数字比较多的case下可能会产生死循环。为了避免产生死循环，我们应该随机地选取基准元素。\n虽然刷是刷了一遍，但是自我感觉对于某些题目的理解还是不够深，等以后有时间了再刷一遍吧！^_^\n"},"JianZhiOffer/Array/":{"url":"JianZhiOffer/Array/","title":"Array","keywords":"","body":""},"JianZhiOffer/Array/把数组排成最小的数.html":{"url":"JianZhiOffer/Array/把数组排成最小的数.html","title":"把数组排成最小的数","keywords":"","body":"题目\n输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。例如输入数组 {3, 32, 321}，则打印出这三个数字能排成的最小数字为321323。\n思路\n自定义比较规则，对于 m 和 n 两个数字，如果 mn \npublic String PrintMinNumber(int[] nums) {\n    if (nums == null || nums.length == 0) return \"\";\n    String[] strs = new String[nums.length];\n\n    // 由于需要将m,n两个数字拼接得到mn，因此这里将数组中的每个数字转换为字符串\n    for (int i = 0; i () {\n        @Override\n        public int compare(String m, String n) {\n            String combination1 = m + n;\n            String combination2 = n + m;\n            return combination1.compareTo(combination2);\n        }\n    });\n    StringBuilder sb = new StringBuilder();\n    for (String str : strs) {\n        sb.append(str);\n    }\n    return sb.toString();\n}\n\n"},"JianZhiOffer/Array/丑数.html":{"url":"JianZhiOffer/Array/丑数.html","title":"丑数","keywords":"","body":"题目\n把只包含质因子2, 3和5的数称作丑数 Ugly Number。例如6, 8都是丑数，但14不是，因为它包含质因子7。 习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第 n 个丑数。约定1是第一个丑数。\n思路\n首先摒弃逐一判断 1 - n 中每个数是不是丑数的方法，因为那样对每个数即使是非丑数都要进行求余和除法的操作，时间效率很低。可以事先求出 1 - n 的每个丑数并将其排好序存在一个数组里，例如 [1, 2, 3, 4, 5, 6, 8, ...]。假设当前数组中最大的丑数是 M，小于 M 的丑数已经求出，我们需要求出 M 的下一个丑数是多少。我们可以将 M之前的丑数分别 * 2，找到第一个大于 M 的数，对于3和5同理，然后再从2, 3, 5中找到一个最小的数作为下一个丑数。但是这样需要把 M 之前的所有丑数都乘以2, 3, 5，其实这并不是必须的，由于数组是排好序的，对于乘以2而言，数组中肯定存在一个数 T2，在它之前的丑数乘以2都小于已有的最大丑数，而它之后的丑数乘以2又太大，我们只需要记录这个丑数的位置并且在每次求出当前数组的最大丑数时更新这个 T2 即可。对于3, 5同理。\npublic int getUglyNumber(int n) {\n    if (n \n"},"JianZhiOffer/Array/和为s的两个数字.html":{"url":"JianZhiOffer/Array/和为s的两个数字.html","title":"和为s的两个数字","keywords":"","body":"题目\n输入一个递增排序的数组和一个数字 s，在数组中查找两个数，使得他们的和正好是 s。如果有多对数字的和等于S，输出任意一对即可。例如输入数组 [1, 2, 4, 7, 11, 15] 和数字15，输出 [4, 11]。\n思路\n由于数组是递增排序的，初始时用 lo 指示数组的第一个数，hi指示数组的最后一个数，当 array[lo] + array[hi] sum 时，减小 hi；当 array[lo] + array[hi] == sum 时，即找到了这两个数。\npublic List findNumbersWithSum(int[] nums, int s) {\n    if (nums == null || nums.length == 0 || s ();\n    List result = new ArrayList<>();\n    int lo = 0;\n    int hi = nums.length - 1;\n\n    while (lo \n扩展\n和为 s 的连续正数序列。输入一个正数 sum，打印出所有和为 s 的连续正数序列（至少含有两个数）。例如输入15，由于1 + 2 + 3 + 4 + 5 = 4 + 5 + 6 = 7 + 8 = 15，所以结果打印出3个连续序列1 - 5, 4 - 6, 7 - 8。\n思路\n我们可以用 small 和 big 两个指针指示正数序列，small 指示序列的第一个数，big 指示序列的最后一个数。初始时 small 置为1，big 置为2，然后，我们判断当前序列的和是大于还是小于 sum：如果小于 sum，我们增大 big以让序列包含更多的数；如果小于 sum，我们增大 small 以减小序列的和；如果等于 sum 我们则将当前序列打印出来。由于序列至少需要包含2个数，因此 small 至多只能增加到 (1 + s) / 2。\npublic List> findContinuousSequence(int sum) {\n    if (sum ();\n    List> result = new ArrayList<>();\n    int small = 1;\n    int big = 2;\n    int mid = (1 + sum) / 2;\n    int currSum = small + big;\n\n    while (small > result) {\n    List temp = new ArrayList<>();\n    for (int i = small; i \n"},"JianZhiOffer/Array/数值的整数次方.html":{"url":"JianZhiOffer/Array/数值的整数次方.html","title":"数值的整数次方","keywords":"","body":"题目\n给定一个 double 类型的浮点数 base 和 int 类型的整数 exp。求 base 的 exp 次方。\n思路\n首先我们需要处理一些无效的输入，例如0 ^ -1。之后我们需要判断 exp 是否为负数，如果 exp 为负数，在我们求出 res 之后还要求其倒数。在 exp 不为负数的前提下我们调用 helper() 来求 base 的 exp 次方。虽然我们可以采用连乘的方法去求，但那不是最优的。这里我们采用递归的方法去求。例如2 ^ 4可以看成是(2 ^ 2)  (2 ^ 2)，而2 ^ 2可以看成是(2 ^ 1)  (2 ^ 1)，以此类推，注意当 exp 为奇数时，例如当 exp = 5 时，5 / 2只能得到2，所以此时我们还要再乘一个 base。\npublic double Power(double base, int exp) {\n//    if (isEqual(base, 0.0) && exponent \n"},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"url":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","title":"数组中出现次数超过一半的数字","keywords":"","body":"题目\n给定一个大小为 n 的整数数组，找到出现次数大于 n / 2 的元素。假设数组非空并且出现次数大于 n / 2 的数总是存在。例如给定一个长度为9的数组 [1, 2, 3, 2, 2, 2, 5, 4, 2]，由于2在数组中出现了5次，因此输出2。假设数组中出现次数大于 n / 2 的元素一定存在。\n思路1\n如果我们将数组按从小到大进行排序，那么数组中出现次数超过一半的数字就是数组的中位数，直接返回排序后数组中间位置的那个数即可。\npublic int majorityElement(int[] nums) {\n   if (nums == null || nums.length == 0) return 0;\n   int n = nums.length;\n   Arrays.sort(nums);\n   return nums[n / 2];\n}\n\n时间复杂度：O(NlogN)\n空间复杂度：O(1)（取决于所用的排序算法）\n思路2:\n用一个 map 统计数组中每个数字的出现次数，然后遍历 map，找到出现次数大于 n / 2 的数并返回。\npublic int majorityElement(int[] nums) {\n   if (nums == null || nums.length == 0) return 0;\n   int n = nums.length;\n   Map map = new HashMap<>();\n\n   // 统计数组中每个数字的出现次数\n   for (int num : nums) {\n       map.put(num, map.getOrDefault(num, 0) + 1);\n   }\n\n   // 找到出现次数大于n/2的元素返回\n   for (Map.Entry e : map.entrySet()) {\n       if (e.getValue() > n / 2) {\n           return e.getKey();\n       }\n   }\n\n   return 0;\n}\n\n时间复杂度：O(N)\n空间复杂度：O(N)\n思路3\n下面这个方法是书中该题的第一个方法，我们称它为 partition 方法。它的思路是由于 partition 方法每次可以确定一个数在排序数组中的正确位置，因此当 partition 返回的值是 n / 2，则找到该数；当 partition 返回的值小于 n / 2，说明中位数在右半部分，继续在右半部分找；当 partition 返回的值大于 n / 2，说明中位数在左半部分，继续在左半部分找。\n注意，这种方法能够得到正确结果的关键在于 partition 函数的设计。我们当时在学习数据结构这门课程时，都会学习快速排序，而快速排序的关键就是 partition 函数。partition 函数的思路是：每次我们从数组中选择一个数作为基准，将数组中所有比该数小的数排在它的左边，将数组中所有比该数大的数排在它的右边。由此，我们便确定了该数在排序数组中的正确位置。但是一般的数据结构书中对于 partition 函数的设计默认都为将数组中第一个数作为基准，但是如果将这种 partition 函数应用于该题中则在某些测试用例下会产生死循环，当数组中存在大量重复元素时，partition 函数返回的 index 可能永远不等于 mid！为此我们应该采用更为科学的 partition 函数的设计，即在当前数组中随机选取一个数作为基准。\npublic int majorityElement(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    if (nums.length == 1) return nums[0];\n    int lo = 0;\n    int hi = nums.length - 1;\n    int mid = nums.length / 2;\n    int index = partition(nums, lo, hi);\n    while (index != mid) {\n        if (index \n时间复杂度：O(N)\n空间复杂度：O(1)\n思路4\n下面这个方法是书中该题的第一个方法。数组中有一个数字出现的次数超过数组长度的一半，也就是说它出现的次数比其他所有数字出现次数的和还要多。因此我们在遍历数组的时候用一个变量 num 保存当前出现次数最多的数，用另一个变量 count 保存它的出现次数和其他数的出现次数抵消后的值。如果当前数和 num 相同，则count++；如果当前数和 num 不同，则 count--；如果 count 减为0，则将 num 置为当前数字并将 count 置为1。遍历结束后如果数组中超过一半的数字确实存在，那么 count = 1，num 即为该数。例如对于 nums = [1, 2, 3, 2, 2, 2, 5, 4, 2]，1, 2中1和2的出现次数相互抵消，3, 2中3和2的出现次数相互抵消，2, 2, 5, 4中2和5, 4的出现次数相互抵消，最后 num = 2，即为数组中出现次数最多的数。\npublic int majorityElement(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    if (nums.length == 1) return nums[0];\n    int num = nums[0];\n    int count = 1;\n\n    for (int i = 1; i \n时间复杂度：O(N)\n空间复杂度：O(1)\n"},"JianZhiOffer/Array/数组中的逆序对.html":{"url":"JianZhiOffer/Array/数组中的逆序对.html","title":"数组中的逆序对","keywords":"","body":"题目\n在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组,求出这个数组中的逆序对的总数 P。如果前一个数字大于后一个数字，则这两个数字组成一个逆序对。输入一个数组，求出在这个数组中的逆序对的总数。例如，在数组 [7, 5, 6, 4] 中，一共存在5个逆序对，分别是 [7, 6],[7, 5],[7, 4],[6, 4],[5, 4]。\n思路\n如果顺序遍历数组，对于每个元素向后继续遍历数组统计其逆序对的数目，那么时间复杂度是 O(N^2)，显然效率很低。可以利用归并排序的思想。对于 [7, 5, 6, 4]，我们可以首先可以得到 [7], [5], [6], [4] 这4个子数组，然后将相邻的两个子数组归并成一个数组，同时统计逆序对的数目。比如 [7] 和 [5] 归并之后得 [5, 7]，逆序对数目为1；[6], [4] 归并之后得 [4, 6]，逆序对数目为1。接着再将 [5, 7] 和 [4,6] 进行归并并统计逆序对的数目。我们首先用一个指针 i 指向 [5, 7] 的最后一个元素7，另一个指针 j 指向 [4, 6] 的最后一个元素6，mid 指针指向两个子数组中间的元素，也就是第一个数组的最后一个元素7，比较 i 和 j 指向的元素7和6，同时将较大的元素保存到一个辅助数组 aux 中，aux 的长度等于两个数组的长度之和，我们用 index 指示这个辅助数组，初始时 index 指向 aux 的最后一个元素。因为7 > 6，所以7大于6前面所有的元素包括6，因此逆序对数目+ (j - mid)，之后我们将7放到 aux 的 index 处，同时 i 和 index 向前移动一个单位。接着判断5和6，因为5 \nprivate int[] aux;    // 辅助数组\n\npublic int inversePairs(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    aux = new int[nums.length];    // 一次性分配辅助数组的空间\n    return inversePairsCore(nums, 0, nums.length - 1);\n}\n\nprivate int inversePairsCore(int[] nums, int lo, int hi) {\n    // special\n    if (lo >= hi) return 0;\n\n    int mid = lo + (hi - lo) / 2;\n    int left = inversePairsCore(nums, lo, mid);    // 对左半部分数组进行排序并统计逆序对的数目\n    int right = inversePairsCore(nums, mid + 1, hi);    // 对右半部分数组进行排序并统计逆序对的数目\n\n    // 将nums[lo, ..., hi]拷贝给aux，nums用来承载排序后的结果\n    for (int i = lo; i = lo && j >= mid + 1) {\n        if (aux[i] > aux[j]) {\n            count += j - mid;\n            nums[index--] = aux[i--];\n        } else {\n            nums[index--] = aux[j--];\n        }\n    }\n    for (; i >= lo; i--) {\n        nums[index--] = aux[i];\n    }\n    for (; j >= mid + 1; j--) {\n        nums[index--] = aux[j];\n    }\n\n    return left + right + count;\n}\n\n"},"JianZhiOffer/Array/数组中重复的数字.html":{"url":"JianZhiOffer/Array/数组中重复的数字.html","title":"数组中重复的数字","keywords":"","body":"题目\n在一个长度为 n 的数组中，所有的数字都在 0 - n 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。找出数组中任意一个重复的数字。例如如果输入长度为7的数 [2, 3, 1, 0, 2, 5, 3]，那么对应的输出是重复的数字2或3。\n思路\n可以先对数组进行排序，然后从头到尾遍历数组找到重复的数字，时间复杂度为 O(NlogN)。也可以用一个 set 保存已经扫描过的数字，如果当前数字已经包含在了 set 里，那么就找到了一个重复的数字，时间复杂度为 O(N)，空间复杂度为 O(N)。接下来我们看看能不能把空间复杂度优化为 O(1)。注意到题目中说所有数字的范围都在 0 - n，因此我们可以根据下标来重排这个数组。从头到尾扫描这个数组，当扫描到下标为 i 的数字时，首先比较这个数字 (用 m 表示) 是不是等于 i，如果是，说明 m 已经被放在了正确的位置上，接着扫描下一个数字。如果不是，拿它和下标为 m 的数字进行比较，如果它和下标为 m 的数字相等，我们就找到了一个重复的数字 (该数字在下标为 i 和 m 的位置都出现了)。如果它和下标为 m 的数字不等，就把第 i 个数字和第 m 个数字进行交换，把 m 放到它正确的位置上去。接下来重复这个过程，直到我们找到了一个重复的数字，返回 true，否则，数组中没有重复数字并且算法结束后所有的数字都放置了它正确的位置上个，返回 false。备注：代码中尽管有一个两重循环，但是对于每个数字最多只需要进行一次交换和一次遍历就能找到其正确的位置，因此总的时间复杂度是 O(N)。\npublic int findDuplicatedNumber(int[] nums) {\n    if (nums == null || nums.length == 0) return -1;\n\n    for (int i = 0;i \n"},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"url":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","title":"调整数组顺序使奇数位于偶数前面","keywords":"","body":"题目\n输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，并保证奇数和奇数。\n思路\n用两个指针 lo 和 hi，lo 从头开始找到第一个偶数，hi 从尾开始找到第一个奇数，然后交换 lo 和 hi 指示的这两个数，重复进行直到 lo >= hi 为止。\npublic void reOrderArray(int[] nums) {\n    if (nums == null || nums.length == 0) return;\n    int lo = 0;\n    int hi = nums.length - 1;\n    while (lo  0 && (nums[hi] & 1) == 0) {\n            hi--;\n        }\n        if (lo \n扩展\n如果要求调整后奇数和奇数，偶数和偶数之间的相对顺序保持不变，应该怎么做呢？\n可以将原数组中的奇数和偶数按照一定的顺序放入一个新数组中。先遍历一遍原数组，求出奇数和偶数的个数，确定新数组中指示奇数的下标 p1 和指示偶数的下标 p2，然后向新数组中按照顺序放入奇数和偶数。\npublic void reOrderArray(int[] nums) {\n    if (nums == null || nums.length == 0) return;\n    int oddNum = 0;\n    int evenNum = 0;\n    for (int num : nums) {\n        if ((num & 1) == 1) {\n            oddNum++;\n        } else {\n            evenNum++;\n        }\n    }\n    int[] temp = new int[nums.length];\n    int p1 = 0;\n    int p2 = evenNum >= oddNum ? nums.length / 2 : nums.length / 2 + 1;\n    for (int num : nums) {\n        if ((num & 1) == 1) {\n            temp[p1++] = num;\n        } else {\n            temp[p2++] = num;\n        }\n    }\n    for (int i = 0; i \n"},"JianZhiOffer/Backtracking/":{"url":"JianZhiOffer/Backtracking/","title":"Backtracking","keywords":"","body":""},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"url":"JianZhiOffer/Backtracking/机器人的运动范围.html","title":"机器人的运动范围","keywords":"","body":"题目\n地上有一个 m 行 n 列的方格。一个机器人从坐标 (0, 0) 的格子开始移动，它每次可以向左、右、上、下移动一格，但不能进入行坐标和列坐标的数位之和大于 k 的格子。请问问该机器人能够到达多少个格子。例如给定threshold = 5, rows = 7, cols = 7，返回21。\n思路\n回溯法。在进入一个新的格子之前先判断是否能进入，如果能进入则 count++ 并且置访问标记为 true。\n// 表示上、下、左、右4个方向\nprivate static final int[] DIR_X = {0, 0, -1, 1};\nprivate static final int[] DIR_Y = {-1, 1, 0, 0};\n\npublic int movingCount(int threshold, int rows, int cols) {\n    if (threshold = 0 && i = 0 && j  0) {\n        sum += num % 10;\n        num /= 10;\n    }\n    return sum;\n}\n\n"},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"url":"JianZhiOffer/Backtracking/矩阵中的路径.html","title":"矩阵中的路径","keywords":"","body":"题目\n设计一个函数，用来判断一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。\n思路\n 一个可以用回溯法解决的典型题。首先在矩阵中任选一个格子作为路径的起点。设矩阵中的当前字符为matrix[i][j]，路径字符串的当前字符为str(curr)。如果str(curr) != matrix[i][j]，说明矩阵中的当前字符不能构成路径，需要进行回溯。如果str(curr) == matrix[i][j]，说明当前字符能够构成路径，我们继续从当前字符出发分别沿着上、下、左、右4个方向继续寻找路径中的下一个字符str(curr + 1)。此外，由于在寻找路径的过程中已经访问过的格子不能重复进入，因此我们还需要定义一个访问数组 vis。\n// 表示上、下、左、右4个方向\nprivate static final int[] DIR_X = {0, 0, -1, 1};\nprivate static final int[] DIR_Y = {-1, 1, 0, 0};\n\npublic boolean hasPath(char[][] matrix, String str) {\n    if (matrix == null || matrix.length() == 0 || matrix[0].length == 0 || str == null || str.length() == 0)\n        return false;\n    int rows = matrix.length;    // 矩阵的行数\n    int cols = matrix.length[0];    // 矩阵的列数\n    for (int i = 0; i = 0 && i =0 && j \n"},"JianZhiOffer/Binary Search/":{"url":"JianZhiOffer/Binary Search/","title":"Binary Search","keywords":"","body":""},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"url":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","title":"数字在排序数组中出现的次数","keywords":"","body":"题目\n统计数字k在排序数组中出现的次数。例如输入数组 [1, 2, 3, 3, 3, 3, 4, 5]，k = 3，输出4。\n思路\n当然，我们可以顺序遍历数组来统计 k 在数组中出现的次数，也可以先用二分查找找到一个 k，由于 k 的左边和右边也有可能有 k，我们从当前位置出发分别沿左，右两个方向顺序地寻找 k。因为要查找的数字在长度为 n 的数组中有可能出现 n 次，所以上面两种方法的时间复杂度都是 O(N)。我们来看看有没有更好的方法。\n当我们用二分查找在数组中找到一个 k 时，如果前面没有 k 了，那么这个 k 就是 k 第一次出现的位置；如果前面还有 k，我们继续在前半部分中用二分查找寻找 k 第一次出现的位置；同理，我们可以得到 k 最后一次出现的位置。找到了 k 第一次出现的位置和最后一次出现的位置，我们就可以算出 k 在数组中的出现次数了。\npublic int getNumberOfK(int[] nums, int k) {\n    if (nums == null || nums.length == 0) return 0;\n    int first = getFirstK(nums, k);    // k第一次出现的位置\n    int last = getLastK(nums, k);    // k最后一次出现的位置\n    if (first > -1 && last > -1) {\n        return last - first + 1;\n    }\n    return 0;\n}\n\n// 返回k在数组中第一次出现的位置\nprivate int getFirstK(int[] nums, int k) {\n    int lo = 0;\n    int hi = nums.length - 1;\n    while (lo \n"},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"url":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","title":"旋转数组的最小数字","keywords":"","body":"题目\n把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。例如数组 [3, 4, 5, 1, 2] 为 [1, 2, 3, 4, 5] 的一个旋转，该数组的最小值为1。 NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。\n思路1\n遍历数组，找到第一个当前数字比前一个数字小的数字，该数字就是数组中最小的数字。\n时间复杂度：O(N)\npublic int minNumberInRotateArray(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    for (int i = 1; i \n思路2\n旋转之后的数组可以看做是由两个递增的子数组所构成，而这个最小的数就是这两个子数组的分界点。可以借助二分查找的思想去寻找这个最小的数。初始时用 lo 指示数组的第一个数，hi 指示数组的最后一个数，mid 指示 lo 和hi 中间的数。如果 array[mid] >= array[lo]，说明最小的数在 mid 和 hi 之间，移动 lo 到 mid 在后半数组中继续查找；如果 array[mid] \n时间复杂度：O(logN)\npublic int minNumberInRotateArray(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    int lo = 0;\n    int hi = nums.length - 1;\n    while (nums[lo] >= nums[hi]) {    // 在我们的循环不变式中，lo指向前一个递增子数组，hi指向后一个递增子数组，因此这里循环条件是nums[lo] >= nums[hi]\n        if (hi - lo == 1) {\n            return nums[hi];\n        }\n        int mid = lo + (hi - lo) / 2;\n        // 当lo, hi, mid指向的数字相同时，此时无法判断mid指向的数字属于前一个子数组还是后一个子数组，此时需要用顺序遍历找到nums[lo, ..., hi]中的最小数字\n        if (nums[lo] == nums[mid] && nums[mid] == nums[hi]) {\n            return helper(nums, lo, hi);\n        }\n        if (nums[mid] >= nums[lo]) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return nums[0];    // 如果数组本身已经是排好序的，第一个数字是最小的数字\n}\n\nprivate int helper(int[] nums, int lo, int hi) {\n    int min = nums[lo];\n    for (int i = lo + 1; i \n"},"JianZhiOffer/Bit Manipulation/":{"url":"JianZhiOffer/Bit Manipulation/","title":"Bit Manipulation","keywords":"","body":""},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"url":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","title":"二进制中1的个数","keywords":"","body":"题目\n输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。\n思路1\n由于 Java 中一个 int 类型的数有4个字节，共32位，因此循环32次，每次用 n 和1进行位与运算判断其最后一位是不是1，如果是1则 count++，之后将最后一位移出继续判断余下的数。\npublic int numberOf1(int n) {\n    int count = 0;\n    for (int i = 0; i >= 1;\n    }\n    return count;\n}\n\n思路2\n根据 “(n - 1) & n操作可以将n的二进制表示中最右边的1变成0” 这个结论，我们可以写出如下代码进一步提高运算效率。\npublic int numberOf1(int n) {\n    int count = 0;\n    while (n != 0) {\n        count++;\n        n = (n - 1) & n;\n    }\n    return count;\n}\n\n"},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"url":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","title":"数组中只出现一次的两个数字","keywords":"","body":"题目\n一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是 O(N)，空间复杂度是 O(1)。\n思路\n先考虑一种简单的情况，数组中只有一个数出现1次，其他数都是出现2次。我们可以从头到尾遍历数组，对每个数求异或， (因为一个数和自己异或的结果为0，因此所有出现两次的数都抵消掉了)，最后得到的结果就是那个只出现一次的数。现在我们考虑数组中恰有两个数出现1次，其他数都是出现两次。首先，从头到尾遍历数组，对每个数求异或，得到数 temp。在异或的过程中，由于所有出现2次的数都抵消掉了，所以 temp 是数组中那两个只出现1次的数异或的结果。由于这两个数不相同，所以 temp 肯定不为0，即 temp 的二进制表示中一定有一位为1。假设其第 n 位为1。我们根据数组中每个数的二进制中的第 n 位是否为1,可以把原数组分成两个数组，可知，出现2次的数一定被分到了一个数组当中。接着，我们分别对两个数组按照开始的思路求异或，即可得到两个出现1次的数。\npublic int[] findNumsAppearOnce(int[] nums) {\n    if (nums == null || nums.length == 0) return new int[]{};\n    int[] result = new int[2];\n    int temp = 0;\n\n    for (int num : nums) {\n        temp ^= num;\n    }\n    int index = findFirstBitOne(temp);\n    for (int num : nums) {\n        if (isBitOne(num, index)) {\n            result[0] ^= num;\n        } else {\n            result[1] ^= num;\n        }\n    }\n\n    return result;\n}\n\n// 返回num的二进制表示中从右向左第一个1的位置\nprivate int findFirstBitOne(int num) {\n    int index = 0;\n    for (int i = 0; i >= 1;\n        index++;\n    }\n    return index;\n}\n\n// 返回num的二进制表示的第index位是不是1\nprivate boolean isBitOne(int num, int index) {\n    return ((num >> index) & 1) == 1;\n}\n\n"},"JianZhiOffer/Dynamic Programming/":{"url":"JianZhiOffer/Dynamic Programming/","title":"Dynamic Programming","keywords":"","body":""},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"url":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","title":"斐波那契数列","keywords":"","body":"题目\n大家都知道斐波那契数列，即1, 1, 2, 3, 5, 8, ...，现在要求输入一个整数 n，请你输出斐波那契数列的第 n 项（从0开始，第0项为0）。n \n思路1\n递归。\npublic int Fibonacci(int n) {\n    if (n == 0) return 0;\n    if (n == 1 || n == 2) return 1;\n    return Fibonacci(n -1) + Fibonacci(n - 2);\n}\n\n思路2\ndp。\npublic int Fibonacci(int n) {\n    if (n \n扩展\n一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。\n思路\ndp。我们先来分析跳上2级台阶总共有多少种跳法。可以跳2次，1次跳1级，也可以一次跳2级，这样就有2种跳法。现在假设跳上 n 级台阶总共有 dp[n] 种跳法，n 级台阶从 n - 1 级台阶跳1次，1次跳1级得到，也可以从 n - 2级台阶跳1次，1次跳2级得到，因此跳上 n 级台阶的跳法数等于跳上 n - 1 级台阶的跳法数和跳上 n - 2 级台阶的跳法数的和，即 dp[n] = dp[n - 1] + dp[n - 2]。\npublic int jumpingStairs(int n) {\n    if (n \n"},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"url":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","title":"连续子数组的最大和","keywords":"","body":"题目\n给定一个数组，返回它的最大连续子序列的和，子序列的长度至少为1。例如给定数组 [6, -3, -2, 7, -15, 1, 2, 2]，最大的子序列为 [6, -3, -2, 7]，输出8。\n思路1\n根据结论 “连续子序列之和等于两个前缀和之差”，即设 Si = A1 + A2 + ... + Ai，则 Ai + Ai+1 + ... + Aj = Sj - Si-1。\npublic int FindGreatestSumOfSubArray(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    int[] s = new int[nums.length];    // s[i]表示s[0, ..., i]中每个元素累加的和\n    s[0] = nums[0];\n    int result = Integer.MIN_VALUE;\n    for (int i = 1; i \n时间复杂度：O(N^2)\n思路2\ndp。dp[i] 表示 nums[0, ..., i] 中包含 nums[i] 的最大连续子序列的和，状态转移方程如下：\ndp[i] = max{nums[i], dp[i - 1] + nums[i]}\npublic int FindGreatestSumOfSubArray(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    int[] dp = new int[nums.length];\n    dp[0] = nums[0];\n    int result = Integer.MIN_VALUE;\n    for (int i = 1; i \n时间复杂度：O(N)\n"},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"url":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","title":"正则表达式匹配","keywords":"","body":"题目\n给定一个字符串 s 和一个模式 p，实现一个支持.和*的正则匹配。模式中的字符.表示任意一个字符，而*表示它前面的字符可以出现任意次（含0次）。在本题中，匹配是指字符串的所有字符匹配整个模式。例如字符串\"aaa\"与模式\"a.a\"和\"ab*ac*a\"匹配，但与“aa.a”和\"ab*a\"均不匹配。\n思路1\n《剑指offer》的解法。当没有*的时候，情况比较简单，我们只需要从左到右依次判断 s 和 p 的当前字符是否匹配即可。如果有*并且 p 中*前面的字符还和 s 的当前字符相同，我们分为三种情况去处理：匹配0个、匹配1个和匹配多个。\npublic boolean isMatch(String s, String p) {\n    if (s == null || p == null) return false; \n    return isMatchCore(s, p, 0, 0);\n}\n\nprivate boolean isMatchCore(String s, String p, int p1, int p2) {\n    if (p2 == p.length() && p1 == s.length()) return true;\n    if (p2 == p.length() && p1 != s.length()) return false;\n    if (p2 \n思路2\n该方法对上述方法的逻辑做了简化。首先判断 s 和 p 的当前字符是否匹配，接着看 p 的下一个字符是不是*，如果不是*，继续判断 s 和 p 余下的字符；如果是*，或者匹配0个，即忽略 p 的当前字符和*，继续看 p 中余下的字符和 s 是否匹配；要么匹配多个，即从 s 中去掉1个字符，判断 s 中余下的字符和 p 是否匹配。和上一个思路把匹配分为匹配0个，匹配1个，匹配多个相比，这里把匹配1个和匹配多个在逻辑上统一成匹配多个了。\npublic boolean isMatch(String s, String p) {\n    if (p.isEmpty()) return s.isEmpty();\n    boolean first_match = (!s.isEmpty() && (s.charAt(0) == p.charAt(0) || p.charAt(0) == '.'));    // 判断s的当前字符和p的当前字符是否匹配\n    if (p.length() > 1 && p.charAt(1) == '*') {    // p的下一个字符是'*'\n        return isMatch(s, p.substring(2)) ||    // 匹配0个\n            (first_match && isMatch(s.substring(1), p));    // 匹配1个或多个\n    } else {\n        return first_match && isMatch(s.substring(1), p.substring(1)); // 匹配1个\n    }\n}\n\n思路3\n上述思路的 dp 版本。\npublic boolean isMatch(String s, String p) {\n    if (s == null || p == null) return false;\n    boolean[][] dp = new boolean[s.length() + 1][p.length() + 1];    // dp[i][j]表示s(i:)和p(j:)是否匹配\n    dp[s.length()][p.length()] = true;    // 初始化dp，当s和p同时到达末尾时匹配成功\n    for (int i = s.length(); i >= 0; i--) {    // 注意这里i是从s.length()开始，j是从p.length()-1开始，这是因为当s为空时也需要进行判断，比如s=\"\",p=\"a*\"，s和p也是匹配的\n        for (int j = p.length - 1; j >= 0; j--) {\n            boolean first_match = (i \n"},"JianZhiOffer/LinkedList/":{"url":"JianZhiOffer/LinkedList/","title":"LinkedList","keywords":"","body":""},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"url":"JianZhiOffer/LinkedList/从尾到头打印链表.html","title":"从尾到头打印链表","keywords":"","body":"题目\n输入一个链表的头结点，从尾到头反过来打印出每个节点的值。\n思路1\n递归。\npublic void printListFromTailToHead(ListNode head) {\n    if (head == null) return;\n    printListFromTailToHead(head.next);\n    System.out.println(head.val);\n}\n\n思路2\n使用一个辅助栈即可。\npublic void printListFromTailToHead(ListNode head) {\n    if (head == null) return;\n    Stack stack = new Stack<>();\n    ListNode curr = head;\n    while (curr != null) {\n        stack.push(curr);\n        curr = curr.next;\n    }\n    while (!stack.isEmpty()) {\n        ListNode node = stack.pop();\n        System.out.println(node.val);\n    }\n}\n\n"},"JianZhiOffer/LinkedList/反转链表.html":{"url":"JianZhiOffer/LinkedList/反转链表.html","title":"反转链表","keywords":"","body":"题目\n输入一个链表，反转链表后，输出新链表的表头。\n思路1\n递归。假设当前节点 head 的下一个节点 next 后面的部分已经反转完成了，考虑如何反转当前节点。我们需要把next 的 next 指针指向当前节点，并且将 head 的 next 指针置为 null。当 head 为 null，返回 null；当 head 的next 指针为 null，说明链表中只剩下一个节点，直接返回该节点即可。\npublic ListNode reverseList(ListNode head) {\n    // special\n    if (head == null || head.next == null) return head;\n    ListNode next = head.next;\n    ListNode new_head = reverseList(next);\n    next.next = head;\n    head.next = null;\n    return new_head;\n}\n\n思路2\n循环。curr 指示当前节点，prev 指示当前节点的前一个节点，next 指示当前节点的下一个节点。依次反转每个节点并向前移动指针。注意，反转时首先保存原链表中当前节点的下一个节点到 next 中，因为反转会修改 curr 的next 指向。\npublic ListNode reverseList(ListNode head) {\n    if (head == null || head.next == null) return head;\n    ListNode curr = head;\n    ListNode prev = null;\n    while (curr != null) {\n        ListNode next = curr.next;\n        curr.next = prev;\n        prev = curr;\n        curr = next;\n    }\n    return prev;\n}\n\n"},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"url":"JianZhiOffer/LinkedList/复杂链表的复制.html","title":"复杂链表的复制","keywords":"","body":"题目\n输入一个复杂链表（每个节点中有节点值以及两个指针，一个指针 next 指向下一个节点，另一个指针 random 指向链表中任意一个节点），返回结果为复制后的复杂链表的头结点。\n思路1\nmap。将复杂链表的复制分为两步，第一步，复制原链表的每个节点，并用 next 链接起来，同时将原节点和复制节点存到 map 中（原节点作为 key，复制节点作为 value）；第二步，设置复制链表中每个节点的 random 指针。遍历原链表，如果节点 N 的 random 为 S，则通过 map 可以在 O(1) 时间内找到 N1 和 S1，设置 N1.random = S1 即可。\nclass RandomListNode {\n    int label;\n    RandomListNode next;\n    RandomListNode random;\n\n    RandomListNode (int label) {\n        this.label = label;\n    }\n}\n\npublic RandomListNode clone (RandomListNode pHead) {\n    if (pHead == null) return null;\n    Map map = new HashMap<>();\n    //复制原链表的每个节点，并用next链接起来\n    RandomListNode curr = pHead;    // 原链表的当前节点\n    RandomListNode clonedHead = null;    // 复制链表的头结点\n    RandomListNode clonedCurr = null;    // 复制链表的当前节点\n    while (curr != null) {\n        RandomListNode clonedNode = new RandomListNode(curr.label);\n        map.put(curr, clonedNode);\n        if (clonedHead == null) {\n            clonedHead = clonedCurr = clonedNode;\n        } else {\n            clonedCurr.next = clonedNode;\n            clonedCurr = clonedCurr.next;\n        }\n        curr = curr.next;\n    }\n    //设置复制链表的random\n    curr = pHead;\n    while (curr != null) {\n        if (curr.random != null) {\n            RandomListNode currCloned=null;\n            RandomListNode randomCloned=null;\n            if (map.containsKey(curr)) currCloned = map.get(curr);\n            if (map.containsKey(curr.random)) randomCloned = map.get(curr.random);\n            if (currCloned != null) currCloned.random = randomCloned;\n        }\n        curr = curr.next;\n    }\n    return clonedHead;\n}\n\n时间复杂度：O(N)。\n空间复杂度：O(N)。\n思路2\n同样是用空间换时间的思想，但是不同于上一个思路中用额外的存储空间存储节点和节点的 random 之间的映射关系，这次我们直接在原链表上完成复制。\n我们将复杂链表的复制过程分为三个步骤：\n\n复制链表中的每个节点并将复制的节点直接链接到原节点的后面，此时不设置每个节点的 random。\n\n设置复制节点的 random。若 N 的 random 是 S，则 N1 的 random 就是 S 的下一个节点 S1。\n\n此时该链表中奇数位置的节点构成原链表，偶数位置的节点构成复制链表，将其拆分出来即可。 \n\npublic RandomListNode clone (RandomListNode pHead) {\n   if (pHead == null) return null;\n   cloneNodes(pHead);\n   connectNodes(pHead);\n   return reConnectNodes(pHead);\n}\n\n// 复制链表中每个节点，将复制节点直接链接到原节点的后面\nprivate void cloneNodes (RandomListNode head) {\n   RandomListNode curr = head;\n   while (curr != null) {\n       RandomListNode clonedNode = new RandomListNode(curr.label);\n       clonedNode.next = curr.next;\n       clonedNode.random = null;\n       curr.next = clonedNode;\n       curr = clonedNode.next;\n   }\n}\n\n// 设置复制节点的random\nprivate void connectNodes (RandomListNode head) {\n   RandomListNode curr = head;\n   while (curr != null) {\n       RandomListNode clonedNode = curr.next;\n       if (curr.random != null) {\n           clonedNode.random = curr.random.next;\n       }\n       curr = clonedNode.next;\n   }\n}\n\n// 将复制后的链表拆分成原链表和复制链表并返回复制链表的头结点\nprivate RandomListNode reConnectNodes (RandomListNode head) {\n   RandomListNode curr = head;\n   RandomListNode clonedHead = null;\n   RandomListNode clonedCurr = null;\n   // 设置clonedHead\n   if (curr != null) {\n       clonedHead = clonedCurr = curr.next;\n       curr.next = clonedCurr.next;\n       curr = curr.next;\n   }\n   while (curr != null) {\n       clonedCurr.next = curr.next;\n       clonedCurr = clonedCurr.next;\n       curr.next = clonedCurr.next;\n       curr = curr.next;\n   }\n   return clonedHead;\n}\n\n时间复杂度：O(N)。\n空间复杂度：O(1)。\n"},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"url":"JianZhiOffer/LinkedList/合并两个排序的链表.html","title":"合并两个排序的链表","keywords":"","body":"题目\n输入两个单调递增的链表，输出两个链表合成后的链表，合成后的链表也要求单调递增。\n思路\n每次选取 head1 和 head2 中的较小者作为当前结点，之后递归构造下一个节点。\npublic ListNode merge(ListNode head1, ListNode head2) {\n    if (head1 == null) return head2;\n    if (head2 == null) return head1;\n    ListNode curr = null;\n    if (head1.val \n"},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"url":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","title":"链表中倒数第k个节点","keywords":"","body":"题目\n输入一个链表，输出该链表中倒数第 k 个结点。\n思路1\n先遍历一遍链表，将每一个节点都压入一个 stack 中，将 stack pop k 次即可得到倒数第 k 个节点。注意，这种方法要求 k 不能大于链表的长度，为此需要先求出链表的长度。\npublic ListNode FindKthToTail(ListNode head, int k) {\n    if (head == null || k  length(head)) return null;\n    Stack stack = new Stack<>();\n    ListNode curr = head;\n    while (curr != null) {\n        stack.push(curr);\n        curr = curr.next;\n    }\n    for (int i = 0; i \n思路2\n用一个 slow 指针和一个 fast 指针，fast 从表头开始先向后移动 k - 1 个节点，之后两个指针再一起移动，当 fast移动到链表的最后一个节点时，slow 指示的刚好是链表中倒数第 k 个节点\npublic ListNode FindKthToTail(ListNode head, int k) {\n    if (head == null || k \n"},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"url":"JianZhiOffer/LinkedList/链表中环的入口节点.html","title":"链表中环的入口节点","keywords":"","body":"题目\n一个链表中包含环，找到环的入口节点。\n思路1\n从头开始遍历链表，用一个 set 保存已经走过的节点。当当前节点已经存在于 set 中时，说明链表中有环并且当前节点就是环的入口节点。\n代码略。\n思路2：\n我们先来分析这样一个问题：如何判断一个链表中是否存在环？我们可以让一个快指针 fast 和一个慢指针 slow 同时从链表的第一个节点开始向前走，fast 每次走2步，slow 每次走1步。如果两个指针相遇则说明链表中存在环，如果 fast 走到链表的末尾两个指针还没有相遇则说明链表中不存在环。现在我们再设置一个指针 p 从链表的第一个节点开始向前走，每次走1步，slow 从相遇的地方继续向前走，每次也走1步，当 p 和 slow 相遇时，相遇节点就是环的入口节点。\n证明：设 entry 为环的入口节点。当 slow 和 fast 相遇时，设 slow 走过的路程为 A + B，其中 A 为 head 到 entry的路程，B 为 slow 在环中走过的路程，N 为环的长度。由于相遇时 fast 比 slow 多走了一圈，因此 fast 走过的路程为 A + B + N (1)，同时由于 slow 每次走1步，fast 每次走2步，所以 fast 走过的路程又可以表示为 2A + 2B (2)。联立 (1) 和 (2) 得 A + B = N，所以相遇节点到 entry 的距离和 head 到 entry 的距离是相同的。\nprivate ListNode entryNodeOfLoop(ListNode head) {\n    if (head == null || head.next == null) return null;\n    ListNode slow = head;\n    ListNode fast = head;\n    while (fast != null && fast.next != null) {\n        slow = slow.next;\n        fast = fast.next.next;\n        if (slow == fast) break;\n    }\n    if (fast == null || fast.next == null) return null;    // 链表中没有环\n    ListNode p = head;\n    while (p != slow) {\n        p = p.next;\n        slow = slow.next;\n    }\n    return p;\n}\n\n思路3\n书上的方法。定义两个指针，设环中有 n 个节点，先让第一个指针从链表头开始在链表上走 n 个单位，然后两个指针再一起走，每次走一个单位。当两个指针相遇时，相遇节点就是环的入口节点。关键是如何求出环中的节点个数。借由上一题的分析，我们可以让 slow 从相遇节点处继续向前走，并记录走过的节点个数，当再次回到这个节点时，即可得出环中的节点个数。\npublic ListNode entryNodeOfLoop(ListNode head) {\n   if (head == null || head.next == null) return null;\n   ListNode meetingNode = findMeetingNode(head);\n   if (meetingNode == null) return null;\n   ListNode curr = meetingNode;\n   int nodesInLoop = 1;  // 环中的节点个数\n   while (curr.next != meetingNode) {\n       curr = curr.next;\n       nodesInLoop++;\n   }\n   ListNode fast = head;\n   for (int i = 0;i \n"},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"url":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","title":"两个链表的第一个公共节点","keywords":"","body":"题目\n输入两个链表，找出它们的第一个公共节点。\n思路1\n先求出长链表的长度 len1，短链表的长度 len2，两个链表的长度差 diff。之后，先在长链表上走 diff 步，然后两个链表再一起走，直到或者两个链表中有一个为 null (没有公共结点) 或者找到第一个公共节点。\npublic ListNode findFirstCommonNode (ListNode head1, ListNode head2) {\n    if (head1 == null || head2 == null) return null;\n    int len1 = getLength(head1);\n    int len2 = getLength(head2);\n    ListNode curr_long = head1;\n    ListNode curr_short = head2;\n    int diff = Math.abs(len1 - len2);\n    if (len2 > len1) {\n        curr_long = head2;\n        curr_short = head1;\n    }\n\n    // 先在长链表上走diff步\n    for (int i = 0; i \n思路2\n“两次迭代”法，即通过两次迭代即可找出两个链表的第一个公共节点。用两个指针分别指示两条链表，第一次迭代时如果第一条链表的指针到达第一条链表的末尾时，将其置为第二条链表的头结点；如果第二条链表的指针到达第二条链表的末尾时，将其置为第一条链表的头结点。这样经过一轮迭代后就消除了两个链表之间的长度差，之后两个指针每次向前前进一个节点，最终到达两个链表的第一个公共节点。采用这种方法免去了分别计算两个链表长度的麻烦。\npublic ListNode findFirstCommonNode (ListNode head1, ListNode head2) {\n    if (head1 == null || head2 == null) return null;\n    ListNode curr1 = head1;\n    ListNode curr2 = head2;\n    while (curr1 != curr2) {\n        curr1 = curr1 == null ? head2 : curr1.next;\n        curr2 = curr2 == null ? head1 : curr2.next;\n    }\n    return curr1; // or return curr2;\n}\n\n"},"JianZhiOffer/LinkedList/删除链表的节点.html":{"url":"JianZhiOffer/LinkedList/删除链表的节点.html","title":"删除链表的节点","keywords":"","body":"题目\n给定单向链表的头指针和一个节点指针，定义一个函数在 O(1) 时间内删除该节点。输入保证要删除的节点在链表中。\n思路\n当要删除的节点 node 不是链表的尾节点时，我们可以先把该节点的下一个节点 next 的值赋给 node，然后令node 的 next 指向 next 的 next 即可。当要删除的节点是链表的尾节点时，我们就不能这么做了，需要从从链表头开始顺序地查找该节点并删除。\npublic ListNode deleteNode(ListNode head, ListNode node) {\n    if (head == null || head.next == null) return null;\n    if (node == null) return head;\n    if (node.next != null) {    // 如果node不是链表的尾节点\n        ListNode next = node.next;\n        node.val = next.val;\n        node.next = next.next;\n        next = null;    // 便于被GC发现\n    } else { // 如果node是链表的尾节点\n        ListNode curr = head;\n        while (curr.next != node) {\n            curr = curr.next;\n        }\n        curr.next = null;\n        node = null;    // 便于被GC发现\n    }\n    return head;\n}\n\n扩展1\n在一个排序的链表中，删除重复的结点。例如给定链表1->2->3->3->4->4->5，删除重复节点后的链表为1->2->5。\n思路\n首先注意到头结点也有可能是重复节点，也有可能被删除，因此函数的返回值应该为 ListNode。我们从头开始遍历整个链表，用 curr 指示当前节点，prev 指示当前节点的前一个节点，next 指示当前节点的下一个节点，如果curr 和 next 的值不同，我们移动只需要移动 curr 和 prev 继续判断下一个节点即可；当 curr 和 next 相同，说明curr 和 next 是重复节点，由于链表是排好序的，因此重复节点是连续的，我们找到第一个比 curr 大的节点并把该节点赋值给 next，让 prev 指向 next 即删除了所有和 curr 的值相同的重复节点。注意在将 prev 指向 next 时，prev 可能为 null，这说明头结点是重复节点，此时我们需要把 next 赋值给 head 以作为新的头节点。\npublic ListNode deleteDuplicatedNodes(ListNode head) {\n    if (head == null || head.next == null) return head;\n    ListNode prev = null;\n    ListNode curr = head;\n    while (curr != null) {\n        ListNode next = curr.next;\n        boolean isDuplicated = false;    // 指示curr和next是否是重复节点\n        if (next != null && curr.val == next.val) isDuplicated = true;\n        if (!isDuplicated) {    // 如果curr和next不是重复节点，继续判断下一个节点\n            prev = curr;\n            curr = next;\n        } else {    // 如果curr和next是重复节点，找到第一个比curr的值大的节点并将其赋值给next\n            ListNode temp = next;\n            while (temp != null && temp.val == curr.val) {\n                temp = temp.next;\n            }\n            next = temp;\n            if (prev == null) {    // 如果头节点是重复节点，将next作为新的头节点\n                head = next;\n            } else {    // 否则，将prev指向next\n                prev.next = next;\n            }\n            curr = next;\n        }\n    }\n    return head;\n}\n\n扩展2\n给定一个单链表，删除链表中所有节点值为 target 的节点，返回删除后链表的头节点。例如给定链表1->2->3->3->4->4->5，删除值为3的节点后的链表为1->2->4->4->5。\n思路\n大体思路同上，用 prev, curr, next 分别表示前一个节点，当前节点和下一个节点。遍历链表，如果当前节点的值不等于 target，移动 prev 和 curr 继续判断下一个节点；否则，我们需要将 prev 的 next 指向 next 以删除当前节点，如果 prev 为 null，说明头结点是需要删除的节点，将 next 赋给 head。\npublic ListNode deleteNodes(ListNode head, int target) {\n    if (head == null) return null;\n    ListNode prev = null;\n    ListNode curr = head;\n    while (curr != null) {\n        ListNode next = curr.next;\n        if (curr.val == target) {\n            if (prev == null) {\n                head = next;\n            } else {\n                prev.next = next;\n            }\n            curr = next;\n        } else {\n            prev = curr;\n            curr = next;\n        }\n    }\n    return head;\n}\n\n"},"JianZhiOffer/Matrix/":{"url":"JianZhiOffer/Matrix/","title":"Matrix","keywords":"","body":""},"JianZhiOffer/Matrix/二维数组中的查找.html":{"url":"JianZhiOffer/Matrix/二维数组中的查找.html","title":"二维数组中的查找","keywords":"","body":"题目\n在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。\n思路\n以二维数组矩阵中右上角的数字为基准，如果该数字等于 target，我们就找到了这个数；如果该数字小于 target，则该数字所在行的所有数都小于 target，剔除该行，即 row++；如果该数字大于 target，则该数字所在列的所有数字都大于 target，剔除该列，即 col--。\npublic boolean searchMatrix(int[][] matrix, int target) {\n    if (matrix == null || matrix.length == 0 || matrix[0].length == 0) return false;\n    int rows = matrix.length;\n    int cols = matrix[0].length;\n    int row = 0;\n    int col = cols - 1;\n    while (row = 0) {\n        if (matrix[row][col] == target) {\n            return true;\n        } else if (matrix[row][col] \n"},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"url":"JianZhiOffer/Matrix/顺时针打印矩阵.html","title":"顺时针打印矩阵","keywords":"","body":"题目\n输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。例如输入如下4  * 4矩阵：\n[\n    1, 2, 3, 4,\n    5, 6, 7, 8,\n    9, 10, 11, 12,\n    13, 14, 15, 16\n]\n输出结果为：1, 2, 3, 4, 8, 12, 16, 15, 14, 13, 9, 5, 6, 7, 11, 10。\n思路\n每次从矩阵的左上角开始一轮打印，每轮打印包括从左向右、从上向下、从右向左以及从下向上四个方向，每个方向的打印都有相应的前提条件，从上向下打印需要当前打印的矩阵至少包含两行，从右向左打印需要当前打印的矩阵至少包含两行两列，从下向上打印需要当前打印的矩阵至少包含三行两列。\npublic List printMatrix(int [][] matrix) {\n    if (matrix == null || matrix.length == 0 || matrix[0].length == 0) return new ArrayList<>();\n    List result = new ArrayList<>();\n    int rows = matrix.length;\n    int cols = matrix[0].length;\n    int start = 0;\n    while (rows > start * 2 && cols > start * 2) {\n        int endX = cols - 1 - start;\n        int endY = rows - 1 - start;\n        // 从左向右\n        for (int i = start; i = start; i--) {\n                result.add(matrix[endY][i]);\n            }\n        }\n        // 从下向上（至少要有三行两列）\n        if (start = start + 1; i--) {\n                result.add(matrix[i][start]);\n            }\n        }\n        start++;\n    }    // while\n    return result;\n}\n\n"},"JianZhiOffer/Stack & Queue & PriorityQueue/":{"url":"JianZhiOffer/Stack & Queue & PriorityQueue/","title":"Stack & Queue & PriorityQueue","keywords":"","body":""},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"url":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","title":"包含min函数的栈","keywords":"","body":"题目\n定义栈的数据结构，实现一个能够得到栈中最小元素的 min 函数 ，要求时间复杂度为 O(1)。\n思路\n用一个辅助栈 stack_min，栈顶元素记录当前栈中所有元素的最小值。入栈时，如果入栈元素 num 小于stack_min 的栈顶元素，则同时将 num 加入 stack_min 中；出栈时，原栈和 stack_min 同时执行出栈。\nclass MyStack {\n    Stack stack_data = new Stack<>();\n    Stack stack_min = new Stack<>();\n\n    // 入栈\n    public void push(int num) {\n        stack_data.push(num);\n        if (stack_min.isEmpty() || num\n"},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"url":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","title":"滑动窗口的最大值","keywords":"","body":"题目\n给定一个数组和滑动窗口的大小，请找出所有滑动窗口里的最大值。例如如果输入数组 [2, 3, 4, 2, 6, 2, 5, 1] 及滑动窗口的大小3，那么一共存在6个滑动窗口，它们的最大值分别是 [4, 4, 6, 6, 6, 5]。\n思路\n如果采用暴力法，可以扫描每一个滑动窗口中的所有数字找出其中的最大值，如果滑动窗口的大小为 k，数组的大小为 n，则这种方法时间复杂度为 O(kn)，显然不是最优的。实际上，一个滑动窗口可以看成是一个队列。当窗口滑动时，处于窗口的第一个数字被删除，同时在窗口的末尾添加一个新的数字。这符合队列先进先出的特性。正常情况下我们需要扫描整个队列才能找到队列中的最大数，我们看看能不能在 O(1) 的时间内找到队列中的最大数。我们并不把滑动窗口里的每一个数都存入队列中，而是只把有可能成为滑动窗口最大值的数存入到一个双端队列中。我们使用队列的队头保存当前滑动窗口的最大值。当把数组前 k 个元素加入到队列中时，由于此时窗口还没有开始滑动，我们只需要在队列中保存前 k 个数字中最大的数即可，此时队列的队头就是当前窗口中最大的数。当窗口开始滑动时，一方面我们需要将当前数字和队列中的数字进行比较，如果当前数字比队列中的数字大，则队列中比当前数字小的元素不可能成为窗口的最大值，将其从队列中移除，另一方面，我们需要判断代表当前窗口最大值的队头元素是否已经滑出窗口，如果已经滑出窗口，我们也需要将其进行移除。那么如何判断当前窗口是否包含一个数字呢？我们需要在队列里存入数字在数组中的下标，而不是数值。当队头元素的下标与当前处理的数字的下标之差大于等于窗口的大小时，说明这个数字已经从窗口中滑出了。在实现上，我们使用一个双端队列 deque保存有可能是滑动窗口最大值的数字的下标。在存入一个数字的下标之前，首先要判断队列里已有数字是否小于待存入的数字。如果已有数字小于待存入的数字，说明这些数字已经不可能是滑动窗口的最大值，因此它们会依次从队列的尾部删除 (调用deque.pollLast())。同时，如果队列头部的数字已经从窗口中滑出，滑出的数字也需要从队列的头部删除 (调用deque.pollFirst)。由于队列头部和尾部都有可能删除数字，因此这也是我们需要双端队列的原因。\npublic List maxInWindows(int[] nums, int size) {\n    if (nums == null || nums.length == 0 || size  nums.length) return new ArrayList<>();\n    List result = new ArrayList<>();\n    Deque deque = new LinkedList<>();\n\n    for (int i = 0; i = nums[deque.peekLast()]) {\n            deque.pollLast();\n        }\n        deque.offer(i); // 作用等同于deque.offerLast()\n    }\n    for (int i = size; i = nums[deque.peekLast()]) { // 从尾部删除队列中等于或小于当前元素的元素，因为这些元素不可能成为滑动窗口的最大值\n            deque.pollLast();\n        }\n        while (!deque.isEmpty() && i - deque.peekFirst() >= size) { // 从头部删除队列中已经滑出窗口的元素\n            deque.pollFirst();\n        }\n        deque.offer(i);\n    }\n    result.add(nums[deque.peekFirst()]);\n\n    return result;\n}\n\n"},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"url":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","title":"数据流中的中位数","keywords":"","body":"题目\n如何得到一个数据流中的中位数？如果从数据流中读出奇数个数值，那么中位数就是所有数值排序之后位于中间的数值。如果从数据流中读出偶数个数值，那么中位数就是所有数值排序之后中间两个数值的平均值。\n思路\n由于我们需要从一个数据流中读出数据并计算中位数，因此我们需要用一个数据容器存储数据流中的所有数据并同时考虑插入数据和读取中位数这两个操作的时间复杂度。\n容易想到的是用一个数组保存数据流中的所有数据，如果数据是有序的，则我们在插入一个新数据到数据流时需要移动其他数据以保持数据的有序性，时间复杂度为 O(N)，读取中位数时由于数组是有序的因此直接读就可以了，时间复杂度是 O(1)。如果数组是无序的，插入数据的时间复杂度是 O(1)，读取中位数可以使用 partition 函数，时间复杂度为 O(N)（关于 partition 的时间复杂度分析比较复杂，详见《算法导论》）。\n如果采用二叉搜索树作为数据容器的话，插入数据的平均时间复杂度是 O(logN)，读取中位数的平均时间复杂度为O(logN)，但是在最坏情况下，即二叉搜索树退化为一个单链表时，插入和读取的时间复杂度是 O(N)。我们可以使用一个改进的 AVL 树作为数据容器，将平衡因子定义为左右子树节点数据之差，这样插入的时间复杂度为O(logN)，读取的时间复杂为 O(1) (根节点的值或根节点和左子节点或右子节点的值的平均值)。但是大部分的编程语言没有实现我们定义的这种 AVL 树，因此我们需要再分析其他的方法。\n假设数据在容器中已经排好序，中位数可以由 p1 和 p2 两个指针指向的数得到。如果容器中数据的数目是奇数，则中位数由 p1 和 p2 共同指向；如果容器中数据的数目是偶数，则中位数是 p1 和 p2 指向的数的平均值。注意到整个数据容器被我们分成了两部分，左边部分的数据比右边部分的数据小，并且 p1 指向的数据是左边部分最大的数，p2 指向的数据是右边部分最小的数，见下图：\n\n\n\nN1\nN2\n...\nNm\nNm+1\nNm+2\n...\nN2m\nN2m+1\n\n\n\n\n\n\n\n\nP1, P2\n\n\n\n\n\n\n\n\n\nN1\nN2\n...\nNm\nNm+1\n...\nN2m-1\nN2m\n\n\n\n\n\n\n\nP1\nP2\n\n\n\n\n\n因此我们可以用一个最大堆保存左边部分的数据，用一个最小堆保存右边部分的数据，p1 和 p2 分别指向最大堆和最小堆的堆顶。\n在插入数据时我们需要确保数据被平均分配到两个堆中，即两个堆中数据的数目之差不能超过1。为了实现实现平均分配，我们约定在数据的总数目是偶数时把数据插入到最小堆中，否则插入到最大堆中。同时，我们还要保证最大堆中的所有数据都要小于最小堆中的数据。当数据的总数目是偶数时，按照我们的约定会把数据插入到最小堆中，如果这个数据比最大堆中的一些数据要小该怎么办呢？我们可以先把数据插入到最大堆中，然后拿出此时最大堆中最大的元素，即堆顶元素，将其插入到最小堆中，这样就保证了最小堆中的所有数字都大于最大堆中的数字。当需要把一个数据插入到最大堆但是这个数据比最小堆中的一些数据要大时同理进行分析。\n采用最大堆和最小堆作为数据容器时，插入数据的时间复杂度为 O(logN)，读取中位数的时间复杂度为 O(1)。\nclass DynamicArray {\n\n    private PriorityQueue max; // 最大堆\n    private PriorityQueue min; // 最小堆\n\n    DynamicArray() {\n        min = new PriorityQueue<>();\n        max = new PriorityQueue<>(new Comparator() {\n            @Override\n            public int compare(Integer o1, Integer o2) {\n                return o2 - o1;\n            }\n        });\n    }\n\n    // 向数据流中插入一个数据\n    public void insert(int num) {\n        int size = max.size() + min.size();    // 当前数据流中数据的总数\n        if ((size & 1) == 0) {    // 如果当前数据流中数据的总数是偶数，将其插入到最小堆中\n            if (max.size() > 0 && num  0 && num > min.peek()) {\n                min.offer(num);\n                num = min.poll();\n            }\n            max.offer(num);\n        }\n    }\n\n    // 获取当前数据流中所有数据的中位数\n    public int getMedian() {\n        int size = max.size() + min.size();    // 当前数据流中数据的总数\n        if ((size & 1) == 0) {    // 如果数据流中数据的总数为偶数，返回中间的两个数的平均值\n            return (max.peek() + min.peek()) / 2;    // 如果数据流中数据的总数为奇数，返回中间的数\n        } else {\n            return min.peek();  // 注意，虽然在前面的分析中，如果数据流中数据的总数是奇数，p1和p2同时指向数据流中间的那个数，这里无论是返回最小堆的堆顶元素还是最大堆的堆顶元素应该都是可以的。但是在实现上只有最小堆的堆顶才指示中间的那个数，因此这里只能返回最小堆的堆顶元素\n        }\n    }\n}\n\n"},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"url":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","title":"用两个栈实现队列","keywords":"","body":"题目\n用两个栈实现一个队列，完成队列的入队 offer() 和出队 poll() 操作。 队列中的元素类型为 int。\n思路\npush 时将数 push 到 stack1中，pop 时，从 stack2 中pop，如果 stack2 为空，则先将 stack1 中的所有数 pop到 stack2 中再从 stack2 中 pop。\nclass MyQueue {\n\n    Stack stack1;\n    Stack stack2;\n\n    public MyQueue() {\n        stack1 = new Stack<>();\n        stack2 = new Stack<>();\n    }\n\n    public void offer(int num) {\n        stack1.push(num);\n    }\n\n    public int poll() {\n        if (stack2.isEmpty()) {\n            while (!stack1.isEmpty()) {\n                stack2.push(stack1.pop());\n            }\n        }\n        return stack2.pop();\n    }\n}\n\n扩展\n用两个队列实现一个栈，完成栈的入栈 push() 和出栈 pop() 操作。 栈中的元素类型为 int。\n思路\n我们通过一系列栈的 push 和 pop 操作来分析两个队列模拟一个栈的过程。表格的第一列表示 queue1，第二列表示 queue2。现在我们向栈中依次 push 进1,2,3三个数，由于初始时 queue1 和 queue2 都是空的，因此插入哪个queue 都可以。我们不妨将1,2,3依次插入到 queue2，此时两个 queue 中元素的情况如下图所示：\nqueue1    queue2\n          3\n          2\n          1\n现在我们对栈执行 pop，由于栈的后进先出特性可知出栈元素应该是3，然而直接操作 queue2 的话会从队头删除元素，也就是删除1。此时我们可以先把 queue2 中的1,2插入到 queue1 中，再从 queue2 中删除3。执行出栈后两个 queue 中元素的情况如下图所示：\nqueue1    queue2\n\n  2\n  1\n如果再执行一次 pop 的话，我们就把 queue1 中的1插入到 queue2 中，然后从 queue1 中删除1。\n总结上述过程我们可以得到以下结论：整个过程中我们保持两个队列中至少一个队列为空。当执行 push 时，如果两个队列均为空，我们约定将元素插入到 queue2 中；如果两个队列一个未空，另一个不为空，我们将元素插入到那个非空的队列中。当执行 pop 时，我们不断将非空的那个队列中的元素出队，直到该队列只含有一个元素，此时该元素即为出栈的元素，我们将该元素出队并返回。\nclass MyStack {\n\n    Queue queue1;\n    Queue queue1;\n\n    public MyStack() {\n        queue1 = new LinkedList<>();\n        queue2 = new LinkedList<>();\n    }\n\n    public void push(int num) {\n        if (queue1.isEmpty()) {\n            queue2.offer(num);\n        } else {\n            queue1.offer(num);\n        }\n    }\n\n    public int pop() {\n        if (!queue1.isEmpty()) {\n            while (queue1.size() > 1) {\n                queue2.offer(queue1.poll());\n            }\n            return queue1.poll();\n        } else {\n            while (queue2.size() > 1) {\n                queue1.offer(queue2.poll());\n            }\n            return queue2.poll();\n        }\n    }\n}\n\n"},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"url":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","title":"栈的压入、弹出序列","keywords":"","body":"题目\n输入两个整数序列，第一个序列表示栈的入栈顺序，请判断第二个序列是否可能为该栈的出栈顺序。假设压入栈的所有数字均不相等。例如序列1, 2, 3, 4, 5是某栈的入栈顺序，序列4, 5, 3, 2, 1是该入栈序列对应的一个出栈序列，但4, 3, 5, 1, 2就不可能是该入栈序列的出栈序列。两个序列的长度相等。\n思路\n使用一个辅助栈 stack。如果出栈序列中的当前元素刚好是栈顶元素，那么直接弹出。否则，我们把入栈序列中还没有入栈的数字压入 stack，直到把下一个需要出栈的元素压入栈为止。如果入栈序列中所有的数字都入栈了仍然没有找到下一个需要出栈的数字，那么该序列不可能是一个出栈序列。\npublic boolean isPopOrder(int[] push,int[] pop) {\n    if (push == null || push.length == 0 || pop == null || pop.length == 0) return false;\n    Stack stack = new Stack<>();\n    int p1 = 0;    // 指示入栈序列中的元素\n    int p2 = 0;    // 指示出栈序列中的元素\n    while (p2 \n"},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"url":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","title":"最小的k个数","keywords":"","body":"题目\n输入 n 个整数， 找出其中最小的 k 个数字。例如输入 [4, 5, 1, 6, 2, 7, 3, 8]，则最小的 k 个数字是1, 2, 3, 4。\n思路1\n把数组进行排序，排在最前面的 k 个数就是最小的 k 个数。代码略。\n时间复杂度：O(NlogN)\n思路2\n从 “数组中出现次数超过一半的数字” 中我们可以得到启发，我们同样可以用 partition 函数来解决这个问题。我们基于数组的第 k 个数字来进行调整，使得所有小于第 k 个数字的数都排在它的左边，所有大于第 k 个数字的数都排在它的右边。这样调整之后，位于数组左边的 k 个数字就是最小的 k 个数字（但是这 k 个数字不一定是排好序的）。\npublic List GetLeastKNumbers(int[] nums, int k) {\n    if (nums == null || nums.length == 0 || k  nums.length) return new ArrayList<>();\n    List result = new ArrayList<>();\n    int lo = 0;\n    int hi = nums.length - 1;\n    int index = partition(nums, lo ,hi);\n\n    while (index != k - 1) {\n        if (index \n时间复杂度：O(NlogN)\n思路3\n由于是找最小的 k 个数，我们可以先用一个大顶堆保存数组的前 k 个数，之后从 k + 1 开始遍历数组中剩下的数，如果当前数比堆顶元素小，将堆顶元素出堆，同时将当前元素进堆。遍历完成后堆中保存的即是最小的 k 个数。\n注意，Java 默认创建的是小顶堆。\npublic List GetLeastKNumbers(int[] nums, int k) {\n    if (nums == null || nums.length == 0 || k  nums.length) return new ArrayList<>();\n    // 创建一个大顶堆\n    PriorityQueue pq = new PriorityQueue<>(new Comparator() {\n        @Override\n        public int compare(Integer o1, Integer o2) {\n            return o2 - o1;\n        }\n    });\n\n    for (int i = 0; i  result = new ArrayList<>(pq);\n\n    return result;\n}\n\n时间复杂度：O(NlogK)\n解法比较\n\n\n\n\n基于partition函数的解法\n基于堆或红黑树的解法\n\n\n\n\n时间复杂度\nO(N)\nO(NlogK)\n\n\n是否需要修改输入数组\n是\n否\n\n\n是否适用于海量数据\n否\n是\n\n\n\n"},"JianZhiOffer/String/":{"url":"JianZhiOffer/String/","title":"String","keywords":"","body":""},"JianZhiOffer/String/表示数值的字符串.html":{"url":"JianZhiOffer/String/表示数值的字符串.html","title":"表示数值的字符串","keywords":"","body":"题目\n请实现一个函数用来判断字符串是否表示数值 (包括整数和小数)。例如，字符串 \"+100\", \"5e2\", \"-123\", \"3.1416\", \"-1E-16\" 都表示数值，但 \"12e\", \"1a3.14\", \"1.2.3\", \"+-5\", \"12e+5.4\" 都不是。\n思路\n书上 C++ 代码的 Java 改写。用变量 curr 指示当前字符。判断的过程是，首先看第一个字符是不是正负号。如果是，在字符串上移动一个字符，继续扫描剩余的字符串中0 - 9的数位。如果是一个小数，则会遇到小数点。此外，如果是用科学计数法表示的数值，在整数或者小数的后面还有可能遇到 e 或 E。函数 scanDigits() 用来扫描0 - 9中的数字，isExponential() 函数用来判断 E(...) 是不是合法的。\nprivate int curr = 0;    // 指示字符串str的当前字符\n\npublic boolean isNumeric(String str) {\n    if (str == null || str.length() == 0) return false;\n    if (str.charAt(curr) == '+' || str.charAt(curr) == '-') curr++;\n    if (curr == str.length()) return false;\n    scanDigits(str);\n    if (curr = '0' && str.charAt(curr) \n"},"JianZhiOffer/String/打印从1到最大的n位数.html":{"url":"JianZhiOffer/String/打印从1到最大的n位数.html","title":"打印从1到最大的n位数","keywords":"","body":"题目\n输入数字 n，按顺序打印出从1到最大的 n 位数。比如输入3，则打印出1, 2, 3一直到999。\n思路1\n先求出最大的 n 位数 number，然后用一个循环打印出从1到 number 的每一个数。\npublic void printToMaxDigits(int n) {\n    if (n \n但是当 n 非常大导致 int 和 long 都不能表示最大的 n 位数时，程序会产生溢出，因此我们需要尝试其他的方法。\n思路2\n我们可以用字符串表示大数，进而我们需要在字符串上模拟整数的加1操作。\npublic void printToMaxDigits(int n) {\n    if (n = 0; i--) {\n        int curr = sb.charAt(i) - '0' + carry;\n        if (i == sb.length() - 1) curr += 1;\n        if (curr \n思路3\n上述代码虽然思路很简洁，但是代码比较繁琐。观察数字产生的规律：000, 001, 002, ..., 009, 010, 011, ..., 019, ...，我们发现每一位上其实都是执行一个0 - 9的全排列，因此我们可以用递归解决这个问题。\npublic void printToMaxDigits(int n) {\n    if (n \n注意：上述代码的运行结果为：\n\n1\n2\n3\n4\n5\n...\n在1前面会多打印出来一个空行，这是因为 \"000\" 也会打印出来，这个空行是由 print(temp), temp = {0, 0, 0} 产生的。\n"},"JianZhiOffer/String/第一个只出现一次的字符.html":{"url":"JianZhiOffer/String/第一个只出现一次的字符.html","title":"第一个只出现一次的字符","keywords":"","body":"题目\n在一个字符串 (0 \n思路\n先遍历一遍字符串，用一个 map 统计每个字符的出现次数，接着再遍历一遍字符串，找到第一个出现次数为1的字符，并返回它的位置。\npublic int FirstNotRepeatingChar(String str) {\n    if (str == null || str.length() == 0) return -1;\n    char[] map = new char[256];\n\n    for (int i = 0; i \n"},"JianZhiOffer/String/翻转字符串.html":{"url":"JianZhiOffer/String/翻转字符串.html","title":"翻转字符串","keywords":"","body":"题目\n输入一个英文句子，翻转句子中单词的顺序，但单词内字符的顺序不变。为简单起见，标点符号和普通字母一样处理。例如输入字符串 \"I am a student\"，则输出 \"student. a am I\"。\n思路1\n先将句子划分成一个个单词，然后从后向前构造出结果。注意，如果原先的句子中没有单词，则直接返回原先的句子即可。\npublic String ReverseSentence(String str) {\n   if (str == null || str.length() == 0) return \"\";\n   String[] words = str.split(\" \");\n   if (words.length == 0) return str;\n   StringBuilder sb = new StringBuilder();\n   boolean isFirst = true;    // 指示当前单词是不是要构造的第一个单词\n   for (int i = words.length - 1; i >= 0; i--) {\n       if (isFirst) {\n           sb.append(words[i]);\n           isFirst = false;\n       } else {\n           sb.append(\" \" + words[i]);\n       }\n   }\n   return sb.toString();\n}\n\n思路2\n先对整个句子作一个翻转，再依次将句子中的每个单词作一个翻转，即得到结果。\npublic String reverseSentence(String str) {\n    if (str == null || str.length() == 0) return \"\";\n    String temp = reverse(str);    // 翻转整个句子，将结果保存到temp中\n    int start = 0;\n    int end = temp.indexOf(\" \", start);\n    StringBuilder sb = new StringBuilder();\n    boolean isFirst = true;\n    while (end != -1) {\n        String word = reverse(temp.substring(start, end));\n        if (isFirst) {\n            sb.append(word);\n            isFirst = false;\n        } else {\n            sb.append(\" \" + word);\n        }\n        start = end+1;\n        end = temp.indexOf(\" \", start);\n    }\n    String word = reverse(temp.substring(start));\n    if (isFirst) sb.append(word);\n    else sb.append(\" \" + word);\n    return sb.toString();\n}\n\n// 反转字符串s\nprivate String reverse(String s) {\n    return new StringBuilder(s).reverse().toString();\n}\n\n扩展\n左旋转字符串。字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的末尾。请定义一个函数实现字符串的左旋转操作。例如输入字符串 \"abcdefg\" 和数字2，该函数将返回左旋转两位得到的结果 \"cdefgab\"。\n思路1\n取字符串的前 n 位作为子串 left，取余下的部分作为子串 right，将 left 和 right 进行拼接即可。\npublic String leftRotateString(String s, int n) {\n   if (s == null || s.length() == 0 || n  s.length()) return \"\";\n   String left = s.substring(0, n);\n   String right = s.substring(n);\n   return right + left;\n}\n\n思路2\n先反转字符串的前 n 个字符，再反转字符串的后面部分，再反转整个字符串，即可得到字符串左旋转 n 位的结果。\npublic String leftRotateString(String s, int n) {\n    if (s == null || s.length() ==0 || n  s.length()) return \"\";\n    String left = s.substring(0, n);\n    String right = s.substring(n);\n    return reverse(reverse(left) + reverse(right));\n}\n\n//反转字符串\nprivate String reverse(String s) {\n    return new StringBuilder(s).reverse().toString();\n}\n\n"},"JianZhiOffer/String/替换空格.html":{"url":"JianZhiOffer/String/替换空格.html","title":"替换空格","keywords":"","body":"题目\n请实现一个函数，将一个字符串中的每个空格替换成 “%20”。例如，当字符串为 \"We Are Happy\"，则经过替换之后的字符串为 \"We%20Are%20Happy\"。\n思路1\n直接使用 Java 的库函数 replaceAll()。\npublic String replaceSpace(StringBuilder str) {\n    return str.toString().replaceAll(\" \", \"%20\");\n}\n\n思路2\n容易想到的做法是每遇到一个空格，将其替换为 \"%20\"，由于是把1个字符替换为2个字符，所以其后所有的字符都需要向后移动2位，效率不高。可以先求出原字符串中空格的总数，据此计算出替换后的字符串的新的长度，利用两个指针 p1 和 p2，p1 指示旧的字符串的末尾，p2 指示新的字符串的末尾，从后向前进行替换。\npublic String replaceSpace(StringBuilder str) {\n    if (str == null || str.length() == 0) return \"\";\n    int totalBlanks = 0;\n    for (int i = 0; i = 0 && p1 \n"},"JianZhiOffer/String/字符串的排列.html":{"url":"JianZhiOffer/String/字符串的排列.html","title":"字符串的排列","keywords":"","body":"题目\n输入一个字符串,按字典序打印出该字符串中字符的所有排列。例如输入字符串 \"abc\", 则打印出由字符 'a', 'b', 'c' 所能排列出来的所有字符串 \"abc\", \"acb\", \"bac\", \"bca\", \"cab\" 和 \"cba\"。\n思路1\n回溯法。\npublic List permutation(String str) {\n    if (str == null || str.length() == 0) return new ArrayList<>();\n    List result = new ArrayList<>();\n    dfs(str, new char[str.length()], 0, new boolean[str.length()], result);\n    return result;\n}\n\nprivate void dfs(String str, char[] selected, int curr, boolean[] vis, List result) {\n    if (curr == str.length()) {\n        result.add(String.valueOf(selected));\n    } else {\n        for (int i = 0; i \n思路2\n书上的思路。求字符串的排列可以分成两步：首先求所有可能出现在第一个位置的字符，即把第一个字符和后面的字符依次交换（也可以和它自己交换）；第二步固定第一个字符，求后面所有字符的排列。这个时候仍把后面的所有字符分成两部分，后面字符的第一个字符以及这个字符之后的所有字符，然后把第一个字符逐一和它后面的字符交换。这是一个递归的过程。为了方便交换，我们在代码中将字符串转换为字符数组。\npublic List permutation(String str) {\n    if (str == null || str.length() == 0) return new ArrayList<>();\n    List result = new ArrayList<>();\n    char[] chs = str.toCharArray();\n    helper(chs, 0, result);\n    return result;\n}\n\nprivate void helper(char[] chs, int begin, List result) {\n    if (begin == chs.length) {\n        result.add(String.valueOf(chs));\n    } else {\n        for (int i = begin; i \n"},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"url":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","title":"字符流中第一个只出现一次的字符","keywords":"","body":"题目\n请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符 \"go\" 时，第一个只出现一次的字符是 'g'；当从该字符流中读出前6个字符 \"google\" 时，第一个只出现一次的字符是 'l'。\n思路\n可以在类中使用一个 StringBuilder 记录字符流，每次 insert 时向 sb 中 append。当需要找出字符流中第一个不重复的字符时，根据题目 “第一个只出现一次的字符” 中的方法，先遍历一遍 sb，用一个 map 记录 sb 中每个字符的出现次数，然后再遍历一遍 sb，根据 map 找到第一个不重复的字符。但是使用这种方法，当字符流中的字符很多时，每次调用 firstAppearingOnce() 找当前字符流中第一个不重复的字符时都要遍历一遍字符流，那么时间开销会很大。更好的做法是用一个数组 occurrence 记录当前字符流中各个字符的出现情况，occurrence 的大小为256。初始时，occurrence 中的每个元素置为-1，表示所有的字符都还未出现过。之后每次 insert 一个字符时，设当前字符的 ASCII 码为 i，如果当前字符还未出现过，则将当前字符在字符流中的下标 index 赋给occurrence[i]；如果当前字符已经出现过，则我们就不需要考虑这个字符了，约定把-2赋给 occurrence[i]。在函数 firstAppearingOnce() 中，我们遍历 occurrence，并用 ch 和 minIndex 记录第一个只出现一次的字符和它的下标。遍历结束返回 ch 即可。\n总结 occurrence[i] 各个值的含义如下：\n\noccurrence[i] = -1：ASCII 码为 i 的字符还未出现过\n\noccurrence[i] >= 0：ASCII 码为 i 的字符出现了一次，第一次出现的位置为 occurrence[i]\n\noccurrence[i] = -2：ASCII 码为 i 的字符出现了多次\n\n\nclass CharacterStream {\n\n    private int[] occurrence;    // 记录字符流中每个字符的出现情况\n    private int index;    // 字符流中字符的个数\n\n    public CharacterStream() {\n        occurrence = new int[256];\n        for (int i = 0; i = 0) {    // 如果当前字符已经出现过，将occurrence[c]赋为-2\n            occurrence[c] = -2;\n        }\n    }\n\n    public char firstAppearingOnce() {\n        char c = '#';\n        int minIndex = Integer.MAX_VALUE;\n        for (int i = 0; i = 0 && occurrence[i] \n"},"JianZhiOffer/Tree/":{"url":"JianZhiOffer/Tree/","title":"Tree","keywords":"","body":""},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"url":"JianZhiOffer/Tree/从上到下打印二叉树.html","title":"从上到下打印二叉树","keywords":"","body":"题目\n从上往下打印出二叉树的每个节点，同层节点从左至右打印。\n思路\n二叉树的层次遍历。\nprivate void levelOrder(TreeNode root) {\n    if (root == null) return;\n    List> result = new ArrayList<>();\n    Queue queue = new LinkedList<>();\n    queue.offer(root);\n    while (!queue.isEmpty()) {\n        int size = queue.size();\n        List temp = new ArrayList<>();\n        for (int i = 0; i \n扩展\n按之字形顺序打印二叉树。实现一个函数按照之字形顺序打印二叉树，即第一层按照从左向右的顺序打印，第二层按照从右向左的顺序进行打印，第三层再按照从左向右的顺序进行打印，以此类推。\n思路\n按之字形顺序打印二叉树需要两个栈。我们在打印某一行节点的时候，把下一层的节点保存到相应的栈里。如果当前打印的是奇数层，由于奇数层是从左往右打印，其下一层需要从右往左打印，根据栈后进先出的特性，我们在保存下一层节点的时候应该先保存左子节点，再保存右子节点。同理，如果当前打印的是偶数层，则保存下一层节点的时候先保存右子节点，再保存左子节点。\npublic List> print(TreeNode root) {\n    if (root == null) return new ArrayList<>();\n    List> result = new ArrayList<>();\n    Stack stack1 = new Stack<>();    // 保存奇数层的节点\n    Stack stack2 = new Stack<>();    // 保存偶数层的节点\n    int curr = 0;    // curr = 0 : 当前是奇数层; curr = 1 : 当前是偶数层\n    stack1.push(root);\n    while (!stack1.isEmpty() || !stack2.isEmpty()) {\n        if (curr == 0) {\n            List temp = new ArrayList<>();\n            while (!stack1.isEmpty()) {\n                TreeNode node = stack1.pop();\n                temp.add(node.val);\n                // 由于下一层是偶数层需要从右往左打印，因此先加入左子节点，再加入右子节点\n                if (node.left != null) stack2.push(node.left);\n                if (node.right != null) stack2.push(node.right);\n            }\n            result.add(temp);\n            curr = 1 - curr;\n        } else {\n            List temp = new ArrayList<>();\n            while (!stack2.isEmpty()) {\n                TreeNode node = stack2.pop();\n                temp.add(node.val);\n                // 由于下一层是奇数层需要从左往右打印，因此先加入右子节点，再加入左子节点\n                if (node.right != null) stack1.push(node.right);\n                if (node.left != null) stack1.push(node.left);\n            }\n            result.add(temp);\n            curr = 1 - curr;\n        }\n    }    // while\n    return result;\n}\n\n"},"JianZhiOffer/Tree/对称的二叉树.html":{"url":"JianZhiOffer/Tree/对称的二叉树.html","title":"对称的二叉树","keywords":"","body":"题目\n实现一个函数，判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。\n思路\n见代码。\npublic boolean isSymmetrical(TreeNode root) {\n    if (root == null) return true;\n    return helper(root.left, root.right);\n}\n\nprivate boolean helper(TreeNode left, TreeNode right) {\n    if (left == null && right == null) return true;\n    if (left == null || right == null) return false;\n    if (left.val != right.val) return false;\n    return helper(left.left, right.right) && helper(left.right, right.left);\n}\n\n"},"JianZhiOffer/Tree/二叉树的镜像.html":{"url":"JianZhiOffer/Tree/二叉树的镜像.html","title":"二叉树的镜像","keywords":"","body":"题目\n输入一棵二叉树，输出它的镜像。例如输入二叉树如下：\n     8\n    / \\\n   6   10\n  / \\ /  \\\n 5  7 9  11\n输出：\n     8\n    / \\\n   10  6\n  / \\ / \\\n 11 9 7  5\n思路\n前序遍历该树，对每个非叶节点交换其左右两个子节点。\npublic void mirror(TreeNode root) {\n    if (root == null) return;\n    if (root.left == null && root.right == null) return;\n    TreeNode temp = root.left;\n    root.left = root.right;\n    root.right = temp;\n    mirror(root.left);\n    mirror(root.right);\n}\n\n"},"JianZhiOffer/Tree/二叉树的深度.html":{"url":"JianZhiOffer/Tree/二叉树的深度.html","title":"二叉树的深度","keywords":"","body":"题目\n输入一棵二叉树，求该树的深度。从根结点到叶结点依次经过的结点 (含根、叶结点) 形成树的一条路径，最长的路径的长度为树的深度。\n思路\n当根节点为空时，返回0；否则，返回左子树的深度和右子树的深度的最大值并加1。\npublic int depth(TreeNode root) {\n    if (root == null) return 0;\n    return Math.max(depth(root.left), depth(root.right)) + 1;\n}\n\n扩展\n平衡二叉树。输入一棵二叉树，判断该二叉树是否是平衡二叉树。一个二叉树是平衡二叉树指的是树中所有节点的左子树的深度和右子树的深度差的绝对值不超过1。\n思路\n后序遍历该二叉树，求出当前节点左子树的深度 left 和右子树的深度 right，判断 left 和 right 的差的绝对值是否大于1，如果是，说明该二叉树不是平衡二叉树。下面的代码中函数 isBalanced() 返回当前节点的深度。\nboolean isBalanced;\n\npublic boolean isBalancedTree(TreeNode root) {\n    if (root == null) return true;\n    isBalanced = true;\n    isBalancedTreeCore(root);\n    return isBalanced;\n}\n\nprivate int isBalancedTreeCore(TreeNode root) {\n    if (root == null) return 0;\n    int left = isBalancedTreeCore(root.left);\n    int right = isBalancedTreeCore(root.right);\n    int diff = Math.abs(left - right);\n    if (diff > 1) isBalanced = false;\n    return Math.max(left, right) + 1;\n}\n\n"},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"url":"JianZhiOffer/Tree/二叉树的下一个节点.html","title":"二叉树的下一个节点","keywords":"","body":"题目\n给定一个二叉树和其中的一个节点，找到中序遍历的下一个节点。树中的节点除了有两个分别指向左右子节点的指针以外，还有一个指向父节点的指针。\n思路\n由于中序遍历是从左子树开始的，因此为了找出当前节点中序遍历的下一个节点，我们只需要在当前节点的右子树和父节点中寻找即可。如果当前节点的右子树不为空，则当前节点的下一个节点是右子树中最左边的那个节点；如果当前节点的右子树为空，则我们需要从当前节点的父节点中寻找当前节点的下一个节点。如果当前节点是其父节点的左子树，则当前节点的下一个节点就是其父节点；如果当前节点是父节点的右子树，则我们需要继续从当前的父节点的父节点中寻找，直到找到当前节点是其父节点的左子树，或者父子树为空，即当前节点没有下一个节点。\nclass Node {\n    public int val;\n    public Node left;\n    public Node right;\n    public Node parent;    // 指向当前节点的父节点\n}\n\npublic Node getNextNode(Node node) {\n    if (nodee == null) return null;\n    Node next = null;    // 保存当前节点的中序遍历的下一个节点\n    if (node.right != null) {\n        Node curr = node.right;\n        while (curr != null) {\n            curr = curr.left;\n        }\n        next = curr;\n    } else {\n        Node curr = node;\n        Node parent = node.parent;\n        while (parent != null && curr == parent.right) {\n            curr = parent;\n            parent = parent.parent;\n        }\n        next = parent;\n    }\n    return next;\n}\n\n"},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"url":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","title":"二叉树中和为某一值的路径","keywords":"","body":"题目\n输入一颗二叉树的根节点和一个整数，打印出二叉树中所有路径和为 target 的所有路径。路径和为路径中所有节点的和，路径定义为从根结点向下到某个叶结点所经过的结点形成的一个序列。例如给定二叉树如下：\n     10\n    /  \\\n   5   12\n  / \\\n 4   7\n返回该二叉树中所有路径和为22的路径，则返回结果应该为：\n[[10, 5, 7], [10, 12]]\n思路\n由于前序遍历是先从根节点开始访问，因此采用前序遍历处理。每遍历一个节点将当前节点的值进行累加，即target - root.val，同时将当前节点加入到 path 中。当遍历到叶节点并且 target == 0 时，将 path 加到 result 中。在函数回退的时候记得在 path 中删除当前节点。\npublic List> findPath(TreeNode root, int target) {\n    if (root == null) return new ArrayList<>();\n    List> result = new ArrayList<>();\n    helper(root, target, new ArrayList<>(), result);\n    return result;\n}\n\nprivate void helper(TreeNode root, int target, List path, List> result) {\n    if (root == null) return;\n    target -= root.val;\n    path.add(root.val);\n    if (root.left == null && root.right == null && target == 0) {\n        result.add(new ArrayList<>(path));    //注意，这里不能直接写成\"result.add(path)\"，那样相当于把path的引用传过去了，然而我们在下面遍历的过程中会改变path中的值，这样会导致之前加入result中的路径的内容也会跟着改变。应该用一个新的ArrayList来承载path的值。\n    }\n    helper(root.left, target, path, result);\n    helper(root.right, target, path, result);\n    path.remove(path.size() - 1);\n}\n\n"},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"url":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","title":"二叉搜索树的第k大节点","keywords":"","body":"题目\n给定一棵二叉搜索树，请找出其中第k大的节点，k 从1开始计数。例如给定如下二叉搜索树：\n     5\n    / \\\n   3   7\n  / \\ / \\\n 2  4 6  8\n按节点数值大小排序，第三个的节点应该是4。\n思路1\n由于二叉搜索树的中序遍历序列是递增的，因此模拟一遍二叉搜索树的中序遍历，每次记录当前节点的编号，当前节点的编号等于 k 时即找到了第 k 大的节点。\nprivate TreeNode result;    // 第k大的节点\nprivate int index;    // 指示当前中序遍历到的节点的编号，从1开始\n\npublic TreeNode kthNode(TreeNode root, int k) {\n    if (root == null || k \n思路2\n《Algorithm》中的方法。要求的是树中第 k 小的节点，假设我们把树中的节点按节点值从小到大排列并从0开始编号，首先求出根节点左子树的节点数 t，如果 t == k，说明当前节点就是第 k 小的节点；如果 t > k，说明第 k 小的节点在根节点的左子树中，因此需要继续在左子树中寻找第 k 小的节点；如果 t \npublic TreeNode kthNode(TreeNode root,int k) {\n    if (root == null || k  t) {\n        return kthNodeCore(root.right, k-t-1);\n    } else {\n        return root;\n    }\n}\n\n// 返回root中的节点总数\nprivate int size(TreeNode root){\n    if(root==null) return 0;\n    return size(root.left)+size(root.right)+1;\n}\n\n如果以 kthNodeCore(root, k) 这种方式调用，则 kthNodeCore() 应相应修改为：\nprivate TreeNode kthNodeCore(TreeNode root, int k) {\n    if (root == null) return null;\n    int t = size(root.left);\n    if (k  t + 1) {\n        return kthNodeCore(root.right, k-t-1);\n    } else {\n        return root;\n    }\n}\n\n"},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"url":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","title":"二叉搜索树的后序遍历序列","keywords":"","body":"题目\n输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。假设输入的数组的任意两个数字都互不相同。例如输入数组 [5, 7, 6, 9, 11, 10, 8]，返回 true，因为这个整数序列是下图所示二叉搜索树的后序遍历结果。\n     8\n    / \\\n   6   10\n  / \\ /  \\\n 5  7 9  11\n如果输入数组是 [7, 4, 6, 5]，由于没有哪棵二叉搜索树的后序遍历结果是这个序列，因此返回 false。\n思路\n在二叉搜索树的后序遍历序列中，最后一个是根节点，在根节点前所有小于根节点的数构成根节点的左子树，所有大于根节点的数构成根节点的右子树。据此可以在原数组中划分出左子树序列和右子树序列，其中左子树序列中的所有数都比根节点的值小，右子树序列中所有数的值都比根节点的值大。如果在右子树序列中出现小于根节点值的数，说明该序列不是二叉搜索树的后序遍历结果，返回 false。接着递归得在左子树序列和右子树序列中继续判断。\npublic boolean verifySequenceOfBST(int[] nums) {\n    if (nums == null || nums.length == 0) return false;\n    return verifySequenceOfBSTCore(nums, 0, nums.length - 1);\n}\n\nprivate boolean verifySequenceOfBSTCore(int[] nums, int lo, int hi) {\n    // special\n    if (lo > hi) return false;\n    if (lo == hi) return true;    // 如果lo == hi，说明当前子数组中只有一个元素，直接返回true\n    int rootValue = nums[hi];    // 根节点的值\n    int mid = lo;    //左子树序列和右子树序列的分界点，表示右子树序列的第一个元素，同时也表示左子树序列中元素的个数\n    for (; mid  rootValue) break;\n    }\n    for (int i = mid; i \n"},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"url":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","title":"二叉搜索树与双向链表","keywords":"","body":"题目\n输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。例如对于如下的二叉搜索树：\n     10\n    /  \\\n   6   14\n  / \\ /  \\\n 4  8 12 16\n转换后的结果为：\n46810121416NULL\n思路\n由于需要转换成一个排序的双向链表，而二叉搜索树的中序遍历序列是排序的，因此可以采用中序遍历处理原二叉搜索树。处理时用一个变量 prev 保存中序遍历的前一个节点，在处理当前节点 root 时，建立当前节点和 prev 之间的双向链接关系即可。\nprivate TreeNode prev = null;\n\npublic TreeNode convert(TreeNode root) {\n    if (root == null) return null;\n    convertCore(root);    // 函数执行完后prev指向的是双向链表的尾节点\n    while (prev != null && prev.left != null) {\n        prev = prev.left;\n    }\n    return prev;\n}\n\nprivate void convertCore(TreeNode root) {\n    if (root == null) return;\n    convertCore(root.left);\n    if (prev == null) {\n        prev = root;\n    } else {\n        prev.right = root;\n        root.left = prev;\n        prev = root;\n    }\n    convertCore(root.right);\n}\n\n"},"JianZhiOffer/Tree/树的子结构.html":{"url":"JianZhiOffer/Tree/树的子结构.html","title":"树的子结构","keywords":"","body":"题目\n输入两棵二叉树 A，B判断 B 是不是 A 的子结构。我们约定空树不是任意一个树的子结构。例如给定树 A：\n    8\n   / \\\n  8   7\n / \\\n9   2\n   / \\\n  4   7\n树 B：\n  8\n / \\\n9   2\n可知 B 是 A 的子结构。\n思路\n首先在 root1 中找到和 root2 的根节点的值一样的节点，然后判断该节点所代表的子树是不是和 root2 具有相同的结构。\npublic boolean hasSubtree(TreeNode root1, TreeNode root2) {\n    if (root1 == null && root2 == null) return true;    // 约定当root1和root2均为null，root2是root1的子结构，返回true\n    if (root1 == null || root2 == null) return false;\n    boolean isFound = false;\n    if (root1.val == root2.val) isFound = helper(root1, root2);\n    if (!isFound) isFound = hasSubtree(root1.left, root2) || hasSubtree(root1.right, root2);\n    return isFound;\n}\n\nprivate boolean helper(TreeNode root1, TreeNode root2) {\n    if (root2 == null) return true;    // 如果root2 == null，说明root1和root2之前的结构完全相同，这时就算root1 != null，也可以返回true\n    if (root1 == null) return false;    // 如果roo1 == null，借由上一条语句知root2 != null，所以root1和root2的结构不相同，返回false\n    if (root1.val != root2.val) return false;\n    return helper(root1.left, root2.left) && helper(root1.right, root2.right);\n}\n\n扩展\nLeetCode 572。和该题不同的是，这里要求树 B 和树 A 中的某个子树完全相同。例如给定树 A：\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n树 B：\n   4 \n  / \\\n 1   2\n返回 true。而给定树 A：\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n    /\n   0\n树 B：\n   4\n  / \\\n 1   2\n返回 false。\n思路\n上一题中假设在 A 中找到了和 B 的根节点的值相同的节点 root 后，只要求 root 所代表的子树中包含和 B 的结构完全一样的结构即可。而这里要求 root 所代表的子树和 B 完全一样，即 root 及其所有后继节点都要和 B 完全一样。两者的区别在 helper() 函数的不同。\npublic boolean hasSubtree(TreeNode root1, TreeNode root2) {\n    if (root1 == null && root2 == null) return true;\n    if (root1 == null || root2 == null) return false;\n    boolean isFound = false;\n    if (root1.val == root2.val) isFound = helper(root1, root2);\n    if (!isFound) isFound = hasSubtree(root1.left, root2) || hasSubtree(root1.right, root2);\n    return isFound;\n}\n\nprivate boolean helper(TreeNode root1, TreeNode root2) {\n    // root1和root2同时访问到null才返回true，一个为null一个不为null或者两个节点的val值不相同都返回false\n    if (root1 == null && root2 == null) return true;\n    if (root1 == null || root2 == null) return false;\n    if (root1.val != root2.val) return false;\n    return helper(root1.left, root2.left) && helper(root1.right, root2.right);\n}\n\n"},"JianZhiOffer/Tree/序列化二叉树.html":{"url":"JianZhiOffer/Tree/序列化二叉树.html","title":"序列化二叉树","keywords":"","body":"题目\n实现两个函数，分别用来序列化和反序列化二叉树。\n思路\n我们知道，如果给定一棵二叉树的前序遍历序列和中序遍历序列，我们可以从中构造出一棵二叉树。因此我们可以先把一棵二叉树序列化成一个前序遍历序列和一个中序遍历序列，然后在反序列化时通过这两个序列重构出原二叉树。但是这个思路有两个缺点，一是二叉树中不能有数值重复的节点，否则我们无法通过这种方法构造出原二叉树。二是只有当两个序列中的数据都读出后才能开始反序列化。如果两个序列是从一个流中读出来的，那么可能就需要等待很长的时间。实际上如果二叉树的序列化是从根节点开始的话，那么相应的反序列化在根节点的数值读出来后就可以开始了。因此我们可以根据前序遍历来序列化和反序列化二叉树。在序列化时，如果当前节点不为空，我们在字符串中加入当前节点的值；如果当前节点为空，我们在字符串中加入一个特殊字符，比如$。在反序列化时，我们每次从字符流中读入一个字符，如果当前字符不是$，我们创建一个新节点，并继续构建该节点的左子树和右子树；否则，返回空。\n例如给定如下的二叉树：\n     1\n    / \\\n   2   3\n  /   / \\\n 4   5   6\n序列化结果为：1,2,4,$,3,5,$,$,6,$,$\n// 序列化\nprivate boolean isFirst = true;    // 指示当前正在序列化的节点是不是第一个节点\n\npublic String serialize(TreeNode root) {\n    if (root == null) return \"\";\n    StringBuilder sb = new StringBuilder();\n    serializeCore(root, sb);\n    return sb.toString();\n}\n\nprivate void serializeCore(TreeNode root, StringBuilder sb) {\n    if (root == null) {\n        if (isFirst) {\n            sb.append(\"$\");\n            isFirst = false;\n        } else {\n            sb.append(\",$\");\n        }\n    } else {\n        if (isFirst) {\n            sb.append(root.val);\n            isFirst = false;\n        } else {\n            sb.append(\",\" + root.val);\n        }\n        serializeCore(root.left, sb);\n        serializeCore(root.right, sb);\n    }\n}\n\n// 反序列化\nprivate int curr = 0;   // 指示序列化字符串中当前正在反序列的字符的下标\n\npublic TreeNode deserialize(String str) {\n    if (str == null || str.length() == 0) return null;\n    String[] strs = str.split(\",\");\n    return deserializeCore(strs);\n}\n\nprivate TreeNode deserializeCore(String[] strs) {\n    String val = strs[curr++];\n    if (val.equals(\"$\")) return null;\n    TreeNode root = new TreeNode(Integer.parseInt(val));\n    root.left = deserializeCore(strs);\n    root.right = deserializeCore(strs);\n    return root;\n}\n\n"},"JianZhiOffer/Tree/重建二叉树.html":{"url":"JianZhiOffer/Tree/重建二叉树.html","title":"重建二叉树","keywords":"","body":"题目\n输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列 [1, 2, 4, 7, 3, 5, 6, 8] 和中序遍历序列 [4, 7, 2, 1, 5, 3, 8, 6]，则重建二叉树并返回。\n思路\n先根据前序序列的第一个数字创建根节点，接下来在中序序列中找到根节点的位置，这样就能确定左右子树节点的数量，然后在新的前序序列和中序序列中递归地构建其左子树和右子树。前序序列用 startPreorder 和endPreorder 两个变量确定，中序序列可以用 startInorder 和 endInorder 两个变量确定。\npublic TreeNode reConstructBinaryTree(int[] preOrder, int[] inOrder) {\n    if (preOrder == null || preOrder.length == 0 || inOrder == null || inOrder.length == 0)\n        return null;\n    return helper(preOrder, inOrder, 0, preOrder.length - 1, 0, inOrder.length - 1);\n}\n\nprivate TreeNode helper(int[] preOrder, int[] inOrder, int startPreorder, int endPreorder, int startInorder, int endInorder) {\n    if (startPreorder > endPreorder || startInorder > endInorder) return null;\n    int rootValue = preOrder[startPreorder];\n    TreeNode root = new TreeNode(rootValue);\n    int rootInorder = startInorder;    // 当前节点在中序序列中的位置\n    while (rootInorder \n"},"LeetCode/":{"url":"LeetCode/","title":"LeetCode","keywords":"","body":"LeetCode\n"},"LeetCode/1. Two Sum.html":{"url":"LeetCode/1. Two Sum.html","title":"1. Two Sum","keywords":"","body":"题目\nGiven an array of integers, return indices of the two numbers such that they add up to a specific target.\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\nExample:\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n思路\n从头开始遍历数组，同时用一个 map 保存遍历过的元素和它的下标。每遍历一个元素时，我们先判断 target - nums[i] 是否在 map 中，如果在，我们就找到了这两个数，如果不在，我们把当前元素和它的下标值加入 map。这里也可以将数组排序后用双指针法做，但是由于题目要求返回两个数的下标，排序后会打乱元素的下标，因此这里用这个方法不合适。\npublic int[] twoSum(int[] nums, int target) {\n    if (nums == null || nums.length == 0) return new int[]{};\n    Map map = new HashMap<>();\n    for (int i = 0; i \n扩展\n如果不要求返回两个数在数组中的下标而是两个数的值的话可以用双指针法做。先对数组进行排序，用 lo 和 hi 两个指针分别指向数组的开头和结尾，当两个指针指向的元素的和等于 target 时，即找到了这两个数；当和小于target 时，我们向后移动 lo 以增大和；当和大于 target 时我们向前移动 hi 以减小和。\npublic int[] twoSum(int[] nums, int target) {\n    if (nums == null || nums.length == 0) return new int[]{};\n    int lo = 0;\n    int hi = nums.length - 1;\n    while (lo \n"},"LeetCode/2. Add Two Numbers.html":{"url":"LeetCode/2. Add Two Numbers.html","title":"2. Add Two Numbers","keywords":"","body":"题目\nYou are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\nExample:\nInput: (2 -> 4 -> 3) + (5 -> 6 -> 4)\nOutput: 7 -> 0 -> 8\nExplanation: 342 + 465 = 807.\n思路\n创建一个新的链表用来保存相加后的结果。同时遍历两个链表，将两个链表当前节点的值相加得到 sum，如果sum  10，创建一个值为 sum - 10 的节点并将其链接到新链表中，同时需要设置进位 carry 为1。由于两个链表的长度可能不同，因此遍历两个链表的指针可能不是同时到达各自链表的末尾。若 p == null, q != null，即一个链表已经遍历到了末尾，另一个链表还没有遍历末尾，此时需要把 p 表示的数当做0再和 q 表示的数相加。此外，如果两个链表都已经遍历完了但是 carry = 1，说明在最高位上发生了进位，此时需要再额外创建一个值为1的节点并将其链接到新链表中。\npublic ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n    if (l1 == null || l2 == null) return null;\n    ListNode dummyHead = new ListNode(0);    // 新链表的虚拟头结点\n    ListNode curr = dummyHead;\n    ListNode p1 = l1;\n    ListNode p2 = l2;\n    int carry = 0;\n\n    while (p1 != null || p2 != null) {\n        int x = p1 == null ? 0 : p1.val;\n        int y = p2 == null ? 0 : p2.val;\n        int sum = x + y + carry;\n        int carry = sum / 10;\n        curr.next = new ListNode(sum % 10);\n        curr = curr.next;\n        if (p1 != null) p1 = p1.next;\n        if (p2 != null) p2 = p2.next;\n    }\n    if (carry == 1) {\n        curr.next = new ListNode(1);\n    }\n\n    return dummyHead.next;\n}\n\n"},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"url":"LeetCode/3. Longest Substring Without Repeating Characters.html","title":"3. Longest Substring Without Repeating Characters","keywords":"","body":"题目\nGiven a string, find the length of the longest substring without repeating characters.\nExample 1:\nInput: \"abcabcbb\"\nOutput: 3 \nExplanation: The answer is \"abc\", with the length of 3.\nExample 2:\nInput: \"bbbbb\"\nOutput: 1\nExplanation: The answer is \"b\", with the length of 1.\nExample 3:\nInput: \"pwwkew\"\nOutput: 3\nExplanation: The answer is \"wke\", with the length of 3. \n             Note that the answer must be a substring, \"pwke\" is a subsequence and not a substring.\n思路1\n穷举所有的子串，分别判断每个子串中是否含有重复字符，记录不含重复字符的最长子串的长度。代码略。\n时间复杂度：O(N^3)\n思路2\n滑动窗口。使用 [i, j) 表示窗口。我们用一个 set 保存当前窗口 [i, j) 中的所有字符，然后我们向右移动 j，如果 s[j]不在 set 中，我们继续移动 j，直到 s[j] 在 set 中，此时，我们找到了以 i 为起点的子串的最大长度，即 j - i，我们对所有 i 重复执行上述步骤以求得最后的结果。\npublic int lengthOfLongestSubstring(String s) {\n    if (s == null || s.length() == 0) return 0;\n    int i = 0, j = 0;\n    Set set = new HashSet<>();\n    int result = 0;\n\n    while (i \n时间复杂度：O(2N) (在最坏情况下，字符串中的每个字符都要分别被i和j访问一次)\n思路3\n我们可以对思路2进一步进行优化。当 s[j] 和 [i, j) 指示的窗口中的某个字符重复时，假设这个字符的下标为 j'，我们没有必要一点点地去移动 i，我们只需要将 i 移动到 j' 的下一个位置 nextPos 即可。我们使用一个 map 记录字符串中每个字符的下一个字符的位置。\npublic int lengthOfLongestSubstring(String s) {\n    if (s == null || s.length == 0) return 0;\n    int i = 0, j = 0;\n    Map map = new HashMap<>();\n    int result = 0;\n\n    while (j  i) i = nextPos;\n        }\n        result = Math.max(result, j - i + 1);\n        map.put(s.charAt(j), j + 1);\n        j++;\n    }\n\n    return result;\n}\n\n时间复杂度：O(N)\n"},"LeetCode/5. Longest Palindromic Substring.html":{"url":"LeetCode/5. Longest Palindromic Substring.html","title":"5. Longest Palindromic Substring","keywords":"","body":"题目\nGiven a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.\nExample 1:\nInput: \"babad\"\nOutput: \"bab\"\nNote: \"aba\" is also a valid answer.\nExample 2:\nInput: \"cbbd\"\nOutput: \"bb\"\n思路1\n我们不难发现一个回文子串是围绕着它的中心进行扩展的，对于一个长度为 n 的字符串，我们可以找到 2n - 1 个这样的中心。为什么是 2n - 1 呢？这是因为除了每个字符可以作为一个中心外，每两个字符中间的位置也可以作为中心，比如 \"abba\"，两个 b 之间可以作为一个中心。我们遍历每一个中心并对其进行扩展，在得到一个回文子串时检查它的长度是否是最大的。\npublic String longestPalindrome(String s) {\n    if (s == null || s.length() == 0) return \"\";\n    int start = 0;    // 最长回文子串的开始\n    int end = 0;    // 最长回文子串的结尾\n\n    for (int i = 0; i  end - start + 1) {\n            // 这里对于start和end值的取定不太好想，需要找几个例子算一下\n            start = i - (len - 1) / 2;\n            end = i + len / 2;\n        }\n    }\n    return s.substring(start, end + 1);\n}\n\nprivate int expandAroundCenter(String s, int lo, int hi) {\n    while (lo >= 0 && hi \n时间复杂度：O(N^2)\n空间复杂度：O(1)\n思路2\ndp。dp[i, j] 表示 s(i, ..., j) 是否可以构成一个回文子串。如果 s(i) == s(j) 并且 s(i + 1, ..., j - 1) 是回文子串，dp[i, j] 为 true。同时，当我们找到一个回文子串时，检查它的长度是否是最大的。\npublic String longestPalindrome(String s) {\n    if (s == null || s.length() == 0) return \"\";\n    int n = s.length();\n    String result = \"\";    // 当前最长回文子串\n    boolean[][] dp = new boolean[n][n];    // dp[i][j]表示s(i, ..., j)构成的子串是否是回文的\n\n    for (int i = n - 1; i >= 0; i--) {\n        for (int j = i; j  result.length())) {\n                result = s.substring(i, j + 1);\n            }\n        }\n    }\n\n    return result;\n}\n\n时间复杂度：O(N^2)\n空间复杂度：O(N^2)\n"},"LeetCode/7. Reverse Integer.html":{"url":"LeetCode/7. Reverse Integer.html","title":"7. Reverse Integer","keywords":"","body":"题目\nGiven a 32-bit signed integer, reverse digits of an integer.\nExample 1:\nInput: 123\nOutput: 321\nExample 2:\nInput: -123\nOutput: -321\nExample 3:\nInput: 120\nOutput: 21\nNote:\nAssume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.\n思路\n每次取出 x 最后一位数 digit，用 result = result  10 + digit 更新结果。但是要注意，result = result  10 + digit可能会发生溢出，由于32位 int 类型的范围是-2147483648 - 2147483647，因此在进行 result = result * 10 + digit 运算前也应该先判断是否可能发生溢出。可以参考下面这种写法。\n public int reverse(int x) {\n    int result = 0;\n    while (x != 0) {\n        int digit = x % 10;\n        if (result > Integer.MAX_VALUE / 10 || (result == Integer.MAX_VALUE / 10 && digit > 7)) return 0;\n        if (result \n"},"LeetCode/11. Container With Most Water.html":{"url":"LeetCode/11. Container With Most Water.html","title":"11. Container With Most Water","keywords":"","body":"题目\nGiven n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.\nNote: You may not slant the container and n is at least 2.\n\nThe above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.\nExample:\nInput: [1,8,6,2,5,4,8,3,7]\nOutput: 49\n思路\n暴力法可以做但是显然不是最优的。我们可以发现要想使得所盛水的容量最大，我们一方面可以增加 line 的高度，另一方面可以增加两个 line 之间的宽度。我们使用两个指针 lo 和 hi，lo 初始指向数组的开头，hi 初始指向数组的结尾，这样初始我们便拥有了最大的宽度，然后我们求出当前的 maxArea，之后使较短的 line 朝着另一个  line 移动，虽然在移动的过程中我们的宽度会减小，但是我们可能会得到更大的高度，因此是可取的。\npublic int maxArea(int[] height) {\n    if (height == null || height.length \n"},"LeetCode/13. Roman to Integer.html":{"url":"LeetCode/13. Roman to Integer.html","title":"13. Roman to Integer","keywords":"","body":"题目\nRoman numerals are represented by seven different symbols: I, V, X, L, C, D and M.\nSymbol       Value\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000\nFor example, two is written as II in Roman numeral, just two one's added together. Twelve is written as, XII, which is simply X + II. The number twenty seven is written as XXVII, which is XX + V + II.\nRoman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:\n\nI can be placed before V (5) and X (10) to make 4 and 9. \nX can be placed before L (50) and C (100) to make 40 and 90. \nC can be placed before D (500) and M (1000) to make 400 and 900.\n\nGiven a roman numeral, convert it to an integer. Input is guaranteed to be within the range from 1 to 3999.\nExample 1:\nInput: \"III\"\nOutput: 3\nExample 2:\nInput: \"IV\"\nOutput: 4\nExample 3:\nInput: \"IX\"\nOutput: 9\nExample 4:\nInput: \"LVIII\"\nOutput: 58\nExplanation: L = 50, V= 5, III = 3.\nExample 5:\nInput: \"MCMXCIV\"\nOutput: 1994\nExplanation: M = 1000, CM = 900, XC = 90 and IV = 4.\n思路\n从头遍历字符串，依次转换每个罗马数字即可。注意对 I, X, C 的判断还要再看它们后面的一位。\npublic int romanToInt(String s) {\n    if (s == null || s.length() == 0) return 0;\n    int res = 0;\n    int p = 0;\n    while (p \n"},"LeetCode/14. Longest Common Prefix.html":{"url":"LeetCode/14. Longest Common Prefix.html","title":"14. Longest Common Prefix","keywords":"","body":"题目\nWrite a function to find the longest common prefix string amongst an array of strings.\nIf there is no common prefix, return an empty string \"\".\nExample 1:\nInput: [\"flower\",\"flow\",\"flight\"]\nOutput: \"fl\"\nExample 2:\nInput: [\"dog\",\"racecar\",\"car\"]\nOutput: \"\"\nExplanation: There is no common prefix among the input strings.\nNote:\nAll given inputs are in lowercase letters a-z.\n思路\n我们以第一个字符串为基准，从头开始比较其余字符串和第一个字符串的相应位上的字符是否相同。\npublic String longestCommonPrefix(String[] strs) {\n    if (strs == null || strs.length == 0) return 0;\n    if (strs.length == 1) return strs[0];\n    StringBuilder sb = new StringBuilder();\n\n    for (int i = 0; i = strs[j].length() || c != strs[j].charAt(i)) {\n                isEqual = false;\n                break;\n            }\n        }\n        if (isEqual) {\n            sb.append(c);\n        }\n    }\n\n    return sb.toString();\n}\n\n"},"LeetCode/15. 3Sum.html":{"url":"LeetCode/15. 3Sum.html","title":"15. 3Sum","keywords":"","body":"题目\nGiven an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\nNote:\nThe solution set must not contain duplicate triplets.\nExample:\nGiven array nums = [-1, 0, 1, 2, -1, -4],\n\nA solution set is:\n[\n  [-1, 0, 1],\n  [-1, -1, 2]\n]\n题目大意\n给定一个包含 n 个整数的数组 nums，找到所有 a + b + c = 0 的三元组。要求三元组不能重复。\n思路\n先对数组进行一个排序，然后遍历数组中的每个元素，将其作为三元组的第一个元素，之后找其余的两个数，即用一个 lo 指针和一个 hi 指针的方法。这样搜索剩下两个数的时间复杂度为 O(N)，总的时间复杂度为 O(N^2)。注意题目要求不能包含重复的三元组，因此当找完三元组的第一个元素之后，需要将指针移动到和上一个元素不同的地方。其次，在找到剩下的两个元素时，也要进行指针的移动，具体见代码的 (1), (2) 处。\npublic List> threeSum(int[] nums) {\n    if (nums == null || nums.length == 0) return new ArrayList<>();\n    List> result = new ArrayList<>();\n    Arrays.sort(nums);\n\n    for (int i = 0; i \n"},"LeetCode/17. Letter Combinations of a Phone Number.html":{"url":"LeetCode/17. Letter Combinations of a Phone Number.html","title":"17. Letter Combinations of a Phone Number","keywords":"","body":"题目\nGiven a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent.\nA mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.\n\nExample:\nInput: \"23\"\nOutput: [\"ad\", \"ae\", \"af\", \"bd\", \"be\", \"bf\", \"cd\", \"ce\", \"cf\"].\nNote:\nAlthough the above answer is in lexicographical order, your answer could be in any order you want.\n题目大意\n给定一个字符串，其中包含数字2 - 9，每个数字表示手机九宫格键盘上的字母，比如1表示 \"abc\"，2表示 \"def\"。返回该字符串表示的所有可能的字母的组合。例如对于 \"23\"，返回 [\"ad\", \"ae\", \"af\", \"bd\", \"be\", \"bf\", \"cd\", \"ce\", \"cf\"]\n思路\n典型的递归的思路。每次从当前数字所表示的字母集合中选取一个数加到当前正在构造的字符串中，然后递归地构造后面的字符。在递归函数中需要传入原始字符串 digits，当前选取的 digits 的数字的位置 curr，当前正在构造的字符串 selected 和结果集合 result。\nstatic final String[] VALUES={\"\", \"\", \"abc\", \"def\" , \"ghi\", \"jkl\", \"mno\", \"pqrs\", \"tuv\", \"wxyz\"};\n\npublic List letterCombinations(String digits) {\n    if (digits == null || digits.length() == 0) return new ArrayList<>();\n    List result = new ArrayList<>();\n    dfs(digits, 0, new StringBuilder(), result);\n    return result;\n}\n\nprivate void dfs(String digits, int curr, StringBuilder selected, List result) {\n    // special\n    if (curr == digits.length()) {\n        result.add(selected.toString());\n    } else {\n        int digit = digits.charAt(curr) - '0';\n        String str = VALUES[digit];\n        for (int i = 0; i \n"},"LeetCode/19. Remove Nth Node From End of List.html":{"url":"LeetCode/19. Remove Nth Node From End of List.html","title":"19. Remove Nth Node From End of List","keywords":"","body":"题目\nGiven a linked list, remove the n-th node from the end of list and return its head.\nExample:\nGiven linked list: 1->2->3->4->5, and n = 2.\n\nAfter removing the second node from the end, the linked list becomes 1->2->3->5.\nNote:\nGiven n will always be valid.\nFollow up:\nCould you do this in one pass?\n题目大意\n删除链表中倒数第 n 个节点。n 总是有效的。\n思路\n为了求链表中倒数第 n 个节点，我们可以定义两个指针 slow 和 fast，fast 从 head 先开始走 n 步，接着 slow 从head 开始再和 fast 一起走，每次走1步。当 fast 走到链表的末尾时 (即fast == null)，slow 指向的就是链表的倒数第 n 个节点。由于这里需要将链表的倒数第 n 个节点删除，因此我们可以在 slow 和 fast 一起走时用 prev 记录slow 的前一个节点，这样当找到倒数第 n 个节点时即可利用 prev 删除该节点。注意考虑删除节点为链表的第一个节点这种特殊情况。\npublic ListNode removeNthFromEnd(ListNode head, int n) {\n    if (head == null) return null;\n\n    ListNode fast = head;\n    for (int i = 0; i \n"},"LeetCode/20. Valid Parentheses.html":{"url":"LeetCode/20. Valid Parentheses.html","title":"20. Valid Parentheses","keywords":"","body":"题目\nGiven a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\nAn input string is valid if:\n\nOpen brackets must be closed by the same type of brackets.\nOpen brackets must be closed in the correct order.\n\nNote that an empty string is also considered valid.\nExample 1:\nInput: \"()\"\nOutput: true\nExample 2:\nInput: \"()[]{}\"\nOutput: true\nExample 3:\nInput: \"(]\"\nOutput: false\nExample 4:\nInput: \"([)]\"\nOutput: false\nExample 5:\nInput: \"{[]}\"\nOutput: true\n题目大意\n给定一个包含'(', ')', '{', '}', '[' and ']'的字符串，判断该字符串是不是有效的。一个有效的字符串满足下面两个条件：\n\nOpen brackets must be closed by the same type of brackets.\n\nOpen brackets must be closed in the correct order.\n\n\n注意，空的字符串也被认为是有效的。\n思路\npublic boolean isValid(String s) {\n    if (s == null) return false;\n    if (s.length() == 0) return true;\n    Stack stack = new Stack<>();\n\n    for (int i = 0; i \n注意：不能将 foreach 用于 String 类型的对象！\n"},"LeetCode/21. Merge Two Sorted Lists.html":{"url":"LeetCode/21. Merge Two Sorted Lists.html","title":"21. Merge Two Sorted Lists","keywords":"","body":"题目\nMerge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.\nExample:\nInput: 1->2->4, 1->3->4\nOutput: 1->1->2->3->4->4\n题目大意\n合并两个排序的链表。\n思路\n可以用递归的思想解决这个问题。比较两个链表当前节点的值，将较小的节点作为新节点，同时递归构造新节点的下一个节点，最后将新节点返回即可。按照这种方法，当两个链表中的任意为 null 时，将另一个链表的头结点作为新节点返回。\npublic ListNode mergeTwoLists(ListNode l1, ListNode l2) {\n    if (l1 == null) return l2;\n    if (l2 == null) return l1;\n\n    ListNode curr = null;\n    if (l1.val \n"},"LeetCode/22. Generate Parentheses.html":{"url":"LeetCode/22. Generate Parentheses.html","title":"22. Generate Parentheses","keywords":"","body":"题目\nGiven n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\nFor example, given n = 3, a solution set is:\n[\n  \"((()))\",\n  \"(()())\",\n  \"(())()\",\n  \"()(())\",\n  \"()()()\"\n]\n题目大意\n给定 n 对圆括号，生成所有有效的括号组合。\n思路\n看到这种生成某个集合类的题目首先想到递归。这里我们不能盲目地生成括号组合，如果那样的话还要判断每一个组合是否有效。我们应该只生成有效的组合。我们把'('叫做开括号，把')'叫做闭括号，并在递归函数中分别用 open 和 close 记录当前已经生成的字符串 curr 中开括号和闭括号的数量。当 open '('；当 close ')'。\npublic List generateParenthesis(int n) {\n    if (n ();\n    List result = new ArrayList<>();\n    dfs(n, \"\", 0, 0, result);\n    return result;\n}\n\nprivate void dfs(int n, String curr, int open, int close, List result) {\n    if (curr.length() == n * 2) {\n        result.add(curr);\n    } else {\n        if (open \n"},"LeetCode/23. Merge k Sorted Lists.html":{"url":"LeetCode/23. Merge k Sorted Lists.html","title":"23. Merge k Sorted Lists","keywords":"","body":"题目\nMerge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.\nExample:\nInput:\n[\n  1->4->5,\n  1->3->4,\n  2->6\n]\nOutput: 1->1->2->3->4->4->5->6\n题目大意\n合并 k 个排序的链表。\n思路1\n\n遍历所有链表并用一个 List 保存所有节点的值；\n\n对 List 排序；\n\n创建一个新的链表，从 List 中依次取出每个值构建节点来扩展新链表。\n\n\npublic ListNode mergeKLists(ListNode[] lists) {\n   if (lists == null || lists.length == 0) return null;\n   List nodes_val = new ArrayList<>();    // 保存所有链表的所有节点的值\n\n   for (ListNode head : lists) {\n       ListNode curr = head;\n       while (curr != null) {\n           nodes_val.add(curr.val);\n           curr = curr.next;\n       }\n   }\n   Collections.sort(nodes_val);\n   ListNode dummyHead = new ListNode(0);    // 新链表的虚拟头结点，这样做可以免去单独处理头结点的麻烦\n   ListNode curr = dummyHead;\n   for (int val : nodes_val) {\n       curr.next = new ListNode(val);\n       curr = curr.next;\n   }\n\n   return dummyHead.next;\n}\n\n时间复杂度：O(NlogN) (N是节点总数)\n空间复杂度：O(N)\n思路2\n可以借助 “21. Merge Two Sorted Lists” 中的思想，我们每次对 k 个链表的头结点的值进行比较，将较小的节点加入到新链表中，然后再依次比较各个链表剩下的节点。每次比较我们需要从 k 个节点中选取一个最小值，如果采用顺序遍历的话时间复杂度为 O(k)，我们可以利用堆将比较的时间复杂度降到 O(logk)。首先将 k 个链表的 k 个头结点加入到堆中，当堆不为空为执行以下操作：从堆中 poll 出一个节点 node，这个节点即是当前 k 个链表的头结点的最小值，把它加入到新链表中，接着将 node 的下一个节点 offer 进堆中。\npublic ListNode mergeKLists(ListNode[] lists) {\n    if (lists == null || lists.length == 0) return null;\n    PriorityQueue pq = new PriorityQueue<>(new Comparator() {    // 最小堆\n        @Override\n        public int compare(ListNode o1, ListNode o2) {\n            return o1.val - o2.val;\n        }\n    });\n\n    for (ListNodee head : lists) {\n        if (head != null) {\n            pq.offer(head);\n        }\n    }\n    ListNode dummyHead = new ListNode(0);\n    ListNode curr = dummyHead;\n    while (!pq.isEmpty()) {\n        ListNode node = pq.poll();\n        curr.next = new ListNode(node.val);\n        curr = curr.next;\n        if (node.next != null) {\n            pq.offer(node.next);\n        }\n    }\n\n    return dummyHead.next;\n}\n\n时间复杂度：O(Nlogk) (要构造含N个节点的新链表，构造每个节点需要O(logk))\n空间复杂度：O(N) (创建一个含N个节点的新链表的空间复杂度为O(N))\n思路3\n我们可以每次合并2个链表，合并 (k - 1) 次。代码略。\n时间复杂度：O(kN) (N 是节点总数，选取每个节点需要比较 (k - 1) 次，总共需要选取 N 个节点)\n空间复杂度：O(1)\n思路4\n我们可以对上述方法做一个优化，其实没有必要每次按顺序合并两个链表，我们可以采用分治法，每一轮将 k 个链表配成 k / 2 对，每次合并一对，合并完成后得到 k / 2 个合并后的链表，然后对这 k / 2 个链表继续进行划分和合并。\npublic ListNode mergeKLists(ListNode[] lists) {\n    if (lists == null || lists.length == 0) return null;\n    return partition(lists, 0, lists.length - 1);\n}\n\nprivate ListNode partition(ListNode[] lists, int lo, int hi) {\n    // special\n    if (lo > hi) return null;\n    if (lo == hi) return lists[lo];\n    int mid = lo + (hi - lo) / 2;\n    ListNode l1 = partition(lists, lo, mid);\n    ListNode l2 = partition(lists, mid + 1, hi);\n    return merge(l1, l2);\n}\n\nprivate ListNode merge(ListNode l1, ListNode l2) {\n    if (l1 == null) return l2;\n    if (l2 == null) return l1;\n\n    ListNode curr = null;\n    if (l1.val \n时间复杂度：O(Nlogk)\n空间复杂度：O(1)\n"},"LeetCode/26. Remove Duplicates from Sorted Array.html":{"url":"LeetCode/26. Remove Duplicates from Sorted Array.html","title":"26. Remove Duplicates from Sorted Array","keywords":"","body":"题目\nGiven a sorted array nums, remove the duplicates in-place such that each element appear only once and return the new length.\nDo not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\nExample 1:\nGiven nums = [1,1,2],\n\nYour function should return length = 2, with the first two elements of nums being 1 and 2 respectively.\n\nIt doesn't matter what you leave beyond the returned length.\nExample 2:\nGiven nums = [0,0,1,1,1,2,2,3,3,4],\n\nYour function should return length = 5, with the first five elements of nums being modified to 0, 1, 2, 3, and 4 respectively.\n\nIt doesn't matter what values are set beyond the returned length.\nClarification:\nConfused why the returned value is an integer but your answer is an array?\nNote that the input array is passed in by reference, which means modification to the input array will be known to the caller as well.\nInternally you can think of this:\n// nums is passed in by reference. (i.e., without making a copy)\nint len = removeDuplicates(nums);\n\n// any modification to nums in your function would be known by the caller.\n// using the length returned by your function, it prints the first len elements.\nfor (int i = 0; i 题目大意\n给定一个排序的数组，删除数组中的重复元素使得每个元素在数组中只出现一次。要求直接在原数组上修改，不能创建新的数组。函数返回删除后数组的长度。设删除后数组的长度为 n，系统只检查数组前 n 个元素。\n思路\n设 i 和 j 两个指针，i 指示删除后的数组，j 指示当前数组，初始时两个指针都指向数组的第一个元素。由于数组是排好序的，因此重复元素都集中在一起，我们移动 j 找到第一个和 i 指向的元素的不同的元素，把它放到 i 的下一个位置，再将 i 向前移动一个位置。重复上述过程直到 j 到达数组的末尾，此时 i 指向的就是删除后数组的最后一个元素。\npublic int removeDuplicates(int[] nums) {\n    if (nums == null || nums.length \n"},"LeetCode/33. Search in Rotated Sorted Array.html":{"url":"LeetCode/33. Search in Rotated Sorted Array.html","title":"33. Search in Rotated Sorted Array","keywords":"","body":"题目\nSuppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\n(i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]).\nYou are given a target value to search. If found in the array return its index, otherwise return -1.\nYou may assume no duplicate exists in the array.\nYour algorithm's runtime complexity must be in the order of O(log n).\nExample 1:\nInput: nums = [4,5,6,7,0,1,2], target = 0\nOutput: 4\nExample 2:\nInput: nums = [4,5,6,7,0,1,2], target = 3\nOutput: -1\n题目大意\n给定一个旋转后的排序数组 nums，从中找到值为 target 的元素，如果找到了返回其下标，如果没有找到返回-1。数组中不包含重复的元素。时间复杂度要求为 O(logn)。对于数组 [0, 1, 2, 4, 5, 6, 7]，其旋转后的数组可以为 [4, 5, 6, 7, 0, 1, 2]。\n思路\n首先看到时间复杂度要求为 O(logn)，那么想到题目应该是用二分查找去求解，但是二分查找要求数组是有序的，这里旋转后的数组不一定有序，那么怎么去求解呢？其实旋转后的数组我们仍然可以把它看成是有序的，只不过我们需要把原有序数组中每个元素的下标做一个变换。比如原有序数组：\n\n\n\nindex\n0\n1\n2\n3\n4\n5\n6\n\n\n\n\nvalue\n0\n1\n2\n4\n5\n6\n7\n\n\n\n如果我们把它旋转后的数组 [4, 5, 6, 7, 0, 1, 2] 依然按照元素值从小到大的排列的话，那么可以写为：\n\n\n\nindex\n4\n5\n6\n0\n1\n2\n3\n\n\n\n\nvalue\n0\n1\n2\n4\n5\n6\n7\n\n\n\n观察后可以发现，如果设某个元素在原排序数组的下标为 index，那么其在旋转后数组中的下标为 (index + bias) % length，其中 length 为数组的长度，bias 为偏移值，而这个偏移值恰好是旋转后数组中最小元素的下标，在上例中 bias 即为旋转后数组中0的下标。\n如此以来我们的思路就清晰了，我们需要先求出旋转后数组中最小元素的下标 bias，然后再用二分查找查找 target。在第二步查找 target 时，我们需要利用 bias 对当前元素的下标做一个变换。在求解第一步中最小元素的下标时，我们可以利用 旋转数组的最小数字 里的方法 (本题与它不同的地方是，本题数组中不包含重复的元素)，在第二步对数组进行二分查找时，我们只需要在二分查找的过程中变换一下下标即可。\npublic int search(int[] nums, int target) {\n    if (nums == null || nums.length == 0) return -1;\n    int lo = 0;\n    int hi = nums.length - 1;\n    int bias = 0;   // 如果数组已经是排好序的，那么第一个元素即数组的最小元素\n\n    // 查找数组中最小元素的下标，并将其赋给bias\n    while (nums[lo] > nums[hi]) {\n        if (hi - lo == 1) {\n            bias = hi;\n            break;\n        }\n        int mid = lo + (hi - lo) / 2;\n        if (nums[mid] >= nums[lo]) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n\n    // 使用二分查找查找target\n    lo = 0;\n    hi = nums.length - 1;\n    while (lo \n"},"LeetCode/34. Find First and Last Position of Element in Sorted Array.html":{"url":"LeetCode/34. Find First and Last Position of Element in Sorted Array.html","title":"34. Find First and Last Position of Element in Sorted Array","keywords":"","body":"题目\nGiven an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.\nYour algorithm's runtime complexity must be in the order of O(log n).\nIf the target is not found in the array, return [-1, -1].\nExample 1:\nInput: nums = [5,7,7,8,8,10], target = 8\nOutput: [3,4]\nExample 2:\nInput: nums = [5,7,7,8,8,10], target = 6\nOutput: [-1,-1]\n题目大意\n给定一个有序的整数数组，找到 target 的第一个位置和最后一个位置。要求时间复杂度为 O(logN)，如果 target 不在数组中返回 [-1, -1]。\n思路\n同 数字在排序数组中出现的次数 。首先利用二分查找找到 target 在 nums 中的第一个位置，当nums[mid] = target 时，我们判断 nums[mid-1] 是不是target，如果是，说明 target 第一次出现的位置还在左边，继续在左边寻找；否则，mid 就是 target 第一次出现的位置，返回。同理可以找到 target 在 nums 中的最后一个位置。\npublic int[] searchRange(int[] nums, int target) {\n    if (nums == null || nums.length == 0) return new int[]{-1, -1};\n    int first = getFirst(nums, target);\n    int last = getLast(nums, target);\n    if (first >= 0 && last >= 0) {\n        return new int[]{first, last};\n    }\n    return new int[]{-1, -1};\n}\n\n// 找到target在nums中的第一个位置\nprivate int getFirst(int[] nums, int target){\n    int lo = 0;\n    int hi = nums.length - 1;\n    while (lo  target) {\n            hi = mid - 1;\n        } else {\n            lo = mid + 1;\n        }\n    }\n    return -1;\n}\n\n// 找到target在nums中的最后一个位置\nprivate int getLast(int[] nums,int target){\n    int lo = 0;\n    int hi = nums.length-1;\n    while (lo  target) {\n            hi = mid - 1;\n        } else {\n            lo = mid + 1;\n        }\n    }\n    return -1;\n}\n\n"},"LeetCode/36. Valid Sudoku.html":{"url":"LeetCode/36. Valid Sudoku.html","title":"36. Valid Sudoku","keywords":"","body":"题目\nDetermine if a 9x9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:\n\nEach row must contain the digits 1-9 without repetition.\nEach column must contain the digits 1-9 without repetition.\nEach of the 9 3x3 sub-boxes of the grid must contain the digits 1-9 without repetition.\n\n\nA partially filled sudoku which is valid.\nThe Sudoku board could be partially filled, where empty cells are filled with the character '.'.\nExample 1:\nInput:\n[\n  [\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],\n  [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],\n  [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],\n  [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],\n  [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],\n  [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\n  [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],\n  [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],\n  [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]\n]\nOutput: true\nExample 2:\nInput:\n[\n  [\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],\n  [\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],\n  [\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],\n  [\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],\n  [\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],\n  [\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],\n  [\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],\n  [\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],\n  [\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]\n]\nOutput: false\nExplanation: Same as Example 1, except with the 5 in the top left corner being \n    modified to 8. Since there are two 8's in the top left 3x3 sub-box, it is invalid.\nNote:\n\nA Sudoku board (partially filled) could be valid but is not necessarily solvable.\nOnly the filled cells need to be validated according to the mentioned rules.\nThe given board contain only digits 1-9 and the character '.'.\nThe given board size is always 9x9.\n\n题目大意\n判断一个9 * 9的数独板是不是有效的。一个数独板是有效的要求：\n\n每一行必须包含所有1 - 9不重复的数字\n每一列必须包含1 - 9不重复的数字\n每一个3 * 3的子板 (sub-boxes) 必须包含1 - 9不重复的数字\n\n思路1\n逐行逐列逐 sub-boxes 判断是否有重复数字。虽然逻辑很简单但是代码有点长，并且同一个元素可能会被访问多次。代码略。\n思路2\n遍历矩阵中的每一个数，我们按照我们定义的规则将该数编码为一个字符串放入 set 中，规则如下：\n\n'4' in row 7 is encoded as \"(4)7\".\n\n'4' in column 7 is encoded as \"7(4)\".\n\n'4' in the top-right block is encoded as \"0(4)2\".\n\n\n这样一来，当某个数已经在之前的某一行、某一列或某个 sub-box 中出现了，set.add(...) 会返回 false。\npublic boolean isValidSudoku(char[][] board) {\n    if (board == null || board.length == 0) return false;\n    Set set = new HashSet<>();\n\n    for (int i = 0; i \n"},"LeetCode/38. Count and Say.html":{"url":"LeetCode/38. Count and Say.html","title":"38. Count and Say","keywords":"","body":"题目\nThe count-and-say sequence is the sequence of integers with the first five terms as following:\n1.     1\n2.     11\n3.     21\n4.     1211\n5.     111221\n1 is read off as \"one 1\" or 11.\n11 is read off as \"two 1s\" or 21.\n21 is read off as \"one 2, then one 1\" or 1211.\nGiven an integer n where 1 ≤ n ≤ 30, generate the nth term of the count-and-say sequence.\nNote: Each term of the sequence of integers will be represented as a string.\nExample 1:\nInput: 1\nOutput: \"1\"\nExample 2:\nInput: 4\nOutput: \"1211\"\n题目大意\n很难描述，不过感觉很无聊...\n思路\n依次构造从1到 n 的 n 个序列，构造的规律是：遍历前一个序列，如果当前数字和前一个数字不同，将前一个数字出现的个数和前一个数字的值添加到序列中。例如当前一个序列是\"1211\"，遍历该序列，发现1出现了1次，2出现了1次，1出现了2次，因此当前序列为\"111221\"。\npublic String countAndSay(int n) {\n    if (n \n"},"LeetCode/41. First Missing Positive.html":{"url":"LeetCode/41. First Missing Positive.html","title":"41. First Missing Positive","keywords":"","body":"题目\nGiven an unsorted integer array, find the smallest missing positive integer.\nExample 1:\nInput: [1,2,0]\nOutput: 3\nExample 2:\nInput: [3,4,-1,1]\nOutput: 2\nExample 3:\nInput: [7,8,9,11,12]\nOutput: 1\nNote:\nYour algorithm should run in O(n) time and uses constant extra space.\n题目大意\n给定一个未排序的整数数组，返回数组中缺失的最小的正整数。要求时间复杂度为 O(N) ，空间复杂度为 O(1)。\n思路\n思路同 数组中重复的数字 。设想一个没有缺失正整数的数组应该是怎样的？设数组长度是 n，那么这个数组应该是 [1, 2, 3, ..., n]，即 nums[i] = i + 1。现在我们按照这种规则对数组进行重组，即将每个元素交换到其正确的位置上，忽略元素值为0和元素值大于 n 的元素。重组后，我们从头开始遍历数组，若当前位置的元素不满足 nums[i] = i + 1，即找到了数组中缺失的最小的正整数，即 i + 1。\npublic int firstMissingPositive(int[] nums) {\n    if (nums == null || nums.length == 0) return 1;\n\n    int i = 0;\n    while (i  nums.length) {\n            i++;\n            continue;\n        }\n        if (nums[i] != i + 1) {\n            swap(nums, i, nums[i] - 1);\n        } else {    // nums[i] == i + 1\n            i++;\n        }\n    }\n    i = 0;\n    while (i \n"},"LeetCode/42. Trapping Rain Water.html":{"url":"LeetCode/42. Trapping Rain Water.html","title":"42. Trapping Rain Water","keywords":"","body":"题目\nGiven n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.\n\nThe above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!\nExample:\nInput: [0,1,0,2,1,0,1,3,2,1,2,1]\nOutput: 6\n题目大意\n求上图下雨后能盛水的容积。\n思路1\n暴力法。遍历每一个可能蓄水的位置 i，从 i 开始向左求出左边最大的高度 max_left，向右求出右边最大的高度 max_right，那么位置 i 的蓄水量就为 min(max_left, max_right) - height[i]。\npublic int trap(int[] height) {\n    if (height == null || height.length == 0) return 0;\n    int ans = 0;\n\n    for (int i = 1; i = 0; j--) {   // 注意初始条件是j = i\n            left_max = Math.max(left_max, height[j]);\n        }\n        int right_max = 0;\n        for (int j = i; j \n思路2\n我们发现在暴力法中对于每一个可能蓄水的位置我们都要遍历一遍 height 以求出相对于该位置左边最大的高度和右边最大的高度。我们可以把相对于每个位置左边最大的高度和右边最大的高度事先保存起来，即利用动态规划的思想。建立两个数组 left_max 和 right_max，left_max[i] 表示相对于 i 的左边最大的高度，right_max[i] 表示相对于 i 的右边最大的高度。分别求出这两个数组后，每个位置 i 的蓄水量就可以用 min(left_max[i], right_max[i]) - height[i]求出。\npublic int trap(int[] height) {\n    if (height == null || height.length == 0) return 0;\n    int ans = 0;\n    int[] left_max = new int[height.length];\n    int[] right_max = new int[height.length];\n    left_max[0] = height[0];\n    right_max[height.length - 1] = height[height.length - 1];\n\n    for (int i = 1; i = 0; i--) {\n        right_max[i] = Math.max(right_max[i + 1], height[i]);\n    }\n    for (int i = 1; i \n思路3\n我们可以进一步将上述方法的空间复杂度优化为 O(1)。我们分别使用两个指针 left 和 right 指向 height 的第一个元素和最后一个元素，并用 left_max 和 right_max 分别表示当前位置右边最大的高度和左边最大的高度。当 height[left] = left_max，更新 left_max，否则，累加 ans，之后将 left 向前移动一个单位；反之，当height[left] > height[right]时，说明当前位置的蓄水量取决于右边，同理进行处理。\npublic int trap(int[] height) {\n    if (height == null || height.length == 0) return 0;\n    int ans = 0;\n    int left = 0, right = height.length - 1;\n    int left_max = 0, right_max = 0;\n\n    while (left = left_max) {\n                left_max = height[left];\n            } else {\n                ans += left_max - height[left];\n            }\n            left++;\n        } else {\n            if (height[right] >= right_max) {\n                right_max = height[right];\n            } else {\n                ans += right_max - height[right];\n            }\n            right--;\n        }\n    }\n\n    return ans;\n}\n\n"},"LeetCode/80. Remove Duplicates from Sorted Array II.html":{"url":"LeetCode/80. Remove Duplicates from Sorted Array II.html","title":"80. Remove Duplicates from Sorted Array II","keywords":"","body":"题目\nGiven a sorted array nums, remove the duplicates in-place such that duplicates appeared at most twice and return the new length.\nDo not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\nExample 1:\nGiven nums = [1,1,1,2,2,3],\n\nYour function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively.\n\nIt doesn't matter what you leave beyond the returned length.\nExample 2:\nGiven nums = [0,0,1,1,1,1,2,3,3],\n\nYour function should return length = 7, with the first seven elements of nums being modified to 0, 0, 1, 1, 2, 3 and 3 respectively.\n\nIt doesn't matter what values are set beyond the returned length.\nClarification:\nConfused why the returned value is an integer but your answer is an array?\nNote that the input array is passed in by reference, which means modification to the input array will be known to the caller as well.\nInternally you can think of this:\n// nums is passed in by reference. (i.e., without making a copy)\nint len = removeDuplicates(nums);\n\n// any modification to nums in your function would be known by the caller.\n// using the length returned by your function, it prints the first len elements.\nfor (int i = 0; i 题目大意\n给定一个排序的数组 nums，就地 (in-place) 删除数组中的重复元素使得每个元素至多出现2次，返回删除后数组的长度。要求不能分配额外的数组空间。\n思路\n就地删除要求我们在原数组上进行操作而不能分配额外的数组。我们还是按照 “26. Remove Duplicates from Sorted Array” 中的思路，设 i 和 j 两个指针，i 指示删除后的数组，j 指示当前数组，初始时两个指针都指向数组的第一个元素。我们遍历 nums。为了保证新数组中每个元素至多出现2次，我们只需要判断当前元素是否大于 nums[i - 2] 即可。\npublic int removeDuplicates(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    int i = 0;\n\n    for (int j = 0; j  nums[i - 2]) {\n            nums[i++] = nums[j];\n        }\n    }\n\n    return i;\n}\n\n"}}}