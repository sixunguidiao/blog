{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["bug没改好就不要去睡觉！","介绍","鬼雕のblog"],"Java/":["java"],"Java/Java基础/":["java基础"],"Java/Java基础/数据类型.html":["!=","&&","(","(i","(integercachehighpropvalu","+","//","0;","1","1);","123","123;","127","127);","127;","128","128;","128~127。","1];","2;","8",":","=","==",">=","\\u0000","\\u007f","array","between","bit","boolean","boolean/~","byte","byte/8位/1字节","cach","cache[];","catch(","char","char/16位/2字节","configur","data","differ","double/64位/8字节","fals","false。jvm","final","float/32位/4字节","for(int","h","h;","high","high;","i)","ignor","int","int,","int/32位/4字节","integ","integer(123)","integer(123),","integer(123);","integer.max_valu","integer.valueof(123)","integer.valueof(123);","integer[(high","integercache.low","integercachehighpropvalu","int，使用","it.","j","java","java®","k","k);","long/64位/8字节","low","low)","low;","m","machin","math.max(i,","math.min(i,","maximum","n","n);","new","nfe)","null)","numberformatexcept","pars","parseint(integercachehighpropvalue);","primit","properti","public","rang","short","short/16位/2字节","size","specif","stackoverflow","static","string","sun.misc.vm.getsavedproperty(\"java.lang.integer.integercache.high\");","system.out.println(m","system.out.println(x","system.out.println(z","tri","true","true，0","type","valu","valueof()","valueof(int","virtual","x","x;","y","y);","z","{","}","与","中，integ","会使用缓存池中的对象，多次调用会取得同一个对象的引用。","会在编译时期将","包装类型","只有两个值：true、false，可以使用","在","在使用这些基本类型对应的包装类型时，就可以直接使用缓冲池中的对象。","基本类型","基本类型对应的缓冲池如下：","基本类型都有对应的包装类型，基本类型与其对应的包装类型之间的赋值使用自动装箱与拆箱完成。","实例使用自动装箱来创建并且值相同，那么就会引用相同的对象。","并不支持","拆箱","数据类型","数组来表示","数组来表示。","数组，而是使用","方法的实现比较简单，就是先判断值是否在缓存池中，如果在的话就直接返回缓存池的内容。","方法，因此多个","来存储，但是具体大小没有明确规定。jvm","来表示","每次都会新建一个对象；","的区别在于：","类型的数据转换为","缓存池","缓存池的大小默认为","编译器会在自动装箱过程调用","表示","装箱"],"Java/Java基础/String.html":["\"abc\"","\"abc\"，#3","\"bbb\"","\"bbb\";","#18","#19","#2","#3","#4","([ljava/lang/string;)v","(permgen)。而在","*/","...","/**","//","0:","1.","2.","3.","3:","4.","4:","6:","7","7，string","8","9","9:",":","=","==","abc","acc_public,","acc_stat","args)","args_size=1","astore_1","byte","byte[]","char","charact","charsequ","class","code:","coder","coder;","comparable,","constant","creek","descriptor:","dup","encod","equals()","fals","final","final，因此它不可被继承。","final，这意味着","flags:","hash","hashmap","identifi","immut","implement","intern()","interning?","invokespeci","java","java.io.serializable,","java/lang/str","java/lang/string.\"\":(ljava/lang/string;)v","java?","javap","key。不可变的特性可以使得","ldc","locals=2,","main","main(java.lang.string[]);","main(string[]","method","new","newstringtest","original)","original.hash;","original.value;","outofmemoryerror","pool","pool:","pool。","pool）保存着所有字符串字面量（liter","pool，即字符串常量池中取得引用。只有","privat","program","public","s","s1","s1.intern()","s1.intern();","s2","s2);","s3","s4","s4);","s5","s6","s6);","stack=3,","stackoverflow","static","storage.","string","string#intern","string(\"aaa\");","string(\"abc\")","string(\"abc\");","string()","string(str","string,","stringbuff","stringbuffer,","stringbuild","strings），这些字面量在编译时期就确定。不仅如此，还可以使用","synchron","system.out.println(s1","system.out.println(s3","system.out.println(s5","this.hash","this.valu","true","us","utf8","valu","value;","value[];","value}.","verbos","void","{","{@code","}","下面示例中，s1","不可变","不可变。","不可变性可以保证参数不可变。例如在作为网络连接参数的情况下如果","不可变性天生具备线程安全，可以在多个线程中安全地使用。","不可变的好处","不可变，因此是线程安全的","不是线程安全的","中。","中创建一个字符串对象，指向这个","中字符串的引用；否则，就会在","中已经存在一个字符串和该字符串值相等（使用","中添加一个新的字符串，并返回这个新字符串的引用。","中的字符串对象作为","中还没有","中，#19","中，string","中，然后返回这个字符串引用。因此","之前，string","之后，string","以下是","使用","使用这种方式一共会创建两个字符串对象（前提是","值","值也不可变，因此只需要进行一次计算。","值经常被使用，例如","内部使用","内部没有改变","创建一个测试类，其","可以缓存","可变","可变性","和","因为","在","在堆中创建一个字符串对象，并且使用","如果一个","如果是采用","字符串字面量；","字符串对象）。","字符串常量池（string","存储字符串字面量","安全性","对象已经被创建过了，那么就会从","对象的那一方以为现在连接的是其它主机，而实际情况却不一定是。","将","属于字符串字面量，因此编译时期会在","引用的字符串放到","引用的是同一个字符串。","当一个字符串调用","数组。","数组内容，而是都会指向同一个","数组初始化之后就不能再引用其它数组。并且","数组存储字符串，同时使用","数组存储数据。","数组的方法，因此可以保证","数组被声明为","方法中使用这种方式来创建字符串对象。","方法中，0:","方法取得一个字符串引用。intern()","方法在运行过程中将字符串添加到","方法时，如果","方法进行确定），那么就会返回","是","是不可变的，才可能使用","是可变的，那么在网络连接过程中，string","是线程安全的，内部使用","是通过","来标识使用了哪种编码。","构造函数的参数。","构造函数的源码，可以看到，在将一个字符串对象作为另一个字符串对象的构造函数参数时，并不会完全复制","概览","深入解析","用做","的","的字符串对象，它指向","的方式会在堆中创建一个字符串对象。","的方式新建了两个不同字符串，而","的需要","类的实现改用","线程安全","经常作为参数，string","而使用","行使用","被声明为","被改变，改变","被放在运行时常量池中，它属于永久代","被移到堆中。这是因为永久代的空间有限，在大量使用字符串的场景下会导致","这个字符串字面量。在","这种字面量的形式创建字符串，会自动地将字符串放入","进行反编译，得到以下内容：","进行同步","采用","错误。","首先把"],"Java/Java基础/参数传递.html":["//","=","args)","b","class","clipboarderrorcopi","dog","dog(\"a\");","dog(\"b\");","dog(str","dog)","dog.setname(\"b\");","dog@4554617c","dog@74a14482","func(dog","func(dog);","getname()","getobjectaddress()","java","main(string[]","name)","name;","new","passbyvalueexampl","privat","public","reference”","return","setname(str","stackoverflow:","static","string","super.tostring();","system.out.println(dog.getname());","system.out.println(dog.getobjectaddress());","this.nam","this.name;","value”?","void","{","}","}copi","“pass","以下代码中","参数传递","如果在方法中改变对象的字段值会改变原对象该字段值，因为改变的是同一个地址指向的内容。","是一个指针，存储的是对象的地址。在将一个参数传入一个方法时，本质上是将对象的地址以值的方式传递到形参中。因此在方法中使指针引用其它对象，那么这两个指针此时指向的是完全不同的对象，在一方改变其所指向对象的内容时对另一方没有影响。","的","的参数是以值传递的形式传入方法中，而不是引用传递。"],"Java/Java基础/抽象类和接口.html":["'abstractclassexample'","'interfaceexample'","'private'","'protected'","'public'","'y'","(如果子类的方法重写了父类的方法，那么子类中该方法的访问级别不允许低于父类的访问级别，这也是满足里式替换原则以确保可以使用父类实例的地方都可以使用子类实例)，即子类对象必须能够替换掉所有父类对象。而接口更像是一种","+","//","0;","1.","123;","2.","3.","4.","8","=","@overrid","abstract","abstract;","abstractclassexampl","abstractclassexample();","abstractextendclassexampl","abstractextendclassexample();","ac1","ac2","ac2.func1();","allow","class","compar","compareto()","default","extend","field","final","fun3();","func1()","func1();","func2()","func2(){","here","ie1","ie2","ie2.func1();","implement","initi","instanti","int","interfac","interfaceexampl","interfaceexample();","interfaceimplementexampl","interfaceimplementexample();","java","k","l","modifi","new","privat","protect","protected。","public","public。","redund","static","system.out.println(\"func1\");","system.out.println(\"func2\");","system.out.println(interfaceexample.x);","us","variabl","void","x","x;","y;","z","{","}","之前，如果一个接口想要添加新的方法，那么要修改所有实现了该接口的类。","之前，它可以看成是一个完全抽象的类，也就是说它不能有任何的方法实现。","从","从使用上来看，一个类可以实现多个接口，但是不能继承多个抽象类。","从设计层面上看，抽象类提供了一种","使用抽象类：","使用接口：","使用选择","关系。","关系，它只是提供一种方法实现契约，并不要求接口和实现接口的类具有","关系，那么就必须满足里式替换原则","关键字进行声明。抽象类一般会包含抽象方法，抽象方法一定位于抽象类中。","和","在很多情况下，接口优先于抽象类。因为接口没有抽象类严格的类层次结构要求，可以灵活地为一个类添加行为。并且从","开始，接口也可以拥有默认的方法实现，这是因为不支持默认方法的接口的维护成本太高了。在","开始，接口也可以有默认的方法实现，使得修改接口的成本也变的很低。","或者","抽象类","抽象类与接口","抽象类和抽象方法都使用","抽象类和接口","抽象类和普通类最大的区别是，抽象类不能被实例化，需要继承抽象类才能实例化其子类。","接口","接口中的","接口是抽象类的延伸，在","接口的字段只能是","接口的字段默认都是","接口的成员只能是","接口的成员（字段","方法）默认都是","方法；","比较","深入理解","的。","的，并且不允许定义为","的，而抽象类的成员可以有多种访问权限。","类型的，而抽象类的字段没有这种限制。","需要使用多重继承。","需要在几个相关的类中共享代码。","需要继承非静态和非常量字段。","需要能控制继承来的成员的访问权限，而不是都为","需要让不相关的类都实现一个方法，例如不相关的类都可以实现"],"Java/Java基础/Object类中的方法.html":["!=","&&","'clone()'","'java.lang.object'","(cloneexample)super.clone();","(clonenotsupportedexcept","(equalexample)","(int","(o","(thi","(x","(x.equals(y)","(x，编译器会自动进行这个优化。","(y","*","+","//","0;","1);","1,","1.","17","17;","2","2.","222","222);","3.","31","31，因为它是一个奇素数，如果是偶数的话，当出现乘法溢出，信息就会丢失，因为与","4.","=","==","@overrid","a;","access","arr","arr;","b;","boolean","catch","class","clone()","clone()，其它类就不能直接去调用该类实例的","clone()，可以使用拷贝构造函数或者拷贝工厂来拷贝一个对象。","cloneabl","cloneconstructorexampl","cloneconstructorexample()","cloneconstructorexample();","cloneconstructorexample(e1);","cloneexampl","cloneexample();","clonenotsupportedexcept","clonenotsupportedexception。","clonenotsupportedexception，这是因为","deepcloneexampl","deepcloneexample()","deepcloneexample();","e)","e.printstacktrace();","e1","e1.clone();","e1.set(2,","e2","equalexampl","equalexample(1,","equalexample(int","equals()","equals(object","fals","false;","false；","final","finalize()","getclass()","hascode()","hashcode()","hashset","hashset<>();","implement","int","int[10];","int[]","integ","integer(1);","interruptedexcept","java","java.lang.clonenotsupportedexception:","nanos)","nativ","new","notify()","notifyall()","null","null;","o)","o.getclass())","o;","obj)","object","object类中的方法","privat","protect","public","public，一个类不显式去重写","r","result","result;","return","set","set.add(e1);","set.add(e2);","shallowcloneexampl","shallowcloneexample()","shallowcloneexample();","string","super.clone();","system.out.println(e1.equals(e2));","system.out.println(e2.get(2));","system.out.println(set.size());","system.out.println(x","system.out.println(x.equals(y));","that.x)","that.y)","that.z;","this.i","this.x","this.z","throw","throwabl","timeout)","timeout,","tostring()","tri","true","true;","true；","void","wait()","wait(long","x","x,","x.equals(null)","x.equals(null);","x.equals(x);","x.equals(y)","x.equals(y);","x.equals(z);","x;","y","y);","y,","y.equals(x);","y.equals(z))","y;","z","z)","z;","{","{}","|","||","|括起来的部分表示r进制整数中的一位。","|，|","}","ⅰ","ⅱ","ⅲ","ⅳ","ⅴ","一个数与","一致性","一般取","下面是对","下面的代码中，新建了两个等价的对象，并将它们添加到","与","中hashcode()","中。我们希望将这两个对象当成一样的，只在集合中添加一个对象，但是因为","书上讲到，最好不要去使用","以上抛出了","传递性","使用","判断两个值是否相等，基本类型没有","判断两个变量是否引用同一个对象，而","判断引用的对象是否等价。","判断每个关键域是否相等。","在覆盖","多次调用","实现","对于基本类型，==","对于引用类型，==","对任何不是","对称性","对象进行转型；","将","应该注意的是，clone()","得到以下实现：","拷贝对象和原始对象的引用类型引用不同对象。","拷贝对象和原始对象的引用类型引用同一个对象。","接口。","接口又调用了","接口只是规定，如果一个类没有实现","接口的方法，而是","方法。","方法。cloneabl","方法并不是","方法时应当总是覆盖","方法来拷贝一个对象即复杂又有风险，它会抛出异常，并且还需要类型转换。effect","方法的重写，r取31，r进制整数的第一位取17，因此该r进制整数可以看作|","方法结果不变","方法，保证等价的两个对象散列值也相等。","方法，因此这两个对象的散列值是不同的，最终导致集合添加了两个等价的对象。","方法，它不是","方法，就会抛出","是","是用来判断两个对象是否等价。等价的两个对象散列值一定相同，但是散列值相同的两个对象不一定等价。","检查是否为同一个对象的引用，如果是直接返回","检查是否是同一个类型，如果不是，直接返回","概览","没有实现","浅拷贝","深拷贝","理想的散列函数应当具有均匀性，即不相等的对象应当均匀分布到所有可能的散列值上。这就要求了散列函数要把所有域的值都考虑进来。可以将每个域都当成","的","的一个","的对象","的替代方案","的比较","相乘可以转换成移位和减法：31*x","相乘相当于向左移一位。","等价与相等","等价关系","结果都为","自反性","调用","返回散列值，而","进制的整数。r","进制的某一位，然后组成一个","重写"],"Java/Java基础/final和static.html":["\"实例变量\";","\"静态变量\";","'a.this'","'abstract'","'outerclass.this'","'static'","'x'","'y'","//","1.","123","2.","3.","4.","5.","6.","=","a();","a.x;","a.y;","a1","a2","abstract","args)","b","class","classname，从而简化代码，但会大大降低可读性。","com.xxx.classname.*","combin","context","field","final","final和stat","final，如果在子类中定义的方法和基类中的一个","func1(){","func2();","illeg","import","initialordertest()","innerclass","innerclass();","int","main(string[]","modifiers:","new","non","outerclass","outerclass();","outerclass.new","privat","public","referenc","static","staticfield","staticinnerclass","staticinnerclass();","string","super","system.out.println(\"123\");","system.out.println(\"普通语句块\");","system.out.println(\"构造函数\");","system.out.println(\"静态语句块\");","this.y;","void","x","x;","y","y;","{","}","使引用不变，也就不能引用其它对象，但是被引用的对象本身是可以修改的。","使数值不变；","关键字。","初始化顺序","和","在使用静态变量和方法时不用再指明","声明数据为常量，可以是编译时常量，也可以是在运行时被初始化后不能被改变的常量。","声明方法不能被子类重写。","声明类不允许被继承。","子类（实例变量、普通语句块）","子类（构造函数）","子类（静态变量、静态语句块）","存在继承的情况下，初始化顺序为：","实例变量","实例变量：每创建一个实例就会产生一个实例变量，它与该实例同生共死。","对于基本类型，final","对于引用类型，final","数据","方法","方法签名相同，此时子类的方法不是重写基类方法，而是在子类中定义了一个新的方法。","方法隐式地被指定为","最后才是构造函数的初始化。","父类（实例变量、普通语句块）","父类（构造函数）","父类（静态变量、静态语句块）","类","静态内部类","静态内部类不能访问外部类的非静态的变量和方法。","静态变量","静态变量和静态语句块优先于实例变量和普通语句块，静态变量和静态语句块的初始化顺序取决于它们在代码中的顺序。","静态变量：又称为类变量，也就是说这个变量属于类的，类所有的实例都共享静态变量，可以直接通过类名来访问它。静态变量在内存中只存在一份。","静态导包","静态方法","静态方法只能访问所属类的静态字段和静态方法，并且方法中不能有","静态方法在类加载的时候就存在了，它不依赖于任何实例。所以静态方法必须有实现，也就是说它不能是抽象方法。","静态语句块","静态语句块在类初始化时运行一次。","非静态内部类依赖于外部类的实例，而静态内部类不需要。"],"Java/Java基础/异常.html":["0","arithmet","error","exception。其中","exception，此时程序崩溃并且无法恢复。","java","java异常处理框架只能处理运行时错误，编译错误不在其考虑范围之内。","java异常的层级结构","jvm","throwabl","try...catch...","什么是java异常","会引发","入门之异常处理","分为两种：","受检异常","只要在java语句执行中产生了异常，一个异常对象就会被创建，jre就会试图寻找异常处理程序来处理异常。如果有合适的异常处理程序，异常对象就会被异常处理程序接管，否则，将引发运行环境异常，jre终止程序执行。","可以用来表示任何可以作为异常抛出的类，分为两种：","和","异常","异常是发生在程序执行过程中阻碍程序正常执行的错误事件。比如：用户输入错误数据、硬件故障、网络阻塞等都会导致出现异常。","无法处理的错误，而except","用来表示","语句捕获并进行处理，并且可以从异常中恢复；","非受检异常","：是程序运行时错误，例如除","：需要用"],"Java/Java容器/":["1.","2.","3.","arraylist","arraylist：基于动态数组实现，支持随机访问。","collect","concurrenthashmap","hashmap","hashmap：基于哈希表实现。","hashset","hashset，hashset","hashset：基于哈希表实现，支持快速查找，但不支持有序性操作。并且失去了元素的插入顺序信息，也就是说使用","hashtabl","hashtable：和","iter","java容器","linkedhashmap：使用双向链表来维护元素的顺序，顺序为插入顺序或者最近最少使用（lru）顺序。","linkedhashset：具有","linkedlist：可以用它来实现队列或双向队列。","linkedlist：基于双向链表实现，只能顺序访问，但是可以快速地在链表中间插入和删除元素。不仅如此，linkedlist","list","map","o(1)，treeset","o(logn)。","priorityqueue：基于堆结构实现，可以用它来实现优先队列。","queue","set","synchron","treemap：基于红黑树实现。","treeset：基于红黑树实现，支持有序性操作，例如根据一个范围查找元素的操作。但是查找效率不如","vector：和","两种，collect","关键字修饰，因此是线程安全的。","则为","和","存储着对象的集合，而","存储着键值对（两个对象）的映射表。","容器主要包括","并且不会导致数据不一致。它是遗留类，不应该去使用它。现在可以使用","引入了分段锁。","得到的结果是不确定的。","来支持线程安全，并且","查找的时间复杂度为","概览","的效率会更高，因为","的查找效率，且内部使用双向链表维护元素的插入顺序。","类似，但它是线程安全的，这意味着同一时刻多个线程可以同时写入","类似，但它的每个方法都用","还可以用作栈、队列和双向队列。","遍历","都是接口，collect"],"Java/Java容器/ArrayList.html":["(elementdata","(int","(mincapac","(newcapac","(nummov","(oldcapac","+","//","0)","1);","1)，也就是旧容量的","1.","1.5","10。","1;","2.","3.","4.","=","==",">",">>","add(","arraylist","arrays.copyof()","arrays.copyof(elementdata,","behaviour","boolean","capac","clear","clone()","close","code","compat","concurrentmodificationexception。","consciou","count,","defaultcapacity_empty_elementdata)","e","e)","e;","element","elementdata","elementdata(index);","elementdata,","elementdata.length","elementdata.length;","elementdata[","elementdata[size++]","ensurecapacityinternal()","ensurecapacityinternal(int","ensurecapacityinternal(s","ensureexplicitcapacity(int","ensureexplicitcapacity(mincapacity);","expectedmodcount","fail","fast","gc","grow()","grow(int","grow(mincapacity);","hidden","hugecapacity(mincapacity);","i=0;","increment","index","index)","index+1","index+1,","index,","int","java.io.ioexception{","math.max(default_capacity,","mincapac","mincapacity)","mincapacity);","modcount","modcount!!","modcount++;","modcount;","newcapac","newcapacity);","null;","nummov","nummoved);","o(n)，可以看出","oldcapac","oldvalu","oldvalue;","order.","out","overflow","privat","proper","public","randomaccess","rangecheck(index);","remove(int","return","s)","s.defaultwriteobject();","s.writeint(size);","size","size,","size]","stuff","system.arraycopy()","system.arraycopy(elementdata,","throw","true;","usual","void","win:","work","write","writeobject(java.io.objectoutputstream","{","}","位置上，该操作的时间复杂度为","倍。","删除元素","删除元素的代价是非常高的。","后面的元素都复制到","在进行序列化或者迭代等操作时，需要比较操作前后","实现了","对象时就指定大概的容量大小，减少扩容操作的次数。","将","扩容","扩容操作需要调用","把原数组整个复制到新数组中，这个操作代价很高，因此最好在创建","接口，因此支持随机访问。","数组的默认大小为","方法来保证容量足够，如果不够时，需要使用","方法进行扩容，新容量的大小为","是否改变，如果改变了需要抛出","概览","添加元素时使用","用来记录","结构发生变化的次数。结构发生变化是指添加或者删除至少一个元素的所有操作，或者是调整内部数组的大小，仅仅只是设置元素的值不算结构发生变化。","需要调用"],"Java/Java容器/ConcurrentHashMap.html":["!=","(;;)","(c","(int","(retries++","(seg","*","*/","+=","/**","//","0;","0l;","1","1.","1.7","1.8","16","16，也就是说默认创建","1;","1，因此尝试次数为","2.","2249069246763182397l;","2;","2，retri","3","3.","32","3。","64",":","=","==",">","?","access","accur","async","avoid","befor","bit","boolean","c","ca","chang","class","concurrenthashmap","containsvalu","continu","count","count.","count;","due","elements.","entri","extend","failur","few","final","first","float","hash;","hashentri","hashentry[]","hashmap","implement","imposs","int","isn't","iter","j","j);","jdk","k","key;","last","loadfactor;","lock","locking.","long","maintain","make","max_scan_retri","method","modcount","modcount;","modif","next","next;","null)","number","obtain","overflow","overflow;","previou","privat","public","read","reentrantlock","reentrantlock。","reentrantlock，并发度与","resort","result.","retri","retries_before_lock","retries_before_lock)","runtime.getruntime().availableprocessors()","seg","seg.count;","seg.modcount;","segment","segment[]","segmentat(segments,","segments;","segment。","segment，它继承自重入锁","serializ","serialversionuid","size","size()","size;","size操作","static","sum","sum;","synchronized，jdk","synchronized，而且1.8","tabl","table,","table;","this.segments;","threshold;","time","transient","tri","true","unbound","undergo","unsynchron","us","v","valu","value;","visibility.","volatil","within","{","}","个","中的","中的键值对个数。","也作了很多优化。","使用了","使用分段锁机制来实现并发更新操作，核心类为","修饰的，保证了获取时的可见性。","初始值为","加锁","加锁。","变量来统计该","和","在执行","如果尝试的次数超过","存储结构","定义，该值为","实现上类似，最主要的差别是","对synchron","尝试次数使用","操作失败时使用内置锁","操作时先尝试不加锁，如果连续两次不加锁操作得到的结果一致，那么可以认为这个结果是正确的。","操作时，需要遍历所有","操作来支持更高的并发度，在","数量相等。","次，就需要对每个","每个","然后把","的个数）。","的实现也在链表过长时会转换为红黑树。","的改动","的结构","类似，唯一的区别就是其中的核心数据如","累计起来。","继承自","维护了一个","超过尝试次数，则对每个","都是用","采用了分段锁（segment），每个分段锁维护着几个桶（hashentry），多个线程可以同时访问不同分段锁上的桶，从而使其并发度更高（并发度就是","默认的并发级别为","，以及"],"Java/Java容器/CopyOnWriteArrayList.html":["(e)","+","1);","1.","2.","=","@suppresswarnings(\"unchecked\")","a)","a,","a;","a[index];","add(","array","arrays.copyof(elements,","boolean","copyonwritearraylist","e","e)","e;","element","elements.length;","final","get(object[]","getarray();","index)","int","len","lock","lock.lock();","lock.unlock();","newel","newelements[len]","object[]","privat","public","reentrantlock","return","setarray(newelements);","setarray(object[]","this.lock;","tri","true;","void","{","}","不适合内存敏感以及对实时性要求很高的场景。","但是","内存占用：在写操作时需要复制一个新的数组，使得内存占用为原来的两倍左右；","写操作在一个复制的数组上进行，读操作还是在原始数组中进行，读写分离，互不影响。","写操作结束之后需要把原始数组指向新的复制数组。","写操作需要加锁，防止并发写入时导致写入数据丢失。","在写操作的同时允许读操作，大大提高了读操作的性能，因此很适合读多写少的应用场景。","所以","数据不一致：读操作不能读取实时性的数据，因为部分写操作的数据还未同步到读数组中。","有其缺陷：","读写分离","适用场景"],"Java/Java容器/HashMap.html":["!=","\"=\"","\"v1\");","\"v2\");","\"v3\");","&","&&","(!(o","((k","((size","(*)","(0","(approxim","(e","(e.hash","(e.key","(entri","(h","(int","(int)(newcapac","(k1","(key","(length","(map.entry)o;","(n","(null","(oldcapac","(size++","(tabl","(v1","*","+","+16。","//","0","0);","00000010","00001111","00010000","00100000","0;","0，那么取模得到的结果和之前一样；","1","1)","1);","1.","1.7","1.8","100000000","10010000","10010000，它的掩码为","10110010","11011000","11111110","11111111","11111111，可以使用以下方法得到：","115%16=3。","115，使用除留余数法得到所在的桶下标","118%16=6。","118%16=6，插在","118，使用除留余数法得到所在的桶下标","12);","16;","16。需要注意的是","16，扩容之后","16；","1;","1，那么得到的结果为原来的结果","2","2.","20)","2;","3.","32：","4","4);","4.","4.1","4.2","4;","5","5.","6.","7)","7.","8","8.","8;","9.",":","=","==",">=",">>",">>>","?","^","^=","addentry(0,","addentry(hash,","addentry(int","bit","boolean","bound","bucketindex","bucketindex)","bucketindex);","cap","cap)","capac","class","collis","constant","createentry(hash,","createentry(int","default","default_initial_capac","differ","e","e);","e.getkey();","e.getvalue();","e.key)","e.next","e.next)","e.next;","e.recordaccess(this);","e.valu","e.value;","e;","each","empty_table)","ensur","entri","entry(int","entry<>(hash,","entry[]","entry[newcapacity];","entry。","equals(object","factor).","fail","false;","fast","final","function","getkey()","getkey();","getvalue()","getvalue();","h","h,","h;","hash","hash(key)","hash(key);","hash(object","hash,","hash;","hashcod","hashcode()","hashmap","hashmap<>();","hashmap，默认大小为","hashseed;","hashtabl","i);","implement","indexfor(e.hash,","indexfor(hash,","indexfor(int","inflatetable(threshold);","instanceof","int","integer.max_value;","j","jdk","k","k)","k);","k,","k.hashcode();","k1","k1.equals(k2)))","k2","k3","k;","key","key)","key,","key.equals(k)))","key;","key，","length)","load","load_factor。","loadfactor","loadfactor);","loadfactor。","m","map","map.entri","map.entry))","map.put(\"k1\",","map.put(\"k2\",","map.put(\"k3\",","mask","mask+1","maximum_capac","maximum_capacity)","modcount++;","multipl","m，需要存储的键值对数量为","n","n)","n/m","n/m，因此平均查找次数的复杂度为","n;","new","newcapac","newcapacity)","newcapacity);","newtabl","newtable)","newtable.length;","newtable;","newtable[i]","newtable[i];","newvalue)","newvalue;","next","next;","null","null)","null);","null,","null;","num","number","n，如果哈希函数满足均匀性的要求，那么每条链表的长度大约为","o(n/m)。","o)","object","objects.hashcode(getkey())","objects.hashcode(getvalue());","objects.hashcode(key)","objects.hashcode(value);","oldcapac","oldtabl","oldtable.length;","oldvalu","oldvalue;","posit","privat","public","put(k","putfornullkey(v","putfornullkey(value);","put操作","resize()","resize(2","resize(int","return","return;","setvalue(v","size","size++;","src","src[j]","src[j];","static","string","string)","sun.misc.hashing.stringhash32((string)","synchron","tabl","table.length);","table;","table[0];","table[bucketindex]","table[bucketindex]))","table[bucketindex];","table[i];","tablesizefor(int","table。","threshold","threshold)","tostring()","transfer(entry[]","transfer(newtable);","transient","true;","v","v,","v1","v1.equals(v2)))","v2","v;","valu","value)","value,","value;","void","x","y","y%x","y&(x","{","|=","||","}","不是插在","不能保证随着时间的推移","不过这里为什么要","与","个桶存放键为","中的元素次序是不变的。","中计算数组容量的代码：","中，因此这一步是很费时的。","为","为主。","为了便于理解，以下源码分析以","为了让查找的成本降低，应该尽可能使得","为原来的两倍。","从","从下面的添加元素代码中可以看出，当需要扩容时，令","令","令一个数","以下是","位上为","位以上数：","位级表示的第","使用","使用了一个特殊的机制，可以降低重新计算桶下标的操作。","使用拉链法来解决冲突，同一个链表中存放哈希值相同的","使用第","使用链表的头插法，也就是新的键值对插在链表的头部，而不是链表的尾部。","值对桶个数取模：hash%capacity，如果能保证","值来调整","值，使得空间效率和时间效率都能得到保证。","假设原数组长度","做与运算，可以去除","允许插入键为","先于","先找出是否已经存在键为","先考虑如何求一个数的掩码，对于","内部包含了一个","前面。","单独处理","参数","取模","取模效果是一样的：","可以插入键为","后面，而是插入在链表头部。","含义","呢？","和","和hashtable的比较","和扩容相关的参数主要有：capacity、size、threshold","在进行扩容时，需要把键值对重新放到对应的桶上。hashmap","在链表上顺序查找，时间复杂度显然和链表的长度成正比。","大于等于","头插法，链表头部指向新的键值对","如果为","字段我们可以看出","存储着键值对。它包含了四个字段，从","存储结构","它的哈希值如果在第","实现，需要注意的是，扩容操作同样需要把","对","对于一个","就必须进行扩容操作。","尽可能大，也就是说","尽可能小，因此需要保证","应该注意到链表的插入是以头插法方式进行的，例如上面的","开始，一个桶存储的链表长度大于","很多操作都需要先确定一个键值对所在的桶下标。","必须保证为","我们知道，位运算的代价比求模运算小的多，因此在进行这种计算时用位运算的话能带来更高的性能。","执行","扩容","扩容使用","拉链法的工作原理","插入","插入新键值对","新建一个","方法，也就无法确定该键值对的桶下标，只能通过强制指定一个桶下标来存放。hashmap","时会将链表转换为红黑树。","是一个链表。即数组中的每个位置被当成一个桶，一个桶存放一个链表。hashmap","是大于原始数字的最小的","来进行同步。","构造函数允许用户传入的容量不是","查找需要分成两步进行：","次方。","次方，因为它可以自动地将传入的容量转换为","次方，那么就可以将这个操作转换为位运算。","的","的临界值，当","的容量大小，默认为","的所有键值对重新插入","的迭代器是","的键值对。","的键值对。但是因为无法调用","的键值对，如果存在的话就更新这个键值对的值为","确定桶下标","确定桶下标的最后一步是将","类型的数组","能够使用的比例，threshold","装载因子，tabl","要尽可能大。hashmap","计算hash值","计算数组容量","计算键值对所在的桶；","设","这个性质和","迭代器。","采用动态扩容来根据当前的","重新计算桶下标","链表转红黑树","键为","键值对数量。","键值对，先计算","长度为"],"Java/Java容器/LinkedHashMap.html":["!=","\"a\");","\"b\");","\"c\");","\"d\");","&&","(a","(accessord","(b","(eldest)","(evict","(first","(last","(linkedhashmap.entry)e,","(youngest)","*","*/","++modcount;","/**","//","0.75f,","1.","2.","3.","3;","3；","4.","=","==",">","a.befor","a;","accessord","accessorder;","afternodeaccess()","afternodeaccess(nod","afternodeinsertion()","afternodeinsertion(boolean","args)","b","b.after","b;","boolean","cach","cache.get(1);","cache.put(1,","cache.put(2,","cache.put(3,","cache.put(4,","class","doubli","e)","eldest","eldest)","evict","evict)","extend","false,","false;","false，在这里为","false，如果需要让它为","false，此时维护的是插入顺序，当设置为","final","first.key;","first;","first。","hashmap","hashmap，因此具有和","head","head)","head;","implement","int","k","key","key,","last","last.aft","last;","link","linkedhashmap","linkedhashmap.entri","list.","lru","lrucach","lrucache()","lrucache<>();","lru缓存","main(string[]","map","max_entri","max_entries;","move","new","node","null","null)","null,","null;","p","p)","p.after","p.after;","p.befor","p.before,","p;","possibl","privat","protect","public","put","put、get","remov","removeeldestentry()","removeeldestentry(first))","removeeldestentry(map.entri","removenode(hash(key),","return","size()","static","super(max_entries,","system.out.println(cache.keyset());","tail","tail)","tail;","transient","true","true);","true。","true，则会将该节点移到链表尾部。也就是说指定为","true，开启","true，需要继承","void","{","}","一样的快速查找特性。","为","以下是使用","使用","内部维护了一个双向链表，用来维护插入顺序或者","决定了顺序，默认为","只有在构建","在","存储结构","实现的一个","就会将最近最久未使用的数据移除。","并且覆盖这个方法的实现，这在实现","当一个节点被访问时，如果","方法实现，在节点多于","方法返回","时会移除最晚的节点，也就是链表首部节点","时，表示维护的是","最重要的是以下用于维护顺序的函数，它们会在","的时候才为","的构造函数将","的缓存中特别有用，通过移除最近最久未使用的节点，从而保证缓存空间足够，并且缓存的数据都是热点数据。","等操作之后执行，当","等方法中调用。","继承自","缓存：","覆盖","设定最大缓存空间","设置为","顺序。","顺序之后，在每次访问一个节点时，会将这个节点移到链表尾部，保证链表尾部是最近访问的节点，那么链表首部就是最近最久未使用的节点。","顺序；","默认为"],"Java/Java容器/LinkedList.html":["1.","2.","arraylist","class","e","first","first;","item;","last","last;","linkedlist","next;","node","prev;","privat","static","transient","{","}","不支持；","与arraylist的比较","和","在任意位置添加删除元素更快。","基于动态数组实现，linkedlist","基于双向链表实现，使用","基于双向链表实现；","存储链表节点信息。","指针：","支持随机访问，linkedlist","概览","每个链表存储了"],"Java/Java容器/Vector.html":["(index","+","1);","1.","1.5","2","2.","3.","=",">=","add(","arrayindexoutofboundsexception(index);","arraylist","arraylist<>();","arraylist。","boolean","collections.synchronizedlist();","collections.synchronizedlist(list);","concurr","copyonwritearraylist","copyonwritearraylist<>();","e","e)","e;","elementcount)","elementdata(index);","elementdata[elementcount++]","ensurecapacityhelper(elementcount","get(int","index)","list","modcount++;","new","public","return","synchron","synlist","throw","true;","vector","vector，因为同步操作完全可以由程序员自己来控制；","{","}","与arraylist的比较","也可以使用","倍。","倍空间，而","可以使用","同步","它的实现与","并发包下的","得到一个线程安全的","是","是同步的，因此开销就比","替代方案","每次扩容请求其大小的","类。","类似，但是使用了","而不是","要大，访问速度更慢。最好使用","进行同步。"],"Java/Java容器/WeakHashMap.html":["!=","(*)","(this.eden.size()","(v","(而hashmap","1.","2.","=","==",">=","class","concurrentcach","concurrentcache(int","concurrenthashmap","concurrenthashmap<>(size);","eden","eden;","entri","extend","final","get()","get(k","implement","int","jvm","k)","k,","longterm","longterm;","longterm，longterm","map","map.entri","new","null)","privat","public","put()","put(k","return","size)","size;","size，那么就将","static","this.eden","this.eden.clear();","this.eden.get(k);","this.eden.put(k,","this.longterm","this.longterm.get(k);","this.longterm.putall(this.eden);","this.siz","tomcat","v","v)","v);","v;","void","weakhashmap","weakhashmap<>(size);","weakrefer","weakreference，被","{","}","不常用的对象放入","中由于每个元素都有一个桶去引用，因此不会被垃圾回收器回收)。","中的","中的所有对象都放入","中，eden","中，从而保证经常被访问的节点不容易被回收。","中，利用虚拟机回收掉一部分不经常使用的对象。","主要用来实现缓存，通过使用","使用","使用了","关联的对象在下一次垃圾回收时会被回收","区获取，如果没有找到的话再到","存储结构","实现，不用担心会被回收（伊甸园）；","实现，这些老对象会被垃圾收集器回收。","对这部分缓存进行回收。","当调用","方法时，会先从","方法时，如果","来实现缓存功能。","来引用缓存对象，由","的","的大小超过了","经常使用的对象放入","继承自","获取到就把对象放入","获取，当从","采取的是分代缓存："],"JianZhiOffer/":["剑指offer","终于刷完《剑指offer》啦！！！这里整理一下自己的题解。原书中的代码是用c++实现的，由于自己对java更熟悉一些，因此这里我选择用java实现。在刷的过程中，除了参考并用java再现了书上的解法外，对于一些题目我也补充了一些我在其他地方，比如leetcode，《算法竞赛入门经典》等看到的一些比较有意思的解法，比如对于“两个链表的第一个公共节点”这道题，用一个“两次迭代”的解法要比书上的解法更加直观，效率更高，对于“正则表达式匹配”这道题，书上的解法对于一些字符串长度很长的case效果会很差，而选用一种动态规划的方法则会大大提升程序的性能。此外，对于“数组中出现次数超过一半的数字”这道题，在使用书上第一种解法的时候要注意partition函数的选取。如果在partition函数中每次只选取第一个元素作为基准元素，那么在某些数组中的重复数字比较多的case下可能会产生死循环。为了避免产生死循环，我们应该随机地选取基准元素。","虽然刷是刷了一遍，但是自我感觉对于某些题目的理解还是不够深，等以后有时间了再刷一遍吧！^_^"],"JianZhiOffer/Array/":["array"],"JianZhiOffer/Array/把数组排成最小的数.html":["\"\";","()","(int","(num","(string","+","//","0)","0;","32,","321}，则打印出这三个数字能排成的最小数字为321323。",":","=","==","@overrid","combination1","combination1.compareto(combination2);","combination2","compare(str","int","m","m,","m;","n","n)","n;","new","null","nums)","nums.length","printminnumber(int[]","public","return","sb","sb.append(str);","sb.tostring();","str","string","string[]","string[nums.length];","stringbuild","stringbuilder();","strs)","{","||","}","});","思路","把数组排成最小的数","由于需要将m,n两个数字拼接得到mn，因此这里将数组中的每个数字转换为字符串","自定义比较规则，对于m和n两个数字，如果mn","输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。例如输入数组{3,","题目"],"JianZhiOffer/Array/丑数.html":["(n","*","...]。假设当前数组中最大的丑数是m，小于m的丑数已经求出，我们需要求出m的下一个丑数是多少。我们可以将m之前的丑数分别","2,","2，找到第一个大于m的数，对于3和5同理，然后再从2,","3,","3和5的数称作丑数","4,","5,","5中找到一个最小的数作为下一个丑数。但是这样需要把m之前的所有丑数都乘以2,","5同理。","5，其实这并不是必须的，由于数组是排好序的，对于乘以2而言，数组中肯定存在一个数t2，在它之前的丑数乘以2都小于已有的最大丑数，而它之后的丑数乘以2又太大，我们只需要记录这个丑数的位置并且在每次求出当前数组的最大丑数时更新这个t2即可。对于3,","6,","8,","8都是丑数，但14不是，因为它包含质因子7。","getuglynumber(int","int","n)","number。例如6,","n中每个数是不是丑数的方法，因为那样对每个数即使是非丑数都要进行求余和除法的操作，时间效率很低。可以事先求出1","n的每个丑数并将其排好序存在一个数组里，例如[1,","public","ugli","{","丑数","习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第n个丑数。约定1是第一个丑数。","思路","把只包含质因子2,","题目","首先摒弃逐一判断1"],"JianZhiOffer/Array/和为s的两个数字.html":["();","(1","(int","(lo","(num","(small","(sum","+","/","0","0;","11,","11]。","15]和数字15，输出[4,","15，所以结果打印出3个连续序列1","1;","2","2,","2;","2。","3","4","4,","5","5,","6","6,","7","7,","8","8。","=","==",">","array[hi]","arraylist<>();","big","big;","currsum","findcontinuoussequence(int","findnumberswithsum(int[]","hi","int","list","list>","lo","mid","new","null","nums,","nums.length","public","result","result)","s","s)","small","small;","sum)","sum时，减小hi；当array[lo]","sum时，即找到了这两个数。","temp","{","||","和为s的两个数字","和为s的连续正数序列。输入一个正数sum，打印出所有和为s的连续正数序列（至少含有两个数）。例如输入15，由于1","思路","我们可以用small和big两个指针指示正数序列，small指示序列的第一个数，big指示序列的最后一个数。初始时small置为1，big置为2，然后，我们判断当前序列的和是大于还是小于sum：如果小于sum，我们增大big以让序列包含更多的数；如果小于sum，我们增大small以减小序列的和；如果等于sum我们则将当前序列打印出来。由于序列至少需要包含2个数，因此small至多只能增加到(1","扩展","由于数组是递增排序的，初始时用lo指示数组的第一个数，hi指示数组的最后一个数，当array[lo]","输入一个递增排序的数组和一个数字s，在数组中查找两个数，使得他们的和正好是s。如果有多对数字的和等于s，输出任意一对即可。例如输入数组[1,","题目"],"JianZhiOffer/Array/数值的整数次方.html":["&&","(2","(isequal(base,","/","//","0.0)","1)","1)，以此类推，注意当exp为奇数时，例如当exp","1。之后我们需要判断exp是否为负数，如果exp为负数，在我们求出res之后还要求其倒数。在exp不为负数的前提下我们调用helper()来求base的exp次方。虽然我们可以采用连乘的方法去求，但那不是最优的。这里我们采用递归的方法去求。例如2","2)","2)，而2","2只能得到2，所以此时我们还要再乘一个base。","2可以看成是(2","4可以看成是(2","5时，5","=","^","base,","doubl","exp)","expon","int","power(doubl","public","{","思路","数值的整数次方","给定一个double类型的浮点数base和int类型的整数exp。求base的exp次方。","题目","首先我们需要处理一些无效的输入，例如0"],"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":["!=","(e.getvalue()","(index","(int","(map.entri","(num","(nums.length","+","/","//","0)","0;","1)","1);","1;","1，num即为该数。例如对于num","2)","2,","2;","2];","2]，1,","2]，由于2在数组中出现了5次，因此输出2。假设数组中出现次数大于n","2中1和2的出现次数相互抵消，3,","2中3和2的出现次数相互抵消，2,","2的元素一定存在。","2的数并返回。","2的数总是存在。例如给定一个长度为9的数组[1,","2，则找到该数；当partition返回的值小于n","2，即为数组中出现次数最多的数。","2，说明中位数在右半部分，继续在右半部分找；当partition返回的值大于n","2，说明中位数在左半部分，继续在左半部分找。","3,","4,","4中2和5,","4的出现次数相互抵消，最后num","5,",":","=","==",">","[1,","arrays.sort(nums);","count","e","e.getkey();","hashmap<>();","hi","hi);","index","int","lo","lo,","majorityelement(int[]","map","map.entryset())","map.getordefault(num,","map.put(num,","mid","mid)","n","new","null","num","nums)","nums.length","nums.length;","nums[0];","nums[n","partition(nums,","public","return","{","||","}","下面这个方法是书中该题的第一个方法。数组中有一个数字出现的次数超过数组长度的一半，也就是说它出现的次数比其他所有数字出现次数的和还要多。因此我们在遍历数组的时候用一个变量num保存当前出现次数最多的数，用另一个变量count保存它的出现次数和其他数的出现次数抵消后的值。如果当前数和num相同，则count++；如果当前数和num不同，则count","下面这个方法是书中该题的第一个方法，我们称它为partition方法。它的思路是由于partition方法每次可以确定一个数在排序数组中的正确位置，因此当partition返回的值是n","如果我们将数组按从小到大进行排序，那么数组中出现次数超过一半的数字就是数组的中位数，直接返回排序后数组中间位置的那个数即可。","思路1","思路2:","思路3","思路4","找到出现次数大于n/2的元素返回","数组中出现次数超过一半的数字","时间复杂度：o(n)","时间复杂度：o(nlogn)","注意，这种方法能够得到正确结果的关键在于partition函数的设计。我们当时在学习数据结构这门课程时，都会学习快速排序，而快速排序的关键就是partition函数。partition函数的思路是：每次我们从数组中选择一个数作为基准，将数组中所有比该数小的数排在它的左边，将数组中所有比该数大的数排在它的右边。由此，我们便确定了该数在排序数组中的正确位置。但是一般的数据结构书中对于partition函数的设计默认都为将数组中第一个数作为基准，但是如果将这种partition函数应用于该题中则在某些测试用例下会产生死循环，当数组中存在大量重复元素时，partition函数返回的index可能永远不等于mid！为此我们应该采用更为科学的partition函数的设计，即在当前数组中随机选取一个数作为基准。","用一个map统计数组中每个数字的出现次数，然后遍历map，找到出现次数大于n","空间复杂度：o(1)","空间复杂度：o(1)（取决于所用的排序算法）","空间复杂度：o(n)","给定一个大小为n的整数数组，找到出现次数大于n/2的元素。假设数组非空并且出现次数大于n","统计数组中每个数字的出现次数","题目","；如果count减为0，则将num置为当前数字并将count置为1。遍历结束后如果数组中超过一半的数字确实存在，那么count"],"JianZhiOffer/Array/数组中的逆序对.html":["&&","(;","(aux[i]","(hi","(int","(j","(lo","(num",")","+","+=","...,","/","//","0)","0,","0;","1)","1);","1,","1;","2;","4],[5,","4],[6,","4]。","4]中，一共存在5个逆序对，分别是[7,","4]，我们可以首先可以得到[7],[5],[6],[4]这4个子数组，然后将相邻的两个子数组归并成一个数组，同时统计逆序对的数目。比如[7]和[5]归并之后得[5,","5,","5],[7,","6,","6],[7,","6]的最后一个元素6，mid指针指向两个子数组中间的元素，也就是第一个数组的最后一个元素7，比较i和j指向的元素7和6，同时将较大的元素保存到一个辅助数组aux中，aux的长度等于两个数组的长度之和，我们用index指示这个辅助数组，初始时index指向aux的最后一个元素。因为7","6]，逆序对数目为1。接着再将[5,","6，所以7大于6前面所有的元素包括6，因此逆序对数目+","7]和[4,6]进行归并并统计逆序对的数目。我们首先用一个指针i指向[5,","7]的最后一个元素7，另一个指针j指向[4,","7]，逆序对数目为1；[6],[4]归并之后得[4,","=","==",">",">=","]","];","aux","aux;","aux[i","aux[i];","aux[j","aux[j])","aux[j];","count","count;","hi)","hi);","hi]拷贝给aux，nums用来承载排序后的结果","int","int[]","int[nums.length];","inversepairs(int[]","inversepairscore(int[]","inversepairscore(nums,","j","left","lo","lo)","lo,","lo;","mid","mid);","mid)，之后我们将7放到aux的index处，同时i和index向前移动一个单位。接着判断5和6，因为5","mid;","new","null","nums)","nums,","nums.length","nums[index","privat","public","return","right","special","{","||","}","一次性分配辅助数组的空间","在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组,求出这个数组中的逆序对的总数p。如果前一个数字大于后一个数字，则这两个数字组成一个逆序对。输入一个数组，求出在这个数组中的逆序对的总数。例如，在数组[7,","如果顺序遍历数组，对于每个元素向后继续遍历数组统计其逆序对的数目，那么时间复杂度是o(n^2)，显然效率很低。可以利用归并排序的思想。对于[7,","对右半部分数组进行排序并统计逆序对的数目","对左半部分数组进行排序并统计逆序对的数目","将nums[lo,","思路","数组中的逆序对","辅助数组","题目"],"JianZhiOffer/Array/数组中重复的数字.html":["(int","(num","0)","0,","0;i","1,","1;","2,","3,","3]，那么对应的输出是重复的数字2或3。","5,","=","==","findduplicatednumber(int[]","int","null","nums)","nums.length","n的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。找出数组中任意一个重复的数字。例如如果输入长度为7的数[2,","n，因此我们可以根据下标来重排这个数组。从头到尾扫描这个数组，当扫描到下标为i的数字时，首先比较这个数字（用m表示）是不是等于i，如果是，说明m已经被放在了正确的位置上，接着扫描下一个数字。如果不是，拿它和下标为m的数字进行比较，如果它和下标为m的数字相等，我们就找到了一个重复的数字（该数字在下标为i和m的位置都出现了）。如果它和下标为m的数字不等，就把第i个数字和第m个数字进行交换，把m放到它正确的位置上去。接下来重复这个过程，直到我们找到了一个重复的数字，返回true，否则，数组中没有重复数字并且算法结束后所有的数字都放置了它正确的位置上个，返回false。备注：代码中尽管有一个两重循环，但是对于每个数字最多只需要进行一次交换和一次遍历就能找到其正确的位置，因此总的时间复杂度是o(n)。","public","return","{","||","可以先对数组进行排序，然后从头到尾遍历数组找到重复的数字，时间复杂度为o(nlogn)。也可以用一个set保存已经扫描过的数字，如果当前数字已经包含在了set里，那么就找到了一个重复的数字，时间复杂度为o(n)，空间复杂度为o(n)。接下来我们看看能不能把空间复杂度优化为o(1)。注意到题目中说所有数字的范围都在0","在一个长度为n的数组中，所有的数字都在0","思路","数组中重复的数字","题目"],"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":["&","&&","((num","(int","(lo","(num","(nums[hi]","+","/","0","0)","0;","1)","1;","2",":",";","=","==",">=","?","evennum","evennum++;","hi","hi为止。","int","int[]","int[nums.length];","lo","new","null","num","num;","nums)","nums.length","oddnum","oddnum++;","p1","p2","public","reorderarray(int[]","return;","temp","temp[p1++]","temp[p2++]","void","{","||","}","可以将原数组中的奇数和偶数按照一定的顺序放入一个新数组中。先遍历一遍原数组，求出奇数和偶数的个数，确定新数组中指示奇数的下标p1和指示偶数的下标p2，然后向新数组中按照顺序放入奇数和偶数。","如果要求调整后奇数和奇数，偶数和偶数之间的相对顺序保持不变，应该怎么做呢？","思路","扩展","用两个指针lo和hi，lo从头开始找到第一个偶数，hi从尾开始找到第一个奇数，然后交换lo和hi指示的这两个数，重复进行直到lo","调整数组顺序使奇数位于偶数前面","输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，并保证奇数和奇数。","题目"],"JianZhiOffer/Backtracking/":["backtrack"],"JianZhiOffer/Backtracking/机器人的运动范围.html":["%","&&","(threshold","+=","//","/=","0","0)","0)的格子开始移动，它每次可以向左、右、上、下移动一格，但不能进入行坐标和列坐标的数位之和大于k的格子。请问问该机器人能够到达多少个格子。例如给定threshold","0,","0};","1,","10;","1};","5,","7,","7，返回21。","=","col","cols)","dir_i","dir_x","final","int","int[]","j","movingcount(int","num","privat","public","return","row","rows,","static","sum","sum;","threshold,","{","{0,","}","回溯法。在进入一个新的格子之前先判断是否能进入，如果能进入则count++并且置访问标记为true。","地上有一个m行n列的方格。一个机器人从坐标(0,","思路","机器人的运动范围","表示上、下、左、右4个方向","题目"],"JianZhiOffer/Backtracking/矩阵中的路径.html":["!=","&&","(int","(matrix","+","//","0","0)","0,","0;","0};","1)。此外，由于在寻找路径的过程中已经访问过的格子不能重复进入，因此我们还需要定义一个访问数组vis。","1,","1};","=","=0","==","boolean","col","dir_i","dir_x","false;","final","haspath(char[][]","int","int[]","j","matrix,","matrix.length()","matrix.length;","matrix.length[0];","matrix[0].length","matrix[i][j]，说明当前字符能够构成路径，我们继续从当前字符出发分别沿着上、下、左、右4个方向继续寻找路径中的下一个字符str(curr","matrix[i][j]，说明矩阵中的当前字符不能构成路径，需要进行回溯。如果str(curr)","null","privat","public","return","row","static","str","str)","str.length()","string","{","{0,","||","一个可以用回溯法解决的典型题。首先在矩阵中任选一个格子作为路径的起点。设矩阵中的当前字符为matrix[i][j]，路径字符串的当前字符为str(curr)。如果str(curr)","思路","矩阵中的路径","矩阵的列数","矩阵的行数","表示上、下、左、右4个方向","设计一个函数，用来判断一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。","题目"],"JianZhiOffer/Binary Search/":["binari","search"],"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":["&&","(first","(lo","(num","+","//","0)","0;","1","1)","1;","2,","3,","3，输出4。","4,","5]，k","=","==",">","first","getfirstk(int[]","getfirstk(nums,","getlastk(nums,","getnumberofk(int[]","hi","int","k)","k);","k最后一次出现的位置","k第一次出现的位置","last","lo","null","nums,","nums.length","privat","public","return","{","||","}","当我们用二分查找在数组中找到一个k时，如果前面没有k了，那么这个k就是k第一次出现的位置；如果前面还有k，我们继续在前半部分中用二分查找寻找k第一次出现的位置；同理，我们可以得到k最后一次出现的位置。找到了k第一次出现的位置和最后一次出现的位置，我们就可以算出k在数组中的出现次数了。","当然，我们可以顺序遍历数组来统计k在数组中出现的次数，也可以先用二分查找找到一个k，由于k的左边和右边也有可能有k，我们从当前位置出发分别沿左，右两个方向顺序地寻找k。因为要查找的数字在长度为n的数组中有可能出现n次，所以上面两种方法的时间复杂度都是o(n)。我们来看看有没有更好的方法。","思路","数字在排序数组中出现的次数","统计数字k在排序数组中出现的次数。例如输入数组[1,","返回k在数组中第一次出现的位置","题目"],"JianZhiOffer/Binary Search/旋转数组的最小数字.html":["&&","(hi","(int","(num","(nums[lo]","(nums[mid]","+","...,","/","//","0)","0;","1)","1,","1;","2,","2;","2}为{1,","3,","4,","5,","5}的一个旋转，该数组的最小值为1。","=","==",">=","array[lo]，说明最小的数在mid和hi之间，移动lo到mid在后半数组中继续查找；如果array[mid]","helper(int[]","helper(nums,","hi","hi)","hi);","hi,","hi]中的最小数字","int","lo","lo)","lo,","mid","mid;","mid指向的数字相同时，此时无法判断mid指向的数字属于前一个子数组还是后一个子数组，此时需要用顺序遍历找到nums[lo,","min","minnumberinrotatearray(int[]","note：给出的所有元素都大于0，若数组大小为0，请返回0。","null","nums)","nums,","nums.length","nums[0];","nums[hi]","nums[hi])","nums[hi];","nums[lo])","nums[lo];","nums[mid]","privat","public","return","{","||","}","在我们的循环不变式中，lo指向前一个递增子数组，hi指向后一个递增子数组，因此这里循环条件是nums[lo]","如果数组本身已经是排好序的，第一个数字是最小的数字","当lo,","思路1","思路2","把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。","旋转之后的数组可以看做是由两个递增的子数组所构成，而这个最小的数就是这两个子数组的分界点。可以借助二分查找的思想去寻找这个最小的数。初始时用lo指示数组的第一个数，hi指示数组的最后一个数，mid指示lo和hi中间的数。如果array[mid]","旋转数组的最小数字","时间复杂度：o(logn)","时间复杂度：o(n)","输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。例如数组{3,","遍历数组，找到第一个当前数字比前一个数字小的数字，该数字就是数组中最小的数字。","题目"],"JianZhiOffer/Bit Manipulation/":["bit","manipul"],"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":["!=","&","(int","(n","0)","0;","1)","1;","=",">=","count","count++;","count;","int","n","n)","n;","numberof1(int","n操作可以将n的二进制表示中最右边的1变成0”这个结论，我们可以写出如下代码进一步提高运算效率。","public","return","{","}","二进制中1的个数","思路1","思路2","根据“(n","由于java中一个int类型的数有4个字节，共32位，因此循环32次，每次用n和1进行位与运算判断其最后一位是不是1，如果是1则count++，之后将最后一位移出继续判断余下的数。","输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。","题目"],"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":["&","((num","(int","(isbitone(num,","(num","//","0)","0;","1)","1;",":","=","==",">=",">>","^=","boolean","findfirstbitone(int","findfirstbitone(temp);","findnumsappearonce(int[]","index","index)","index))","index++;","index;","int","int[2];","int[]","int[]{};","isbitone(int","new","null","num","num)","num,","num;","nums)","nums.length","privat","public","result","result;","result[0]","result[1]","return","temp","{","||","}","一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是o(n)，空间复杂度是o(1)。","先考虑一种简单的情况，数组中只有一个数出现1次，其他数都是出现2次。我们可以从头到尾遍历数组，对每个数求异或，（因为一个数和自己异或的结果为0，因此所有出现两次的数都抵消掉了），最后得到的结果就是那个只出现一次的数。现在我们考虑数组中恰有两个数出现1次，其他数都是出现两次。首先，从头到尾遍历数组，对每个数求异或，得到数temp。在异或的过程中，由于所有出现2次的数都抵消掉了，所以temp是数组中那两个只出现1次的数异或的结果。由于这两个数不相同，所以temp肯定不为0，即temp的二进制表示中一定有一位为1。假设其第n位为1。我们根据数组中每个数的二进制中的第n位是否为1,可以把原数组分成两个数组，可知，出现2次的数一定被分到了一个数组当中。接着，我们分别对两个数组按照开始的思路求异或，即可得到两个出现1次的数。","思路","数组中只出现一次的两个数字","返回num的二进制表示中从右向左第一个1的位置","返回num的二进制表示的第index位是不是1","题目"],"JianZhiOffer/Dynamic Programming/":["dynam","program"],"JianZhiOffer/Dynamic Programming/斐波那契数列.html":["(n","+","...，现在要求输入一个整数n，请你输出斐波那契数列的第n项（从0开始，第0项为0）。n","0)","0;","1","1)","1,","1;","1]","1级台阶的跳法数和跳上n","1级台阶跳1次，1次跳1级得到，也可以从n","2)","2);","2,","2]。","2级台阶的跳法数的和，即dp[n]","2级台阶跳1次，1次跳2级得到，因此跳上n级台阶的跳法数等于跳上n","3,","5,","8,","=","==","dp[n","dp。","dp。我们先来分析跳上2级台阶总共有多少种跳法。可以跳2次，1次跳1级，也可以一次跳2级，这样就有2种跳法。现在假设跳上n级台阶总共有dp[n]种跳法，n级台阶从n","fibonacci(int","fibonacci(n","int","jumpingstairs(int","n","n)","public","return","{","||","}","一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个n级的台阶总共有多少种跳法。","大家都知道斐波那契数列，即1,","思路","思路1","思路2","扩展","斐波那契数列","递归。","题目"],"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":["(int","(num","+","...","...,","//","0)","0;","1,","15,","1;","1]","1。","2,","2]，最大的子序列为[6,","3,","7,","7]，输出8。","=","==","a1","a2","ai","ai+1","ai，则","aj","dp","dp[0]","dp[i","dp[i]","dp。dp[i]表示nums[0,","findgreatestsumofsubarray(int[]","i]中包含nums[i]的最大连续子序列的和，状态转移方程如下：","i]中每个元素累加的和","int","int[]","int[nums.length];","integer.min_value;","max{nums[i],","new","null","nums)","nums.length","nums[0];","nums[i]}","public","result","return","s","s[0]","s[i]表示s[0,","si","sj","{","||","思路1","思路2","时间复杂度：o(n)","时间复杂度：o(n^2)","根据结论“连续子序列之和等于两个前缀和之差”，即设si","给定一个数组，返回它的最大连续子序列的和，子序列的长度至少为1。例如给定数组[6,","连续子数组的最大和","题目"],"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":["!=","&&","'*')","'.'));","(!s.isempty()","(first_match","(i","(int","(p.isempty())","(p.length()","(p2","(s","(s.charat(0)",")","+","//","0);","0,","0;","1","1;","1];","1][p.length()","1开始，这是因为当s为空时也需要进行判断，比如s=\"\",p=\"a*\"，s和p也是匹配的","=","==",">",">=","boolean","boolean[][]","boolean[s.length()","dp","dp[i][j]表示s(i:)和p(j:)是否匹配","dp[s.length()][p.length()]","false;","first_match","int","ismatch(s,","ismatch(s.substring(1),","ismatch(str","ismatchcore(s,","ismatchcore(str","j","new","null","null)","p","p)","p));","p,","p.charat(0)","p.charat(1)","p.length","p.length()","p.substring(1));","p.substring(2))","p1","p1,","p2)","privat","public","p的下一个字符是'*'","return","s,","s.isempty();","s.length())","s.length();","string","true;","{","||","}","《剑指offer》的解法。当没有*的时候，情况比较简单，我们只需要从左到右依次判断s和p的当前字符是否匹配即可。如果有*并且p中*前面的字符还和s的当前字符相同，我们分为三种情况去处理：匹配0个、匹配1个和匹配多个。","上述思路的dp版本。","初始化dp，当s和p同时到达末尾时匹配成功","判断s的当前字符和p的当前字符是否匹配","匹配0个","匹配1个","匹配1个或多个","思路1","思路2","思路3","正则表达式匹配","注意这里i是从s.length()开始，j是从p.length()","给定一个字符串s和一个模式p，实现一个支持.和*的正则匹配。模式中的字符.表示任意一个字符，而*表示它前面的字符可以出现任意次（含0次）。在本题中，匹配是指字符串的所有字符匹配整个模式。例如字符串\"aaa\"与模式\"a.a\"和\"ab*ac*a\"匹配，但与“aa.a”和\"ab*a\"均不匹配。","该方法对上述方法的逻辑做了简化。首先判断s和p的当前字符是否匹配，接着看p的下一个字符是不是*，如果不是*，继续判断s和p余下的字符；如果是*，或者匹配0个，即忽略p的当前字符和*，继续看p中余下的字符和s是否匹配；要么匹配多个，即从s中去掉1个字符，判断s中余下的字符和p是否匹配。和上一个思路把匹配分为匹配0个，匹配1个，匹配多个相比，这里把匹配1个和匹配多个在逻辑上统一成匹配多个了。","题目"],"JianZhiOffer/LinkedList/":["linkedlist"],"JianZhiOffer/LinkedList/从尾到头打印链表.html":["!=","(!stack.isempty())","(curr","(head","=","==","curr","curr.next;","head)","head;","listnod","new","node","null)","printlistfromtailtohead(head.next);","printlistfromtailtohead(listnod","public","return;","stack","stack.pop();","stack.push(curr);","stack<>();","system.out.println(head.val);","system.out.println(node.val);","void","{","}","从尾到头打印链表","使用一个辅助栈即可。","思路1","思路2","输入一个链表的头结点，从尾到头反过来打印出每个节点的值。","递归。","题目"],"JianZhiOffer/LinkedList/反转链表.html":["!=","(curr","(head","//","=","==","curr","curr.next","curr.next;","curr;","head)","head.next","head.next;","head;","listnod","new_head","new_head;","next","next.next","next;","null","null)","null;","prev","prev;","public","return","reverselist(listnod","reverselist(next);","special","{","||","}","反转链表","循环。curr指示当前节点，prev指示当前节点的前一个节点，next指示当前节点的下一个节点。依次反转每个节点并向前移动指针。注意，反转时首先保存原链表中当前节点的下一个节点到next中，因为反转会修改curr的next指向。","思路1","思路2","输入一个链表，反转链表后，输出新链表的表头。","递归。假设当前节点head的下一个节点next后面的部分已经反转完成了，考虑如何反转当前节点。我们需要把next的next指针指向当前节点，并且将head的next指针置为null。当head为null，返回null；当head的next指针为null，说明链表中只剩下一个节点，直接返回该节点即可。","题目"],"JianZhiOffer/LinkedList/复杂链表的复制.html":["!=","(clonedhead","(curr","(curr.random","(currclon","(int","(map.containskey(curr))","(map.containskey(curr.random))","(phead","(randomlistnod","//","//复制原链表的每个节点，并用next链接起来","//设置复制链表的random","=","==","class","clone","clonedcurr","clonedcurr.next","clonedcurr.next;","clonedhead","clonedhead;","clonednod","clonednode);","clonednode.next","clonednode.next;","clonednode.random","clonednode;","clonenod","clonenodes(phead);","connectnod","connectnodes(phead);","curr","curr.next","curr.next;","curr.random.next;","currclon","currcloned.random","currcloned=null;","hashmap<>();","head)","head;","int","label)","label;","map","map.get(curr);","map.get(curr.random);","map.put(curr,","map。将复杂链表的复制分为两步，第一步，复制原链表的每个节点，并用next链接起来，同时将原节点和复制节点存到map中（原节点作为key，复制节点作为value）；第二步，设置复制链表中每个节点的random指针。遍历原链表，如果节点n的random为s，则通过map可以在o(1)时间内找到n1和s1，设置n1.random","new","next;","null)","null;","phead)","phead;","privat","public","random;","randomclon","randomcloned;","randomcloned=null;","randomlistnod","randomlistnode(curr.label);","reconnectnod","reconnectnodes(phead);","return","s1即可。","this.label","void","{","}","原链表的当前节点","同样是用空间换时间的思想，但是不同于上一个思路中用额外的存储空间存储节点和节点的random之间的映射关系，这次我们直接在原链表上完成复制。","复制链表中每个节点，将复制节点直接链接到原节点的后面","复制链表中的每个节点并将复制的节点直接链接到原节点的后面，此时不设置每个节点的random。","复制链表的头结点","复制链表的当前节点","复杂链表的复制","将复制后的链表拆分成原链表和复制链表并返回复制链表的头结点","思路1","思路2","我们将复杂链表的复制过程分为三个步骤：","时间复杂度：o(n)。","此时该链表中奇数位置的节点构成原链表，偶数位置的节点构成复制链表，将其拆分出来即可。","空间复杂度：o(1)。","空间复杂度：o(n)。","设置clonedhead","设置复制节点的random","设置复制节点的random。若n的random是s，则n1的random就是s的下一个节点s1。","输入一个复杂链表（每个节点中有节点值以及两个指针，一个指针next指向下一个节点，另一个指针random指向链表中任意一个节点），返回结果为复制后的复杂链表的头结点。","题目"],"JianZhiOffer/LinkedList/合并两个排序的链表.html":["(head1","(head1.val","(head2","=","==","curr","head1,","head1;","head2)","head2;","listnod","merge(listnod","null)","null;","public","return","{","合并两个排序的链表","思路","每次选取head1和head2中的较小者作为当前结点，之后递归构造下一个节点。","输入两个单调递增的链表，输出两个链表合成后的链表，合成后的链表也要求单调递增。","题目"],"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":["!=","(curr","(head","(int","0;","1个节点，之后两个指针再一起移动，当fast移动到链表的最后一个节点时，slow指示的刚好是链表中倒数第k个节点","=","==","curr","curr.next;","findkthtotail(listnod","head,","head;","int","k","k)","k次即可得到倒数第k个节点。注意，这种方法要求k不能大于链表的长度，为此需要先求出链表的长度。","length(head))","listnod","new","null","null)","null;","pop","public","return","stack","stack.push(curr);","stack<>();","{","||","}","先遍历一遍链表，将每一个节点都压入一个stack中，将stack","思路1","思路2","用一个slow指针和一个fast指针，fast从表头开始先向后移动k","输入一个链表，输出该链表中倒数第k个结点。","链表中倒数第k个节点","题目"],"JianZhiOffer/LinkedList/链表中环的入口节点.html":["!=","&&","(1)，同时由于slow每次走1步，fast每次走2步，所以fast走过的路程又可以表示为2a","(2)。联立(1)和(2)得a","(curr.next","(fast","(head","(int","(meetingnod","(p","(slow","+","//","0;i","1;","2b","=","==","b","b=n，所以相遇节点到entry的距离和head到entry的距离是相同的。","break;","b，其中a为head到entry的路程，b为slow在环中走过的路程，n为环的长度。由于相遇时fast比slow多走了一圈，因此fast走过的路程为a","curr","curr.next;","entrynodeofloop(listnod","fast","fast)","fast.next","fast.next.next;","findmeetingnode(head);","head)","head.next","head;","int","listnod","meetingnod","meetingnode)","meetingnode;","n","nodesinloop","nodesinloop++;","null","null)","null;","p","p.next;","p;","privat","public","return","slow","slow)","slow.next;","{","||","}","一个链表中包含环，找到环的入口节点。","书上的方法。定义两个指针，设环中有n个节点，先让第一个指针从链表头开始在链表上走n个单位，然后两个指针再一起走，每次走一个单位。当两个指针相遇时，相遇节点就是环的入口节点。关键是如何求出环中的节点个数。借由上一题的分析，我们可以让slow从相遇节点处继续向前走，并记录走过的节点个数，当再次回到这个节点时，即可得出环中的节点个数。","从头开始遍历链表，用一个set保存已经走过的节点。当当前节点已经存在于set中时，说明链表中有环并且当前节点就是环的入口节点。","代码略。","思路1","思路2：","思路3","我们先来分析这样一个问题：如何判断一个链表中是否存在环？我们可以让一个快指针fast和一个慢指针slow同时从链表的第一个节点开始向前走，fast每次走2步，slow每次走1步。如果两个指针相遇则说明链表中存在环，如果fast走到链表的末尾两个指针还没有相遇则说明链表中不存在环。现在我们再设置一个指针p从链表的第一个节点开始向前走，每次走1步，slow从相遇的地方继续向前走，每次也走1步，当p和slow相遇时，相遇节点就是环的入口节点。","环中的节点个数","证明：设entry为环的入口节点。当slow和fast相遇时，设slow走过的路程为a","链表中没有环","链表中环的入口节点","题目"],"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":["!=","(curr1","(head1","(int","(len2","(listnod","//","0;",":","=","==",">","?","curr1","curr1.next;","curr1;","curr2","curr2)","curr2.next;","curr2;","curr_long","curr_short","diff","findfirstcommonnod","getlength(head1);","getlength(head2);","head1","head1,","head1;","head2","head2)","head2;","int","len1","len1)","len2","len2);","listnod","math.abs(len1","null","null)","null;","public","return","{","||","}","“两次迭代”法，即通过两次迭代即可找出两个链表的第一个公共节点。用两个指针分别指示两条链表，第一次迭代时如果第一条链表的指针到达第一条链表的末尾时，将其置为第二条链表的头结点；如果第二条链表的指针到达第二条链表的末尾时，将其置为第一条链表的头结点。这样经过一轮迭代后就消除了两个链表之间的长度差，之后两个指针每次向前前进一个节点，最终到达两个链表的第一个公共节点。采用这种方法免去了分别计算两个链表长度的麻烦。","两个链表的第一个公共节点","先在长链表上走diff步","先求出长链表的长度len1，短链表的长度len2，两个链表的长度差diff。之后，先在长链表上走diff步，然后两个链表再一起走，直到或者两个链表中有一个为null（没有公共结点）或者找到第一个公共节点。","思路1","思路2","输入两个链表，找出它们的第一个公共节点。","题目"],"JianZhiOffer/LinkedList/删除链表的节点.html":["!=","&&","(!isduplicated)","(curr","(curr.next","(curr.val","(head","(next","(node","(node.next","(prev","(temp","//","=","==",">2",">3",">4",">5。",">5，删除值为3的节点后的链表为1",">5，删除重复节点后的链表为1","boolean","curr","curr,","curr.next","curr.next;","curr.val","curr.val)","curr;","deleteduplicatednodes(listnod","deletenode(listnod","deletenodes(listnod","false;","head","head)","head,","head.next","head;","int","isdupl","listnod","next","next.next;","next.val)","next.val;","next;","next分别表示前一个节点，当前节点和下一个节点。遍历链表，如果当前节点的值不等于target，移动prev和curr继续判断下一个节点；否则，我们需要将prev的next指向next以删除当前节点，如果prev为null，说明头结点是需要删除的节点，将next赋给head。","node","node)","node.next","node.next;","node.v","null","null)","null;","prev","prev.next","public","return","target)","temp","temp.next;","temp.val","temp;","true;","{","||","}","便于被gc发现","删除链表的节点","否则，将prev指向next","在一个排序的链表中，删除重复的结点。例如给定链表1","大体思路同上，用prev,","如果curr和next不是重复节点，继续判断下一个节点","如果curr和next是重复节点，找到第一个比curr的值大的节点并将其赋值给next","如果node不是链表的尾节点","如果node是链表的尾节点","如果头节点是重复节点，将next作为新的头节点","当要删除的节点node不是链表的尾节点时，我们可以先把该节点的下一个节点next的值赋给node，然后令node的next指向next的next即可。当要删除的节点是链表的尾节点时，我们就不能这么做了，需要从从链表头开始顺序地查找该节点并删除。","思路","扩展1","扩展2","指示curr和next是否是重复节点","给定一个单链表，删除链表中所有节点值为target的节点，返回删除后链表的头节点。例如给定链表1","给定单向链表的头指针和一个节点指针，定义一个函数在o(1)时间内删除该节点。输入保证要删除的节点在链表中。","题目","首先注意到头结点也有可能是重复节点，也有可能被删除，因此函数的返回值应该为listnode。我们从头开始遍历整个链表，用curr指示当前节点，prev指示当前节点的前一个节点，next指示当前节点的下一个节点，如果curr和next的值不同，我们移动只需要移动curr和prev继续判断下一个节点即可；当curr和next相同，说明curr和next是重复节点，由于链表是排好序的，因此重复节点是连续的，我们找到第一个比curr大的节点并把该节点赋值给next，让prev指向next即删除了所有和curr的值相同的重复节点。注意在将prev指向next时，prev可能为null，这说明头结点是重复节点，此时我们需要把next赋值给head以作为新的头节点。"],"JianZhiOffer/Matrix/":["matrix"],"JianZhiOffer/Matrix/二维数组中的查找.html":["(matrix","(matrix[row][col]","(row","0","0)","0;","1;","=","==","boolean","col","false;","int","matrix,","matrix.length","matrix.length;","matrix[0].length","matrix[0].length;","null","public","return","row","searchmatrix(int[][]","target)","true;","{","||","}","。","二维数组中的查找","以二维数组矩阵中右上角的数字为基准，如果该数字等于target，我们就找到了这个数；如果该数字小于target，则该数字所在行的所有数都小于target，剔除该行，即row++；如果该数字大于target，则该数字所在列的所有数字都大于target，剔除该列，即col","在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。","思路","题目"],"JianZhiOffer/Matrix/顺时针打印矩阵.html":["&&","(int","(matrix","(row","(start",")","*","+","//","0","0)","0;","1","1,","10,","10。","11,","12,","13,","14,","15,","16","16,","1;","2","2)","2,","3,","4,","4矩阵：","5,","6,","7,","8,","9,","=","==",">","[","[][]","]","arraylist<>();","col","endi","endx","int","list","matrix)","matrix.length","matrix.length;","matrix[0].length","matrix[0].length;","new","null","printmatrix(int","public","result","result.add(matrix[endy][i]);","result.add(matrix[i][start]);","result;","return","row","start","start++;","start;","{","||","}","从下向上（至少要有三行两列）","从左向右","思路","每次从矩阵的左上角开始一轮打印，每轮打印包括从左向右、从上向下、从右向左以及从下向上四个方向，每个方向的打印都有相应的前提条件，从上向下打印需要当前打印的矩阵至少包含两行，从右向左打印需要当前打印的矩阵至少包含两行两列，从下向上打印需要当前打印的矩阵至少包含三行两列。","输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。例如输入如下4","输出结果为：1,","顺时针打印矩阵","题目"],"JianZhiOffer/Stack & Queue & PriorityQueue/":["&","priorityqueu","queue","stack"],"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":["(stack_min.isempty()","//","=","class","mystack","new","num","num)","public","push(int","stack","stack<>();","stack_data","stack_data.push(num);","stack_min","void","{","||","入栈","包含min函数的栈","定义栈的数据结构，实现一个能够得到栈中最小元素的min函数（时间复杂度应为o（1））。","思路","用一个辅助栈stack_min，栈顶元素记录当前栈中所有元素的最小值。入栈时，如果入栈元素num小于stack_min的栈顶元素，则同时将num加入stack_min中；出栈时，原栈和stack_min同时执行出栈。","题目"],"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":["&&","(!deque.isempty()","(int","(num","//","0","0;","1]及滑动窗口的大小3，那么一共存在6个滑动窗口，它们的最大值分别是[4,","2,","3,","4,","5,","5]。","6,","=","==",">=","arraylist<>();","dequ","deque.offer(i);","deque.peekfirst()","deque.pollfirst();","deque.polllast();","int","linkedlist<>();","list","maxinwindows(int[]","new","null","nums,","nums.length","nums.length)","nums[deque.peeklast()])","public","result","result.add(nums[deque.peekfirst()]);","result;","return","size","size)","size;","{","||","}","从头部删除队列中已经滑出窗口的元素","从尾部删除队列中等于或小于当前元素的元素，因为这些元素不可能成为滑动窗口的最大值","作用等同于deque.offerlast()","如果采用暴力法，可以扫描每一个滑动窗口中的所有数字找出其中的最大值，如果滑动窗口的大小为k，数组的大小为n，则这种方法时间复杂度为o(kn)，显然不是最优的。实际上，一个滑动窗口可以看成是一个队列。当窗口滑动时，处于窗口的第一个数字被删除，同时在窗口的末尾添加一个新的数字。这符合队列先进先出的特性。正常情况下我们需要扫描整个队列才能找到队列中的最大数，我们看看能不能在o(1)的时间内找到队列中的最大数。我们并不把滑动窗口里的每一个数都存入队列中，而是只把有可能成为滑动窗口最大值的数存入到一个双端队列中。我们使用队列的队头保存当前滑动窗口的最大值。当把数组前k个元素加入到队列中时，由于此时窗口还没有开始滑动，我们只需要在队列中保存前k个数字中最大的数即可，此时队列的队头就是当前窗口中最大的数。当窗口开始滑动时，一方面我们需要将当前数字和队列中的数字进行比较，如果当前数字比队列中的数字大，则队列中比当前数字小的元素不可能成为窗口的最大值，将其从队列中移除，另一方面，我们需要判断代表当前窗口最大值的队头元素是否已经滑出窗口，如果已经滑出窗口，我们也需要将其进行移除。那么如何判断当前窗口是否包含一个数字呢？我们需要在队列里存入数字在数组中的下标，而不是数值。当队头元素的下标与当前处理的数字的下标之差大于等于窗口的大小时，说明这个数字已经从窗口中滑出了。在实现上，我们使用一个双端队列deque保存有可能是滑动窗口最大值的数字的下标。在存入一个数字的下标之前，首先要判断队列里已有数字是否小于待存入的数字。如果已有数字小于待存入的数字，说明这些数字已经不可能是滑动窗口的最大值，因此它们会依次从队列的尾部删除（调用deque.polllast()）。同时，如果队列头部的数字已经从窗口中滑出，滑出的数字也需要从队列的头部删除（调用deque.pollfirst）。由于队列头部和尾部都有可能删除数字，因此这也是我们需要双端队列的原因。","思路","滑动窗口的最大值","给定一个数组和滑动窗口的大小，请找出所有滑动窗口里的最大值。例如如果输入数组[2,","题目"],"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":["&","&&","((size","(max.peek()","(max.size()","+","...","/","//","0","0)","1","1)","2;","=","==",">","@overrid","class","comparator()","compare(integ","dynamicarray","dynamicarray()","getmedian()","insert(int","int","integ","max","max.offer(num);","max.size()","max;","min","min.offer(num);","min.peek())","min.peek();","min.poll();","min.size();","min;","n1","n2","n2m","n2m+1","new","nm","nm+1","nm+2","num","num)","o1,","o1;","o2","o2)","p1","p1,","p2","priorityqueu","priorityqueue<>();","priorityqueue<>(new","privat","public","return","size","void","{","}","});","假设数据在容器中已经排好序，中位数可以由p1和p2两个指针指向的数得到。如果容器中数据的数目是奇数，则中位数由p1和p2共同指向；如果容器中数据的数目是偶数，则中位数是p1和p2指向的数的平均值。注意到整个数据容器被我们分成了两部分，左边部分的数据比右边部分的数据小，并且p1指向的数据是左边部分最大的数，p2指向的数据是右边部分最小的数，见下图：","向数据流中插入一个数据","因此我们可以用一个最大堆保存左边部分的数据，用一个最小堆保存右边部分的数据，p1和p2分别指向最大堆和最小堆的堆顶。","在插入数据时我们需要确保数据被平均分配到两个堆中，即两个堆中数据的数目之差不能超过1。为了实现实现平均分配，我们约定在数据的总数目是偶数时把数据插入到最小堆中，否则插入到最大堆中。同时，我们还要保证最大堆中的所有数据都要小于最小堆中的数据。当数据的总数目是偶数时，按照我们的约定会把数据插入到最小堆中，如果这个数据比最大堆中的一些数据要小该怎么办呢？我们可以先把数据插入到最大堆中，然后拿出此时最大堆中最大的元素，即堆顶元素，将其插入到最小堆中，这样就保证了最小堆中的所有数字都大于最大堆中的数字。当需要把一个数据插入到最大堆但是这个数据比最小堆中的一些数据要大时同理进行分析。","如何得到一个数据流中的中位数？如果从数据流中读出奇数个数值，那么中位数就是所有数值排序之后位于中间的数值。如果从数据流中读出偶数个数值，那么中位数就是所有数值排序之后中间两个数值的平均值。","如果当前数据流中数据的总数是偶数，将其插入到最小堆中","如果数据流中数据的总数为偶数，返回中间的两个数的平均值","如果数据流中数据的总数为奇数，返回中间的数","如果采用二叉搜索树作为数据容器的话，插入数据的平均时间复杂度是o(logn)，读取中位数的平均时间复杂度为o(logn)，但是在最坏情况下，即二叉搜索树退化为一个单链表时，插入和读取的时间复杂度是o(n)。我们可以使用一个改进的avl树作为数据容器，将平衡因子定义为左右子树节点数据之差，这样插入的时间复杂度为o(logn)，读取的时间复杂为o(1)（根节点的值或根节点和左子节点或右子节点的值的平均值）。但是大部分的编程语言没有实现我们定义的这种avl树，因此我们需要再分析其他的方法。","容易想到的是用一个数组保存数据流中的所有数据，如果数据是有序的，则我们在插入一个新数据到数据流时需要移动其他数据以保持数据的有序性，时间复杂度为o(n)，读取中位数时由于数组是有序的因此直接读就可以了，时间复杂度是o(1)。如果数组是无序的，插入数据的时间复杂度是o(1)，读取中位数可以使用partition函数，时间复杂度为o(n)（关于partition的时间复杂度分析比较复杂，详见《算法导论》）。","当前数据流中数据的总数","思路","数据流中的中位数","最大堆","最小堆","注意，虽然在前面的分析中，如果数据流中数据的总数是奇数，p1和p2同时指向数据流中间的那个数，这里无论是返回最小堆的堆顶元素还是最大堆的堆顶元素应该都是可以的。但是在实现上只有最小堆的堆顶才指示中间的那个数，因此这里只能返回最小堆的堆顶元素","由于我们需要从一个数据流中读出数据并计算中位数，因此我们需要用一个数据容器存储数据流中的所有数据并同时考虑插入数据和读取中位数这两个操作的时间复杂度。","获取当前数据流中所有数据的中位数","采用最大堆和最小堆作为数据容器时，插入数据的时间复杂度为o(logn)，读取中位数的时间复杂度为o(1)。","题目"],"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":["(!queue1.isempty())","(!stack1.isempty())","(queue1.isempty())","(queue1.size()","(queue2.size()","(stack2.isempty())","1","1)","2","3","=",">","class","int","linkedlist<>();","myqueu","myqueue()","mystack","mystack()","new","num)","offer(int","poll()","pop()","public","push(int","push时将数push到stack1中，pop时，从stack2中pop，如果stack2为空，则先将stack1中的所有数pop到stack2中再从stack2中pop。","queue","queue1","queue1.offer(num);","queue1.offer(queue2.poll());","queue1.poll();","queue1;","queue2","queue2.offer(num);","queue2.offer(queue1.poll());","queue2.poll();","return","stack","stack1","stack1.push(num);","stack1;","stack2","stack2.pop();","stack2.push(stack1.pop());","stack2;","stack<>();","void","{","}","如果再执行一次pop的话，我们就把queue1中的1插入到queue2中，然后从queue1中删除1。","思路","总结上述过程我们可以得到以下结论：整个过程中我们保持两个队列中至少一个队列为空。当执行push时，如果两个队列均为空，我们约定将元素插入到queue2中；如果两个队列一个未空，另一个不为空，我们将元素插入到那个非空的队列中。当执行pop时，我们不断将非空的那个队列中的元素出队，直到该队列只含有一个元素，此时该元素即为出栈的元素，我们将该元素出队并返回。","我们通过一系列栈的push和pop操作来分析两个队列模拟一个栈的过程。表格的第一列表示queue1，第二列表示queue2。现在我们向栈中依次push进1,2,3三个数，由于初始时queue1和queue2都是空的，因此插入哪个queue都可以。我们不妨将1,2,3依次插入到queue2，此时两个queue中元素的情况如下图所示：","扩展","栈中的元素类型为int。","现在我们对栈执行pop，由于栈的后进先出特性可知出栈元素应该是3，然而直接操作queue2的话会从队头删除元素，也就是删除1。此时我们可以先把queue2中的1,2插入到queue1中，再从queue2中删除3。执行出栈后两个queue中元素的情况如下图所示：","用两个栈实现一个队列，完成队列的入队offer()和出队poll()操作。","用两个栈实现队列","用两个队列实现一个栈，完成栈的入栈push()和出栈pop()操作。","队列中的元素类型为int。","题目"],"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":["(p2","(push","//","0","0)","0;","1,","1是该入栈序列对应的一个出栈序列，但4,","2,","2就不可能是该入栈序列的出栈序列。两个序列的长度相等。","3,","4,","5,","5是某栈的入栈顺序，序列4,","=","==","boolean","false;","int","ispoporder(int[]","new","null","p1","p2","pop","pop)","pop.length","public","push,int[]","push.length","return","stack","stack<>();","{","||","使用一个辅助栈stack。如果出栈序列中的当前元素刚好是栈顶元素，那么直接弹出。否则，我们把入栈序列中还没有入栈的数字压入stack，直到把下一个需要出栈的元素压入栈为止。如果入栈序列中所有的数字都入栈了仍然没有找到下一个需要出栈的数字，那么该序列不可能是一个出栈序列。","思路","指示入栈序列中的元素","指示出栈序列中的元素","栈的压入、弹出序列","输入两个整数序列，第一个序列表示栈的入栈顺序，请判断第二个序列是否可能为该栈的出栈顺序。假设压入栈的所有数字均不相等。例如序列1,","题目"],"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":["!=","(index","(int","(num","+",",hi);","//","0","0;","1)","1,","1;","1开始遍历数组中剩下的数，如果当前数比堆顶元素小，将堆顶元素出堆，同时将当前元素进堆。遍历完成后堆中保存的即是最小的k个数。","2,","3,","4。","5,","6,","7,","8]，则最小的k个数字是1,","=","==","@overrid","arraylist<>();","arraylist<>(pq);","comparator()","compare(integ","getleastknumbers(int[]","hi","index","int","integ","k","k)","list","lo","new","null","nums,","nums.length","nums.length)","o(n)","o(nlogk)","o1,","o1;","o2","o2)","partition(nums,","pq","priorityqueu","priorityqueue<>(new","public","result","result;","return","{","||","}","});","从“数组中出现次数超过一半的数字”中我们可以得到启发，我们同样可以用partition函数来解决这个问题。我们基于数组的第k个数字来进行调整，使得所有小于第k个数字的数都排在它的左边，所有大于第k个数字的数都排在它的右边。这样调整之后，位于数组左边的k个数字就是最小的k个数字（但是这k个数字不一定是排好序的）。","创建一个大顶堆","否","基于partition函数的解法","基于堆或红黑树的解法","思路1","思路2","思路3","找出其中最小的k个数字。例如输入[4,","把数组进行排序，排在最前面的k个数就是最小的k个数。代码略。","时间复杂度","时间复杂度：o(nlogk)","时间复杂度：o(nlogn)","是","是否适用于海量数据","是否需要修改输入数组","最小的k个数","注意，java默认创建的是小顶堆。","由于是找最小的k个数，我们可以先用一个大顶堆保存数组的前k个数，之后从k","解法比较","输入n个整数，","题目"],"JianZhiOffer/String/":["string"],"JianZhiOffer/String/表示数值的字符串.html":["&&","'","')","'+'","'0'","(curr","(str","(str.charat(curr)","//","0)","0;","123\",\"3.1416\",\"","16\"都表示数值，但\"12e\",\"1a3.14\",\"1.2.3\",\"+","1e","5\",\"12e+5.4\"都不是。","9中的数字，isexponential()函数用来判断e(...)是不是合法的。","9的数位。如果是一个小数，则会遇到小数点。此外，如果是用科学计数法表示的数值，在整数或者小数的后面还有可能遇到e或e。函数scandigits()用来扫描0","=","==","boolean","curr","curr++;","false;","int","isnumeric(str","null","privat","public","return","scandigits(str);","str)","str.charat(curr)","str.length()","str.length())","{","||","书上c++代码的java改写。用变量curr指示当前字符。判断的过程是，首先看第一个字符是不是正负号。如果是，在字符串上移动一个字符，继续扫描剩余的字符串中0","思路","指示字符串str的当前字符","表示数值的字符串","请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，字符串\"+100\",\"5e2\",\"","题目"],"JianZhiOffer/String/打印从1到最大的n位数.html":["'0'","(curr","(i","(n",")","+","+=","...","...,","...，我们发现每一位上其实都是执行一个0","0,","001,","002,","009,","010,","011,","019,","0;","0}产生的。","1","1)","1;","2","2,","3","3一直到999。","4","5","9的全排列，因此我们可以用递归解决这个问题。","=","==","carry;","curr","int","n)","printtomaxdigits(int","public","sb.charat(i)","sb.length()","temp","void","{","{0,","上述代码虽然思路很简洁，但是代码比较繁琐。观察数字产生的规律：000,","但是当n非常大导致int和long都不能表示最大的n位数时，程序会产生溢出，因此我们需要尝试其他的方法。","先求出最大的n位数number，然后用一个循环打印出从1到number的每一个数。","在1前面会多打印出来一个空行，这是因为\"000\"也会打印出来，这个空行是由print(temp),","思路1","思路2","思路3","我们可以用字符串表示大数，进而我们需要在字符串上模拟整数的加1操作。","打印从1到最大的n位数","注意：上述代码的运行结果为：","输入数字n，按顺序打印出从1到最大的n位数。比如输入3，则打印出1,","题目"],"JianZhiOffer/String/第一个只出现一次的字符.html":["(int","(str","0)","0;","1;","=","==","char[256];","char[]","firstnotrepeatingchar(str","int","map","new","null","public","return","str)","str.length()","{","||","先遍历一遍字符串，用一个map统计每个字符的出现次数，接着再遍历一遍字符串，找到第一个出现次数为1的字符，并返回它的位置。","在一个字符串(0","思路","第一个只出现一次的字符","题目"],"JianZhiOffer/String/翻转字符串.html":["!=","\"","\"\";","\");","\",","(end","(int","(isfirst)","(s","(str","(words.length",")","+","//","//反转字符串","0","0)","0;","1)","1;","=","==","==0",">=","boolean","end","end));","end+1;","false;","i\"。","int","isfirst","left","left;","leftrotatestring(str","n","n)","n);","new","null","privat","public","return","reverse(reverse(left)","reverse(right));","reverse(str","reverse(str);","reverse(temp.substring(start));","reverse(temp.substring(start,","reversesentence(str","right","s)","s,","s.length()","s.length())","s.substring(0,","s.substring(n);","sb","sb.append(\"","sb.append(word);","sb.append(words[i]);","sb.tostring();","start","start);","str)","str.length()","str.split(\"","str;","string","string[]","stringbuild","stringbuilder();","stringbuilder(s).reverse().tostring();","student\"，则输出\"student.","temp","temp.indexof(\"","true;","word","word);","words.length","words[i]);","{","||","}","先反转字符串的前n个字符，再反转字符串的后面部分，再反转整个字符串，即可得到字符串左旋转n位的结果。","先对整个句子作一个翻转，再依次将句子中的每个单词作一个翻转，即得到结果。","先将句子划分成一个个单词，然后从后向前构造出结果。注意，如果原先的句子中没有单词，则直接返回原先的句子即可。","反转字符串","取字符串的前n位作为子串left，取余下的部分作为子串right，将left和right进行拼接即可。","左旋转字符串。字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的末尾。请定义一个函数实现字符串的左旋转操作。例如输入字符串\"abcdefg\"和数字2，该函数将返回左旋转两位得到的结果\"cdefgab\"。","思路1","思路2","扩展","指示当前单词是不是要构造的第一个单词","翻转字符串","翻转整个句子，将结果保存到temp中","输入一个英文句子，翻转句子中单词的顺序，但单词内字符的顺序不变。为简单起见，标点符号和普通字母一样处理。例如输入字符串\"i","题目"],"JianZhiOffer/String/替换空格.html":["\"\";","\"%20\");","\",","&&","(int","(str","0","0)","0;","=","==","happy.则经过替换之后的字符串为we%20are%20happy。","int","null","p1","public","replacespace(stringbuild","return","str)","str.length()","str.tostring().replaceall(\"","string","totalblank","{","||","}","容易想到的做法是每遇到一个空格，将其替换为\"%20\"，由于是把1个字符替换为2个字符，所以其后所有的字符都需要向后移动2位，效率不高。可以先求出原字符串中空格的总数，据此计算出替换后的字符串的新的长度，利用两个指针p1和p2，p1指示旧的字符串的末尾，p2指示新的字符串的末尾，从后向前进行替换。","思路1","思路2","替换空格","直接使用java的库函数replaceall()。","请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为we","题目"],"JianZhiOffer/String/字符串的排列.html":["(begin","(curr","(int","(str","0)","0,","0;","=","==","acb,","arraylist<>();","b,","bac,","bca,","begin,","begin;","boolean[]","boolean[str.length()],","cab和cba。","ch","char[]","char[str.length()],","chs,","chs.length)","curr,","c所能排列出来的所有字符串abc,","dfs(str,","dfs(string","helper(char[]","helper(chs,","int","list","new","null","permutation(str","privat","public","result","result)","result);","result.add(string.valueof(chs));","result.add(string.valueof(selected));","result;","return","selected,","str)","str,","str.length()","str.length())","str.tochararray();","vis,","void","{","||","}","书上的思路。求字符串的排列可以分成两步：首先求所有可能出现在第一个位置的字符，即把第一个字符和后面的字符依次交换（也可以和它自己交换）；第二步固定第一个字符，求后面所有字符的排列。这个时候仍把后面的所有字符分成两部分，后面字符的第一个字符以及这个字符之后的所有字符，然后把第一个字符逐一和它后面的字符交换。这是一个递归的过程。为了方便交换，我们在代码中将字符串转换为字符数组。","回溯法。","字符串的排列","思路1","思路2","输入一个字符串,按字典序打印出该字符串中字符的所有排列。例如输入字符串abc,则打印出由字符a,","题目"],"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":["&&","'#';","(int","//","0","0)","0;","0：ascii码为i的字符出现了一次，第一次出现的位置为occurrence[i]","1，表示所有的字符都还未出现过。之后每次insert一个字符时，设当前字符的ascii码为i，如果当前字符还未出现过，则将当前字符在字符流中的下标index赋给occurrence[i]；如果当前字符已经出现过，则我们就不需要考虑这个字符了，约定把","1：ascii码为i的字符还未出现过","2","2;","2赋给occurrence[i]。在函数firstappearingonce()中，我们遍历occurrence，并用ch和minindex记录第一个只出现一次的字符和它的下标。遍历结束返回ch即可。","2：ascii码为i的字符出现了多次","=",">=","c","char","characterstream","characterstream()","class","firstappearingonce()","index;","int","int[256];","int[]","integer.max_value;","minindex","new","occurr","occurrence;","occurrence[c]","occurrence[i]","privat","public","{","}","可以在类中使用一个stringbuilder记录字符流，每次insert时向sb中append。当需要找出字符流中第一个不重复的字符时，根据题目“第一个只出现一次的字符”中的方法，先遍历一遍sb，用一个map记录sb中每个字符的出现次数，然后再遍历一遍sb，根据map找到第一个不重复的字符。但是使用这种方法，当字符流中的字符很多时，每次调用firstappearingonce()找当前字符流中第一个不重复的字符时都要遍历一遍字符流，那么时间开销会很大。更好的做法是用一个数组occurrence记录当前字符流中各个字符的出现情况，occurrence的大小为256。初始时，occurrence中的每个元素置为","如果当前字符已经出现过，将occurrence[c]赋为","字符流中字符的个数","字符流中第一个只出现一次的字符","思路","总结occurrence[i]各个值的含义如下：","记录字符流中每个字符的出现情况","请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符\"go\"时，第一个只出现一次的字符是'g'；当从该字符流中读出前6个字符\"google\"时，第一个只出现一次的字符是'l'。","题目"],"JianZhiOffer/Tree/":["tree"],"JianZhiOffer/Tree/从上到下打印二叉树.html":["!=","!stack2.isempty())","(!queue.isempty())","(!stack1.isempty()","(!stack1.isempty())","(!stack2.isempty())","(curr","(int","(node.left","(node.right","(root","//","0","0)","0;","1",":","=","==","arraylist<>();","curr","curr;","int","levelorder(treenod","linkedlist<>();","list","list>","new","node","null)","print(treenod","privat","public","queue","queue.offer(root);","queue.size();","result","result.add(temp);","result;","return","return;","root)","size","stack","stack1","stack1.pop();","stack1.push(node.left);","stack1.push(node.right);","stack1.push(root);","stack2","stack2.pop();","stack2.push(node.left);","stack2.push(node.right);","stack<>();","temp","temp.add(node.val);","treenod","void","{","||","}","二叉树的层次遍历。","从上到下打印二叉树","从上往下打印出二叉树的每个节点，同层节点从左至右打印。","保存偶数层的节点","保存奇数层的节点","当前是偶数层","当前是奇数层;","思路","扩展","按之字形顺序打印二叉树。实现一个函数按照之字形顺序打印二叉树，即第一层按照从左向右的顺序打印，第二层按照从右向左的顺序进行打印，第三层再按照从左向右的顺序进行打印，以此类推。","按之字形顺序打印二叉树需要两个栈。我们在打印某一行节点的时候，把下一层的节点保存到相应的栈里。如果当前打印的是奇数层，由于奇数层是从左往右打印，其下一层需要从右往左打印，根据栈后进先出的特性，我们在保存下一层节点的时候应该先保存左子节点，再保存右子节点。同理，如果当前打印的是偶数层，则保存下一层节点的时候先保存右子节点，再保存左子节点。","由于下一层是偶数层需要从右往左打印，因此先加入左子节点，再加入右子节点","由于下一层是奇数层需要从左往右打印，因此先加入右子节点，再加入左子节点","题目"],"JianZhiOffer/Tree/对称的二叉树.html":["!=","&&","(left","(left.val","(root","==","boolean","false;","helper(left.left,","helper(left.right,","helper(root.left,","helper(treenod","issymmetrical(treenod","left,","null","null)","privat","public","return","right","right)","right.left);","right.right)","right.val)","root)","root.right);","treenod","true;","{","||","}","实现一个函数，判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。","对称的二叉树","思路","见代码。","题目"],"JianZhiOffer/Tree/二叉树的镜像.html":["&&","(root","(root.left","/","10","11","5","6","7","8","9","=","==","\\","mirror(root.left);","mirror(root.right);","mirror(treenod","null","null)","public","return;","root)","root.left","root.left;","root.right","root.right;","temp","temp;","treenod","void","{","}","二叉树的镜像","前序遍历该树，对每个非叶节点交换其左右两个子节点。","思路","输入一棵二叉树，输出它的镜像。例如输入二叉树如下：","输出：","题目"],"JianZhiOffer/Tree/二叉树的深度.html":["(diff","(root","+","0;","1)","1;","=","==",">","boolean","depth(root.right))","depth(treenod","diff","false;","int","isbalanc","isbalanced;","isbalancedtree(treenod","isbalancedtreecore(root);","isbalancedtreecore(root.left);","isbalancedtreecore(root.right);","isbalancedtreecore(treenod","left","math.abs(left","math.max(depth(root.left),","math.max(left,","null)","privat","public","return","right","right)","right);","root)","true;","{","}","二叉树的深度","后序遍历该二叉树，求出当前节点左子树的深度left和右子树的深度right，判断left和right的差的绝对值是否大于1，如果是，说明该二叉树不是平衡二叉树。下面的代码中函数isbalanced()返回当前节点的深度。","平衡二叉树。输入一棵二叉树，判断该二叉树是否是平衡二叉树。一个二叉树是平衡二叉树指的是树中所有节点的左子树的深度和右子树的深度差的绝对值不超过1。","当根节点为空时，返回0；否则，返回左子树的深度和右子树的深度的最大值并加1。","思路","扩展","输入一棵二叉树，求该树的深度。从根结点到叶结点依次经过的结点（含根、叶结点）形成树的一条路径，最长的路径的长度为树的深度。","题目"],"JianZhiOffer/Tree/二叉树的下一个节点.html":["!=","&&","(curr","(node","(node.right","(parent","//","=","==","class","curr","curr.left;","curr;","getnextnode(nod","int","left;","next","next;","node","node)","node.parent;","node.right;","node;","null","null)","null;","parent","parent.parent;","parent.right)","parent;","public","return","right;","val;","{","}","二叉树的下一个节点","保存当前节点的中序遍历的下一个节点","思路","指向当前节点的父节点","由于中序遍历是从左子树开始的，因此为了找出当前节点中序遍历的下一个节点，我们只需要在当前节点的右子树和父节点中寻找即可。如果当前节点的右子树不为空，则当前节点的下一个节点是右子树中最左边的那个节点；如果当前节点的右子树为空，则我们需要从当前节点的父节点中寻找当前节点的下一个节点。如果当前节点是其父节点的左子树，则当前节点的下一个节点就是其父节点；如果当前节点是父节点的右子树，则我们需要继续从当前的父节点的父节点中寻找，直到找到当前节点是其父节点的左子树，或者父子树为空，即当前节点没有下一个节点。","给定一个二叉树和其中的一个节点，找到中序遍历的下一个节点。树中的节点除了有两个分别指向左右子节点的指针以外，还有一个指向父节点的指针。","题目"],"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":["&&","(root","(root.left","/","//注意，这里不能直接写成\"result.add(path)\"，那样相当于把path的引用传过去了，然而我们在下面遍历的过程中会改变path中的值，这样会导致之前加入result中的路径的内容也会跟着改变。应该用一个新的arraylist来承载path的值。","0)","0时，将path加到res中。在函数回退的时候记得在path中删除当前节点。","1);","10","12","12]]","4","5","5,","7","7],","=","==","[10,","[[10,","\\","arraylist<>(),","arraylist<>();","arraylist<>(path));","findpath(treenod","helper(root,","helper(root.left,","helper(root.right,","helper(treenod","int","list","list>","new","null","null)","path,","path.add(root.val);","path.remove(path.size()","privat","public","result","result)","result);","result.add(new","result;","return","return;","root,","root.right","root.val;","root.val，同时将当前节点加入到path中。当遍历到叶节点并且target","target","target)","target,","void","{","}","二叉树中和为某一值的路径","思路","由于前序遍历是先从根节点开始访问，因此采用前序遍历处理。每遍历一个节点将当前节点的值进行累加，即target","输入一颗二叉树的根节点和一个整数，打印出二叉树中所有路径和为target的所有路径。路径和为路径中所有节点的和，路径定义为从根结点向下到某个叶结点所经过的结点形成的一个序列。例如给定二叉树如下：","返回该二叉树中所有路径和为22的路径，则返回结果应该为：","题目"],"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":["(k","(root","+","/","//","0;","1)","1);","2","3","4","5","6","7","8","=","==",">","\\","if(root==null)","index;","int","k","k)","k)这种方式调用，则kthnodecore()应相应修改为：","kthnode(treenod","kthnodecore(root.right,","kthnodecore(treenod","k，说明当前节点就是第k小的节点；如果t","k，说明第k小的节点在根节点的左子树中，因此需要继续在左子树中寻找第k小的节点；如果t","null","null)","null;","privat","public","result;","return","root){","root,","root,int","root;","size(root.left)+size(root.right)+1;","size(root.left);","size(treenod","t","t)","treenod","{","||","}","《algorithm》中的方法。要求的是树中第k小的节点，假设我们把树中的节点按节点值从小到大排列并从0开始编号，首先求出根节点左子树的节点数t，如果t","二叉搜索树的第k大节点","如果以kthnodecore(root,","思路1","思路2","指示当前中序遍历到的节点的编号，从1开始","按节点数值大小排序，第三个的节点应该是4。","由于二叉搜索树的中序遍历序列是递增的，因此模拟一遍二叉搜索树的中序遍历，每次记录当前节点的编号，当前节点的编号等于k时即找到了第k大的节点。","第k大的节点","给定一棵二叉搜索树，请找出其中第k大的节点，k从1开始计数。例如给定如下二叉搜索树：","返回root中的节点总数","题目"],"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":["(;","(int","(lo","(num","/","//","//左子树序列和右子树序列的分界点，表示右子树序列的第一个元素，同时也表示左子树序列中元素的个数","0)","0,","1);","10","10,","11","11,","4,","5","5]，由于没有哪棵二叉搜索树的后序遍历结果是这个序列，因此返回false。","6","6,","7","7,","8","8]，返回true，因为这个整数序列是下图所示二叉搜索树的后序遍历结果。","9","9,","=","==",">","\\","boolean","break;","false;","hi)","hi，说明当前子数组中只有一个元素，直接返回tru","int","lo,","lo;","mid","mid;","null","nums)","nums,","nums.length","nums[hi];","privat","public","return","rootvalu","rootvalue)","special","true;","verifysequenceofbst(int[]","verifysequenceofbstcore(int[]","verifysequenceofbstcore(nums,","{","||","}","二叉搜索树的后序遍历序列","在二叉搜索树的后序遍历序列中，最后一个是根节点，在根节点前所有小于根节点的数构成根节点的左子树，所有大于根节点的数构成根节点的右子树。据此可以在原数组中划分出左子树序列和右子树序列，其中左子树序列中的所有数都比根节点的值小，右子树序列中所有数的值都比根节点的值大。如果在右子树序列中出现小于根节点值的数，说明该序列不是二叉搜索树的后序遍历结果，返回false。接着递归得在左子树序列和右子树序列中继续判断。","如果lo","如果输入数组是[7,","思路","根节点的值","输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。假设输入的数组的任意两个数字都互不相同。例如输入数组[5,","题目"],"JianZhiOffer/Tree/二叉搜索树与双向链表.html":["!=","&&","(prev","(root","/","//","10","12","14","16","4","46810121416null","6","8","=","==","\\","convert(treenod","convertcore(root);","convertcore(root.left);","convertcore(root.right);","convertcore(treenod","null","null)","null;","prev","prev.left","prev.left;","prev.right","prev;","privat","public","return","return;","root)","root.left","root;","treenod","void","{","}","二叉搜索树与双向链表","函数执行完后prev指向的是双向链表的尾节点","思路","由于需要转换成一个排序的双向链表，而二叉搜索树的中序遍历序列是排序的，因此可以采用中序遍历处理原二叉搜索树。处理时用一个变量prev保存中序遍历的前一个节点，在处理当前节点root时，建立当前节点和prev之间的双向链接关系即可。","转换后的结果为：","输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。例如对于如下的二叉搜索树：","题目"],"JianZhiOffer/Tree/树的子结构.html":["!=","&&","(!isfound)","(root1","(root1.val","(root2","/","//","0","1","2","3","4","5","572。和一题不同的是，这要求树b和树a中的某个子树完全相同。例如给定树a：","7","8","9","=","==","\\","boolean","false;","hassubtree(root1.left,","hassubtree(root1.right,","hassubtree(treenod","helper(root1,","helper(root1.left,","helper(root1.right,","helper(treenod","isfound","isfound;","leetcod","null","null)","null，也可以返回tru","null，借由上一条语句知root2","null，所以root1和root2的结构不相同，返回fals","null，说明root1和root2之前的结构完全相同，这时就算root1","privat","public","return","root1,","root1和root2同时访问到null才返回true，一个为null一个不为null或者两个节点的val值不相同都返回fals","root2","root2)","root2);","root2.left)","root2.right);","root2.val)","treenod","true;","{","||","}","上一题中假设在a中找到了和b的根节点的值相同的节点root后，只要求root所代表的子树中包含和b的结构完全一样的结构即可。而这里要求root所代表的子树和b完全一样，即root及其所有后继节点都要和b完全一样。两者的区别在helper()函数的不同。","可知b是a的子结构。","如果roo1","如果root2","思路","扩展","树b：","树的子结构","约定当root1和root2均为null，root2是root1的子结构，返回tru","输入两棵二叉树a，b，判断b是不是a的子结构。我们约定空树不是任意一个树的子结构。例如给定树a：","返回false。","返回true。而给定树a：","题目","首先在root1中找到和root2的根节点的值一样的节点，然后判断该节点所代表的子树是不是和root2具有相同的结构。"],"JianZhiOffer/Tree/序列化二叉树.html":["\"\";","(isfirst)","(root","(str","(val.equals(\"$\"))","+","/","//","0)","0;","1","2","3","4","5","6","=","==","\\","boolean","curr","deserialize(str","deserializecore(string[]","deserializecore(strs);","false;","int","isfirst","new","null","null)","null;","privat","public","return","root","root)","root,","root.left","root.right","root.val);","root;","sb","sb)","sb);","sb.append(\"$\");","sb.append(\",\"","sb.append(\",$\");","sb.append(root.val);","sb.tostring();","serialize(treenod","serializecore(root,","serializecore(root.left,","serializecore(root.right,","serializecore(treenod","str","str)","str.length()","str.split(\",\");","string","string[]","stringbuild","stringbuilder();","strs)","strs[curr++];","treenod","treenode(integer.parseint(val));","true;","val","void","{","||","}","例如给定如下的二叉树：","反序列化","实现两个函数，分别用来序列化和反序列化二叉树。","序列化","序列化二叉树","序列化结果为：1,2,4,$,3,5,$,$,6,$,$","思路","我们知道，如果给定一棵二叉树的前序遍历序列和中序遍历序列，我们可以从中构造出一棵二叉树。因此我们可以先把一棵二叉树序列化成一个前序遍历序列和一个中序遍历序列，然后在反序列化时通过这两个序列重构出原二叉树。但是这个思路有两个缺点，一是二叉树中不能有数值重复的节点，否则我们无法通过这种方法构造出原二叉树。二是只有当两个序列中的数据都读出后才能开始反序列化。如果两个序列是从一个流中读出来的，那么可能就需要等待很长的时间。实际上如果二叉树的序列化是从根节点开始的话，那么相应的反序列化在根节点的数值读出来后就可以开始了。因此我们可以根据前序遍历来序列化和反序列化二叉树。在序列化时，如果当前节点不为空，我们在字符串中加入当前节点的值；如果当前节点为空，我们在字符串中加入一个特殊字符，比如$。在反序列化时，我们每次从字符流中读入一个字符，如果当前字符不是$`，我们创建一个新节点，并继续构建该节点的左子树和右子树；否则，返回空。","指示序列化字符串中当前正在反序列的字符的下标","指示当前正在序列化的节点是不是第一个节点","题目"],"JianZhiOffer/Tree/重建二叉树.html":["(preorder","(rootinord","(startpreord","//","0","0)","0,","1);","1,","2,","3,","4,","5,","6,","6]，则重建二叉树并返回。","7,","8,","8]和中序遍历序列[4,","=","==",">","endinorder)","endpreord","endpreorder,","helper(int[]","helper(preorder,","inord","inorder)","inorder,","inorder.length","int","int[]","new","null","null;","preorder,","preorder.length","preorder[startpreorder];","privat","public","reconstructbinarytree(int[]","return","root","rootinord","rootvalu","startinord","startinorder,","startinorder;","startpreorder,","treenod","treenode(rootvalue);","{","||","}","先根据前序序列的第一个数字创建根节点，接下来在中序序列中找到根节点的位置，这样就能确定左右子树节点的数量，然后在新的前序序列和中序序列中递归地构建其左子树和右子树。前序序列用startpreorder和endpreorder两个变量确定，中序序列可以用startinorder和endinorder两个变量确定。","当前节点在中序序列中的位置","思路","输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列[1,","重建二叉树","题目"],"LeetCode/":["leetcod"],"LeetCode/1. Two Sum.html":["(int","(lo","(num","+","0)","0;","1.","11,","15],","1;","1].","2","7","7,","9,","=","==","[0,","[2,","add","array","assum","each","element","exactli","example:","given","hashmap<>();","hi","indic","input","int","int[]","int[]{};","integers,","lo","map","new","null","num","number","nums,","nums.length","nums[0]","nums[1]","nums[i]是否在map中，如果在，我们就找到了这两个数，如果不在，我们把当前元素和它的下标值加入map。这里也可以将数组排序后用双指针法做，但是由于题目要求返回两个数的下标，排序后会打乱元素的下标，因此这里用这个方法不合适。","on","public","return","same","solution,","specif","such","sum","target","target)","target.","twice.","two","twosum(int[]","up","us","{","||","从头开始遍历数组，同时用一个map保存遍历过的元素和它的下标。每遍历一个元素时，我们先判断target","如果不要求返回两个数在数组中的下标而是两个数的值的话可以用双指针法做。先对数组进行排序，用lo和hi两个指针分别指向数组的开头和结尾，当两个指针指向的元素的和等于target时，即找到了这两个数；当和小于target时，我们向后移动lo以增大和；当和大于target时我们向前移动hi以减小和。","思路","扩展","题目"],"LeetCode/2. Add Two Numbers.html":["!=","%","(2","(5","(carri","(l1","(p1","(p2","+","/","//","0","0;","1)","10);","10;","10的节点并将其链接到新链表中，同时需要设置进位carry为1。由于两个链表的长度可能不同，因此遍历两个链表的指针可能不是同时到达各自链表的末尾。若p","10，创建一个值为sum","1，说明在最高位上发生了进位，此时需要再额外创建一个值为1的节点并将其链接到新链表中。","2.","3)","342","4","4)","465","6","7","8","807.",":","=","==",">","?","add","addtwonumbers(listnod","assum","carri","carry;","contain","curr","curr.next","curr.next;","digit","digit.","dummyhead","dummyhead.next;","dummyhead;","each","empti","example:","except","explanation:","given","input:","int","integers.","itself.","l1,","l1;","l2","l2)","l2;","lead","link","list","list.","listnod","listnode(0);","listnode(1);","listnode(sum","neg","new","node","non","null","null)","null,","null;","null，即一个链表已经遍历到了末尾，另一个链表还没有遍历末尾，此时需要把p表示的数当做0再和q表示的数相加。此外，如果两个链表都已经遍历完了但是carri","number","order","output:","p1","p1.next;","p1.val;","p2","p2.next;","p2.val;","public","q","repres","return","revers","singl","store","sum","two","x","y","zero,","{","||","}","创建一个新的链表用来保存相加后的结果。同时遍历两个链表，将两个链表当前节点的值相加得到sum，如果sum","思路","新链表的虚拟头结点","题目"],"LeetCode/3. Longest Substring Without Repeating Characters.html":["\"abc\",","\"abcabcbb\"","\"b\",","\"bbbbb\"","\"pwke\"","\"pwwkew\"","\"wke\",","(i","(j","(s","+","0)","0,","0;","1","1);","1.","1:","2:","3","3.","3:","=","==","answer","charact","characters.","exampl","explanation:","find","given","hashmap<>();","hashset<>();","i)","input:","int","i，我们对所有i重复执行上述步骤以求得最后的结果。","j","j)中的所有字符，然后我们向右移动j，如果s[j]不在set中，我们继续移动j，直到s[j]在set中，此时，我们找到了以为起点的子串的最大长度，即j","j)指示的窗口中的某个字符重复时，假设这个字符的下标为j'，我们没有必要一点点地去移动i，我们只需要将i移动到j'的下一个位置nextpos即可。我们使用一个map记录字符串中每个字符的下一个字符的位置。","j)表示窗口。我们用一个set保存当前窗口[i,","j++;","length","lengthoflongestsubstring(str","longest","map","map.put(s.charat(j),","math.max(result,","new","nextpos;","note","null","output:","public","repeat","result","result;","return","s)","s.length","s.length()","set","string,","subsequ","substr","substring,","substring.","without","{","||","}","思路1","思路2","思路3","我们可以对思路2进一步进行优化。当s[j]和[i,","时间复杂度：o(2n)（在最坏情况下，字符串中的每个字符都要分别被i和j访问一次）","时间复杂度：o(n)","时间复杂度：o(n^3)","滑动窗口。使用[i,","穷举所有的子串，分别判断每个子串中是否含有重复字符，记录不含重复字符的最长子串的长度。代码略。","题目"],"LeetCode/5. Longest Palindromic Substring.html":["\"\";","\"aba\"","\"bab\"","\"babad\"","\"bb\"","\"cbbd\"","&&","(int","(len","(lo","(s",")","+","...,","/","//","0","0)","0;","1)","1);","1)是回文子串，dp[i,","1,","1000.","1:","1;","1个这样的中心。为什么是2n","1呢？这是因为除了每个字符可以作为一个中心外，每两个字符中间的位置也可以作为中心，比如\"abba\"，b两个b之间可以作为一个中心。我们遍历每一个中心并对其进行扩展，在得到一个回文子串时检查它的长度是否是最大的。","2:","2;","5.","=","==",">=","answer.","assum","boolean[][]","boolean[n][n];","dp","dp[i][j]表示s(i,","dp。dp[i,","end","exampl","expandaroundcenter(str","find","given","hi","hi)","i;","input:","int","j","j)是否可以构成一个回文子串。如果s(i)","j)构成的子串是否是回文的","j]为true。同时，当我们找到一个回文子串时，检查它的长度是否是最大的。","j]表示s(i,","len","length","lo,","longest","longestpalindrome(str","maximum","n","new","note:","null","output:","palindrom","privat","public","result","result.length()))","result;","return","s","s(j)并且s(i","s)","s,","s.","s.length()","s.length();","s.substring(i,","s.substring(start,","start","string","substr","valid","{","||","}","当前最长回文子串","思路1","思路2","我们不难发现一个回文子串是围绕着它的中心进行扩展的，对于一个长度为n的字符串，我们可以找到2n","时间复杂度：o(n^2)","最长回文子串的开始","最长回文子串的结尾","空间复杂度：o(1)","空间复杂度：o(n^2)","这里对于start和end值的取定不太好想，需要找几个例子算一下","题目"],"LeetCode/7. Reverse Integer.html":["!=","%","&&","(result","(x","*","+","/","0","0)","0;","10","10;","120","123","1:","1].","21","2147483647，因此在进行result","2147483648","231","2:","32","321","3:","7))","7.","=","==",">","[−231,","assum","bit","deal","digit","digit可能会发生溢出，由于32位int类型的范围是","digit更新结果。但是要注意，result","digit运算前也应该先判断是否可能发生溢出。可以参考下面这种写法。","environ","exampl","function","given","input:","int","integ","integer,","integer.","integer.max_valu","note:","output:","overflows.","problem,","public","purpos","range:","result","return","revers","reverse(int","sign","store","within","x","x)","{","||","−","思路","每次取出x最后一位数digit，用result","题目"]},"length":88},"tokenStore":{"root":{"0":{"0":{"0":{"0":{"0":{"0":{"1":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{}},"docs":{}},"docs":{}},"1":{"1":{"1":{"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"0":{"0":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"0":{"0":{"0":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}},"2":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}},"9":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}},"docs":{}},"1":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}},"1":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}},"9":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}},"docs":{}},"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.029850746268656716},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.036585365853658534},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.02127659574468085},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.013392857142857142},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.027906976744186046},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.03816793893129771},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0375},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.02127659574468085},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.058823529411764705},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.0297029702970297},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.03508771929824561},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.047619047619047616},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.028985507246376812},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02564102564102564},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0425531914893617},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.022099447513812154},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01834862385321101}},"i":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.014423076923076924},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.023255813953488372},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.022900763358778626},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.037037037037037035},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.012345679012345678},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}},"的":{"docs":{},"格":{"docs":{},"子":{"docs":{},"开":{"docs":{},"始":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"它":{"docs":{},"每":{"docs":{},"次":{"docs":{},"可":{"docs":{},"以":{"docs":{},"向":{"docs":{},"左":{"docs":{},"、":{"docs":{},"右":{"docs":{},"、":{"docs":{},"上":{"docs":{},"、":{"docs":{},"下":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"格":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"能":{"docs":{},"进":{"docs":{},"入":{"docs":{},"行":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"和":{"docs":{},"列":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"的":{"docs":{},"数":{"docs":{},"位":{"docs":{},"之":{"docs":{},"和":{"docs":{},"大":{"docs":{},"于":{"docs":{},"k":{"docs":{},"的":{"docs":{},"格":{"docs":{},"子":{"docs":{},"。":{"docs":{},"请":{"docs":{},"问":{"docs":{},"问":{"docs":{},"该":{"docs":{},"机":{"docs":{},"器":{"docs":{},"人":{"docs":{},"能":{"docs":{},"够":{"docs":{},"到":{"docs":{},"达":{"docs":{},"多":{"docs":{},"少":{"docs":{},"个":{"docs":{},"格":{"docs":{},"子":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"取":{"docs":{},"模":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"和":{"docs":{},"之":{"docs":{},"前":{"docs":{},"一":{"docs":{},"样":{"docs":{},"；":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}},".":{"0":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}}},"7":{"5":{"docs":{},"f":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"docs":{}},"docs":{}},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.029850746268656716},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024390243902439025},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567}}},"}":{"docs":{},";":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"。":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}}}}},"：":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{},"码":{"docs":{},"为":{"docs":{},"i":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"为":{"docs":{},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"将":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"加":{"docs":{},"到":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"中":{"docs":{},"。":{"docs":{},"在":{"docs":{},"函":{"docs":{},"数":{"docs":{},"回":{"docs":{},"退":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"记":{"docs":{},"得":{"docs":{},"在":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"中":{"docs":{},"删":{"docs":{},"除":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},".":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}},"1":{"0":{"0":{"0":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"掩":{"docs":{},"码":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"1":{"0":{"0":{"1":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.045871559633027525}},"。":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}},";":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.029850746268656716},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}},",":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}},")":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"链":{"docs":{},"接":{"docs":{},"到":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"设":{"docs":{},"置":{"docs":{},"进":{"docs":{},"位":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"y":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"是":{"docs":{},"同":{"docs":{},"时":{"docs":{},"到":{"docs":{},"达":{"docs":{},"各":{"docs":{},"自":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"。":{"docs":{},"若":{"docs":{},"p":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"为":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}}}}}}}},"1":{"0":{"1":{"1":{"0":{"0":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"1":{"1":{"1":{"1":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"以":{"docs":{},"下":{"docs":{},"方":{"docs":{},"法":{"docs":{},"得":{"docs":{},"到":{"docs":{},"：":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"docs":{},"%":{"1":{"6":{"docs":{},"=":{"3":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"docs":{}}},"docs":{}},"docs":{}},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"除":{"docs":{},"留":{"docs":{},"余":{"docs":{},"数":{"docs":{},"法":{"docs":{},"得":{"docs":{},"到":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}},"8":{"docs":{},"%":{"1":{"6":{"docs":{},"=":{"6":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"，":{"docs":{},"插":{"docs":{},"在":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"docs":{}}},"docs":{}},"docs":{}},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"除":{"docs":{},"留":{"docs":{},"余":{"docs":{},"数":{"docs":{},"法":{"docs":{},"得":{"docs":{},"到":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}}}}}}}}}}}},"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}},",":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}},"]":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}}}},"2":{"0":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}},"3":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01834862385321101}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},"\"":{"docs":{},",":{"docs":{},"\"":{"3":{"docs":{},".":{"1":{"4":{"1":{"6":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}},"7":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}},")":{"docs":{},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}}}},"8":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"~":{"1":{"2":{"7":{"docs":{},"。":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},",":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083}}},"]":{"docs":{},"]":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}},"3":{"docs":{},",":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083}}}},"4":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}},",":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083}}}},"5":{"docs":{},"]":{"docs":{},"和":{"docs":{},"数":{"docs":{},"字":{"1":{"5":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"[":{"4":{"docs":{},",":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}}},"docs":{}}}}}},"docs":{}},"docs":{}}}},",":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"结":{"docs":{},"果":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"3":{"docs":{},"个":{"docs":{},"连":{"docs":{},"续":{"docs":{},"序":{"docs":{},"列":{"1":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}},"docs":{}}}}}}},"docs":{}}}}}}}}},",":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083}}}},"6":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"默":{"docs":{},"认":{"docs":{},"创":{"docs":{},"建":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}},"扩":{"docs":{},"容":{"docs":{},"之":{"docs":{},"后":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"。":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"；":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},",":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}},"\"":{"docs":{},"都":{"docs":{},"表":{"docs":{},"示":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"但":{"docs":{},"\"":{"1":{"2":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},"a":{"3":{"docs":{},".":{"1":{"4":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"+":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"7":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0073145245559038665},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.01639344262295082},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.01875},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.016736401673640166},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.009302325581395349},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.03816793893129771},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0392156862745098},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.01639344262295082},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.017241379310344827},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077}}},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"旧":{"docs":{},"容":{"docs":{},"量":{"docs":{},"的":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"当":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"为":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"当":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"此":{"docs":{},"外":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"在":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"已":{"docs":{},"经":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"的":{"docs":{},"格":{"docs":{},"子":{"docs":{},"不":{"docs":{},"能":{"docs":{},"重":{"docs":{},"复":{"docs":{},"进":{"docs":{},"入":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"访":{"docs":{},"问":{"docs":{},"数":{"docs":{},"组":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"。":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"，":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},",":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}}}}}},"]":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}},"[":{"docs":{},"p":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}}},"及":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"3":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"一":{"docs":{},"共":{"docs":{},"存":{"docs":{},"在":{"6":{"docs":{},"个":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"[":{"4":{"docs":{},",":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},".":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}},".":{"5":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}},"7":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"8":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.012779552715654952},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":3.333333333333333},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}},",":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.04477611940298507},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.036585365853658534},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.013953488372093023},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.025},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.02127659574468085},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.019801980198019802},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02564102564102564},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"次":{"docs":{},"数":{"docs":{},"为":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"即":{"docs":{},"为":{"docs":{},"该":{"docs":{},"数":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"对":{"docs":{},"于":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"还":{"docs":{},"未":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"。":{"docs":{},"之":{"docs":{},"后":{"docs":{},"每":{"docs":{},"次":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"时":{"docs":{},"，":{"docs":{},"设":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{},"码":{"docs":{},"为":{"docs":{},"i":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"还":{"docs":{},"未":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"赋":{"docs":{},"给":{"docs":{},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"已":{"docs":{},"经":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"，":{"docs":{},"则":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"了":{"docs":{},"，":{"docs":{},"约":{"docs":{},"定":{"docs":{},"把":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"说":{"docs":{},"明":{"docs":{},"在":{"docs":{},"最":{"docs":{},"高":{"docs":{},"位":{"docs":{},"上":{"docs":{},"发":{"docs":{},"生":{"docs":{},"了":{"docs":{},"进":{"docs":{},"位":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"再":{"docs":{},"额":{"docs":{},"外":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"为":{"1":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"链":{"docs":{},"接":{"docs":{},"到":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"。":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}},"之":{"docs":{},"后":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"为":{"docs":{},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"求":{"docs":{},"出":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"之":{"docs":{},"后":{"docs":{},"还":{"docs":{},"要":{"docs":{},"求":{"docs":{},"其":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"。":{"docs":{},"在":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"不":{"docs":{},"为":{"docs":{},"负":{"docs":{},"数":{"docs":{},"的":{"docs":{},"前":{"docs":{},"提":{"docs":{},"下":{"docs":{},"我":{"docs":{},"们":{"docs":{},"调":{"docs":{},"用":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"来":{"docs":{},"求":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"的":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"次":{"docs":{},"方":{"docs":{},"。":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"连":{"docs":{},"乘":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"去":{"docs":{},"求":{"docs":{},"，":{"docs":{},"但":{"docs":{},"那":{"docs":{},"不":{"docs":{},"是":{"docs":{},"最":{"docs":{},"优":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"我":{"docs":{},"们":{"docs":{},"采":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"去":{"docs":{},"求":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"2":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"}":{"docs":{},";":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}}},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"的":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"数":{"docs":{},"和":{"docs":{},"跳":{"docs":{},"上":{"docs":{},"n":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625}}}}}}}}}},"跳":{"1":{"docs":{},"次":{"docs":{},"，":{"1":{"docs":{},"次":{"docs":{},"跳":{"1":{"docs":{},"级":{"docs":{},"得":{"docs":{},"到":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"n":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"当":{"docs":{},"s":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"s":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},",":{"docs":{},"p":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"*":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"s":{"docs":{},"和":{"docs":{},"p":{"docs":{},"也":{"docs":{},"是":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"比":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"小":{"docs":{},"，":{"docs":{},"将":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"出":{"docs":{},"堆":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"堆":{"docs":{},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"成":{"docs":{},"后":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"即":{"docs":{},"是":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"再":{"docs":{},"一":{"docs":{},"起":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"当":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"指":{"docs":{},"示":{"docs":{},"的":{"docs":{},"刚":{"docs":{},"好":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"中":{"docs":{},"心":{"docs":{},"。":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"是":{"2":{"docs":{},"n":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}},"docs":{}}}}}}}}}}}},"是":{"docs":{},"该":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"但":{"4":{"docs":{},",":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806}}}},"docs":{}}}}}}}}}}}}}}}}}},"e":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}},"：":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{},"码":{"docs":{},"为":{"docs":{},"i":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"还":{"docs":{},"未":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}},":":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}},"呢":{"docs":{},"？":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"除":{"docs":{},"了":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"中":{"docs":{},"心":{"docs":{},"外":{"docs":{},"，":{"docs":{},"每":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"中":{"docs":{},"心":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"b":{"docs":{},"b":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"b":{"docs":{},"两":{"docs":{},"个":{"docs":{},"b":{"docs":{},"之":{"docs":{},"间":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"中":{"docs":{},"心":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"中":{"docs":{},"心":{"docs":{},"并":{"docs":{},"对":{"docs":{},"其":{"docs":{},"进":{"docs":{},"行":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"，":{"docs":{},"在":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"时":{"docs":{},"检":{"docs":{},"查":{"docs":{},"它":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"。":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"0":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"1":{"4":{"7":{"4":{"8":{"3":{"6":{"4":{"7":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}}}}}}}}}}}},"8":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}},"2":{"2":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}}}},"4":{"9":{"0":{"6":{"9":{"2":{"4":{"6":{"7":{"6":{"3":{"1":{"8":{"2":{"3":{"9":{"7":{"docs":{},"l":{"docs":{},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"3":{"1":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}},"docs":{}},"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0068143100511073255},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.006269592476489028},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.01639344262295082},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02510460251046025},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077}}},".":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":2.5}}},"，":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"于":{"docs":{},"m":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"3":{"docs":{},"和":{"5":{"docs":{},"同":{"docs":{},"理":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"从":{"2":{"docs":{},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}}},"docs":{}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}},"则":{"docs":{},"找":{"docs":{},"到":{"docs":{},"该":{"docs":{},"数":{"docs":{},"；":{"docs":{},"当":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"值":{"docs":{},"小":{"docs":{},"于":{"docs":{},"n":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}}}}}}}}},"即":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"最":{"docs":{},"多":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}},"说":{"docs":{},"明":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"在":{"docs":{},"右":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"在":{"docs":{},"右":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"找":{"docs":{},"；":{"docs":{},"当":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"docs":{},"n":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"在":{"docs":{},"左":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"找":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.04186046511627907},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.027777777777777776},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.03508771929824561},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608}}},"。":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}},")":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}},"，":{"docs":{},"而":{"2":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}},"docs":{}}},";":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625}}}},"只":{"docs":{},"能":{"docs":{},"得":{"docs":{},"到":{"2":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"此":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"还":{"docs":{},"要":{"docs":{},"再":{"docs":{},"乘":{"docs":{},"一":{"docs":{},"个":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"(":{"2":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}},"docs":{}}}}}}},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}},"，":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}},"docs":{},"由":{"docs":{},"于":{"2":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"5":{"docs":{},"次":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"输":{"docs":{},"出":{"2":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"n":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}},"docs":{}}},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"为":{"docs":{},"[":{"6":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}}},"docs":{}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625}}}},"中":{"1":{"docs":{},"和":{"2":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"相":{"docs":{},"互":{"docs":{},"抵":{"docs":{},"消":{"docs":{},"，":{"3":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}},"docs":{}}}}}}}}}}}},"docs":{}}},"3":{"docs":{},"和":{"2":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"相":{"docs":{},"互":{"docs":{},"抵":{"docs":{},"消":{"docs":{},"，":{"2":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}},"docs":{}}}}}}}}}}}},"docs":{}}},"docs":{}},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"一":{"docs":{},"定":{"docs":{},"存":{"docs":{},"在":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}},"数":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}},"总":{"docs":{},"是":{"docs":{},"存":{"docs":{},"在":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"9":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}},"}":{"docs":{},"为":{"docs":{},"{":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}},"docs":{}}}},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"的":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"数":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"即":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625}}}}}}}}}}}}}}},"跳":{"1":{"docs":{},"次":{"docs":{},"，":{"1":{"docs":{},"次":{"docs":{},"跳":{"2":{"docs":{},"级":{"docs":{},"得":{"docs":{},"到":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"跳":{"docs":{},"上":{"docs":{},"n":{"docs":{},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"的":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"数":{"docs":{},"等":{"docs":{},"于":{"docs":{},"跳":{"docs":{},"上":{"docs":{},"n":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}},"b":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}},"就":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"该":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{},"两":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}},"赋":{"docs":{},"给":{"docs":{},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"。":{"docs":{},"在":{"docs":{},"函":{"docs":{},"数":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"中":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"，":{"docs":{},"并":{"docs":{},"用":{"docs":{},"c":{"docs":{},"h":{"docs":{},"和":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"记":{"docs":{},"录":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"和":{"docs":{},"它":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"束":{"docs":{},"返":{"docs":{},"回":{"docs":{},"c":{"docs":{},"h":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{},"码":{"docs":{},"为":{"docs":{},"i":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"多":{"docs":{},"次":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}},":":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}},"3":{"1":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0068143100511073255}},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"奇":{"docs":{},"素":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"当":{"docs":{},"出":{"docs":{},"现":{"docs":{},"乘":{"docs":{},"法":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"，":{"docs":{},"信":{"docs":{},"息":{"docs":{},"就":{"docs":{},"会":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"与":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"1":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01834862385321101}},"}":{"docs":{},"，":{"docs":{},"则":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"这":{"docs":{},"三":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"能":{"docs":{},"排":{"docs":{},"成":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"数":{"docs":{},"字":{"docs":{},"为":{"3":{"2":{"1":{"3":{"2":{"3":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01834862385321101}},"：":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},",":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}}}},"4":{"2":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}},"docs":{}},"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567}},".":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":1.680851063829787}}},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"；":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.0967741935483871},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.009302325581395349},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.05},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.05263157894736842},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608}}},"和":{"5":{"docs":{},"的":{"docs":{},"数":{"docs":{},"称":{"docs":{},"作":{"docs":{},"丑":{"docs":{},"数":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}}}}}}}},"docs":{}},"]":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"2":{"docs":{},"或":{"3":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}},"，":{"docs":{},"输":{"docs":{},"出":{"4":{"docs":{},"。":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125}}}},"docs":{}}}},"一":{"docs":{},"直":{"docs":{},"到":{"9":{"9":{"9":{"docs":{},"。":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}},"docs":{}},"docs":{}},"docs":{}}}},")":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}},"4":{"6":{"5":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}},"8":{"1":{"0":{"1":{"2":{"1":{"4":{"1":{"6":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0234375},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02092050209205021},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}},".":{"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"2":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},")":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.009302325581395349},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"(":{"2":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}},"docs":{}}}}}}},"中":{"2":{"docs":{},"和":{"5":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}},"docs":{}}},"docs":{}},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"相":{"docs":{},"互":{"docs":{},"抵":{"docs":{},"消":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}},"]":{"docs":{},",":{"docs":{},"[":{"5":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}},"6":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}},"docs":{}}},"。":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}},"中":{"docs":{},"，":{"docs":{},"一":{"docs":{},"共":{"docs":{},"存":{"docs":{},"在":{"5":{"docs":{},"个":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"[":{"7":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"首":{"docs":{},"先":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"[":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"5":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"6":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"4":{"docs":{},"]":{"docs":{},"这":{"4":{"docs":{},"个":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"归":{"docs":{},"并":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"统":{"docs":{},"计":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"[":{"7":{"docs":{},"]":{"docs":{},"和":{"docs":{},"[":{"5":{"docs":{},"]":{"docs":{},"归":{"docs":{},"并":{"docs":{},"之":{"docs":{},"后":{"docs":{},"得":{"docs":{},"[":{"5":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}},"docs":{}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"：":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}},"5":{"7":{"2":{"docs":{},"。":{"docs":{},"和":{"docs":{},"一":{"docs":{},"题":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"这":{"docs":{},"要":{"docs":{},"求":{"docs":{},"树":{"docs":{},"b":{"docs":{},"和":{"docs":{},"树":{"docs":{},"a":{"docs":{},"中":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"子":{"docs":{},"树":{"docs":{},"完":{"docs":{},"全":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"树":{"docs":{},"a":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},".":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":2.5}}},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.013953488372093023},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.03508771929824561},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608}}},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"m":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"都":{"docs":{},"乘":{"docs":{},"以":{"2":{"docs":{},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"理":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}}}},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"这":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"必":{"docs":{},"须":{"docs":{},"的":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"乘":{"docs":{},"以":{"2":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"t":{"2":{"docs":{},"，":{"docs":{},"在":{"docs":{},"它":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"乘":{"docs":{},"以":{"2":{"docs":{},"都":{"docs":{},"小":{"docs":{},"于":{"docs":{},"已":{"docs":{},"有":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"，":{"docs":{},"而":{"docs":{},"它":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"乘":{"docs":{},"以":{"2":{"docs":{},"又":{"docs":{},"太":{"docs":{},"大":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"记":{"docs":{},"录":{"docs":{},"这":{"docs":{},"个":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"并":{"docs":{},"且":{"docs":{},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"求":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"时":{"docs":{},"更":{"docs":{},"新":{"docs":{},"这":{"docs":{},"个":{"docs":{},"t":{"2":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"3":{"docs":{},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"，":{"5":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}},"docs":{}}},"]":{"docs":{},",":{"docs":{},"[":{"7":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}},"docs":{}}},"，":{"docs":{},"k":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125}}},"由":{"docs":{},"于":{"docs":{},"没":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904}}}},"}":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"，":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}},"docs":{}}}}}}}}}}}}}}}},"是":{"docs":{},"某":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"序":{"docs":{},"列":{"4":{"docs":{},",":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806}}}},"docs":{}}}}}}}}}}}},"\"":{"docs":{},",":{"docs":{},"\"":{"1":{"2":{"docs":{},"e":{"docs":{},"+":{"5":{"docs":{},".":{"4":{"docs":{},"\"":{"docs":{},"都":{"docs":{},"不":{"docs":{},"是":{"docs":{},"。":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}}}}}}},"docs":{}}},"docs":{}}}},"docs":{}},"docs":{}}}}},"6":{"4":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},".":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.047619047619047616},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.02197802197802198},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}},"]":{"docs":{},",":{"docs":{},"[":{"7":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}},"docs":{}}},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"6":{"docs":{},"，":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"7":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{},"i":{"docs":{},"和":{"docs":{},"j":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"7":{"docs":{},"和":{"6":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"将":{"docs":{},"较":{"docs":{},"大":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"数":{"docs":{},"组":{"docs":{},"a":{"docs":{},"u":{"docs":{},"x":{"docs":{},"中":{"docs":{},"，":{"docs":{},"a":{"docs":{},"u":{"docs":{},"x":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"等":{"docs":{},"于":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"之":{"docs":{},"和":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"用":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"指":{"docs":{},"示":{"docs":{},"这":{"docs":{},"个":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"指":{"docs":{},"向":{"docs":{},"a":{"docs":{},"u":{"docs":{},"x":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"7":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"，":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"数":{"docs":{},"目":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{},"接":{"docs":{},"着":{"docs":{},"再":{"docs":{},"将":{"docs":{},"[":{"5":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}},"docs":{}}}}}}}},"docs":{}}}}}}},"则":{"docs":{},"重":{"docs":{},"建":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}}}}}}}}},"，":{"docs":{},"所":{"docs":{},"以":{"7":{"docs":{},"大":{"docs":{},"于":{"6":{"docs":{},"前":{"docs":{},"面":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"包":{"docs":{},"括":{"6":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"数":{"docs":{},"目":{"docs":{},"+":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}},"docs":{}}}}},"7":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}},"返":{"docs":{},"回":{"2":{"1":{"docs":{},"。":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358}}}},"docs":{}},"docs":{}}}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},")":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}},".":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":3.333333333333333}}},",":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}},"]":{"docs":{},"和":{"docs":{},"[":{"4":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{},"进":{"docs":{},"行":{"docs":{},"归":{"docs":{},"并":{"docs":{},"并":{"docs":{},"统":{"docs":{},"计":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"首":{"docs":{},"先":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"i":{"docs":{},"指":{"docs":{},"向":{"docs":{},"[":{"5":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"7":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"j":{"docs":{},"指":{"docs":{},"向":{"docs":{},"[":{"4":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}},"，":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"数":{"docs":{},"目":{"docs":{},"为":{"1":{"docs":{},"；":{"docs":{},"[":{"6":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"4":{"docs":{},"]":{"docs":{},"归":{"docs":{},"并":{"docs":{},"之":{"docs":{},"后":{"docs":{},"得":{"docs":{},"[":{"4":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}},"docs":{}}}}}}}}},"docs":{}}}}},"docs":{}}}},"docs":{}}}}}}},"输":{"docs":{},"出":{"8":{"docs":{},"。":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}}},"docs":{}}}},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}},"8":{"0":{"7":{"docs":{},".":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}},"docs":{}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.012552301255230125},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}},".":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}},"都":{"docs":{},"是":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"，":{"docs":{},"但":{"1":{"4":{"docs":{},"不":{"docs":{},"是":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"包":{"docs":{},"含":{"docs":{},"质":{"docs":{},"因":{"docs":{},"子":{"7":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"。":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}},"]":{"docs":{},"，":{"docs":{},"则":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}},"docs":{}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"下":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"[":{"4":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}},"docs":{}}}}}}}}}}},"9":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083}},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},".":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},",":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338}}},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"函":{"docs":{},"数":{"docs":{},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"e":{"docs":{},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"。":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"数":{"docs":{},"位":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"小":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"小":{"docs":{},"数":{"docs":{},"点":{"docs":{},"。":{"docs":{},"此":{"docs":{},"外":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"用":{"docs":{},"科":{"docs":{},"学":{"docs":{},"计":{"docs":{},"数":{"docs":{},"法":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"在":{"docs":{},"整":{"docs":{},"数":{"docs":{},"或":{"docs":{},"者":{"docs":{},"小":{"docs":{},"数":{"docs":{},"的":{"docs":{},"后":{"docs":{},"面":{"docs":{},"还":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"e":{"docs":{},"或":{"docs":{},"e":{"docs":{},"。":{"docs":{},"函":{"docs":{},"数":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"用":{"docs":{},"来":{"docs":{},"扫":{"docs":{},"描":{"0":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"全":{"docs":{},"排":{"docs":{},"列":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"b":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}},"u":{"docs":{},"g":{"docs":{},"没":{"docs":{},"改":{"docs":{},"好":{"docs":{},"就":{"docs":{},"不":{"docs":{},"要":{"docs":{},"去":{"docs":{},"睡":{"docs":{},"觉":{"docs":{},"！":{"docs":{"./":{"ref":"./","tf":0.5}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.012244897959183673}}}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}},";":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}},"i":{"docs":{},"t":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Bit Manipulation/":{"ref":"JianZhiOffer/Bit Manipulation/","tf":5},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01834862385321101}}},"g":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}},";":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}}},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"JianZhiOffer/Binary Search/":{"ref":"JianZhiOffer/Binary Search/","tf":5}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.0163265306122449},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.034482758620689655},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02564102564102564},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.02197802197802198},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02510460251046025},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},"/":{"docs":{},"~":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}}}}}}}}}}},"n":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}},"/":{"8":{"docs":{},"位":{"docs":{},"/":{"1":{"docs":{},"字":{"docs":{},"节":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"docs":{}}}},"docs":{}},"[":{"docs":{},"]":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}}}},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"JianZhiOffer/Backtracking/":{"ref":"JianZhiOffer/Backtracking/","tf":10}}}}}}}},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}},"=":{"docs":{},"n":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"节":{"docs":{},"点":{"docs":{},"到":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"的":{"docs":{},"距":{"docs":{},"离":{"docs":{},"和":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"到":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"的":{"docs":{},"距":{"docs":{},"离":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}}}}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"a":{"docs":{},"为":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"到":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"的":{"docs":{},"路":{"docs":{},"程":{"docs":{},"，":{"docs":{},"b":{"docs":{},"为":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"在":{"docs":{},"环":{"docs":{},"中":{"docs":{},"走":{"docs":{},"过":{"docs":{},"的":{"docs":{},"路":{"docs":{},"程":{"docs":{},"，":{"docs":{},"n":{"docs":{},"为":{"docs":{},"环":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"时":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"比":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"多":{"docs":{},"走":{"docs":{},"了":{"docs":{},"一":{"docs":{},"圈":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"走":{"docs":{},"过":{"docs":{},"的":{"docs":{},"路":{"docs":{},"程":{"docs":{},"为":{"docs":{},"a":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}},"c":{"docs":{},"a":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}},"介":{"docs":{},"绍":{"docs":{"./":{"ref":"./","tf":10}}}},"鬼":{"docs":{},"雕":{"docs":{},"の":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.5}}}}}}}}},"j":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.012779552715654952},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.023952095808383235},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.017241379310344827},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.028368794326241134},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.022099447513812154}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"Java/":{"ref":"Java/","tf":10},"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.009324009324009324},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}},"基":{"docs":{},"础":{"docs":{"Java/Java基础/":{"ref":"Java/Java基础/","tf":10}}}},"®":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"{":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},":":{"docs":{},"(":{"docs":{},"l":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},";":{"docs":{},")":{"docs":{},"v":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"?":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"p":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"异":{"docs":{},"常":{"docs":{},"处":{"docs":{},"理":{"docs":{},"框":{"docs":{},"架":{"docs":{},"只":{"docs":{},"能":{"docs":{},"处":{"docs":{},"理":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"错":{"docs":{},"误":{"docs":{},"不":{"docs":{},"在":{"docs":{},"其":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"范":{"docs":{},"围":{"docs":{},"之":{"docs":{},"内":{"docs":{},"。":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"层":{"docs":{},"级":{"docs":{},"结":{"docs":{},"构":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}},"容":{"docs":{},"器":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":10}}}}}}},"v":{"docs":{},"m":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}},")":{"docs":{},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"我":{"docs":{},"们":{"docs":{},"向":{"docs":{},"右":{"docs":{},"移":{"docs":{},"动":{"docs":{},"j":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"不":{"docs":{},"在":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"中":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"继":{"docs":{},"续":{"docs":{},"移":{"docs":{},"动":{"docs":{},"j":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"s":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"在":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"中":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"以":{"docs":{},"为":{"docs":{},"起":{"docs":{},"点":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"即":{"docs":{},"j":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"示":{"docs":{},"的":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"中":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"重":{"docs":{},"复":{"docs":{},"时":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{},"j":{"docs":{},"'":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"没":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"一":{"docs":{},"点":{"docs":{},"点":{"docs":{},"地":{"docs":{},"去":{"docs":{},"移":{"docs":{},"动":{"docs":{},"i":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"i":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"j":{"docs":{},"'":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"记":{"docs":{},"录":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"保":{"docs":{},"存":{"docs":{},"当":{"docs":{},"前":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"[":{"docs":{},"i":{"docs":{},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"构":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}},"构":{"docs":{},"成":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"回":{"docs":{},"文":{"docs":{},"的":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}}}}}},"d":{"docs":{},"k":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.01597444089456869},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625}}}}}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}},"]":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"当":{"docs":{},"我":{"docs":{},"们":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"时":{"docs":{},"，":{"docs":{},"检":{"docs":{},"查":{"docs":{},"它":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"。":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}},"!":{"docs":{},"=":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.009404388714733543},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.031914893617021274},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.028368794326241134},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.02247191011235955},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.025},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.033707865168539325},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.024096385542168676},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.016736401673640166},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.026595744680851064},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"2":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}},"docs":{}}}}}}},"&":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.022900763358778626},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0392156862745098},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Stack & Queue & PriorityQueue/":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/","tf":4},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105}},"&":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.029850746268656716},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024390243902439025},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.034482758620689655},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02127659574468085},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02092050209205021},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}},"(":{"0":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"1":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}},")":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"由":{"docs":{},"于":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"1":{"docs":{},"步":{"docs":{},"，":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"2":{"docs":{},"步":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"走":{"docs":{},"过":{"docs":{},"的":{"docs":{},"路":{"docs":{},"程":{"docs":{},"又":{"docs":{},"可":{"docs":{},"以":{"docs":{},"表":{"docs":{},"示":{"docs":{},"为":{"2":{"docs":{},"a":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"2":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.05555555555555555},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}},")":{"docs":{},"。":{"docs":{},"联":{"docs":{},"立":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"和":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{},"得":{"docs":{},"a":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}},"docs":{}}}}},"docs":{}}}}}}},"5":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},"i":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}},"n":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.009302325581395349},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.022900763358778626},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.0297029702970297},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.028985507246376812},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.016574585635359115}},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.009302325581395349},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.012345679012345678},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986}}}}}}}}}},"[":{"docs":{},"l":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},";":{"docs":{},")":{"docs":{},"v":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}},"p":{"1":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010638297872340425}}},"2":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.017241379310344827},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}},"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"而":{"docs":{},"在":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.024096385542168676}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}},"如":{"docs":{},"果":{"docs":{},"子":{"docs":{},"类":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"重":{"docs":{},"写":{"docs":{},"了":{"docs":{},"父":{"docs":{},"类":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"子":{"docs":{},"类":{"docs":{},"中":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"级":{"docs":{},"别":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"低":{"docs":{},"于":{"docs":{},"父":{"docs":{},"类":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"级":{"docs":{},"别":{"docs":{},"，":{"docs":{},"这":{"docs":{},"也":{"docs":{},"是":{"docs":{},"满":{"docs":{},"足":{"docs":{},"里":{"docs":{},"式":{"docs":{},"替":{"docs":{},"换":{"docs":{},"原":{"docs":{},"则":{"docs":{},"以":{"docs":{},"确":{"docs":{},"保":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"父":{"docs":{},"类":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"子":{"docs":{},"类":{"docs":{},"实":{"docs":{},"例":{"docs":{},")":{"docs":{},"，":{"docs":{},"即":{"docs":{},"子":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{},"必":{"docs":{},"须":{"docs":{},"能":{"docs":{},"够":{"docs":{},"替":{"docs":{},"换":{"docs":{},"掉":{"docs":{},"所":{"docs":{},"有":{"docs":{},"父":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"而":{"docs":{},"接":{"docs":{},"口":{"docs":{},"更":{"docs":{},"像":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"1":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}},"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.02127659574468085},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0392156862745098},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}},"e":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}},")":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}},"d":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}},"o":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}},"x":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"进":{"docs":{},"行":{"docs":{},"这":{"docs":{},"个":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}},"y":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{},"o":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"i":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}},"[":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"]":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.037037037037037035}}}}}}}}}}}}}}}},"x":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}}}}}}}},"n":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0392156862745098},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.0625},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.04225352112676056}},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.018604651162790697},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.009302325581395349}}}}}}}}},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542}}}}},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}}}}}}},"l":{"docs":{},"l":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}}}}},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}},";":{"docs":{},")":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"+":{"docs":{},"+":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.027522935779816515}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.01773049645390071}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}},"o":{"docs":{},"t":{"1":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.029288702928870293}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.016736401673640166}}}}}}},"2":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}},"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.038461538461538464},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02127659574468085},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.02586206896551724},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.024096385542168676},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}}}},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}}}}}},"s":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077}},"e":{"docs":{},"g":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"+":{"docs":{},"+":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}}}}},"c":{"docs":{},"k":{"2":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}}}}},"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}}}}},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}},"docs":{}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}},"!":{"docs":{},"(":{"docs":{},"o":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}},"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}}}}},"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"k":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}}}},"*":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}},"a":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}},"u":{"docs":{},"x":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}}}}}},"h":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526}},"i":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567}}},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.017543859649122806}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464}}}}}}},"2":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464}}},"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.024390243902439025},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.03508771929824561},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.014184397163120567},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.011235955056179775}}}}}},"k":{"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}},"e":{"docs":{},"y":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"l":{"1":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}},"docs":{},"e":{"docs":{},"n":{"2":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}},"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"f":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{},"e":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.017543859649122806}}}}}}}},"o":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.02197802197802198},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}},"v":{"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"$":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}},"b":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.014184397163120567}}}}}},"而":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}},")":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}},";":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625}}}},"j":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}},"docs":{}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}}}}},"+":{"1":{"6":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"docs":{}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.014423076923076924},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.028169014084507043},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.09375},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.03592814371257485},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.03125},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.06481481481481481},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.03546099290780142},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.019736842105263157},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.0205761316872428},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02564102564102564},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.02127659574468085},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.027624309392265192},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.027522935779816515}},"=":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}},"+":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}},"/":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.04186046511627907},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.09836065573770492},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02127659574468085},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.02586206896551724},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.03296703296703297},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.03614457831325301},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.04602510460251046},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.02097902097902098},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01834862385321101}},"/":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.0326530612244898},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.030303030303030304},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.056},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.05803571428571429},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.02385008517887564},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.04597701149425287},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.038461538461538464},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.022364217252396165},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.01044932079414838},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.009302325581395349},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.03592814371257485},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.036585365853658534},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0375},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.02127659574468085},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.019801980198019802},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.04597701149425287},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.024822695035460994},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.014184397163120567},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.033707865168539325},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.022900763358778626},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.03571428571428571},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.06578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.03508771929824561},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.012345679012345678},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.043478260869565216},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0375},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.02247191011235955},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.02586206896551724},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.03296703296703297},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.016736401673640166},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.027972027972027972},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.027624309392265192}},"复":{"docs":{},"制":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"用":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"链":{"docs":{},"接":{"docs":{},"起":{"docs":{},"来":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"复":{"docs":{},"制":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}}},"反":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"不":{"docs":{},"能":{"docs":{},"直":{"docs":{},"接":{"docs":{},"写":{"docs":{},"成":{"docs":{},"\"":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"那":{"docs":{},"样":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"把":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"传":{"docs":{},"过":{"docs":{},"去":{"docs":{},"了":{"docs":{},"，":{"docs":{},"然":{"docs":{},"而":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"下":{"docs":{},"面":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"中":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"之":{"docs":{},"前":{"docs":{},"加":{"docs":{},"入":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"中":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"也":{"docs":{},"会":{"docs":{},"跟":{"docs":{},"着":{"docs":{},"改":{"docs":{},"变":{"docs":{},"。":{"docs":{},"应":{"docs":{},"该":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"来":{"docs":{},"承":{"docs":{},"载":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"分":{"docs":{},"界":{"docs":{},"点":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"也":{"docs":{},"表":{"docs":{},"示":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{},"*":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}},"=":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358}}}},":":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.012539184952978056},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.009302325581395349},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.022900763358778626},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.019801980198019802},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.017543859649122806},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010638297872340425}}},"=":{"0":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.07755102040816327},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.030303030303030304},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.04},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.03571428571428571},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.05281090289608177},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.05747126436781609},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.04807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.03194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.0759493670886076},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.06060606060606061},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.061371841155234655},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.04938271604938271},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.034013605442176874},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.07042253521126761},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.1015625},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.06046511627906977},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.059880239520958084},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.07633587786259542},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.1044776119402985},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.07317073170731707},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0625},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.05673758865248227},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0784313725490196},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.04950495049504951},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.10185185185185185},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.034482758620689655},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.07407407407407407},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.12195121951219512},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.1347517730496454},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.07017543859649122},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.09219858156028368},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.10526315789473684},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.10861423220973783},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.09259259259259259},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.06870229007633588},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.07142857142857142},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.07142857142857142},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.03289473684210526},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.03278688524590164},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.05263157894736842},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.05185185185185185},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0392156862745098},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.04225352112676056},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.07692307692307693},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.07818930041152264},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.07142857142857142},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.043859649122807015},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.14492753623188406},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.10625},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.04918032786885246},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.0641025641025641},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.10112359550561797},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02127659574468085},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.03296703296703297},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.07228915662650602},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02510460251046025},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.06993006993006994},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.03260869565217391},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.07766990291262135},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.0851063829787234},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.07092198581560284},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.06077348066298342},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.045871559633027525}},"=":{"0":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.012244897959183673},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.01192504258943782},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.008359456635318705},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.028169014084507043},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0234375},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.046511627906976744},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.06896551724137931},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.05343511450381679},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.07317073170731707},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.025},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.04964539007092199},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.0297029702970297},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.046875},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.037037037037037035},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.05747126436781609},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.04878048780487805},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.010638297872340425},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.07692307692307693},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.03508771929824561},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.05673758865248227},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.05263157894736842},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.04119850187265917},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.07407407407407407},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.022900763358778626},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.07017543859649122},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.02962962962962963},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.09803921568627451},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.07692307692307693},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.03292181069958848},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.047619047619047616},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.05263157894736842},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.01875},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.09090909090909091},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.04918032786885246},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.038461538461538464},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.02247191011235955},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.06382978723404255},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.034482758620689655},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.04395604395604396},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.03614457831325301},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.07531380753138076},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.027972027972027972},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.043478260869565216},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.038834951456310676},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.031914893617021274},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.028368794326241134},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.027624309392265192},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}},">":{"2":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0149812734082397}}},"3":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0149812734082397}}},"4":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.02247191011235955}}},"5":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985}}},"，":{"docs":{},"删":{"docs":{},"除":{"docs":{},"值":{"docs":{},"为":{"3":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"为":{"1":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}},"docs":{}}}}}}}}}},"docs":{}}},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"为":{"1":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}},"docs":{}}}}}}}}}}}}}},"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.025},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.031914893617021274},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01834862385321101}},"=":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.023952095808383235},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.028368794326241134},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077}}},">":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}},">":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.009404388714733543}}}}},"\\":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.09836065573770492},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02127659574468085},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.02586206896551724},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.03296703296703297},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.03614457831325301},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.04184100418410042},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986}},"u":{"0":{"0":{"0":{"0":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"docs":{}},"7":{"docs":{},"f":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"docs":{}},"docs":{}},"docs":{}}},"a":{"1":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}},"2":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}},"docs":{},"r":{"docs":{},"r":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}},"a":{"docs":{},"y":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"JianZhiOffer/Array/":{"ref":"JianZhiOffer/Array/","tf":10},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":10.01923076923077},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.05128205128205128},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.04938271604938271}},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"动":{"docs":{},"态":{"docs":{},"数":{"docs":{},"组":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"支":{"docs":{},"持":{"docs":{},"随":{"docs":{},"机":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0234375},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.022222222222222223},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.03508771929824561},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0375},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02127659574468085}}},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}},"p":{"docs":{},"q":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}}}}}}}}},"。":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}},"s":{"docs":{},",":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625}}}}},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"在":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"和":{"docs":{},"h":{"docs":{},"i":{"docs":{},"之":{"docs":{},"间":{"docs":{},"，":{"docs":{},"移":{"docs":{},"动":{"docs":{},"l":{"docs":{},"o":{"docs":{},"到":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"在":{"docs":{},"后":{"docs":{},"半":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"继":{"docs":{},"续":{"docs":{},"查":{"docs":{},"找":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}}},"g":{"docs":{},"s":{"docs":{},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"=":{"1":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"docs":{}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}},"b":{"docs":{},"c":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.022321428571428572},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145}},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"1":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},"2":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},".":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}},"docs":{}}}}}}},"docs":{},"c":{"docs":{},"_":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}},"b":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"1":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"docs":{}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01834862385321101}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.013392857142857142}}}}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218}}}}},".":{"docs":{},"x":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145}}}},"y":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}},"d":{"docs":{},"d":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":2.50531914893617}},"(":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}},")":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}},",":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"x":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}},"[":{"docs":{},"i":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}}},"j":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}},"]":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}}}}}},"i":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}},"+":{"1":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}},"docs":{}},"，":{"docs":{},"则":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}}}},"j":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}},"n":{"docs":{},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.028368794326241134}},".":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}},"c":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}},"a":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.012779552715654952}},"c":{"docs":{},"h":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"docs":{}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"2":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"3":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"4":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"docs":{}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}},"(":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"p":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"a":{"docs":{},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.009404388714733543}}}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"r":{"docs":{},"r":{"docs":{},"y":{"docs":{},";":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}},"i":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010638297872340425}}}}},"b":{"docs":{},"和":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"。":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}}}},"h":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}},"a":{"docs":{},"r":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.028985507246376812}},"/":{"1":{"6":{"docs":{},"位":{"docs":{},"/":{"2":{"docs":{},"字":{"docs":{},"节":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"docs":{}}}},"docs":{}},"docs":{}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":1.6666666666666665}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}}}},".":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}}}},"[":{"2":{"5":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464}}}}},"docs":{}},"docs":{}},"docs":{},"]":{"docs":{"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"s":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.01532567049808429}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010638297872340425}},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.05172413793103448},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":10.012779552715655},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.027210884353741496}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616}},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"r":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}}}},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}},".":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"*":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}}},"docs":{}}}}}}}}}},"l":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.05555555555555555},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.022900763358778626}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.034482758620689655}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"s":{"docs":{},")":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0392156862745098}},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},".":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0392156862745098}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549}}}}}}}},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":10.050632911392405},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.011655011655011656},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.024},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.022321428571428572},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.013628620102214651},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.02681992337164751},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.01639344262295082},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"简":{"docs":{},"化":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"但":{"docs":{},"会":{"docs":{},"大":{"docs":{},"大":{"docs":{},"降":{"docs":{},"低":{"docs":{},"可":{"docs":{},"读":{"docs":{},"性":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835}},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.017035775127768313},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"，":{"docs":{},"其":{"docs":{},"它":{"docs":{},"类":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"直":{"docs":{},"接":{"docs":{},"去":{"docs":{},"调":{"docs":{},"用":{"docs":{},"该":{"docs":{},"类":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"或":{"docs":{},"者":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"工":{"docs":{},"厂":{"docs":{},"来":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.01192504258943782}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"e":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.017035775127768313}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}}},"d":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.02127659574468085}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835}},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.014184397163120567}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.014184397163120567}},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.010638297872340425}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835}}}}}}}}},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.010638297872340425}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"1":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.02631578947368421}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}}}}}}},";":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}}},"2":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.02631578947368421}},")":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}}}}}}},";":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}}},"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.024390243902439025},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.03900709219858156},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.03508771929824561},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.014184397163120567},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0299625468164794},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.028169014084507043},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.03125},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.056179775280898875},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010638297872340425}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.010638297872340425},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010638297872340425}},";":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.028368794326241134},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.011235955056179775},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}},")":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}},";":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.017543859649122806}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.017543859649122806}}}}}}}},",":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}}}}}}},"所":{"docs":{},"能":{"docs":{},"排":{"docs":{},"列":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}},"e":{"docs":{},"r":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}},"x":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.027522935779816515}},".":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"3":{"2":{"docs":{},"位":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"是":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"更":{"docs":{},"新":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}},"运":{"docs":{},"算":{"docs":{},"前":{"docs":{},"也":{"docs":{},"应":{"docs":{},"该":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"能":{"docs":{},"发":{"docs":{},"生":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"参":{"docs":{},"考":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"种":{"docs":{},"写":{"docs":{},"法":{"docs":{},"。":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}},"e":{"docs":{},"/":{"6":{"4":{"docs":{},"位":{"docs":{},"/":{"8":{"docs":{},"字":{"docs":{},"节":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"docs":{}}}},"docs":{}},"docs":{}}},"i":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}}}},"g":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.072}},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}}}}}},"b":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}},")":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}}}}}}},"@":{"4":{"5":{"5":{"4":{"6":{"1":{"7":{"docs":{},"c":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.024}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"4":{"docs":{},"a":{"1":{"4":{"4":{"8":{"2":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.02097902097902098}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.023809523809523808}},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.023809523809523808}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}},"u":{"docs":{},"p":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"e":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}}},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"JianZhiOffer/Dynamic Programming/":{"ref":"JianZhiOffer/Dynamic Programming/","tf":5}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}}}},"p":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}},"[":{"0":{"docs":{},"]":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}}},"docs":{},"n":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.03125}}},"i":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}},"]":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},":":{"docs":{},")":{"docs":{},"和":{"docs":{},"p":{"docs":{},"(":{"docs":{},"j":{"docs":{},":":{"docs":{},")":{"docs":{},"是":{"docs":{},"否":{"docs":{},"匹":{"docs":{},"配":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}}}},",":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},"[":{"docs":{},"p":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625}},"我":{"docs":{},"们":{"docs":{},"先":{"docs":{},"来":{"docs":{},"分":{"docs":{},"析":{"docs":{},"跳":{"docs":{},"上":{"2":{"docs":{},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"总":{"docs":{},"共":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"种":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"2":{"docs":{},"次":{"docs":{},"，":{"1":{"docs":{},"次":{"docs":{},"跳":{"1":{"docs":{},"级":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"一":{"docs":{},"次":{"docs":{},"跳":{"2":{"docs":{},"级":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"有":{"2":{"docs":{},"种":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{},"假":{"docs":{},"设":{"docs":{},"跳":{"docs":{},"上":{"docs":{},"n":{"docs":{},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"总":{"docs":{},"共":{"docs":{},"有":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},"种":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"，":{"docs":{},"n":{"docs":{},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"从":{"docs":{},"n":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}}},"docs":{}}}}}}}}},",":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}},"e":{"docs":{},"。":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.017241379310344827},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0392156862745098},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.02197802197802198},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.03347280334728033},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986}}},"；":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"让":{"docs":{},"它":{"docs":{},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"维":{"docs":{},"护":{"docs":{},"的":{"docs":{},"是":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"当":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"u":{"docs":{},"r":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}},"s":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.02127659574468085}},")":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.014184397163120567}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.012244897959183673},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.011655011655011656},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.010221465076660987},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.03194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.0379746835443038},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.012539184952978056},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.027210884353741496},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.029850746268656716},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024390243902439025}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"它":{"docs":{},"不":{"docs":{},"可":{"docs":{},"被":{"docs":{},"继":{"docs":{},"承":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}},"这":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"子":{"docs":{},"类":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"基":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":10.003831417624522}}}}}}}}},"d":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.017543859649122806}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"o":{"docs":{},"f":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.03508771929824561}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.025}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.017241379310344827}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.03125}}}}},"n":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.03125}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"/":{"3":{"2":{"docs":{},"位":{"docs":{},"/":{"4":{"docs":{},"字":{"docs":{},"节":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"docs":{}}}},"docs":{}},"docs":{}}}}},"a":{"docs":{},"g":{"docs":{},"s":{"docs":{},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}},"u":{"docs":{},"n":{"3":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}},"docs":{},"c":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428}},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428}}},"{":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145}}}}}},"2":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},"{":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}},"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}},")":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}}}}}},"e":{"docs":{},"w":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"h":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.006269592476489028}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"i":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}},"g":{"docs":{},"h":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}},")":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.03296703296703297},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}},";":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}},"]":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"给":{"docs":{},"a":{"docs":{},"u":{"docs":{},"x":{"docs":{},"，":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"用":{"docs":{},"来":{"docs":{},"承":{"docs":{},"载":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}}}}}}},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542}}}}},",":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"当":{"docs":{},"前":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0073145245559038665}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":10.009404388714733},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"因":{"docs":{},"此":{"docs":{},"具":{"docs":{},"有":{"docs":{},"和":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.008517887563884156},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.034482758620689655}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"支":{"docs":{},"持":{"docs":{},"快":{"docs":{},"速":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"有":{"docs":{},"序":{"docs":{},"性":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{},"失":{"docs":{},"去":{"docs":{},"了":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"e":{"docs":{},"：":{"docs":{},"和":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.009584664536741214}}},"y":{"docs":{},"[":{"docs":{},"]":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083}}}}}}}}}},"docs":{}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"y":{"docs":{},".":{"docs":{},"则":{"docs":{},"经":{"docs":{},"过":{"docs":{},"替":{"docs":{},"换":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"为":{"docs":{},"w":{"docs":{},"e":{"docs":{},"%":{"2":{"0":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"%":{"2":{"0":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"y":{"docs":{},"。":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.013392857142857142}}}},"a":{"docs":{},"d":{"1":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}},",":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.017543859649122806}}},";":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.02631578947368421}}}},"2":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.02631578947368421}},")":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.017543859649122806}}},";":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.02631578947368421}}}},"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985}},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.024390243902439025},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.010638297872340425},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.014184397163120567},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.04878048780487805},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.010638297872340425},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.028368794326241134},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0299625468164794}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.036585365853658534},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.014184397163120567},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985}},";":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}}},",":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.03508771929824561},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985}}}}},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}},"s":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083}}}}}}}}}},"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}}}}}},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}},"u":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}}},"i":{"docs":{},")":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"n":{"docs":{},"t":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.0326530612244898},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.03125},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.02555366269165247},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.038314176245210725},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.019230769230769232},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.03514376996805112},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.02531645569620253},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0219435736677116},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0546875},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.05581395348837209},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.041916167664670656},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.04580152671755725},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.04477611940298507},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024390243902439025},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.1},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.06382978723404255},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0784313725490196},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.04950495049504951},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.046875},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.037037037037037035},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.03508771929824561},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.02631578947368421},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.09259259259259259},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.03816793893129771},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.02631578947368421},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.01639344262295082},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.03508771929824561},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.044444444444444446},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.01646090534979424},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.028985507246376812},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.0641025641025641},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02127659574468085},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.04310344827586207},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.04395604395604396},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.06521739130434782},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.038834951456310676},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.026595744680851064},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0425531914893617},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.03314917127071823},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.027522935779816515}},",":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"/":{"3":{"2":{"docs":{},"位":{"docs":{},"/":{"4":{"docs":{},"字":{"docs":{},"节":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"docs":{}}}},"docs":{}},"docs":{}},"e":{"docs":{},"g":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.04081632653061224},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":3.3608562691131496}},"e":{"docs":{},"r":{"docs":{},"(":{"1":{"2":{"3":{"docs":{},")":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}},",":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}}}}},"docs":{}},"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}}}}},"docs":{}},".":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01834862385321101}},"e":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"1":{"2":{"3":{"docs":{},")":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.012244897959183673}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"[":{"docs":{},"(":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}},".":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}},",":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}}},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"?":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856}},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}}}}}}}}}}}}}}},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"[":{"1":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}}}},"docs":{}},"2":{"5":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}},"docs":{}},"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}}},"docs":{},"]":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.029850746268656716},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024390243902439025},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.019801980198019802},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338}},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.017964071856287425}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428}}}},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.019157088122605363}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.019801980198019802},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.019801980198019802}},")":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}},"+":{"1":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}},"docs":{},"+":{"docs":{},";":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}}},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},";":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}},"i":{"docs":{},"c":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}},",":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}},":":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.02127659574468085},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.027522935779816515}}}}}}},"t":{"docs":{},".":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"e":{"docs":{},"r":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"m":{"docs":{},";":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}},"s":{"docs":{},"s":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}},"e":{"1":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},"2":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},".":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}},"docs":{}}}}}}},"docs":{}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}},"=":{"0":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}},"docs":{}},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02564102564102564}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02564102564102564}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218}}}}},"docs":{}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.017241379310344827}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.01646090534979424},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.02097902097902098}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02510460251046025}},";":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"累":{"docs":{},"加":{"docs":{},"的":{"docs":{},"和":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}}}}}}}}}}},"\"":{"docs":{},"。":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}},"f":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}}}}}}}}}}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"对":{"docs":{},"所":{"docs":{},"有":{"docs":{},"i":{"docs":{},"重":{"docs":{},"复":{"docs":{},"执":{"docs":{},"行":{"docs":{},"上":{"docs":{},"述":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"以":{"docs":{},"求":{"docs":{},"得":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}},"k":{"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"k":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"docs":{}}}}}}}}}}},"2":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}},"3":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.012244897959183673},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.008359456635318705},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.03508771929824561},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.022222222222222223},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.034482758620689655}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.025},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.03508771929824561},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.02586206896551724}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.025}}},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"则":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"应":{"docs":{},"相":{"docs":{},"应":{"docs":{},"修":{"docs":{},"改":{"docs":{},"为":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"y":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"。":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"得":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.008359456635318705},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"，":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125}}}}}}}}}},"次":{"docs":{},"即":{"docs":{},"可":{"docs":{},"得":{"docs":{},"到":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"要":{"docs":{},"求":{"docs":{},"k":{"docs":{},"不":{"docs":{},"能":{"docs":{},"大":{"docs":{},"于":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"求":{"docs":{},"出":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.017241379310344827}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.017241379310344827}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"第":{"docs":{},"k":{"docs":{},"小":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}},"第":{"docs":{},"k":{"docs":{},"小":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"在":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"继":{"docs":{},"续":{"docs":{},"在":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"第":{"docs":{},"k":{"docs":{},"小":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"1":{"docs":{},",":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}},"2":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}},")":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}},"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},"o":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.03546099290780142},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}},"n":{"docs":{},"g":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.009584664536741214}},"/":{"6":{"4":{"docs":{},"位":{"docs":{},"/":{"8":{"docs":{},"字":{"docs":{},"节":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"docs":{}}}},"docs":{}},"docs":{}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.02040816326530612}},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}},"，":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":1.6737588652482267},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":2.505524861878453}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},")":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"=":{"2":{"docs":{},",":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"docs":{}}}}},"k":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"_":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}},")":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}},"d":{"docs":{},"c":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010638297872340425}},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":10.025270758122744}},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"来":{"docs":{},"维":{"docs":{},"护":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"为":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"或":{"docs":{},"者":{"docs":{},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"少":{"docs":{},"使":{"docs":{},"用":{"docs":{},"（":{"docs":{},"l":{"docs":{},"r":{"docs":{},"u":{"docs":{},"）":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.018050541516245487}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"：":{"docs":{},"具":{"docs":{},"有":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":10.051282051282051},"JianZhiOffer/LinkedList/":{"ref":"JianZhiOffer/LinkedList/","tf":10}},"：":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"它":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{},"或":{"docs":{},"双":{"docs":{},"向":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}},"基":{"docs":{},"于":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"快":{"docs":{},"速":{"docs":{},"地":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"间":{"docs":{},"插":{"docs":{},"入":{"docs":{},"和":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"如":{"docs":{},"此":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.01639344262295082},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.06172839506172839},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0234375},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.022222222222222223},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.05263157894736842},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.01875},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}},".":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}},">":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.01875},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.031914893617021274}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.08536585365853659},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.11538461538461539},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.05263157894736842},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.05673758865248227},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.07017543859649122},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.04868913857677903},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.031914893617021274}},"e":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}},"1":{"docs":{},")":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}},"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0375}},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835}}}}}}},"e":{"docs":{},"n":{"1":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}},")":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}}},"2":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}}}},"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.02531645569620253},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.028368794326241134},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712}}}}}}}}}}}}}}}}}},",":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415},"LeetCode/":{"ref":"LeetCode/","tf":11}}}}}}},"a":{"docs":{},"d":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}},"r":{"docs":{},"u":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.021660649819494584}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}},"缓":{"docs":{},"存":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}},"m":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"1":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}},"docs":{}},"f":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"JianZhiOffer/Matrix/":{"ref":"JianZhiOffer/Matrix/","tf":10}},",":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}}},";":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}}}},"docs":{}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}},";":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}}}}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"能":{"docs":{},"够":{"docs":{},"构":{"docs":{},"成":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"继":{"docs":{},"续":{"docs":{},"从":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"出":{"docs":{},"发":{"docs":{},"分":{"docs":{},"别":{"docs":{},"沿":{"docs":{},"着":{"docs":{},"上":{"docs":{},"、":{"docs":{},"下":{"docs":{},"、":{"docs":{},"左":{"docs":{},"、":{"docs":{},"右":{"4":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{},"继":{"docs":{},"续":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"路":{"docs":{},"径":{"docs":{},"中":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"不":{"docs":{},"能":{"docs":{},"构":{"docs":{},"成":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}}}},"x":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}}}}}}}},"n":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292}},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}},"{":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}}}}}}}}}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105}}}}}}}}},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}},"i":{"docs":{},"n":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}},"(":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}},"p":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.06896551724137931},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.009302325581395349},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}},"y":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"k":{"1":{"docs":{},"\"":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"2":{"docs":{},"\"":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"3":{"docs":{},"\"":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"docs":{}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"j":{"docs":{},")":{"docs":{},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}}},"。":{"docs":{},"将":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"复":{"docs":{},"制":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"步":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"步":{"docs":{},"，":{"docs":{},"复":{"docs":{},"制":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"用":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"链":{"docs":{},"接":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"将":{"docs":{},"原":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"复":{"docs":{},"制":{"docs":{},"节":{"docs":{},"点":{"docs":{},"存":{"docs":{},"到":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"（":{"docs":{},"原":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"，":{"docs":{},"复":{"docs":{},"制":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"）":{"docs":{},"；":{"docs":{},"第":{"docs":{},"二":{"docs":{},"步":{"docs":{},"，":{"docs":{},"设":{"docs":{},"置":{"docs":{},"复":{"docs":{},"制":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"节":{"docs":{},"点":{"docs":{},"n":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"为":{"docs":{},"s":{"docs":{},"，":{"docs":{},"则":{"docs":{},"通":{"docs":{},"过":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"找":{"docs":{},"到":{"docs":{},"n":{"1":{"docs":{},"和":{"docs":{},"s":{"1":{"docs":{},"，":{"docs":{},"设":{"docs":{},"置":{"docs":{},"n":{"1":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"s":{"docs":{},"k":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.006269592476489028}},"+":{"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{}}}},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.018604651162790697}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"JianZhiOffer/Bit Manipulation/":{"ref":"JianZhiOffer/Bit Manipulation/","tf":5}}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}},"e":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}},";":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"i":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},":":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"!":{"docs":{},"!":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}},"v":{"docs":{},"e":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.014423076923076924}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.014423076923076924}},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105}}},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105}}}}}}}}}},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}}},"d":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.023952095808383235},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.02197802197802198}},")":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"7":{"docs":{},"放":{"docs":{},"到":{"docs":{},"a":{"docs":{},"u":{"docs":{},"x":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"处":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"i":{"docs":{},"和":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"向":{"docs":{},"前":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"位":{"docs":{},"。":{"docs":{},"接":{"docs":{},"着":{"docs":{},"判":{"docs":{},"断":{"5":{"docs":{},"和":{"6":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"5":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"相":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"无":{"docs":{},"法":{"docs":{},"判":{"docs":{},"断":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"属":{"docs":{},"于":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"还":{"docs":{},"是":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"找":{"docs":{},"到":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"数":{"docs":{},"量":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},",":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}}},";":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}},"n":{"1":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105}}},"2":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105}},"m":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.019736842105263157}},"+":{"1":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}},"docs":{}}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.018808777429467086},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.013953488372093023},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0392156862745098},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.046875},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.04225352112676056},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712}}}},"e":{"docs":{},"w":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.024489795918367346},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.018648018648018648},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.024},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.02385008517887564},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.022988505747126436},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.006269592476489028},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.037037037037037035},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.028169014084507043},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0234375},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.019801980198019802},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.010638297872340425},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.07142857142857142},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.03571428571428571},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.03278688524590164},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.037037037037037035},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.01646090534979424},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.05263157894736842},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.05625},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.031914893617021274},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.02912621359223301},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.015957446808510637},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"]":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"e":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513}},";":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}}}},"x":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.024390243902439025},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.018726591760299626},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.033707865168539325}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.033707865168539325},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513}},";":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}},";":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}},"分":{"docs":{},"别":{"docs":{},"表":{"docs":{},"示":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"不":{"docs":{},"等":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"移":{"docs":{},"动":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"和":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"继":{"docs":{},"续":{"docs":{},"判":{"docs":{},"断":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"向":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"以":{"docs":{},"删":{"docs":{},"除":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"赋":{"docs":{},"给":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},";":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}},"g":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}},"f":{"docs":{},"e":{"docs":{},")":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0073145245559038665},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.018604651162790697},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024390243902439025},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.024390243902439025},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.03508771929824561},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.028368794326241134},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.03508771929824561},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0149812734082397},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.03508771929824561},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.01646090534979424},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02127659574468085},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.017241379310344827},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02510460251046025},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.02127659574468085},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077}},")":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.05555555555555555},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.036585365853658534},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0425531914893617},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.07692307692307693},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.03546099290780142},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.033707865168539325},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0375},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.05454545454545454},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.038461538461538464},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.033707865168539325},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02127659574468085},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.04819277108433735},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.03347280334728033},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.02127659574468085}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.024390243902439025},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.024822695035460994},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.028368794326241134},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.026217228464419477},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.02247191011235955},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.024096385542168676},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}}}}}}}}},"借":{"docs":{},"由":{"docs":{},"上":{"docs":{},"一":{"docs":{},"条":{"docs":{},"语":{"docs":{},"句":{"docs":{},"知":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}},"docs":{}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},"和":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"说":{"docs":{},"明":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},"和":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"完":{"docs":{},"全":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"就":{"docs":{},"算":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"即":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"已":{"docs":{},"经":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"了":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"p":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"数":{"docs":{},"当":{"docs":{},"做":{"0":{"docs":{},"再":{"docs":{},"和":{"docs":{},"q":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"数":{"docs":{},"相":{"docs":{},"加":{"docs":{},"。":{"docs":{},"此":{"docs":{},"外":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"都":{"docs":{},"已":{"docs":{},"经":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"了":{"docs":{},"但":{"docs":{},"是":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.009302325581395349},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.029850746268656716},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.019801980198019802},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.019736842105263157},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":2.515957446808511}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}},"。":{"docs":{},"例":{"docs":{},"如":{"6":{"docs":{},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}}},"docs":{}}}},"o":{"docs":{},"f":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0392156862745098}}}}}}},"docs":{}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}},"s":{"docs":{},")":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.023255813953488372},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.030534351145038167},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.0297029702970297},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.027906976744186046},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.03816793893129771},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.025},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.02127659574468085},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.022222222222222223},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.02197802197802198},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.02912621359223301}},";":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.009302325581395349}}},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815}}}}}}}}}},",":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.025},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338}}},"[":{"0":{"docs":{},"]":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}},";":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.013953488372093023},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517}}}}},"1":{"docs":{},"]":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}},"docs":{},"n":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.023952095808383235}}}}}},"]":{"docs":{},"}":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}},"是":{"docs":{},"否":{"docs":{},"在":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"在":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"把":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"它":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"值":{"docs":{},"加":{"docs":{},"入":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"用":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"法":{"docs":{},"做":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"求":{"docs":{},"返":{"docs":{},"回":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"会":{"docs":{},"打":{"docs":{},"乱":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"里":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"合":{"docs":{},"适":{"docs":{},"。":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}},")":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567}}},";":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}}}},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{},")":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}},";":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567}}}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.0297029702970297}}},")":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.01639344262295082}}},",":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}}},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.024}}}}},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.010221465076660987}}}}}},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}},"e":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}},"：":{"docs":{},"给":{"docs":{},"出":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"大":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"若":{"docs":{},"数":{"docs":{},"组":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"请":{"docs":{},"返":{"docs":{},"回":{"0":{"docs":{},"。":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}},"docs":{}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}},":":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}},"n":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010638297872340425}}},"d":{"docs":{},"e":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.15384615384615385},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.10112359550561797},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}}}}}}}},")":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}},";":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}},"v":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}},"/":{"docs":{},"m":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"平":{"docs":{},"均":{"docs":{},"查":{"docs":{},"找":{"docs":{},"次":{"docs":{},"数":{"docs":{},"的":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"函":{"docs":{},"数":{"docs":{},"满":{"docs":{},"足":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"性":{"docs":{},"的":{"docs":{},"要":{"docs":{},"求":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"每":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"大":{"docs":{},"约":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"根":{"docs":{},"据":{"docs":{},"下":{"docs":{},"标":{"docs":{},"来":{"docs":{},"重":{"docs":{},"排":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"从":{"docs":{},"头":{"docs":{},"到":{"docs":{},"尾":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"当":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"到":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{},"i":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"时":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"比":{"docs":{},"较":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"（":{"docs":{},"用":{"docs":{},"m":{"docs":{},"表":{"docs":{},"示":{"docs":{},"）":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"等":{"docs":{},"于":{"docs":{},"i":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"m":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"放":{"docs":{},"在":{"docs":{},"了":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"，":{"docs":{},"接":{"docs":{},"着":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"是":{"docs":{},"，":{"docs":{},"拿":{"docs":{},"它":{"docs":{},"和":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{},"m":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"它":{"docs":{},"和":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{},"m":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"（":{"docs":{},"该":{"docs":{},"数":{"docs":{},"字":{"docs":{},"在":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{},"i":{"docs":{},"和":{"docs":{},"m":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"都":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"）":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"它":{"docs":{},"和":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{},"m":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"不":{"docs":{},"等":{"docs":{},"，":{"docs":{},"就":{"docs":{},"把":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"和":{"docs":{},"第":{"docs":{},"m":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"进":{"docs":{},"行":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"把":{"docs":{},"m":{"docs":{},"放":{"docs":{},"到":{"docs":{},"它":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"去":{"docs":{},"。":{"docs":{},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"重":{"docs":{},"复":{"docs":{},"这":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"我":{"docs":{},"们":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{},"并":{"docs":{},"且":{"docs":{},"算":{"docs":{},"法":{"docs":{},"结":{"docs":{},"束":{"docs":{},"后":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"放":{"docs":{},"置":{"docs":{},"了":{"docs":{},"它":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"个":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{},"备":{"docs":{},"注":{"docs":{},"：":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"尽":{"docs":{},"管":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"两":{"docs":{},"重":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"最":{"docs":{},"多":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"交":{"docs":{},"换":{"docs":{},"和":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"就":{"docs":{},"能":{"docs":{},"找":{"docs":{},"到":{"docs":{},"其":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"总":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"那":{"docs":{},"样":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"即":{"docs":{},"使":{"docs":{},"是":{"docs":{},"非":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"都":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"求":{"docs":{},"余":{"docs":{},"和":{"docs":{},"除":{"docs":{},"法":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"效":{"docs":{},"率":{"docs":{},"很":{"docs":{},"低":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"事":{"docs":{},"先":{"docs":{},"求":{"docs":{},"出":{"1":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"。":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"某":{"docs":{},"些":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"有":{"docs":{},"几":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"重":{"docs":{},"复":{"docs":{},"了":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"重":{"docs":{},"复":{"docs":{},"了":{"docs":{},"几":{"docs":{},"次":{"docs":{},"。":{"docs":{},"找":{"docs":{},"出":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"如":{"docs":{},"果":{"docs":{},"输":{"docs":{},"入":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"7":{"docs":{},"的":{"docs":{},"数":{"docs":{},"[":{"2":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"n":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"示":{"docs":{},"中":{"docs":{},"最":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"1":{"docs":{},"变":{"docs":{},"成":{"0":{"docs":{},"”":{"docs":{},"这":{"docs":{},"个":{"docs":{},"结":{"docs":{},"论":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"写":{"docs":{},"出":{"docs":{},"如":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"提":{"docs":{},"高":{"docs":{},"运":{"docs":{},"算":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}},"m":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105}},"+":{"1":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105}}},"2":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}},"docs":{}}}},"p":{"1":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.015957446808510637}},",":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}}},"2":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.02127659574468085}},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}}},"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.014184397163120567}},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.02247191011235955}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.033707865168539325}}}}}}},"s":{"docs":{},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.031914893617021274}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":2.505524861878453}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.017857142857142856},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.020442930153321975},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.022988505747126436},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.019230769230769232},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.027210884353741496},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.029850746268656716},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024390243902439025},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.019801980198019802},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.010638297872340425},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.028985507246376812},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.034482758620689655},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.024096385542168676},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.027972027972027972},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/","tf":2},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}},"e":{"docs":{},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"堆":{"docs":{},"结":{"docs":{},"构":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"它":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"优":{"docs":{},"先":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.04225352112676056}}}}}}}}}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"t":{"docs":{},"i":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"JianZhiOffer/Dynamic Programming/":{"ref":"JianZhiOffer/Dynamic Programming/","tf":5}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.008517887563884156},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}},"e":{"docs":{},"d":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},",":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}}}}},"e":{"docs":{},"v":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.024390243902439025},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.0149812734082397},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.04819277108433735}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},";":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.024390243902439025},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.024096385542168676}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}},";":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608}}}}}}}}},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.013986013986013986},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.032},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.049107142857142856},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.04088586030664395},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.05363984674329502},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.008359456635318705},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.024691358024691357},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.027210884353741496},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.028169014084507043},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.018604651162790697},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0392156862745098},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.046875},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.017241379310344827},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.024390243902439025},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.03508771929824561},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.011235955056179775},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.019736842105263157},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.04918032786885246},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.022222222222222223},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.04225352112676056},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.01646090534979424},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.047619047619047616},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.028985507246376812},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02564102564102564},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.056179775280898875},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.017241379310344827},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"不":{"docs":{},"显":{"docs":{},"式":{"docs":{},"去":{"docs":{},"重":{"docs":{},"写":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"(":{"docs":{},"k":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}},")":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"v":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"、":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}},"时":{"docs":{},"将":{"docs":{},"数":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"到":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},"中":{"docs":{},"，":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"时":{"docs":{},"，":{"docs":{},"从":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"2":{"docs":{},"中":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"2":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"先":{"docs":{},"将":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"到":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"2":{"docs":{},"中":{"docs":{},"再":{"docs":{},"从":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"2":{"docs":{},"中":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806}}}}}}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.03496503496503497}},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"）":{"docs":{},"保":{"docs":{},"存":{"docs":{},"着":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"（":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"即":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"中":{"docs":{},"取":{"docs":{},"得":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"只":{"docs":{},"有":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}}}}}}}}}},"p":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.017241379310344827}},")":{"docs":{},";":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"e":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218}}}},"1":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}},"docs":{}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}},"2":{"docs":{},")":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}},"docs":{}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}}}},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}},",":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218}}},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"'":{"docs":{},"*":{"docs":{},"'":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835}}},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835}}}}}}},"q":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}},"r":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}},":":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.07092198581560284}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.01532567049808429}},"e":{"docs":{},"”":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.013628620102214651},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.02531645569620253},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.018808777429467086},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.024691358024691357},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.04225352112676056},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.04186046511627907},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.023952095808383235},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0375},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.03546099290780142},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0392156862745098},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.039603960396039604},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.046875},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.04597701149425287},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.04878048780487805},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.01773049645390071},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.07692307692307693},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.03546099290780142},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.03508771929824561},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.026217228464419477},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.037037037037037035},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.019736842105263157},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.02459016393442623},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.02962962962962963},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0392156862745098},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.04526748971193416},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.047619047619047616},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.03508771929824561},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.10909090909090909},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.07692307692307693},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.02247191011235955},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02127659574468085},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0603448275862069},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.04395604395604396},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.024096385542168676},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.058577405857740586},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.04195804195804196},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.03260869565217391},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.038834951456310676},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.015957446808510637},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.02127659574468085},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.022099447513812154},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01834862385321101}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}}}}}},"r":{"docs":{},"i":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.012779552715654952}},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}},")":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.01192504258943782},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.02127659574468085},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.03669724770642202}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}},".":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"y":{"docs":{},"]":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}}}}}}}}},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}}}}},")":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}},";":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.031914893617021274}}}},"[":{"0":{"docs":{},"]":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}},"1":{"docs":{},"]":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}},"docs":{}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"2":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.010830324909747292}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"，":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"与":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":3.351681957186544}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.024390243902439025}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712}},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}},",":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":1.6737588652482267}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.012345679012345678},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}},")":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}},";":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}},"o":{"docs":{},"w":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.037037037037037035},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083}},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358}}}}},"o":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.016736401673640166}}},"和":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{},"同":{"docs":{},"时":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"才":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"或":{"docs":{},"者":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"值":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"都":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"2":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02510460251046025}},")":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02510460251046025}},";":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.016736401673640166}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.016736401673640166}}}}}}}},"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}},")":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.038461538461538464},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.024096385542168676},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},"{":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.03278688524590164},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}},";":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},";":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"加":{"docs":{},"入":{"docs":{},"到":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"中":{"docs":{},"。":{"docs":{},"当":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"且":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02127659574468085},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.017241379310344827},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}}},";":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.017241379310344827},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.03614457831325301},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}},"e":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}}}}}},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}}}}}},"s":{"1":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}}}}}}}}}},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}},"2":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}},")":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"3":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}}},"4":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}},")":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"5":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"6":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},")":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},"/":{"1":{"6":{"docs":{},"位":{"docs":{},"/":{"2":{"docs":{},"字":{"docs":{},"节":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"docs":{}}}},"docs":{}},"docs":{}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}},"z":{"docs":{},"e":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.012779552715654952},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"]":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"(":{"docs":{},")":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},"+":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}},"docs":{}}}}}}}}}}}}}}}}}}},";":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}}}}}}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904}}},"操":{"docs":{},"作":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},")":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.023809523809523808}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"将":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}},"g":{"docs":{},"n":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01834862385321101}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}},"2":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}},"docs":{}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}}}},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}},"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.03508771929824561},"JianZhiOffer/Stack & Queue & PriorityQueue/":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/","tf":2},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.07142857142857142},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.01639344262295082},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.03508771929824561},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}},":":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}},"=":{"3":{"docs":{},",":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"docs":{}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.07142857142857142},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.01639344262295082},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125}}}}}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.02040816326530612},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.032},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.07662835249042145},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.01597444089456869},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.029850746268656716},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024390243902439025}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.030534351145038167},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.016574585635359115}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}},";":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.030534351145038167}}},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712}}}},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}},";":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}}}}}}}}},"r":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.028169014084507043},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":10.102564102564102},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.024},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.056338028169014086},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.022988505747126436},"JianZhiOffer/String/":{"ref":"JianZhiOffer/String/","tf":10},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.053497942386831275},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.047619047619047616},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.022099447513812154}},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}}}}},"b":{"docs":{},"c":{"docs":{},"\"":{"docs":{},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},",":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.009324009324009324},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.013986013986013986}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"）":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"期":{"docs":{},"就":{"docs":{},"确":{"docs":{},"定":{"docs":{},"。":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"如":{"docs":{},"此":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}},")":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.047619047619047616},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},")":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0392156862745098}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}},",":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"\"":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}}}},"e":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"则":{"docs":{},"输":{"docs":{},"出":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},".":{"docs":{},"v":{"docs":{},"m":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"3":{"2":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}},"m":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.009584664536741214},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":3.333333333333333},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010638297872340425}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358}}},")":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625}}},"时":{"docs":{},"，":{"docs":{},"减":{"docs":{},"小":{"docs":{},"h":{"docs":{},"i":{"docs":{},"；":{"docs":{},"当":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}}}}}}}}}}}}}}}},"即":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}},"t":{"docs":{},"r":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":1.6737588652482267},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":2.505524861878453}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}},".":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"m":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"x":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}},"z":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"s":{"1":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"3":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"5":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.024}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.032}}}}}}}}}}}}}}}}}}}}}}}}}},"\"":{"1":{"2":{"3":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}},"docs":{}},"docs":{}},"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"1":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428}}}}}},"2":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428}}}}}},"docs":{}}}}},"普":{"docs":{},"通":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}},"e":{"1":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"docs":{}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}}}}},"docs":{}}}}}}},"docs":{}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.037037037037037035}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"，":{"docs":{},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"而":{"docs":{},"且":{"1":{"docs":{},".":{"8":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}},"e":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"docs":{}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"g":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.03514376996805112}},"[":{"docs":{},"]":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}},"s":{"docs":{},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"，":{"docs":{},"它":{"docs":{},"继":{"docs":{},"承":{"docs":{},"自":{"docs":{},"重":{"docs":{},"入":{"docs":{},"锁":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"JianZhiOffer/Binary Search/":{"ref":"JianZhiOffer/Binary Search/","tf":5}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}}}}},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077}}},".":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}},"(":{"docs":{},")":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077}},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712}}},";":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712}}}},"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712}}}}},"i":{"docs":{},",":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"b":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}}}}}}},"\"":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.012345679012345678}},"$":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}},",":{"docs":{},"\"":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}},"$":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712}}}},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}}}}}}}}},")":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.02097902097902098}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625}},";":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}}},"docs":{}}}}}}}},"j":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}},",":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.022988505747126436},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.02127659574468085}},")":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.014184397163120567}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}}}}}}}},"(":{"docs":{},"j":{"docs":{},")":{"docs":{},"并":{"docs":{},"且":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}}},"t":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.034482758620689655}},"r":{"docs":{},"i":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}},"u":{"docs":{},"e":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.012244897959183673},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.010221465076660987},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}},"，":{"0":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"docs":{},"则":{"docs":{},"会":{"docs":{},"将":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"移":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"指":{"docs":{},"定":{"docs":{},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}},"开":{"docs":{},"启":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"需":{"docs":{},"要":{"docs":{},"继":{"docs":{},"承":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02564102564102564},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.016736401673640166},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}},"；":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"y":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{"JianZhiOffer/Tree/":{"ref":"JianZhiOffer/Tree/","tf":10}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"：":{"docs":{},"基":{"docs":{},"于":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"支":{"docs":{},"持":{"docs":{},"有":{"docs":{},"序":{"docs":{},"性":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"根":{"docs":{},"据":{"docs":{},"一":{"docs":{},"个":{"docs":{},"范":{"docs":{},"围":{"docs":{},"查":{"docs":{},"找":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"查":{"docs":{},"找":{"docs":{},"效":{"docs":{},"率":{"docs":{},"不":{"docs":{},"如":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.034482758620689655},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.024096385542168676},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.016736401673640166},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.02097902097902098},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.03260869565217391}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.01597444089456869},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.05128205128205128}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"[":{"docs":{},"]":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}},"e":{"docs":{},";":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}},"i":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"x":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"z":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"y":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}},"i":{"docs":{},"z":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},";":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},",":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},".":{"docs":{},"x":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"y":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"z":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.01192504258943782},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},",":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},",":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"m":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526}},"e":{"docs":{},",":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"docs":{},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},")":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}}}}}}}},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"i":{"docs":{},"l":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.02127659574468085},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}},")":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.037037037037037035},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338}}},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.0425531914893617}}},".":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.019801980198019802},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.01875},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}},"[":{"docs":{},"p":{"1":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542}}}}}},"2":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542}}}}}},"docs":{}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"\"":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125}}}}}}}}}}}}}}}}},";":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}},")":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}},"w":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}}}},"o":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":3.3430420711974107},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":2.521276595744681}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338}}}}}}}}}}}}}},"v":{"1":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"docs":{}}}}}}}}}}},"2":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.014629049111807733},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.034013605442176874}},"a":{"docs":{},"l":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},"u":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.02040816326530612},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.016317016317016316},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526}},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419}}},"[":{"docs":{},"]":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"}":{"docs":{},".":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"”":{"docs":{},"?":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.008359456635318705}}}}},";":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}},"i":{"docs":{},"d":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"s":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":10.037037037037036}},"：":{"docs":{},"和":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"同":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"完":{"docs":{},"全":{"docs":{},"可":{"docs":{},"以":{"docs":{},"由":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"自":{"docs":{},"己":{"docs":{},"来":{"docs":{},"控":{"docs":{},"制":{"docs":{},"；":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.04},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.03125},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.010221465076660987},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.022988505747126436},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.019230769230769232},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.018050541516245487},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.037037037037037035},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.01639344262295082},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.04225352112676056},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.01597444089456869}}}}}}}},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}},")":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}}}}},"x":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0073145245559038665},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010638297872340425},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218}}},",":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"y":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"z":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}},")":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}},"y":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.00816326530612245},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010638297872340425}},")":{"docs":{},";":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},";":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218}}},",":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"z":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}},"%":{"docs":{},"x":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"&":{"docs":{},"(":{"docs":{},"x":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"z":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},",":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}},"{":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.02040816326530612},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.011655011655011656},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.088},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.03125},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.03577512776831346},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.05363984674329502},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.028846153846153848},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.025559105431309903},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.06329113924050633},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.03239289446185998},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.04332129963898917},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.024691358024691357},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.04081632653061224},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.056338028169014086},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0234375},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.037209302325581395},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.041916167664670656},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.06870229007633588},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.04477611940298507},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.024390243902439025},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0375},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.05673758865248227},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.058823529411764705},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.06930693069306931},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.046875},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.04597701149425287},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.07407407407407407},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.036585365853658534},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.06028368794326241},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.05263157894736842},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.03546099290780142},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.03508771929824561},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.06367041198501873},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.05555555555555555},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.030534351145038167},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.07142857142857142},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.047619047619047616},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.06578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.13114754098360656},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.037037037037037035},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.056338028169014086},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.04938271604938271},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.047619047619047616},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.07017543859649122},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.057971014492753624},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.05},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.038461538461538464},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.06741573033707865},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.031914893617021274},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0603448275862069},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.02197802197802198},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.060240963855421686},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.016736401673640166},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.06993006993006994},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.015957446808510637},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.03314917127071823},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.01834862385321101}},"@":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"}":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"}":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.0163265306122449},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.011655011655011656},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.08},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.03571428571428571},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.02555366269165247},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.06130268199233716},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.028846153846153848},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.06329113924050633},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.03343782654127482},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.04332129963898917},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.024691358024691357},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.04081632653061224},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.04225352112676056},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.023255813953488372},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.041916167664670656},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.05343511450381679},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.029850746268656716},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.025},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0425531914893617},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0784313725490196},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.07920792079207921},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.022988505747126436},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.07407407407407407},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.036585365853658534},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.06028368794326241},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.028368794326241134},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.02631578947368421},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.06367041198501873},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.04580152671755725},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.07142857142857142},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.05921052631578947},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.13114754098360656},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.04938271604938271},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.03508771929824561},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.028985507246376812},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0375},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.03636363636363636},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.038461538461538464},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.06741573033707865},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.031914893617021274},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.0603448275862069},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.02197802197802198},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.060240963855421686},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.016736401673640166},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.06993006993006994},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.015957446808510637},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.02127659574468085},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.03867403314917127}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}},")":{"docs":{},";":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}},"与":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}},"中":{"docs":{},"，":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}},"#":{"1":{"9":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"docs":{}},"docs":{}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}},"然":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"一":{"docs":{},"步":{"docs":{},"是":{"docs":{},"很":{"docs":{},"费":{"docs":{},"时":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}},"从":{"docs":{},"而":{"docs":{},"保":{"docs":{},"证":{"docs":{},"经":{"docs":{},"常":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"容":{"docs":{},"易":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"机":{"docs":{},"回":{"docs":{},"收":{"docs":{},"掉":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"不":{"docs":{},"经":{"docs":{},"常":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}},"我":{"docs":{},"们":{"docs":{},"希":{"docs":{},"望":{"docs":{},"将":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"当":{"docs":{},"成":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"只":{"docs":{},"在":{"docs":{},"集":{"docs":{},"合":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"指":{"docs":{},"向":{"docs":{},"这":{"docs":{},"个":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"在":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"和":{"docs":{},"该":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"值":{"docs":{},"相":{"docs":{},"等":{"docs":{},"（":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"这":{"docs":{},"个":{"docs":{},"新":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"作":{"docs":{},"为":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}},"元":{"docs":{},"素":{"docs":{},"次":{"docs":{},"序":{"docs":{},"是":{"docs":{},"不":{"docs":{},"变":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"都":{"docs":{},"放":{"docs":{},"入":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"数":{"docs":{},"组":{"docs":{},"容":{"docs":{},"量":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"由":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"去":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"器":{"docs":{},"回":{"docs":{},"收":{"docs":{},")":{"docs":{},"。":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"使":{"docs":{},"用":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"多":{"docs":{},"次":{"docs":{},"调":{"docs":{},"用":{"docs":{},"会":{"docs":{},"取":{"docs":{},"得":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"期":{"docs":{},"将":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}},"引":{"docs":{},"发":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"型":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"含":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"栈":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":10}}}}}}}}}}},"只":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"值":{"docs":{},"：":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"、":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"构":{"docs":{},"建":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}},"要":{"docs":{},"在":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"语":{"docs":{},"句":{"docs":{},"执":{"docs":{},"行":{"docs":{},"中":{"docs":{},"产":{"docs":{},"生":{"docs":{},"了":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"异":{"docs":{},"常":{"docs":{},"对":{"docs":{},"象":{"docs":{},"就":{"docs":{},"会":{"docs":{},"被":{"docs":{},"创":{"docs":{},"建":{"docs":{},"，":{"docs":{},"j":{"docs":{},"r":{"docs":{},"e":{"docs":{},"就":{"docs":{},"会":{"docs":{},"试":{"docs":{},"图":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"异":{"docs":{},"常":{"docs":{},"处":{"docs":{},"理":{"docs":{},"程":{"docs":{},"序":{"docs":{},"来":{"docs":{},"处":{"docs":{},"理":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"处":{"docs":{},"理":{"docs":{},"程":{"docs":{},"序":{"docs":{},"，":{"docs":{},"异":{"docs":{},"常":{"docs":{},"对":{"docs":{},"象":{"docs":{},"就":{"docs":{},"会":{"docs":{},"被":{"docs":{},"异":{"docs":{},"常":{"docs":{},"处":{"docs":{},"理":{"docs":{},"程":{"docs":{},"序":{"docs":{},"接":{"docs":{},"管":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"将":{"docs":{},"引":{"docs":{},"发":{"docs":{},"运":{"docs":{},"行":{"docs":{},"环":{"docs":{},"境":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"j":{"docs":{},"r":{"docs":{},"e":{"docs":{},"终":{"docs":{},"止":{"docs":{},"程":{"docs":{},"序":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"1":{"docs":{},"前":{"docs":{},"面":{"docs":{},"会":{"docs":{},"多":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"来":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"行":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"\"":{"0":{"0":{"0":{"docs":{},"\"":{"docs":{},"也":{"docs":{},"会":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"空":{"docs":{},"行":{"docs":{},"是":{"docs":{},"由":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225},"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.009324009324009324},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"池":{"docs":{},"中":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"不":{"docs":{},"用":{"docs":{},"再":{"docs":{},"指":{"docs":{},"明":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}},"堆":{"docs":{},"中":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}},"很":{"docs":{},"多":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"接":{"docs":{},"口":{"docs":{},"优":{"docs":{},"先":{"docs":{},"于":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"接":{"docs":{},"口":{"docs":{},"没":{"docs":{},"有":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"严":{"docs":{},"格":{"docs":{},"的":{"docs":{},"类":{"docs":{},"层":{"docs":{},"次":{"docs":{},"结":{"docs":{},"构":{"docs":{},"要":{"docs":{},"求":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"地":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"添":{"docs":{},"加":{"docs":{},"行":{"docs":{},"为":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{},"从":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"覆":{"docs":{},"盖":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"进":{"docs":{},"行":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"或":{"docs":{},"者":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"等":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"比":{"docs":{},"较":{"docs":{},"操":{"docs":{},"作":{"docs":{},"前":{"docs":{},"后":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}},"扩":{"docs":{},"容":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"重":{"docs":{},"新":{"docs":{},"放":{"docs":{},"到":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"上":{"docs":{},"。":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"同":{"docs":{},"时":{"docs":{},"允":{"docs":{},"许":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"大":{"docs":{},"大":{"docs":{},"提":{"docs":{},"高":{"docs":{},"了":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"很":{"docs":{},"适":{"docs":{},"合":{"docs":{},"读":{"docs":{},"多":{"docs":{},"写":{"docs":{},"少":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"。":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"上":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"显":{"docs":{},"然":{"docs":{},"和":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"成":{"docs":{},"正":{"docs":{},"比":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"意":{"docs":{},"位":{"docs":{},"置":{"docs":{},"添":{"docs":{},"加":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"更":{"docs":{},"快":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"前":{"docs":{},"面":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"大":{"docs":{},"于":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"则":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"组":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"。":{"docs":{},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},",":{"docs":{},"求":{"docs":{},"出":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"p":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"大":{"docs":{},"于":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"则":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"组":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"。":{"docs":{},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"求":{"docs":{},"出":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"[":{"7":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"在":{"0":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655}}},"docs":{}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"删":{"docs":{},"除":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"链":{"docs":{},"表":{"1":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"（":{"docs":{},"每":{"docs":{},"个":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"相":{"docs":{},"同":{"docs":{},"）":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"都":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"列":{"docs":{},"都":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{},"请":{"docs":{},"完":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"含":{"docs":{},"有":{"docs":{},"该":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"(":{"0":{"docs":{"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464}}},"docs":{}}}}}}},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"循":{"docs":{},"环":{"docs":{},"不":{"docs":{},"变":{"docs":{},"式":{"docs":{},"中":{"docs":{},"，":{"docs":{},"l":{"docs":{},"o":{"docs":{},"指":{"docs":{},"向":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"增":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"h":{"docs":{},"i":{"docs":{},"指":{"docs":{},"向":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"增":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"里":{"docs":{},"循":{"docs":{},"环":{"docs":{},"条":{"docs":{},"件":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"确":{"docs":{},"保":{"docs":{},"数":{"docs":{},"据":{"docs":{},"被":{"docs":{},"平":{"docs":{},"均":{"docs":{},"分":{"docs":{},"配":{"docs":{},"到":{"docs":{},"两":{"docs":{},"个":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"，":{"docs":{},"即":{"docs":{},"两":{"docs":{},"个":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"之":{"docs":{},"差":{"docs":{},"不":{"docs":{},"能":{"docs":{},"超":{"docs":{},"过":{"1":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"实":{"docs":{},"现":{"docs":{},"实":{"docs":{},"现":{"docs":{},"平":{"docs":{},"均":{"docs":{},"分":{"docs":{},"配":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"约":{"docs":{},"定":{"docs":{},"在":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"目":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"时":{"docs":{},"把":{"docs":{},"数":{"docs":{},"据":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"还":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"都":{"docs":{},"要":{"docs":{},"小":{"docs":{},"于":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"当":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"目":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"约":{"docs":{},"定":{"docs":{},"会":{"docs":{},"把":{"docs":{},"数":{"docs":{},"据":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"比":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"数":{"docs":{},"据":{"docs":{},"要":{"docs":{},"小":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"办":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"把":{"docs":{},"数":{"docs":{},"据":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"拿":{"docs":{},"出":{"docs":{},"此":{"docs":{},"时":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"即":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"大":{"docs":{},"于":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"当":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"比":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"数":{"docs":{},"据":{"docs":{},"要":{"docs":{},"大":{"docs":{},"时":{"docs":{},"同":{"docs":{},"理":{"docs":{},"进":{"docs":{},"行":{"docs":{},"分":{"docs":{},"析":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"在":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"前":{"docs":{},"所":{"docs":{},"有":{"docs":{},"小":{"docs":{},"于":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"数":{"docs":{},"构":{"docs":{},"成":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"大":{"docs":{},"于":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"数":{"docs":{},"构":{"docs":{},"成":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{},"据":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"划":{"docs":{},"分":{"docs":{},"出":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"都":{"docs":{},"比":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"小":{"docs":{},"，":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"的":{"docs":{},"值":{"docs":{},"都":{"docs":{},"比":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"大":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"小":{"docs":{},"于":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"该":{"docs":{},"序":{"docs":{},"列":{"docs":{},"不":{"docs":{},"是":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{},"接":{"docs":{},"着":{"docs":{},"递":{"docs":{},"归":{"docs":{},"得":{"docs":{},"在":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"继":{"docs":{},"续":{"docs":{},"判":{"docs":{},"断":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"池":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}},"都":{"docs":{},"有":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"与":{"docs":{},"其":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"包":{"docs":{},"装":{"docs":{},"类":{"docs":{},"型":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"使":{"docs":{},"用":{"docs":{},"自":{"docs":{},"动":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"与":{"docs":{},"拆":{"docs":{},"箱":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"于":{"docs":{},"动":{"docs":{},"态":{"docs":{},"数":{"docs":{},"组":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}},"；":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}}}}}}}}}},"堆":{"docs":{},"或":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}}}}}},"实":{"docs":{},"例":{"docs":{},"使":{"docs":{},"用":{"docs":{},"自":{"docs":{},"动":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"并":{"docs":{},"且":{"docs":{},"值":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"会":{"docs":{},"引":{"docs":{},"用":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"：":{"docs":{},"每":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"就":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"它":{"docs":{},"与":{"docs":{},"该":{"docs":{},"实":{"docs":{},"例":{"docs":{},"同":{"docs":{},"生":{"docs":{},"共":{"docs":{},"死":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}},"了":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"上":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"最":{"docs":{},"主":{"docs":{},"要":{"docs":{},"的":{"docs":{},"差":{"docs":{},"别":{"docs":{},"是":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"操":{"docs":{},"作":{"docs":{},"同":{"docs":{},"样":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}},"不":{"docs":{},"用":{"docs":{},"担":{"docs":{},"心":{"docs":{},"会":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{},"（":{"docs":{},"伊":{"docs":{},"甸":{"docs":{},"园":{"docs":{},"）":{"docs":{},"；":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}},"这":{"docs":{},"些":{"docs":{},"老":{"docs":{},"对":{"docs":{},"象":{"docs":{},"会":{"docs":{},"被":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"器":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"和":{"docs":{},"它":{"docs":{},"的":{"docs":{},"镜":{"docs":{},"像":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"它":{"docs":{},"是":{"docs":{},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"用":{"docs":{},"来":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"和":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}},"且":{"docs":{},"不":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"数":{"docs":{},"据":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"。":{"docs":{},"它":{"docs":{},"是":{"docs":{},"遗":{"docs":{},"留":{"docs":{},"类":{"docs":{},"，":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"去":{"docs":{},"使":{"docs":{},"用":{"docs":{},"它":{"docs":{},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"覆":{"docs":{},"盖":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"这":{"docs":{},"在":{"docs":{},"实":{"docs":{},"现":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}},"发":{"docs":{},"包":{"docs":{},"下":{"docs":{},"的":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}},"拆":{"docs":{},"箱":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"数":{"docs":{},"据":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"类":{"docs":{},"型":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":10.004081632653062}}}},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"：":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"不":{"docs":{},"能":{"docs":{},"读":{"docs":{},"取":{"docs":{},"实":{"docs":{},"时":{"docs":{},"性":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"部":{"docs":{},"分":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"还":{"docs":{},"未":{"docs":{},"同":{"docs":{},"步":{"docs":{},"到":{"docs":{},"读":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"。":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":10}}}}}}}}},"组":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},"。":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"内":{"docs":{},"容":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"都":{"docs":{},"会":{"docs":{},"指":{"docs":{},"向":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"之":{"docs":{},"后":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"再":{"docs":{},"引":{"docs":{},"用":{"docs":{},"其":{"docs":{},"它":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"并":{"docs":{},"且":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"储":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":10}}}}}}}}}}}}},"的":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":10}}}}}},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":10}}}}}}},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":10}}}}}}}}}}}}}},"量":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}},"值":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"次":{"docs":{},"方":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":10}}}}}}}},"字":{"docs":{},"在":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":10}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"在":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"池":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"的":{"docs":{},"话":{"docs":{},"就":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"池":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"。":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"写":{"docs":{},"，":{"docs":{},"r":{"docs":{},"取":{"3":{"1":{"docs":{},"，":{"docs":{},"r":{"docs":{},"进":{"docs":{},"制":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"位":{"docs":{},"取":{"1":{"7":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"该":{"docs":{},"r":{"docs":{},"进":{"docs":{},"制":{"docs":{},"整":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"作":{"docs":{},"|":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"多":{"docs":{},"个":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"是":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"导":{"docs":{},"致":{"docs":{},"集":{"docs":{},"合":{"docs":{},"添":{"docs":{},"加":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"等":{"docs":{},"价":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"等":{"docs":{},"价":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"也":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}},"它":{"docs":{},"不":{"docs":{},"是":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"就":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"也":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"确":{"docs":{},"定":{"docs":{},"该":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"强":{"docs":{},"制":{"docs":{},"指":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{},"来":{"docs":{},"存":{"docs":{},"放":{"docs":{},"。":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"创":{"docs":{},"建":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}},"，":{"0":{"docs":{},":":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"docs":{}}},"取":{"docs":{},"得":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"将":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}},"会":{"docs":{},"先":{"docs":{},"从":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}},"应":{"docs":{},"当":{"docs":{},"总":{"docs":{},"是":{"docs":{},"覆":{"docs":{},"盖":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"确":{"docs":{},"定":{"docs":{},"）":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}},"扩":{"docs":{},"容":{"docs":{},"，":{"docs":{},"新":{"docs":{},"容":{"docs":{},"量":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}},"）":{"docs":{},"默":{"docs":{},"认":{"docs":{},"都":{"docs":{},"是":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}},"；":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"来":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"即":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"又":{"docs":{},"有":{"docs":{},"风":{"docs":{},"险":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"。":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"容":{"docs":{},"量":{"docs":{},"足":{"docs":{},"够":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"够":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"不":{"docs":{},"变":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"签":{"docs":{},"名":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"子":{"docs":{},"类":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"是":{"docs":{},"重":{"docs":{},"写":{"docs":{},"基":{"docs":{},"类":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"在":{"docs":{},"子":{"docs":{},"类":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"隐":{"docs":{},"式":{"docs":{},"地":{"docs":{},"被":{"docs":{},"指":{"docs":{},"定":{"docs":{},"为":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"在":{"docs":{},"节":{"docs":{},"点":{"docs":{},"多":{"docs":{},"于":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}},"返":{"docs":{},"回":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"具":{"docs":{},"体":{"docs":{},"大":{"docs":{},"小":{"docs":{},"没":{"docs":{},"有":{"docs":{},"明":{"docs":{},"确":{"docs":{},"规":{"docs":{},"定":{"docs":{},"。":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}},"标":{"docs":{},"识":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"编":{"docs":{},"码":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}},"支":{"docs":{},"持":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"实":{"docs":{},"现":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"功":{"docs":{},"能":{"docs":{},"。":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"由":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}},"每":{"docs":{},"次":{"docs":{},"都":{"docs":{},"会":{"docs":{},"新":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"；":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}},"扩":{"docs":{},"容":{"docs":{},"请":{"docs":{},"求":{"docs":{},"其":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}},"选":{"docs":{},"取":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{},"和":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"2":{"docs":{},"中":{"docs":{},"的":{"docs":{},"较":{"docs":{},"小":{"docs":{},"者":{"docs":{},"作":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"递":{"docs":{},"归":{"docs":{},"构":{"docs":{},"造":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"从":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"左":{"docs":{},"上":{"docs":{},"角":{"docs":{},"开":{"docs":{},"始":{"docs":{},"一":{"docs":{},"轮":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"每":{"docs":{},"轮":{"docs":{},"打":{"docs":{},"印":{"docs":{},"包":{"docs":{},"括":{"docs":{},"从":{"docs":{},"左":{"docs":{},"向":{"docs":{},"右":{"docs":{},"、":{"docs":{},"从":{"docs":{},"上":{"docs":{},"向":{"docs":{},"下":{"docs":{},"、":{"docs":{},"从":{"docs":{},"右":{"docs":{},"向":{"docs":{},"左":{"docs":{},"以":{"docs":{},"及":{"docs":{},"从":{"docs":{},"下":{"docs":{},"向":{"docs":{},"上":{"docs":{},"四":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{},"的":{"docs":{},"打":{"docs":{},"印":{"docs":{},"都":{"docs":{},"有":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"前":{"docs":{},"提":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"从":{"docs":{},"上":{"docs":{},"向":{"docs":{},"下":{"docs":{},"打":{"docs":{},"印":{"docs":{},"需":{"docs":{},"要":{"docs":{},"当":{"docs":{},"前":{"docs":{},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"至":{"docs":{},"少":{"docs":{},"包":{"docs":{},"含":{"docs":{},"两":{"docs":{},"行":{"docs":{},"，":{"docs":{},"从":{"docs":{},"右":{"docs":{},"向":{"docs":{},"左":{"docs":{},"打":{"docs":{},"印":{"docs":{},"需":{"docs":{},"要":{"docs":{},"当":{"docs":{},"前":{"docs":{},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"至":{"docs":{},"少":{"docs":{},"包":{"docs":{},"含":{"docs":{},"两":{"docs":{},"行":{"docs":{},"两":{"docs":{},"列":{"docs":{},"，":{"docs":{},"从":{"docs":{},"下":{"docs":{},"向":{"docs":{},"上":{"docs":{},"打":{"docs":{},"印":{"docs":{},"需":{"docs":{},"要":{"docs":{},"当":{"docs":{},"前":{"docs":{},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"至":{"docs":{},"少":{"docs":{},"包":{"docs":{},"含":{"docs":{},"三":{"docs":{},"行":{"docs":{},"两":{"docs":{},"列":{"docs":{},"。":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"取":{"docs":{},"出":{"docs":{},"x":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"位":{"docs":{},"数":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"，":{"docs":{},"用":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"链":{"docs":{},"表":{"docs":{},"存":{"docs":{},"储":{"docs":{},"了":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}}}}}},"的":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.012539184952978056},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}},"区":{"docs":{},"别":{"docs":{},"在":{"docs":{},"于":{"docs":{},"：":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"它":{"docs":{},"指":{"docs":{},"向":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}},"方":{"docs":{},"式":{"docs":{},"会":{"docs":{},"在":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}},"新":{"docs":{},"建":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"而":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"以":{"docs":{},"值":{"docs":{},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"传":{"docs":{},"入":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"引":{"docs":{},"用":{"docs":{},"传":{"docs":{},"递":{"docs":{},"。":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}},"而":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"多":{"docs":{},"种":{"docs":{},"访":{"docs":{},"问":{"docs":{},"权":{"docs":{},"限":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"对":{"docs":{},"象":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"替":{"docs":{},"代":{"docs":{},"方":{"docs":{},"案":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"比":{"docs":{},"较":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"效":{"docs":{},"率":{"docs":{},"会":{"docs":{},"更":{"docs":{},"高":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}},"查":{"docs":{},"找":{"docs":{},"效":{"docs":{},"率":{"docs":{},"，":{"docs":{},"且":{"docs":{},"内":{"docs":{},"部":{"docs":{},"使":{"docs":{},"用":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"维":{"docs":{},"护":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}},"实":{"docs":{},"现":{"docs":{},"也":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"过":{"docs":{},"长":{"docs":{},"时":{"docs":{},"会":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}},"改":{"docs":{},"动":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"结":{"docs":{},"构":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}},"临":{"docs":{},"界":{"docs":{},"值":{"docs":{},"，":{"docs":{},"当":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"容":{"docs":{},"量":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"重":{"docs":{},"新":{"docs":{},"插":{"docs":{},"入":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"是":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"但":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"无":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"话":{"docs":{},"就":{"docs":{},"更":{"docs":{},"新":{"docs":{},"这":{"docs":{},"个":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"的":{"docs":{},"值":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"候":{"docs":{},"才":{"docs":{},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"将":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}},"缓":{"docs":{},"存":{"docs":{},"中":{"docs":{},"特":{"docs":{},"别":{"docs":{},"有":{"docs":{},"用":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"移":{"docs":{},"除":{"docs":{},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"久":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"保":{"docs":{},"证":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"足":{"docs":{},"够":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"都":{"docs":{},"是":{"docs":{},"热":{"docs":{},"点":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"小":{"docs":{},"超":{"docs":{},"过":{"docs":{},"了":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}},"类":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"型":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}},"组":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"，":{"docs":{},"而":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"没":{"docs":{},"有":{"docs":{},"这":{"docs":{},"种":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"改":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"似":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"同":{"docs":{},"一":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"同":{"docs":{},"时":{"docs":{},"写":{"docs":{},"入":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"用":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"就":{"docs":{},"是":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"数":{"docs":{},"据":{"docs":{},"如":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}},"。":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}},"缓":{"docs":{},"存":{"docs":{},"池":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}},"：":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"会":{"docs":{},"在":{"docs":{},"自":{"docs":{},"动":{"docs":{},"装":{"docs":{},"箱":{"docs":{},"过":{"docs":{},"程":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}},"上":{"docs":{},"、":{"docs":{},"下":{"docs":{},"、":{"docs":{},"左":{"docs":{},"、":{"docs":{},"右":{"4":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}}}}},"docs":{}}}}}}}},"数":{"docs":{},"值":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":10}}}}}}}}}},"装":{"docs":{},"箱":{"docs":{"Java/Java基础/数据类型.html":{"ref":"Java/Java基础/数据类型.html","tf":0.004081632653061225}}},"载":{"docs":{},"因":{"docs":{},"子":{"docs":{},"，":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"\"":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.012345679012345678}},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"\"":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}},"，":{"docs":{},"#":{"3":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"docs":{}}},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"b":{"docs":{},"b":{"docs":{},"\"":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}}},"a":{"docs":{},"\"":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}},"b":{"docs":{},"b":{"docs":{},"b":{"docs":{},"\"":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}},"b":{"docs":{},"b":{"docs":{},"\"":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}},"\"":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}},"a":{"docs":{},"b":{"docs":{},"\"":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}},"a":{"docs":{},"d":{"docs":{},"\"":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}},"实":{"docs":{},"例":{"docs":{},"变":{"docs":{},"量":{"docs":{},"\"":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"\"":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}},"=":{"docs":{},"\"":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"v":{"1":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"2":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"3":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"docs":{}},"c":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"b":{"docs":{},"b":{"docs":{},"d":{"docs":{},"\"":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}},"\"":{"docs":{},";":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.01646090534979424},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.016574585635359115}}}},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}},",":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808}}},"%":{"2":{"0":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808}}}}}},"docs":{}},"docs":{}},"p":{"docs":{},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"\"":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"w":{"docs":{},"\"":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}}},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}},"#":{"1":{"8":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}},"9":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}}},"docs":{}},"2":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}}},"3":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993}}},"4":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"docs":{}},"*":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.019169329073482427},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.022900763358778626},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}},"/":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.011655011655011656},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.02631578947368421},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}},"]":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"是":{"docs":{},"m":{"docs":{},"，":{"docs":{},"小":{"docs":{},"于":{"docs":{},"m":{"docs":{},"的":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"已":{"docs":{},"经":{"docs":{},"求":{"docs":{},"出":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"求":{"docs":{},"出":{"docs":{},"m":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"是":{"docs":{},"多":{"docs":{},"少":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"m":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"分":{"docs":{},"别":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.028169014084507043},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.016574585635359115}}},"，":{"docs":{},"现":{"docs":{},"在":{"docs":{},"要":{"docs":{},"求":{"docs":{},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"n":{"docs":{},"，":{"docs":{},"请":{"docs":{},"你":{"docs":{},"输":{"docs":{},"出":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"的":{"docs":{},"第":{"docs":{},"n":{"docs":{},"项":{"docs":{},"（":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"第":{"0":{"docs":{},"项":{"docs":{},"为":{"0":{"docs":{},"）":{"docs":{},"。":{"docs":{},"n":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625}}}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"发":{"docs":{},"现":{"docs":{},"每":{"docs":{},"一":{"docs":{},"位":{"docs":{},"上":{"docs":{},"其":{"docs":{},"实":{"docs":{},"都":{"docs":{},"是":{"docs":{},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"个":{"0":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"e":{"1":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.010221465076660987}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0068143100511073255}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"2":{"docs":{},",":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}}},"docs":{}}}}}}},"2":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.013628620102214651}}},"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.011494252873563218},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}},"s":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.01044932079414838},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}}},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}}},"[":{"docs":{},"]":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0041797283176593526}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"]":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.014184397163120567}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.022099447513812154}},"i":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.021739130434782608}}}}}}}}}},"x":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}},"+":{"1":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}},"docs":{}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.010221465076660987}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.010221465076660987}},"e":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"程":{"docs":{},"序":{"docs":{},"崩":{"docs":{},"溃":{"docs":{},"并":{"docs":{},"且":{"docs":{},"无":{"docs":{},"法":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"。":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}},")":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}},"o":{"docs":{},"n":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.02127659574468085}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.02127659574468085},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.027522935779816515}},"e":{"docs":{},":":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}}}},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"e":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.07142857142857142}}}}}},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}},",":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}},"[":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"i":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}},")":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}}}}},"e":{"docs":{},"n":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.034013605442176874}},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}},"o":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}},"2":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}},"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}},".":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}},"u":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.014423076923076924}},"o":{"docs":{},"f":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.011494252873563218}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},":":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.02127659574468085},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.027522935779816515}}}}}}}},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}},";":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"b":{"docs":{},"j":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.008517887563884156},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419}},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":10.001703577512776}}}}}}},"[":{"docs":{},"]":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.02531645569620253}}}},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}},"(":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}},"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}},"n":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}},"/":{"docs":{},"m":{"docs":{},")":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"k":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}}},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.014423076923076924},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}},"e":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.009615384615384616},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},";":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}},"s":{"docs":{},".":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},";":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}},"i":{"docs":{},"]":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.057971014492753624}}}}}}}}}}}}}},"n":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}},"u":{"docs":{},"s":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.006993006993006993},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}},"t":{"docs":{},"f":{"8":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}},"docs":{}}},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"o":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}}}},"p":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}},"下":{"docs":{},"面":{"docs":{},"示":{"docs":{},"例":{"docs":{},"中":{"docs":{},"，":{"docs":{},"s":{"1":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"docs":{}}}}}},"是":{"docs":{},"对":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"，":{"docs":{},"新":{"docs":{},"建":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"等":{"docs":{},"价":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"它":{"docs":{},"们":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"书":{"docs":{},"中":{"docs":{},"该":{"docs":{},"题":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{},"一":{"docs":{},"半":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"它":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"比":{"docs":{},"其":{"docs":{},"他":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"的":{"docs":{},"和":{"docs":{},"还":{"docs":{},"要":{"docs":{},"多":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"保":{"docs":{},"存":{"docs":{},"当":{"docs":{},"前":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"最":{"docs":{},"多":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"用":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"保":{"docs":{},"存":{"docs":{},"它":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"和":{"docs":{},"其":{"docs":{},"他":{"docs":{},"数":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"抵":{"docs":{},"消":{"docs":{},"后":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"和":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"则":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"和":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"则":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"称":{"docs":{},"它":{"docs":{},"为":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"它":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{},"每":{"docs":{},"次":{"docs":{},"可":{"docs":{},"以":{"docs":{},"确":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"在":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"正":{"docs":{},"确":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"当":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"值":{"docs":{},"是":{"docs":{},"n":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"性":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"参":{"docs":{},"数":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"在":{"docs":{},"作":{"docs":{},"为":{"docs":{},"网":{"docs":{},"络":{"docs":{},"连":{"docs":{},"接":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"如":{"docs":{},"果":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"天":{"docs":{},"生":{"docs":{},"具":{"docs":{},"备":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"安":{"docs":{},"全":{"docs":{},"地":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"插":{"docs":{},"在":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"适":{"docs":{},"合":{"docs":{},"内":{"docs":{},"存":{"docs":{},"敏":{"docs":{},"感":{"docs":{},"以":{"docs":{},"及":{"docs":{},"对":{"docs":{},"实":{"docs":{},"时":{"docs":{},"性":{"docs":{},"要":{"docs":{},"求":{"docs":{},"很":{"docs":{},"高":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"。":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"随":{"docs":{},"着":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"推":{"docs":{},"移":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"过":{"docs":{},"这":{"docs":{},"里":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"要":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"支":{"docs":{},"持":{"docs":{},"；":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"放":{"docs":{},"入":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"接":{"docs":{},"口":{"docs":{},"想":{"docs":{},"要":{"docs":{},"添":{"docs":{},"加":{"docs":{},"新":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"要":{"docs":{},"修":{"docs":{},"改":{"docs":{},"所":{"docs":{},"有":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"该":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"类":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"完":{"docs":{},"全":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"的":{"docs":{},"类":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"它":{"docs":{},"不":{"docs":{},"能":{"docs":{},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}},"以":{"docs":{},"下":{"docs":{},"是":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"使":{"docs":{},"用":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}},"上":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"了":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"右":{"docs":{},"上":{"docs":{},"角":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{},"数":{"docs":{},"字":{"docs":{},"等":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{},"数":{"docs":{},"字":{"docs":{},"小":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"则":{"docs":{},"该":{"docs":{},"数":{"docs":{},"字":{"docs":{},"所":{"docs":{},"在":{"docs":{},"行":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"都":{"docs":{},"小":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"剔":{"docs":{},"除":{"docs":{},"该":{"docs":{},"行":{"docs":{},"，":{"docs":{},"即":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"docs":{},"+":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{},"数":{"docs":{},"字":{"docs":{},"大":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"则":{"docs":{},"该":{"docs":{},"数":{"docs":{},"字":{"docs":{},"所":{"docs":{},"在":{"docs":{},"列":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"大":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"剔":{"docs":{},"除":{"docs":{},"该":{"docs":{},"列":{"docs":{},"，":{"docs":{},"即":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"一":{"docs":{},"共":{"docs":{},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"（":{"docs":{},"前":{"docs":{},"提":{"docs":{},"是":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"：":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}},"接":{"docs":{},"口":{"docs":{},"：":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}},"选":{"docs":{},"择":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}},"了":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"降":{"docs":{},"低":{"docs":{},"重":{"docs":{},"新":{"docs":{},"计":{"docs":{},"算":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"机":{"docs":{},"制":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"并":{"docs":{},"发":{"docs":{},"更":{"docs":{},"新":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"核":{"docs":{},"心":{"docs":{},"类":{"docs":{},"为":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}}}}}}}}}}}}}}}}},"拉":{"docs":{},"链":{"docs":{},"法":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"存":{"docs":{},"放":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"值":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"新":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"插":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"部":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"栈":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"刚":{"docs":{},"好":{"docs":{},"是":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"直":{"docs":{},"接":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"。":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"把":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"压":{"docs":{},"入":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"把":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"需":{"docs":{},"要":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"了":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"没":{"docs":{},"有":{"docs":{},"找":{"docs":{},"到":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"需":{"docs":{},"要":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"该":{"docs":{},"序":{"docs":{},"列":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"不":{"docs":{},"变":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"引":{"docs":{},"用":{"docs":{},"其":{"docs":{},"它":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"被":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"本":{"docs":{},"身":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"值":{"docs":{},"不":{"docs":{},"变":{"docs":{},"；":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}},"值":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},"也":{"docs":{},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"计":{"docs":{},"算":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}},"经":{"docs":{},"常":{"docs":{},"被":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}},"对":{"docs":{},"桶":{"docs":{},"个":{"docs":{},"数":{"docs":{},"取":{"docs":{},"模":{"docs":{},"：":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"%":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}},"来":{"docs":{},"调":{"docs":{},"整":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"空":{"docs":{},"间":{"docs":{},"效":{"docs":{},"率":{"docs":{},"和":{"docs":{},"时":{"docs":{},"间":{"docs":{},"效":{"docs":{},"率":{"docs":{},"都":{"docs":{},"能":{"docs":{},"得":{"docs":{},"到":{"docs":{},"保":{"docs":{},"证":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"部":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"没":{"docs":{},"有":{"docs":{},"改":{"docs":{},"变":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"维":{"docs":{},"护":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"维":{"docs":{},"护":{"docs":{},"插":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"或":{"docs":{},"者":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"占":{"docs":{},"用":{"docs":{},"：":{"docs":{},"在":{"docs":{},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"复":{"docs":{},"制":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"内":{"docs":{},"存":{"docs":{},"占":{"docs":{},"用":{"docs":{},"为":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"两":{"docs":{},"倍":{"docs":{},"左":{"docs":{},"右":{"docs":{},"；":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"测":{"docs":{},"试":{"docs":{},"类":{"docs":{},"，":{"docs":{},"其":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"大":{"docs":{},"顶":{"docs":{},"堆":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}},"新":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"用":{"docs":{},"来":{"docs":{},"保":{"docs":{},"存":{"docs":{},"相":{"docs":{},"加":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"将":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"相":{"docs":{},"加":{"docs":{},"得":{"docs":{},"到":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"缓":{"docs":{},"存":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"用":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"任":{"docs":{},"何":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"异":{"docs":{},"常":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"类":{"docs":{},"，":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"种":{"docs":{},"：":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"键":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"使":{"docs":{},"用":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}},"先":{"docs":{},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"从":{"docs":{},"头":{"docs":{},"到":{"docs":{},"尾":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"找":{"docs":{},"到":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"保":{"docs":{},"存":{"docs":{},"已":{"docs":{},"经":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"过":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"已":{"docs":{},"经":{"docs":{},"包":{"docs":{},"含":{"docs":{},"在":{"docs":{},"了":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"里":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"我":{"docs":{},"们":{"docs":{},"看":{"docs":{},"看":{"docs":{},"能":{"docs":{},"不":{"docs":{},"能":{"docs":{},"把":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"优":{"docs":{},"化":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"到":{"docs":{},"题":{"docs":{},"目":{"docs":{},"中":{"docs":{},"说":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"都":{"docs":{},"在":{"0":{"docs":{"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"和":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"按":{"docs":{},"照":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"放":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"。":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"求":{"docs":{},"出":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"和":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"确":{"docs":{},"定":{"docs":{},"新":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"指":{"docs":{},"示":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"p":{"1":{"docs":{},"和":{"docs":{},"指":{"docs":{},"示":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"p":{"2":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"向":{"docs":{},"新":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"按":{"docs":{},"照":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"放":{"docs":{},"入":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"和":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"类":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"记":{"docs":{},"录":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"时":{"docs":{},"向":{"docs":{},"s":{"docs":{},"b":{"docs":{},"中":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"。":{"docs":{},"当":{"docs":{},"需":{"docs":{},"要":{"docs":{},"找":{"docs":{},"出":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"时":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"题":{"docs":{},"目":{"docs":{},"“":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"”":{"docs":{},"中":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"s":{"docs":{},"b":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"记":{"docs":{},"录":{"docs":{},"s":{"docs":{},"b":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"s":{"docs":{},"b":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"当":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"很":{"docs":{},"多":{"docs":{},"时":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"调":{"docs":{},"用":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"找":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"时":{"docs":{},"都":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"时":{"docs":{},"间":{"docs":{},"开":{"docs":{},"销":{"docs":{},"会":{"docs":{},"很":{"docs":{},"大":{"docs":{},"。":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"是":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"记":{"docs":{},"录":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"各":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"2":{"5":{"6":{"docs":{},"。":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"，":{"docs":{},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"置":{"docs":{},"为":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},"性":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"知":{"docs":{},"b":{"docs":{},"是":{"docs":{},"a":{"docs":{},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}}}}}}}}}}},"和":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.009324009324009324},"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.013392857142857142},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726},"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.034482758620689655},"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"扩":{"docs":{},"容":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"：":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"、":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"、":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"s":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":10}}}}}},"连":{"docs":{},"续":{"docs":{},"正":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"数":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"和":{"docs":{},"为":{"docs":{},"s":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"正":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{},"（":{"docs":{},"至":{"docs":{},"少":{"docs":{},"含":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"1":{"5":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"1":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}},"docs":{}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"为":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"保":{"docs":{},"存":{"docs":{},"左":{"docs":{},"边":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"保":{"docs":{},"存":{"docs":{},"右":{"docs":{},"边":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"p":{"1":{"docs":{},"和":{"docs":{},"p":{"2":{"docs":{},"分":{"docs":{},"别":{"docs":{},"指":{"docs":{},"向":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"和":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"是":{"docs":{},"采":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"改":{"docs":{},"变":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"值":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"原":{"docs":{},"对":{"docs":{},"象":{"docs":{},"该":{"docs":{},"字":{"docs":{},"段":{"docs":{},"值":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"改":{"docs":{},"变":{"docs":{},"的":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"地":{"docs":{},"址":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"。":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"尝":{"docs":{},"试":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"按":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"就":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"间":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"数":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"顺":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"向":{"docs":{},"后":{"docs":{},"继":{"docs":{},"续":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"统":{"docs":{},"计":{"docs":{},"其":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"效":{"docs":{},"率":{"docs":{},"很":{"docs":{},"低":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"[":{"7":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"求":{"docs":{},"调":{"docs":{},"整":{"docs":{},"后":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"和":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"，":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"和":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"相":{"docs":{},"对":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"保":{"docs":{},"持":{"docs":{},"不":{"docs":{},"变":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"做":{"docs":{},"呢":{"docs":{},"？":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"本":{"docs":{},"身":{"docs":{},"已":{"docs":{},"经":{"docs":{},"是":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"为":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"值":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}},"奇":{"docs":{},"数":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"和":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"不":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"判":{"docs":{},"断":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}}}}}}}}}},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"比":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"的":{"docs":{},"值":{"docs":{},"大":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"不":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}}}}},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"作":{"docs":{},"为":{"docs":{},"新":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}}}}}}}}}}}}}}},"采":{"docs":{},"用":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"法":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"找":{"docs":{},"出":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{},"k":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{},"n":{"docs":{},"，":{"docs":{},"则":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"k":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"不":{"docs":{},"是":{"docs":{},"最":{"docs":{},"优":{"docs":{},"的":{"docs":{},"。":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{},"当":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"时":{"docs":{},"，":{"docs":{},"处":{"docs":{},"于":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"被":{"docs":{},"删":{"docs":{},"除":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"在":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"这":{"docs":{},"符":{"docs":{},"合":{"docs":{},"队":{"docs":{},"列":{"docs":{},"先":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"。":{"docs":{},"正":{"docs":{},"常":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"整":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"才":{"docs":{},"能":{"docs":{},"找":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"数":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"看":{"docs":{},"看":{"docs":{},"能":{"docs":{},"不":{"docs":{},"能":{"docs":{},"在":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"找":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"数":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"并":{"docs":{},"不":{"docs":{},"把":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"里":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"都":{"docs":{},"存":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"只":{"docs":{},"把":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"成":{"docs":{},"为":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"的":{"docs":{},"数":{"docs":{},"存":{"docs":{},"入":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"队":{"docs":{},"头":{"docs":{},"保":{"docs":{},"存":{"docs":{},"当":{"docs":{},"前":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{},"当":{"docs":{},"把":{"docs":{},"数":{"docs":{},"组":{"docs":{},"前":{"docs":{},"k":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"加":{"docs":{},"入":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"时":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"此":{"docs":{},"时":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"开":{"docs":{},"始":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"保":{"docs":{},"存":{"docs":{},"前":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"中":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"队":{"docs":{},"头":{"docs":{},"就":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"中":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{},"当":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"开":{"docs":{},"始":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"时":{"docs":{},"，":{"docs":{},"一":{"docs":{},"方":{"docs":{},"面":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"和":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"比":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"大":{"docs":{},"，":{"docs":{},"则":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"比":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"成":{"docs":{},"为":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"移":{"docs":{},"除":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"方":{"docs":{},"面":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"代":{"docs":{},"表":{"docs":{},"当":{"docs":{},"前":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"的":{"docs":{},"队":{"docs":{},"头":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"否":{"docs":{},"已":{"docs":{},"经":{"docs":{},"滑":{"docs":{},"出":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"已":{"docs":{},"经":{"docs":{},"滑":{"docs":{},"出":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"其":{"docs":{},"进":{"docs":{},"行":{"docs":{},"移":{"docs":{},"除":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"如":{"docs":{},"何":{"docs":{},"判":{"docs":{},"断":{"docs":{},"当":{"docs":{},"前":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"是":{"docs":{},"否":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"存":{"docs":{},"入":{"docs":{},"数":{"docs":{},"字":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"数":{"docs":{},"值":{"docs":{},"。":{"docs":{},"当":{"docs":{},"队":{"docs":{},"头":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"与":{"docs":{},"当":{"docs":{},"前":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"之":{"docs":{},"差":{"docs":{},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"时":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"已":{"docs":{},"经":{"docs":{},"从":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"中":{"docs":{},"滑":{"docs":{},"出":{"docs":{},"了":{"docs":{},"。":{"docs":{},"在":{"docs":{},"实":{"docs":{},"现":{"docs":{},"上":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"保":{"docs":{},"存":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{},"在":{"docs":{},"存":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"已":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"否":{"docs":{},"小":{"docs":{},"于":{"docs":{},"待":{"docs":{},"存":{"docs":{},"入":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"已":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"小":{"docs":{},"于":{"docs":{},"待":{"docs":{},"存":{"docs":{},"入":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"这":{"docs":{},"些":{"docs":{},"数":{"docs":{},"字":{"docs":{},"已":{"docs":{},"经":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"它":{"docs":{},"们":{"docs":{},"会":{"docs":{},"依":{"docs":{},"次":{"docs":{},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"删":{"docs":{},"除":{"docs":{},"（":{"docs":{},"调":{"docs":{},"用":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"）":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"队":{"docs":{},"列":{"docs":{},"头":{"docs":{},"部":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"已":{"docs":{},"经":{"docs":{},"从":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"中":{"docs":{},"滑":{"docs":{},"出":{"docs":{},"，":{"docs":{},"滑":{"docs":{},"出":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"头":{"docs":{},"部":{"docs":{},"删":{"docs":{},"除":{"docs":{},"（":{"docs":{},"调":{"docs":{},"用":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"）":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"队":{"docs":{},"列":{"docs":{},"头":{"docs":{},"部":{"docs":{},"和":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"都":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"删":{"docs":{},"除":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"也":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"作":{"docs":{},"为":{"docs":{},"数":{"docs":{},"据":{"docs":{},"容":{"docs":{},"器":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"读":{"docs":{},"取":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"即":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"退":{"docs":{},"化":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"时":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"和":{"docs":{},"读":{"docs":{},"取":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"改":{"docs":{},"进":{"docs":{},"的":{"docs":{},"a":{"docs":{},"v":{"docs":{},"l":{"docs":{},"树":{"docs":{},"作":{"docs":{},"为":{"docs":{},"数":{"docs":{},"据":{"docs":{},"容":{"docs":{},"器":{"docs":{},"，":{"docs":{},"将":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"因":{"docs":{},"子":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{},"据":{"docs":{},"之":{"docs":{},"差":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"插":{"docs":{},"入":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"读":{"docs":{},"取":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"（":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"或":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"或":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"值":{"docs":{},"）":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"编":{"docs":{},"程":{"docs":{},"语":{"docs":{},"言":{"docs":{},"没":{"docs":{},"有":{"docs":{},"实":{"docs":{},"现":{"docs":{},"我":{"docs":{},"们":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"这":{"docs":{},"种":{"docs":{},"a":{"docs":{},"v":{"docs":{},"l":{"docs":{},"树":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"再":{"docs":{},"分":{"docs":{},"析":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"中":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"已":{"docs":{},"经":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"，":{"docs":{},"将":{"docs":{},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{},"赋":{"docs":{},"为":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}},"再":{"docs":{},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"把":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},"中":{"docs":{},"的":{"1":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"2":{"docs":{},"中":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"从":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},"中":{"docs":{},"删":{"docs":{},"除":{"1":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"[":{"7":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}},"docs":{}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"1":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}},"docs":{},"t":{"2":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}},"docs":{}}}}},"不":{"docs":{},"要":{"docs":{},"求":{"docs":{},"返":{"docs":{},"回":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"而":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"值":{"docs":{},"的":{"docs":{},"话":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"法":{"docs":{},"做":{"docs":{},"。":{"docs":{},"先":{"docs":{},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"用":{"docs":{},"l":{"docs":{},"o":{"docs":{},"和":{"docs":{},"h":{"docs":{},"i":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"分":{"docs":{},"别":{"docs":{},"指":{"docs":{},"向":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"开":{"docs":{},"头":{"docs":{},"和":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"当":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"和":{"docs":{},"等":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"时":{"docs":{},"，":{"docs":{},"即":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"；":{"docs":{},"当":{"docs":{},"和":{"docs":{},"小":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"向":{"docs":{},"后":{"docs":{},"移":{"docs":{},"动":{"docs":{},"l":{"docs":{},"o":{"docs":{},"以":{"docs":{},"增":{"docs":{},"大":{"docs":{},"和":{"docs":{},"；":{"docs":{},"当":{"docs":{},"和":{"docs":{},"大":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"向":{"docs":{},"前":{"docs":{},"移":{"docs":{},"动":{"docs":{},"h":{"docs":{},"i":{"docs":{},"以":{"docs":{},"减":{"docs":{},"小":{"docs":{},"和":{"docs":{},"。":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"何":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"？":{"docs":{},"如":{"docs":{},"果":{"docs":{},"从":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"读":{"docs":{},"出":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"值":{"docs":{},"排":{"docs":{},"序":{"docs":{},"之":{"docs":{},"后":{"docs":{},"位":{"docs":{},"于":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"从":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"读":{"docs":{},"出":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"值":{"docs":{},"排":{"docs":{},"序":{"docs":{},"之":{"docs":{},"后":{"docs":{},"中":{"docs":{},"间":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"值":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"值":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"；":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"对":{"docs":{},"象":{"docs":{},"）":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":10}}}}}},"流":{"docs":{},"中":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":10}}}}}}}}}}}}}}}},"段":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"存":{"docs":{},"储":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}},"着":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"而":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"（":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"）":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"表":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}},"。":{"docs":{},"它":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"四":{"docs":{},"个":{"docs":{},"字":{"docs":{},"段":{"docs":{},"，":{"docs":{},"从":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}},"结":{"docs":{},"构":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}},"链":{"docs":{},"表":{"docs":{},"节":{"docs":{},"点":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}}}}}}},"在":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"为":{"docs":{},"：":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"对":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"象":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"创":{"docs":{},"建":{"docs":{},"过":{"docs":{},"了":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"会":{"docs":{},"从":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}},"的":{"docs":{},"那":{"docs":{},"一":{"docs":{},"方":{"docs":{},"以":{"docs":{},"为":{"docs":{},"现":{"docs":{},"在":{"docs":{},"连":{"docs":{},"接":{"docs":{},"的":{"docs":{},"是":{"docs":{},"其":{"docs":{},"它":{"docs":{},"主":{"docs":{},"机":{"docs":{},"，":{"docs":{},"而":{"docs":{},"实":{"docs":{},"际":{"docs":{},"情":{"docs":{},"况":{"docs":{},"却":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"转":{"docs":{},"型":{"docs":{},"；":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}},"时":{"docs":{},"就":{"docs":{},"指":{"docs":{},"定":{"docs":{},"大":{"docs":{},"概":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"减":{"docs":{},"少":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}},"于":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"=":{"docs":{},"=":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"=":{"docs":{},"=":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"任":{"docs":{},"何":{"docs":{},"不":{"docs":{},"是":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"称":{"docs":{},"性":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":10}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}},"这":{"docs":{},"部":{"docs":{},"分":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"进":{"docs":{},"行":{"docs":{},"回":{"docs":{},"收":{"docs":{},"。":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}},"右":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"并":{"docs":{},"统":{"docs":{},"计":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"并":{"docs":{},"统":{"docs":{},"计":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}}}}}}}},"复":{"docs":{},"制":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"成":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"和":{"docs":{},"复":{"docs":{},"制":{"docs":{},"链":{"docs":{},"表":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"复":{"docs":{},"制":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"属":{"docs":{},"于":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"期":{"docs":{},"会":{"docs":{},"在":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"放":{"docs":{},"到":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}},"入":{"docs":{},"了":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"节":{"docs":{},"点":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}}}},"我":{"docs":{},"们":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"k":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"前":{"docs":{},"面":{"docs":{},"没":{"docs":{},"有":{"docs":{},"k":{"docs":{},"了":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"个":{"docs":{},"k":{"docs":{},"就":{"docs":{},"是":{"docs":{},"k":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"前":{"docs":{},"面":{"docs":{},"还":{"docs":{},"有":{"docs":{},"k":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"继":{"docs":{},"续":{"docs":{},"在":{"docs":{},"前":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"中":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"k":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"；":{"docs":{},"同":{"docs":{},"理":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"k":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"k":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"算":{"docs":{},"出":{"docs":{},"k":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"了":{"docs":{},"。":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"然":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"统":{"docs":{},"计":{"docs":{},"k":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"k":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"k":{"docs":{},"的":{"docs":{},"左":{"docs":{},"边":{"docs":{},"和":{"docs":{},"右":{"docs":{},"边":{"docs":{},"也":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{},"k":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"docs":{},"当":{"docs":{},"前":{"docs":{},"位":{"docs":{},"置":{"docs":{},"出":{"docs":{},"发":{"docs":{},"分":{"docs":{},"别":{"docs":{},"沿":{"docs":{},"左":{"docs":{},"，":{"docs":{},"右":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"地":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"k":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"在":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"n":{"docs":{},"次":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"上":{"docs":{},"面":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"来":{"docs":{},"看":{"docs":{},"看":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},",":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}}},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"不":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"把":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"的":{"docs":{},"值":{"docs":{},"赋":{"docs":{},"给":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"令":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"向":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"当":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"这":{"docs":{},"么":{"docs":{},"做":{"docs":{},"了":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"从":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"地":{"docs":{},"查":{"docs":{},"找":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"删":{"docs":{},"除":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.013157894736842105}}}}}}}}}}},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"层":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}},"奇":{"docs":{},"数":{"docs":{},"层":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}},"节":{"docs":{},"点":{"docs":{},"在":{"docs":{},"中":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}}}}}}}},"最":{"docs":{},"长":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"0":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"并":{"docs":{},"加":{"1":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"是":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815}},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"才":{"docs":{},"可":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"网":{"docs":{},"络":{"docs":{},"连":{"docs":{},"接":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"，":{"docs":{},"内":{"docs":{},"部":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"。":{"docs":{},"在":{"docs":{},"将":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"传":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"时":{"docs":{},"，":{"docs":{},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"是":{"docs":{},"将":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"以":{"docs":{},"值":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"传":{"docs":{},"递":{"docs":{},"到":{"docs":{},"形":{"docs":{},"参":{"docs":{},"中":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"在":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"使":{"docs":{},"指":{"docs":{},"针":{"docs":{},"引":{"docs":{},"用":{"docs":{},"其":{"docs":{},"它":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"此":{"docs":{},"时":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"是":{"docs":{},"完":{"docs":{},"全":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"在":{"docs":{},"一":{"docs":{},"方":{"docs":{},"改":{"docs":{},"变":{"docs":{},"其":{"docs":{},"所":{"docs":{},"指":{"docs":{},"向":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"时":{"docs":{},"对":{"docs":{},"另":{"docs":{},"一":{"docs":{},"方":{"docs":{},"没":{"docs":{},"有":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"即":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"被":{"docs":{},"当":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"存":{"docs":{},"放":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"否":{"docs":{},"等":{"docs":{},"价":{"docs":{},"。":{"docs":{},"等":{"docs":{},"价":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"一":{"docs":{},"定":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"等":{"docs":{},"价":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"否":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{},"需":{"docs":{},"要":{"docs":{},"抛":{"docs":{},"出":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"海":{"docs":{},"量":{"docs":{},"数":{"docs":{},"据":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"修":{"docs":{},"改":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}}}}},"大":{"docs":{},"于":{"docs":{},"原":{"docs":{},"始":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"开":{"docs":{},"销":{"docs":{},"就":{"docs":{},"比":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"源":{"docs":{},"码":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"到":{"docs":{},"，":{"docs":{},"在":{"docs":{},"将":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"作":{"docs":{},"为":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"参":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"完":{"docs":{},"全":{"docs":{},"复":{"docs":{},"制":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"允":{"docs":{},"许":{"docs":{},"用":{"docs":{},"户":{"docs":{},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"不":{"docs":{},"是":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}},"概":{"docs":{},"览":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}},"深":{"docs":{},"入":{"docs":{},"解":{"docs":{},"析":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"理":{"docs":{},"解":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}},"拷":{"docs":{},"贝":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"用":{"docs":{},"做":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}},"记":{"docs":{},"录":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"统":{"docs":{},"计":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"n":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"从":{"docs":{},"表":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"先":{"docs":{},"向":{"docs":{},"后":{"docs":{},"移":{"docs":{},"动":{"docs":{},"k":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"辅":{"docs":{},"助":{"docs":{},"栈":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"，":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"记":{"docs":{},"录":{"docs":{},"当":{"docs":{},"前":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"。":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"元":{"docs":{},"素":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"小":{"docs":{},"于":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"则":{"docs":{},"同":{"docs":{},"时":{"docs":{},"将":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"加":{"docs":{},"入":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"中":{"docs":{},"；":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"时":{"docs":{},"，":{"docs":{},"原":{"docs":{},"栈":{"docs":{},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"同":{"docs":{},"时":{"docs":{},"执":{"docs":{},"行":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"l":{"docs":{},"o":{"docs":{},"和":{"docs":{},"h":{"docs":{},"i":{"docs":{},"，":{"docs":{},"l":{"docs":{},"o":{"docs":{},"从":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"，":{"docs":{},"h":{"docs":{},"i":{"docs":{},"从":{"docs":{},"尾":{"docs":{},"开":{"docs":{},"始":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"交":{"docs":{},"换":{"docs":{},"l":{"docs":{},"o":{"docs":{},"和":{"docs":{},"h":{"docs":{},"i":{"docs":{},"指":{"docs":{},"示":{"docs":{},"的":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"重":{"docs":{},"复":{"docs":{},"进":{"docs":{},"行":{"docs":{},"直":{"docs":{},"到":{"docs":{},"l":{"docs":{},"o":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"完":{"docs":{},"成":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"入":{"docs":{},"队":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{},"出":{"docs":{},"队":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":10}}}}}}},"队":{"docs":{},"列":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"完":{"docs":{},"成":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.004662004662004662}}}}}},"经":{"docs":{},"常":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"放":{"docs":{},"入":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}},"而":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}},"不":{"docs":{},"是":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}},"行":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"改":{"docs":{},"变":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}},"放":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"常":{"docs":{},"量":{"docs":{},"池":{"docs":{},"中":{"docs":{},"，":{"docs":{},"它":{"docs":{},"属":{"docs":{},"于":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}},"移":{"docs":{},"到":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"永":{"docs":{},"久":{"docs":{},"代":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"有":{"docs":{},"限":{"docs":{},"，":{"docs":{},"在":{"docs":{},"大":{"docs":{},"量":{"docs":{},"使":{"docs":{},"用":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"下":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"。":{"docs":{},"在":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}},"性":{"docs":{},"质":{"docs":{},"和":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"种":{"docs":{},"字":{"docs":{},"面":{"docs":{},"量":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"创":{"docs":{},"建":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"地":{"docs":{},"将":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"放":{"docs":{},"入":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"对":{"docs":{},"于":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"和":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"值":{"docs":{},"的":{"docs":{},"取":{"docs":{},"定":{"docs":{},"不":{"docs":{},"太":{"docs":{},"好":{"docs":{},"想":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"找":{"docs":{},"几":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"算":{"docs":{},"一":{"docs":{},"下":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"反":{"docs":{},"编":{"docs":{},"译":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"以":{"docs":{},"下":{"docs":{},"内":{"docs":{},"容":{"docs":{},"：":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},"。":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}},"制":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{},"r":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"某":{"docs":{},"一":{"docs":{},"位":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"组":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}},"采":{"docs":{},"用":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}},"了":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"）":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"维":{"docs":{},"护":{"docs":{},"着":{"docs":{},"几":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"（":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"）":{"docs":{},"，":{"docs":{},"多":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"同":{"docs":{},"时":{"docs":{},"访":{"docs":{},"问":{"docs":{},"不":{"docs":{},"同":{"docs":{},"分":{"docs":{},"段":{"docs":{},"锁":{"docs":{},"上":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"使":{"docs":{},"其":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"更":{"docs":{},"高":{"docs":{},"（":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"就":{"docs":{},"是":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"来":{"docs":{},"根":{"docs":{},"据":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"和":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"作":{"docs":{},"为":{"docs":{},"数":{"docs":{},"据":{"docs":{},"容":{"docs":{},"器":{"docs":{},"时":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"读":{"docs":{},"取":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"取":{"docs":{},"的":{"docs":{},"是":{"docs":{},"分":{"docs":{},"代":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"：":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}}}},"首":{"docs":{},"先":{"docs":{},"把":{"docs":{"Java/Java基础/String.html":{"ref":"Java/Java基础/String.html","tf":0.002331002331002331}}},"摒":{"docs":{},"弃":{"docs":{},"逐":{"docs":{},"一":{"docs":{},"判":{"docs":{},"断":{"1":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}},"docs":{}}}}}}},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"处":{"docs":{},"理":{"docs":{},"一":{"docs":{},"些":{"docs":{},"无":{"docs":{},"效":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"0":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}},"docs":{}}}}}}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"到":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"也":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"也":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"被":{"docs":{},"删":{"docs":{},"除":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"应":{"docs":{},"该":{"docs":{},"为":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"整":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"用":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"指":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"指":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"和":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"的":{"docs":{},"值":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"移":{"docs":{},"动":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"移":{"docs":{},"动":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"和":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"继":{"docs":{},"续":{"docs":{},"判":{"docs":{},"断":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"即":{"docs":{},"可":{"docs":{},"；":{"docs":{},"当":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"和":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"和":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"链":{"docs":{},"表":{"docs":{},"是":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"比":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"大":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"把":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"，":{"docs":{},"让":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"指":{"docs":{},"向":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"即":{"docs":{},"删":{"docs":{},"除":{"docs":{},"了":{"docs":{},"所":{"docs":{},"有":{"docs":{},"和":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"的":{"docs":{},"值":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"在":{"docs":{},"将":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"指":{"docs":{},"向":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"时":{"docs":{},"，":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"可":{"docs":{},"能":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"这":{"docs":{},"说":{"docs":{},"明":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"新":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"和":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"判":{"docs":{},"断":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"所":{"docs":{},"代":{"docs":{},"表":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"和":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{},"具":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.008}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}}}}}}}}},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}},")":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}},"k":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},";":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}}}}}}}}}},"u":{"docs":{},"g":{"docs":{},"l":{"docs":{},"y":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"k":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}}}},"docs":{}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"k":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}},"c":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}}}}},"“":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":0.016}}}}}},"两":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"”":{"docs":{},"法":{"docs":{},"，":{"docs":{},"即":{"docs":{},"通":{"docs":{},"过":{"docs":{},"两":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"即":{"docs":{},"可":{"docs":{},"找":{"docs":{},"出":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"公":{"docs":{},"共":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"分":{"docs":{},"别":{"docs":{},"指":{"docs":{},"示":{"docs":{},"两":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"时":{"docs":{},"如":{"docs":{},"果":{"docs":{},"第":{"docs":{},"一":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"到":{"docs":{},"达":{"docs":{},"第":{"docs":{},"一":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"时":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"置":{"docs":{},"为":{"docs":{},"第":{"docs":{},"二":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"第":{"docs":{},"二":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"到":{"docs":{},"达":{"docs":{},"第":{"docs":{},"二":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"时":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"置":{"docs":{},"为":{"docs":{},"第":{"docs":{},"一":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"经":{"docs":{},"过":{"docs":{},"一":{"docs":{},"轮":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"后":{"docs":{},"就":{"docs":{},"消":{"docs":{},"除":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"差":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"每":{"docs":{},"次":{"docs":{},"向":{"docs":{},"前":{"docs":{},"前":{"docs":{},"进":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"到":{"docs":{},"达":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"公":{"docs":{},"共":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"采":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"免":{"docs":{},"去":{"docs":{},"了":{"docs":{},"分":{"docs":{},"别":{"docs":{},"计":{"docs":{},"算":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{},"麻":{"docs":{},"烦":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"传":{"docs":{},"递":{"docs":{"Java/Java基础/参数传递.html":{"ref":"Java/Java基础/参数传递.html","tf":10.008}}}}}},"'":{"0":{"docs":{},"'":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}},"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"'":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}},"'":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"'":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"'":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"'":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428}}}}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"'":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"'":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}},"y":{"docs":{},"'":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"'":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"'":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"'":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"'":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}},"x":{"docs":{},"'":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}},"*":{"docs":{},"'":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}},".":{"docs":{},"'":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}},")":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}},"+":{"docs":{},"'":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}}},"#":{"docs":{},"'":{"docs":{},";":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}},"@":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.008928571428571428},"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0068143100511073255},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"从":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"使":{"docs":{},"用":{"docs":{},"上":{"docs":{},"来":{"docs":{},"看":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"多":{"docs":{},"个":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"继":{"docs":{},"承":{"docs":{},"多":{"docs":{},"个":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"计":{"docs":{},"层":{"docs":{},"面":{"docs":{},"上":{"docs":{},"看":{"docs":{},"，":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"种":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"添":{"docs":{},"加":{"docs":{},"元":{"docs":{},"素":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"当":{"docs":{},"需":{"docs":{},"要":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"时":{"docs":{},"，":{"docs":{},"令":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}},"向":{"docs":{},"上":{"docs":{},"（":{"docs":{},"至":{"docs":{},"少":{"docs":{},"要":{"docs":{},"有":{"docs":{},"三":{"docs":{},"行":{"docs":{},"两":{"docs":{},"列":{"docs":{},"）":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}}}}}}}}}}}},"尾":{"docs":{},"到":{"docs":{},"头":{"docs":{},"打":{"docs":{},"印":{"docs":{},"链":{"docs":{},"表":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":10}}}}}}}},"部":{"docs":{},"删":{"docs":{},"除":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"等":{"docs":{},"于":{"docs":{},"或":{"docs":{},"小":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"些":{"docs":{},"元":{"docs":{},"素":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"成":{"docs":{},"为":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"保":{"docs":{},"存":{"docs":{},"已":{"docs":{},"经":{"docs":{},"走":{"docs":{},"过":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"当":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"已":{"docs":{},"经":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"中":{"docs":{},"时":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"有":{"docs":{},"环":{"docs":{},"并":{"docs":{},"且":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"保":{"docs":{},"存":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"过":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"它":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{},"每":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"部":{"docs":{},"删":{"docs":{},"除":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"已":{"docs":{},"经":{"docs":{},"滑":{"docs":{},"出":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}},"左":{"docs":{},"向":{"docs":{},"右":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}},"“":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"”":{"docs":{},"中":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"启":{"docs":{},"发":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"同":{"docs":{},"样":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"基":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"调":{"docs":{},"整":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"所":{"docs":{},"有":{"docs":{},"小":{"docs":{},"于":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"数":{"docs":{},"都":{"docs":{},"排":{"docs":{},"在":{"docs":{},"它":{"docs":{},"的":{"docs":{},"左":{"docs":{},"边":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"大":{"docs":{},"于":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"数":{"docs":{},"都":{"docs":{},"排":{"docs":{},"在":{"docs":{},"它":{"docs":{},"的":{"docs":{},"右":{"docs":{},"边":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"调":{"docs":{},"整":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"位":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"就":{"docs":{},"是":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"（":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"的":{"docs":{},"）":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"打":{"docs":{},"印":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":10}}}}}}}}},"往":{"docs":{},"下":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"同":{"docs":{},"层":{"docs":{},"节":{"docs":{},"点":{"docs":{},"从":{"docs":{},"左":{"docs":{},"至":{"docs":{},"右":{"docs":{},"打":{"docs":{},"印":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}},"，":{"docs":{},"它":{"docs":{},"只":{"docs":{},"是":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"契":{"docs":{},"约":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"要":{"docs":{},"求":{"docs":{},"接":{"docs":{},"口":{"docs":{},"和":{"docs":{},"实":{"docs":{},"现":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"类":{"docs":{},"具":{"docs":{},"有":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"满":{"docs":{},"足":{"docs":{},"里":{"docs":{},"式":{"docs":{},"替":{"docs":{},"换":{"docs":{},"原":{"docs":{},"则":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}},"键":{"docs":{},"字":{"docs":{},"进":{"docs":{},"行":{"docs":{},"声":{"docs":{},"明":{"docs":{},"。":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"一":{"docs":{},"般":{"docs":{},"会":{"docs":{},"包":{"docs":{},"含":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"方":{"docs":{},"法":{"docs":{},"一":{"docs":{},"定":{"docs":{},"位":{"docs":{},"于":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"中":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}},"修":{"docs":{},"饰":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"是":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}},"联":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"在":{"docs":{},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"时":{"docs":{},"会":{"docs":{},"被":{"docs":{},"回":{"docs":{},"收":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"接":{"docs":{},"口":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"默":{"docs":{},"认":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"维":{"docs":{},"护":{"docs":{},"成":{"docs":{},"本":{"docs":{},"太":{"docs":{},"高":{"docs":{},"了":{"docs":{},"。":{"docs":{},"在":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"修":{"docs":{},"改":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"成":{"docs":{},"本":{"docs":{},"也":{"docs":{},"变":{"docs":{},"的":{"docs":{},"很":{"docs":{},"低":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"大":{"docs":{},"于":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}},"或":{"docs":{},"者":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},"与":{"docs":{},"接":{"docs":{},"口":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}},"和":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}},"接":{"docs":{},"口":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":10}}}},"普":{"docs":{},"通":{"docs":{},"类":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"是":{"docs":{},"，":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"继":{"docs":{},"承":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"才":{"docs":{},"能":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"其":{"docs":{},"子":{"docs":{},"类":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"口":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}},"中":{"docs":{},"的":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}},"是":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"的":{"docs":{},"延":{"docs":{},"伸":{"docs":{},"，":{"docs":{},"在":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"只":{"docs":{},"能":{"docs":{},"是":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}},"默":{"docs":{},"认":{"docs":{},"都":{"docs":{},"是":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}},"成":{"docs":{},"员":{"docs":{},"只":{"docs":{},"能":{"docs":{},"是":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}},"（":{"docs":{},"字":{"docs":{},"段":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"又":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"只":{"docs":{},"是":{"docs":{},"规":{"docs":{},"定":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"没":{"docs":{},"有":{"docs":{},"实":{"docs":{},"现":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"支":{"docs":{},"持":{"docs":{},"随":{"docs":{},"机":{"docs":{},"访":{"docs":{},"问":{"docs":{},"。":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}},"比":{"docs":{},"较":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"多":{"docs":{},"重":{"docs":{},"继":{"docs":{},"承":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}},"在":{"docs":{},"几":{"docs":{},"个":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"类":{"docs":{},"中":{"docs":{},"共":{"docs":{},"享":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}},"继":{"docs":{},"承":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"和":{"docs":{},"非":{"docs":{},"常":{"docs":{},"量":{"docs":{},"字":{"docs":{},"段":{"docs":{},"。":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}},"能":{"docs":{},"控":{"docs":{},"制":{"docs":{},"继":{"docs":{},"承":{"docs":{},"来":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"权":{"docs":{},"限":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"都":{"docs":{},"为":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}},"让":{"docs":{},"不":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"类":{"docs":{},"都":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"不":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"类":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{"Java/Java基础/抽象类和接口.html":{"ref":"Java/Java基础/抽象类和接口.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},":":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":1.6737588652482267}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}},"d":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.012345679012345678}},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.014423076923076924}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":10.040816326530612}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.013605442176870748}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"，":{"docs":{},"被":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}},"|":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.005110732538330494}},"|":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514},"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.018604651162790697},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.015267175572519083},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.04878048780487805},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.014184397163120567},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.018518518518518517},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.022988505747126436},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.024390243902439025},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.03508771929824561},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.02127659574468085},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.037037037037037035},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.023809523809523808},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.05263157894736842},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.02962962962962963},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0392156862745098},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.024691358024691357},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.017543859649122806},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.017241379310344827},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.02092050209205021},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.043478260869565216},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.019417475728155338},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010638297872340425},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.014184397163120567},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}},"括":{"docs":{},"起":{"docs":{},"来":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"表":{"docs":{},"示":{"docs":{},"r":{"docs":{},"进":{"docs":{},"制":{"docs":{},"整":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"位":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"|":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"=":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.009404388714733543}}}},"ⅰ":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"ⅱ":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"ⅲ":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"ⅳ":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"ⅴ":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"与":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"的":{"docs":{},"典":{"docs":{},"型":{"docs":{},"题":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"在":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"任":{"docs":{},"选":{"docs":{},"一":{"docs":{},"个":{"docs":{},"格":{"docs":{},"子":{"docs":{},"作":{"docs":{},"为":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"起":{"docs":{},"点":{"docs":{},"。":{"docs":{},"设":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"为":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"，":{"docs":{},"路":{"docs":{},"径":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"型":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"除":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"两":{"docs":{},"次":{"docs":{},"。":{"docs":{},"请":{"docs":{},"写":{"docs":{},"程":{"docs":{},"序":{"docs":{},"找":{"docs":{},"出":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"要":{"docs":{},"求":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"环":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}},"致":{"docs":{},"性":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"般":{"docs":{},"取":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"样":{"docs":{},"的":{"docs":{},"快":{"docs":{},"速":{"docs":{},"查":{"docs":{},"找":{"docs":{},"特":{"docs":{},"性":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}},"次":{"docs":{},"性":{"docs":{},"分":{"docs":{},"配":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}}}}}}}}}}},"只":{"docs":{},"青":{"docs":{},"蛙":{"docs":{},"一":{"docs":{},"次":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"上":{"1":{"docs":{},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"上":{"2":{"docs":{},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"。":{"docs":{},"求":{"docs":{},"该":{"docs":{},"青":{"docs":{},"蛙":{"docs":{},"跳":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"n":{"docs":{},"级":{"docs":{},"的":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"总":{"docs":{},"共":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"种":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"。":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}},"书":{"docs":{},"上":{"docs":{},"讲":{"docs":{},"到":{"docs":{},"，":{"docs":{},"最":{"docs":{},"好":{"docs":{},"不":{"docs":{},"要":{"docs":{},"去":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"定":{"docs":{},"义":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"设":{"docs":{},"环":{"docs":{},"中":{"docs":{},"有":{"docs":{},"n":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"先":{"docs":{},"让":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"从":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"上":{"docs":{},"走":{"docs":{},"n":{"docs":{},"个":{"docs":{},"单":{"docs":{},"位":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"再":{"docs":{},"一":{"docs":{},"起":{"docs":{},"走":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"位":{"docs":{},"。":{"docs":{},"当":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"时":{"docs":{},"，":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"关":{"docs":{},"键":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"求":{"docs":{},"出":{"docs":{},"环":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"借":{"docs":{},"由":{"docs":{},"上":{"docs":{},"一":{"docs":{},"题":{"docs":{},"的":{"docs":{},"分":{"docs":{},"析":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"从":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"节":{"docs":{},"点":{"docs":{},"处":{"docs":{},"继":{"docs":{},"续":{"docs":{},"向":{"docs":{},"前":{"docs":{},"走":{"docs":{},"，":{"docs":{},"并":{"docs":{},"记":{"docs":{},"录":{"docs":{},"走":{"docs":{},"过":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"当":{"docs":{},"再":{"docs":{},"次":{"docs":{},"回":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"即":{"docs":{},"可":{"docs":{},"得":{"docs":{},"出":{"docs":{},"环":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"路":{"docs":{},"。":{"docs":{},"求":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{},"可":{"docs":{},"以":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"步":{"docs":{},"：":{"docs":{},"首":{"docs":{},"先":{"docs":{},"求":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"即":{"docs":{},"把":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"和":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"依":{"docs":{},"次":{"docs":{},"交":{"docs":{},"换":{"docs":{},"（":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"和":{"docs":{},"它":{"docs":{},"自":{"docs":{},"己":{"docs":{},"交":{"docs":{},"换":{"docs":{},"）":{"docs":{},"；":{"docs":{},"第":{"docs":{},"二":{"docs":{},"步":{"docs":{},"固":{"docs":{},"定":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"求":{"docs":{},"后":{"docs":{},"面":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"仍":{"docs":{},"把":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"以":{"docs":{},"及":{"docs":{},"这":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"把":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"逐":{"docs":{},"一":{"docs":{},"和":{"docs":{},"它":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"交":{"docs":{},"换":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"方":{"docs":{},"便":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"将":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"字":{"docs":{},"符":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"改":{"docs":{},"写":{"docs":{},"。":{"docs":{},"用":{"docs":{},"变":{"docs":{},"量":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"指":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{},"判":{"docs":{},"断":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"是":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"看":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"正":{"docs":{},"负":{"docs":{},"号":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"，":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"上":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"0":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"传":{"docs":{},"递":{"docs":{},"性":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"判":{"docs":{},"断":{"docs":{},"两":{"docs":{},"个":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"基":{"docs":{},"本":{"docs":{},"类":{"docs":{},"型":{"docs":{},"没":{"docs":{},"有":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"否":{"docs":{},"引":{"docs":{},"用":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"而":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"否":{"docs":{},"等":{"docs":{},"价":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"域":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}},"s":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"和":{"docs":{},"p":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"匹":{"docs":{},"配":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"次":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}},"应":{"docs":{},"该":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"是":{"docs":{},"以":{"docs":{},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{},"方":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"的":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}},"得":{"docs":{},"到":{"docs":{},"以":{"docs":{},"下":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"不":{"docs":{},"确":{"docs":{},"定":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"安":{"docs":{},"全":{"docs":{},"的":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}},"拷":{"docs":{},"贝":{"docs":{},"对":{"docs":{},"象":{"docs":{},"和":{"docs":{},"原":{"docs":{},"始":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"引":{"docs":{},"用":{"docs":{},"不":{"docs":{},"同":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}},"检":{"docs":{},"查":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"是":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"实":{"docs":{},"现":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0034071550255536627}}}}}},"浅":{"docs":{},"拷":{"docs":{},"贝":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"理":{"docs":{},"想":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"应":{"docs":{},"当":{"docs":{},"具":{"docs":{},"有":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"性":{"docs":{},"，":{"docs":{},"即":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"应":{"docs":{},"当":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"分":{"docs":{},"布":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"上":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"要":{"docs":{},"求":{"docs":{},"了":{"docs":{},"散":{"docs":{},"列":{"docs":{},"函":{"docs":{},"数":{"docs":{},"要":{"docs":{},"把":{"docs":{},"所":{"docs":{},"有":{"docs":{},"域":{"docs":{},"的":{"docs":{},"值":{"docs":{},"都":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"进":{"docs":{},"来":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"每":{"docs":{},"个":{"docs":{},"域":{"docs":{},"都":{"docs":{},"当":{"docs":{},"成":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"乘":{"docs":{},"可":{"docs":{},"以":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"移":{"docs":{},"位":{"docs":{},"和":{"docs":{},"减":{"docs":{},"法":{"docs":{},"：":{"3":{"1":{"docs":{},"*":{"docs":{},"x":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"向":{"docs":{},"左":{"docs":{},"移":{"docs":{},"一":{"docs":{},"位":{"docs":{},"。":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}}}}}}}},"等":{"docs":{},"价":{"docs":{},"与":{"docs":{},"相":{"docs":{},"等":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"关":{"docs":{},"系":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"操":{"docs":{},"作":{"docs":{},"之":{"docs":{},"后":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"当":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"都":{"docs":{},"为":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}},"构":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"结":{"docs":{},"构":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"是":{"docs":{},"指":{"docs":{},"添":{"docs":{},"加":{"docs":{},"或":{"docs":{},"者":{"docs":{},"删":{"docs":{},"除":{"docs":{},"至":{"docs":{},"少":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"调":{"docs":{},"整":{"docs":{},"内":{"docs":{},"部":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"只":{"docs":{},"是":{"docs":{},"设":{"docs":{},"置":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"值":{"docs":{},"不":{"docs":{},"算":{"docs":{},"结":{"docs":{},"构":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"。":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"自":{"docs":{},"反":{"docs":{},"性":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}},"定":{"docs":{},"义":{"docs":{},"比":{"docs":{},"较":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"m":{"docs":{},"和":{"docs":{},"n":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"m":{"docs":{},"n":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"整":{"docs":{},"数":{"docs":{},"组":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"使":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"位":{"docs":{},"于":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"前":{"docs":{},"面":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":10}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"散":{"docs":{},"列":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}}}}}},"k":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"示":{"docs":{},"中":{"docs":{},"从":{"docs":{},"右":{"docs":{},"向":{"docs":{},"左":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"1":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}}}},"docs":{}}}}}}}}},"的":{"docs":{},"第":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"位":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"1":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{},"为":{"2":{"2":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"应":{"docs":{},"该":{"docs":{},"为":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"总":{"docs":{},"数":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"。":{"docs":{},"而":{"docs":{},"给":{"docs":{},"定":{"docs":{},"树":{"docs":{},"a":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}}}}}}}}}}}}}},"重":{"docs":{},"写":{"docs":{"Java/Java基础/Object类中的方法.html":{"ref":"Java/Java基础/Object类中的方法.html","tf":0.0017035775127768314}}},"新":{"docs":{},"计":{"docs":{},"算":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"建":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":10}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"顺":{"docs":{},"序":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}},"d":{"docs":{},"p":{"docs":{},"，":{"docs":{},"当":{"docs":{},"s":{"docs":{},"和":{"docs":{},"p":{"docs":{},"同":{"docs":{},"时":{"docs":{},"到":{"docs":{},"达":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"时":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"成":{"docs":{},"功":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}},"值":{"docs":{},"为":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}},"声":{"docs":{},"明":{"docs":{},"数":{"docs":{},"据":{"docs":{},"为":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"被":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"后":{"docs":{},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"改":{"docs":{},"变":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"子":{"docs":{},"类":{"docs":{},"重":{"docs":{},"写":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}},"类":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"被":{"docs":{},"继":{"docs":{},"承":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}},"子":{"docs":{},"类":{"docs":{},"（":{"docs":{},"实":{"docs":{},"例":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"普":{"docs":{},"通":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"）":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"）":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"）":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"才":{"docs":{},"是":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"是":{"docs":{},"以":{"docs":{},"下":{"docs":{},"用":{"docs":{},"于":{"docs":{},"维":{"docs":{},"护":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"会":{"docs":{},"在":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"堆":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}},"小":{"docs":{},"堆":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":10}}}}}}},"长":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}},"结":{"docs":{},"尾":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}}}}}}}}},"父":{"docs":{},"类":{"docs":{},"（":{"docs":{},"实":{"docs":{},"例":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"普":{"docs":{},"通":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"）":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"）":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"）":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"不":{"docs":{},"能":{"docs":{},"访":{"docs":{},"问":{"docs":{},"外":{"docs":{},"部":{"docs":{},"类":{"docs":{},"的":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.007662835249042145}},"和":{"docs":{},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"优":{"docs":{},"先":{"docs":{},"于":{"docs":{},"实":{"docs":{},"例":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"普":{"docs":{},"通":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"，":{"docs":{},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"静":{"docs":{},"态":{"docs":{},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"取":{"docs":{},"决":{"docs":{},"于":{"docs":{},"它":{"docs":{},"们":{"docs":{},"在":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"又":{"docs":{},"称":{"docs":{},"为":{"docs":{},"类":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"这":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"属":{"docs":{},"于":{"docs":{},"类":{"docs":{},"的":{"docs":{},"，":{"docs":{},"类":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"都":{"docs":{},"共":{"docs":{},"享":{"docs":{},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"通":{"docs":{},"过":{"docs":{},"类":{"docs":{},"名":{"docs":{},"来":{"docs":{},"访":{"docs":{},"问":{"docs":{},"它":{"docs":{},"。":{"docs":{},"静":{"docs":{},"态":{"docs":{},"变":{"docs":{},"量":{"docs":{},"在":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"只":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"份":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"导":{"docs":{},"包":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}},"方":{"docs":{},"法":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"只":{"docs":{},"能":{"docs":{},"访":{"docs":{},"问":{"docs":{},"所":{"docs":{},"属":{"docs":{},"类":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"字":{"docs":{},"段":{"docs":{},"和":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"不":{"docs":{},"能":{"docs":{},"有":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"类":{"docs":{},"加":{"docs":{},"载":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"存":{"docs":{},"在":{"docs":{},"了":{"docs":{},"，":{"docs":{},"它":{"docs":{},"不":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"任":{"docs":{},"何":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"静":{"docs":{},"态":{"docs":{},"方":{"docs":{},"法":{"docs":{},"必":{"docs":{},"须":{"docs":{},"有":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"它":{"docs":{},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"语":{"docs":{},"句":{"docs":{},"块":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}},"在":{"docs":{},"类":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"时":{"docs":{},"运":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"外":{"docs":{},"部":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"而":{"docs":{},"静":{"docs":{},"态":{"docs":{},"内":{"docs":{},"部":{"docs":{},"类":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"。":{"docs":{"Java/Java基础/final和static.html":{"ref":"Java/Java基础/final和static.html","tf":0.0038314176245210726}}}}}}}}}}}}}}}}}}}}}}}}}}},"受":{"docs":{},"检":{"docs":{},"异":{"docs":{},"常":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"异":{"docs":{},"常":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}},"入":{"docs":{},"门":{"docs":{},"之":{"docs":{},"异":{"docs":{},"常":{"docs":{},"处":{"docs":{},"理":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}},"栈":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571}}}},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"种":{"docs":{},"：":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}},"受":{"docs":{},"检":{"docs":{},"异":{"docs":{},"常":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}},"异":{"docs":{},"常":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":10.035714285714286}},"是":{"docs":{},"发":{"docs":{},"生":{"docs":{},"在":{"docs":{},"程":{"docs":{},"序":{"docs":{},"执":{"docs":{},"行":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"阻":{"docs":{},"碍":{"docs":{},"程":{"docs":{},"序":{"docs":{},"正":{"docs":{},"常":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"事":{"docs":{},"件":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"：":{"docs":{},"用":{"docs":{},"户":{"docs":{},"输":{"docs":{},"入":{"docs":{},"错":{"docs":{},"误":{"docs":{},"数":{"docs":{},"据":{"docs":{},"、":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"故":{"docs":{},"障":{"docs":{},"、":{"docs":{},"网":{"docs":{},"络":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"等":{"docs":{},"都":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"出":{"docs":{},"现":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"法":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"而":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}},"语":{"docs":{},"句":{"docs":{},"捕":{"docs":{},"获":{"docs":{},"并":{"docs":{},"进":{"docs":{},"行":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"异":{"docs":{},"常":{"docs":{},"中":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"；":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"是":{"docs":{},"程":{"docs":{},"序":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"除":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{"Java/Java基础/异常.html":{"ref":"Java/Java基础/异常.html","tf":0.03571428571428571}}}}}},"q":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.02459016393442623}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"2":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.01639344262295082}}}},"2":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.02459016393442623}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}},"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827},"JianZhiOffer/Stack & Queue & PriorityQueue/":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/","tf":2},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.01639344262295082},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}},"两":{"docs":{},"种":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"公":{"docs":{},"共":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":10}}}}}}}}}}}}}},"则":{"docs":{},"为":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}},"容":{"docs":{},"器":{"docs":{},"主":{"docs":{},"要":{"docs":{},"包":{"docs":{},"括":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}},"易":{"docs":{},"想":{"docs":{},"到":{"docs":{},"的":{"docs":{},"是":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"保":{"docs":{},"存":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"据":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"则":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"数":{"docs":{},"据":{"docs":{},"到":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"移":{"docs":{},"动":{"docs":{},"其":{"docs":{},"他":{"docs":{},"数":{"docs":{},"据":{"docs":{},"以":{"docs":{},"保":{"docs":{},"持":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"有":{"docs":{},"序":{"docs":{},"性":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"读":{"docs":{},"取":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"时":{"docs":{},"由":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"因":{"docs":{},"此":{"docs":{},"直":{"docs":{},"接":{"docs":{},"读":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"无":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{},"读":{"docs":{},"取":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"（":{"docs":{},"关":{"docs":{},"于":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"分":{"docs":{},"析":{"docs":{},"比":{"docs":{},"较":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"详":{"docs":{},"见":{"docs":{},"《":{"docs":{},"算":{"docs":{},"法":{"docs":{},"导":{"docs":{},"论":{"docs":{},"》":{"docs":{},"）":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"做":{"docs":{},"法":{"docs":{},"是":{"docs":{},"每":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"格":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"替":{"docs":{},"换":{"docs":{},"为":{"docs":{},"\"":{"docs":{},"%":{"2":{"0":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"是":{"docs":{},"把":{"1":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"替":{"docs":{},"换":{"docs":{},"为":{"2":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"其":{"docs":{},"后":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"向":{"docs":{},"后":{"docs":{},"移":{"docs":{},"动":{"2":{"docs":{},"位":{"docs":{},"，":{"docs":{},"效":{"docs":{},"率":{"docs":{},"不":{"docs":{},"高":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"求":{"docs":{},"出":{"docs":{},"原":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"空":{"docs":{},"格":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"，":{"docs":{},"据":{"docs":{},"此":{"docs":{},"计":{"docs":{},"算":{"docs":{},"出":{"docs":{},"替":{"docs":{},"换":{"docs":{},"后":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"新":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"p":{"1":{"docs":{},"和":{"docs":{},"p":{"2":{"docs":{},"，":{"docs":{},"p":{"1":{"docs":{},"指":{"docs":{},"示":{"docs":{},"旧":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"p":{"2":{"docs":{},"指":{"docs":{},"示":{"docs":{},"新":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"从":{"docs":{},"后":{"docs":{},"向":{"docs":{},"前":{"docs":{},"进":{"docs":{},"行":{"docs":{},"替":{"docs":{},"换":{"docs":{},"。":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"步":{"docs":{},"进":{"docs":{},"行":{"docs":{},"：":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"作":{"docs":{},"栈":{"docs":{},"、":{"docs":{},"队":{"docs":{},"列":{"docs":{},"和":{"docs":{},"双":{"docs":{},"向":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"比":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"该":{"docs":{},"数":{"docs":{},"字":{"docs":{},"就":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"都":{"docs":{},"是":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Java/Java容器/":{"ref":"Java/Java容器/","tf":0.017241379310344827}}}}}}}}}}}},"用":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"，":{"docs":{},"该":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}},"上":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"以":{"docs":{},"上":{"docs":{},"数":{"docs":{},"：":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"级":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"第":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"倍":{"docs":{},"。":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"而":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}},"的":{"docs":{},"代":{"docs":{},"价":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"高":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":10}}}}}}}}},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"插":{"docs":{},"入":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"部":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"求":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"的":{"docs":{},"差":{"docs":{},"的":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"大":{"docs":{},"于":{"1":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"不":{"docs":{},"是":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"函":{"docs":{},"数":{"docs":{},"i":{"docs":{},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"扩":{"docs":{},"容":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"操":{"docs":{},"作":{"docs":{},"需":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}},"使":{"docs":{},"用":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"展":{"1":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}},"2":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}},"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}},"把":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"整":{"docs":{},"个":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"新":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"代":{"docs":{},"价":{"docs":{},"很":{"docs":{},"高":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"最":{"docs":{},"好":{"docs":{},"在":{"docs":{},"创":{"docs":{},"建":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"排":{"docs":{},"成":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":10}}}}}}}},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"排":{"docs":{},"在":{"docs":{},"最":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"代":{"docs":{},"码":{"docs":{},"略":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"质":{"docs":{},"因":{"docs":{},"子":{"2":{"docs":{},",":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}}},"docs":{}}}}}}},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"最":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"若":{"docs":{},"干":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"搬":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"称":{"docs":{},"之":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"。":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"添":{"docs":{},"加":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/ArrayList.html":{"ref":"Java/Java容器/ArrayList.html","tf":0.004807692307692308}}}}}}}}},"?":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.017543859649122806},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.010638297872340425}}},"个":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"桶":{"docs":{},"存":{"docs":{},"放":{"docs":{},"键":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"也":{"docs":{},"作":{"docs":{},"了":{"docs":{},"很":{"docs":{},"多":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}},"修":{"docs":{},"饰":{"docs":{},"的":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"获":{"docs":{},"取":{"docs":{},"时":{"docs":{},"的":{"docs":{},"可":{"docs":{},"见":{"docs":{},"性":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}},"加":{"docs":{},"锁":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"变":{"docs":{},"量":{"docs":{},"来":{"docs":{},"统":{"docs":{},"计":{"docs":{},"该":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"该":{"docs":{},"值":{"docs":{},"为":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}},"栈":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"能":{"docs":{},"够":{"docs":{},"得":{"docs":{},"到":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"（":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"应":{"docs":{},"为":{"docs":{},"o":{"docs":{},"（":{"1":{"docs":{},"）":{"docs":{},"）":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"尝":{"docs":{},"试":{"docs":{},"次":{"docs":{},"数":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}},"操":{"docs":{},"作":{"docs":{},"失":{"docs":{},"败":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"内":{"docs":{},"置":{"docs":{},"锁":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}}}}}},"时":{"docs":{},"先":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"连":{"docs":{},"续":{"docs":{},"两":{"docs":{},"次":{"docs":{},"不":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"操":{"docs":{},"作":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"可":{"docs":{},"以":{"docs":{},"认":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"所":{"docs":{},"有":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}},"来":{"docs":{},"支":{"docs":{},"持":{"docs":{},"更":{"docs":{},"高":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"度":{"docs":{},"，":{"docs":{},"在":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.006389776357827476}}}}}}}}}}}}}}},"次":{"docs":{},"，":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}},"方":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"自":{"docs":{},"动":{"docs":{},"地":{"docs":{},"将":{"docs":{},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"把":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"累":{"docs":{},"计":{"docs":{},"起":{"docs":{},"来":{"docs":{},"。":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}},"继":{"docs":{},"承":{"docs":{},"自":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976},"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}},"维":{"docs":{},"护":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}},"超":{"docs":{},"过":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"并":{"docs":{},"发":{"docs":{},"级":{"docs":{},"别":{"docs":{},"为":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}}}}},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{"Java/Java容器/ConcurrentHashMap.html":{"ref":"Java/Java容器/ConcurrentHashMap.html","tf":0.003194888178913738}}}}},"但":{"docs":{},"是":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}},"当":{"docs":{},"n":{"docs":{},"非":{"docs":{},"常":{"docs":{},"大":{"docs":{},"导":{"docs":{},"致":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"和":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"都":{"docs":{},"不":{"docs":{},"能":{"docs":{},"表":{"docs":{},"示":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"n":{"docs":{},"位":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"程":{"docs":{},"序":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{},"操":{"docs":{},"作":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"复":{"docs":{},"制":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"上":{"docs":{},"进":{"docs":{},"行":{"docs":{},"，":{"docs":{},"读":{"docs":{},"操":{"docs":{},"作":{"docs":{},"还":{"docs":{},"是":{"docs":{},"在":{"docs":{},"原":{"docs":{},"始":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"，":{"docs":{},"读":{"docs":{},"写":{"docs":{},"分":{"docs":{},"离":{"docs":{},"，":{"docs":{},"互":{"docs":{},"不":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"之":{"docs":{},"后":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"原":{"docs":{},"始":{"docs":{},"数":{"docs":{},"组":{"docs":{},"指":{"docs":{},"向":{"docs":{},"新":{"docs":{},"的":{"docs":{},"复":{"docs":{},"制":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"加":{"docs":{},"锁":{"docs":{},"，":{"docs":{},"防":{"docs":{},"止":{"docs":{},"并":{"docs":{},"发":{"docs":{},"写":{"docs":{},"入":{"docs":{},"时":{"docs":{},"导":{"docs":{},"致":{"docs":{},"写":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"。":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}},"有":{"docs":{},"其":{"docs":{},"缺":{"docs":{},"陷":{"docs":{},"：":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}}},"读":{"docs":{},"写":{"docs":{},"分":{"docs":{},"离":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}},"适":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{"Java/Java容器/CopyOnWriteArrayList.html":{"ref":"Java/Java容器/CopyOnWriteArrayList.html","tf":0.012658227848101266}}}}}},"^":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.00522466039707419},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.19444444444444445}},"=":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.0297029702970297}}}},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.006269592476489028},"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}},"主":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"了":{"docs":{},"便":{"docs":{},"于":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"以":{"docs":{},"下":{"docs":{},"源":{"docs":{},"码":{"docs":{},"分":{"docs":{},"析":{"docs":{},"以":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"让":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"成":{"docs":{},"本":{"docs":{},"降":{"docs":{},"低":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"使":{"docs":{},"得":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"两":{"docs":{},"倍":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"令":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"假":{"docs":{},"设":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"数":{"docs":{},"据":{"docs":{},"在":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"已":{"docs":{},"经":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"，":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"由":{"docs":{},"p":{"1":{"docs":{},"和":{"docs":{},"p":{"2":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"数":{"docs":{},"得":{"docs":{},"到":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"是":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"由":{"docs":{},"p":{"1":{"docs":{},"和":{"docs":{},"p":{"2":{"docs":{},"共":{"docs":{},"同":{"docs":{},"指":{"docs":{},"向":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"是":{"docs":{},"p":{"1":{"docs":{},"和":{"docs":{},"p":{"2":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"数":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"值":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"到":{"docs":{},"整":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"容":{"docs":{},"器":{"docs":{},"被":{"docs":{},"我":{"docs":{},"们":{"docs":{},"分":{"docs":{},"成":{"docs":{},"了":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"左":{"docs":{},"边":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"比":{"docs":{},"右":{"docs":{},"边":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"小":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"p":{"1":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"是":{"docs":{},"左":{"docs":{},"边":{"docs":{},"部":{"docs":{},"分":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"p":{"2":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"是":{"docs":{},"右":{"docs":{},"边":{"docs":{},"部":{"docs":{},"分":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"见":{"docs":{},"下":{"docs":{},"图":{"docs":{},"：":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"做":{"docs":{},"与":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"去":{"docs":{},"除":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"允":{"docs":{},"许":{"docs":{},"插":{"docs":{},"入":{"docs":{},"键":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"先":{"docs":{},"于":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"找":{"docs":{},"出":{"docs":{},"是":{"docs":{},"否":{"docs":{},"已":{"docs":{},"经":{"docs":{},"存":{"docs":{},"在":{"docs":{},"键":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"如":{"docs":{},"何":{"docs":{},"求":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"掩":{"docs":{},"码":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"一":{"docs":{},"种":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"出":{"docs":{},"现":{"1":{"docs":{},"次":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"数":{"docs":{},"都":{"docs":{},"是":{"docs":{},"出":{"docs":{},"现":{"2":{"docs":{},"次":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"头":{"docs":{},"到":{"docs":{},"尾":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"求":{"docs":{},"异":{"docs":{},"或":{"docs":{},"，":{"docs":{},"（":{"docs":{},"因":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"和":{"docs":{},"自":{"docs":{},"己":{"docs":{},"异":{"docs":{},"或":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"所":{"docs":{},"有":{"docs":{},"出":{"docs":{},"现":{"docs":{},"两":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"都":{"docs":{},"抵":{"docs":{},"消":{"docs":{},"掉":{"docs":{},"了":{"docs":{},"）":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"就":{"docs":{},"是":{"docs":{},"那":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"恰":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"出":{"docs":{},"现":{"1":{"docs":{},"次":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"数":{"docs":{},"都":{"docs":{},"是":{"docs":{},"出":{"docs":{},"现":{"docs":{},"两":{"docs":{},"次":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"，":{"docs":{},"从":{"docs":{},"头":{"docs":{},"到":{"docs":{},"尾":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"求":{"docs":{},"异":{"docs":{},"或":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"数":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"。":{"docs":{},"在":{"docs":{},"异":{"docs":{},"或":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"所":{"docs":{},"有":{"docs":{},"出":{"docs":{},"现":{"2":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"都":{"docs":{},"抵":{"docs":{},"消":{"docs":{},"掉":{"docs":{},"了":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"那":{"docs":{},"两":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"1":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"异":{"docs":{},"或":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"不":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"即":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"示":{"docs":{},"中":{"docs":{},"一":{"docs":{},"定":{"docs":{},"有":{"docs":{},"一":{"docs":{},"位":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"其":{"docs":{},"第":{"docs":{},"n":{"docs":{},"位":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"根":{"docs":{},"据":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"n":{"docs":{},"位":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"1":{"docs":{},",":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"可":{"docs":{},"知":{"docs":{},"，":{"docs":{},"出":{"docs":{},"现":{"2":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"一":{"docs":{},"定":{"docs":{},"被":{"docs":{},"分":{"docs":{},"到":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"当":{"docs":{},"中":{"docs":{},"。":{"docs":{},"接":{"docs":{},"着":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"分":{"docs":{},"别":{"docs":{},"对":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"按":{"docs":{},"照":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"求":{"docs":{},"异":{"docs":{},"或":{"docs":{},"，":{"docs":{},"即":{"docs":{},"可":{"docs":{},"得":{"docs":{},"到":{"docs":{},"两":{"docs":{},"个":{"docs":{},"出":{"docs":{},"现":{"1":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"将":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"都":{"docs":{},"压":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"中":{"docs":{},"，":{"docs":{},"将":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"统":{"docs":{},"计":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"接":{"docs":{},"着":{"docs":{},"再":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"为":{"1":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"长":{"docs":{},"链":{"docs":{},"表":{"docs":{},"上":{"docs":{},"走":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"步":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}}}}}}}}}}}},"求":{"docs":{},"出":{"docs":{},"长":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"1":{"docs":{},"，":{"docs":{},"短":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"2":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"差":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"。":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"先":{"docs":{},"在":{"docs":{},"长":{"docs":{},"链":{"docs":{},"表":{"docs":{},"上":{"docs":{},"走":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"步":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"再":{"docs":{},"一":{"docs":{},"起":{"docs":{},"走":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"或":{"docs":{},"者":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"（":{"docs":{},"没":{"docs":{},"有":{"docs":{},"公":{"docs":{},"共":{"docs":{},"结":{"docs":{},"点":{"docs":{},"）":{"docs":{},"或":{"docs":{},"者":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"公":{"docs":{},"共":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"n":{"docs":{},"位":{"docs":{},"数":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"从":{"1":{"docs":{},"到":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"反":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"前":{"docs":{},"n":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"再":{"docs":{},"反":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"后":{"docs":{},"面":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"再":{"docs":{},"反":{"docs":{},"转":{"docs":{},"整":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"即":{"docs":{},"可":{"docs":{},"得":{"docs":{},"到":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"左":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"n":{"docs":{},"位":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"整":{"docs":{},"个":{"docs":{},"句":{"docs":{},"子":{"docs":{},"作":{"docs":{},"一":{"docs":{},"个":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"，":{"docs":{},"再":{"docs":{},"依":{"docs":{},"次":{"docs":{},"将":{"docs":{},"句":{"docs":{},"子":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"作":{"docs":{},"一":{"docs":{},"个":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"，":{"docs":{},"即":{"docs":{},"得":{"docs":{},"到":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"句":{"docs":{},"子":{"docs":{},"划":{"docs":{},"分":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"从":{"docs":{},"后":{"docs":{},"向":{"docs":{},"前":{"docs":{},"构":{"docs":{},"造":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"原":{"docs":{},"先":{"docs":{},"的":{"docs":{},"句":{"docs":{},"子":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"单":{"docs":{},"词":{"docs":{},"，":{"docs":{},"则":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"原":{"docs":{},"先":{"docs":{},"的":{"docs":{},"句":{"docs":{},"子":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{},"前":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"创":{"docs":{},"建":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"在":{"docs":{},"中":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"能":{"docs":{},"确":{"docs":{},"定":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"新":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"递":{"docs":{},"归":{"docs":{},"地":{"docs":{},"构":{"docs":{},"建":{"docs":{},"其":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{},"前":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"和":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"两":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"确":{"docs":{},"定":{"docs":{},"，":{"docs":{},"中":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"和":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"两":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"确":{"docs":{},"定":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"面":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"该":{"docs":{},"树":{"docs":{},"，":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"非":{"docs":{},"叶":{"docs":{},"节":{"docs":{},"点":{"docs":{},"交":{"docs":{},"换":{"docs":{},"其":{"docs":{},"左":{"docs":{},"右":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}},"单":{"docs":{},"独":{"docs":{},"处":{"docs":{},"理":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"取":{"docs":{},"模":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"效":{"docs":{},"果":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"：":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"前":{"docs":{},"n":{"docs":{},"位":{"docs":{},"作":{"docs":{},"为":{"docs":{},"子":{"docs":{},"串":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"，":{"docs":{},"取":{"docs":{},"余":{"docs":{},"下":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"作":{"docs":{},"为":{"docs":{},"子":{"docs":{},"串":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"，":{"docs":{},"将":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"进":{"docs":{},"行":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"含":{"docs":{},"义":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"呢":{"docs":{},"？":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"家":{"docs":{},"都":{"docs":{},"知":{"docs":{},"道":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"，":{"docs":{},"即":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625}}}},"docs":{}}}}}}}}}}}}},"体":{"docs":{},"思":{"docs":{},"路":{"docs":{},"同":{"docs":{},"上":{"docs":{},"，":{"docs":{},"用":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},",":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}}}}}}},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{},"，":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"部":{"docs":{},"指":{"docs":{},"向":{"docs":{},"新":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}},"它":{"docs":{},"的":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"值":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"第":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"与":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"进":{"docs":{},"行":{"docs":{},"扩":{"docs":{},"容":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}},"会":{"docs":{},"将":{"docs":{},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"久":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"移":{"docs":{},"除":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"大":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"小":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}},"很":{"docs":{},"多":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"确":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}},"必":{"docs":{},"须":{"docs":{},"保":{"docs":{},"证":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"我":{"docs":{},"们":{"docs":{},"知":{"docs":{},"道":{"docs":{},"，":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{},"的":{"docs":{},"代":{"docs":{},"价":{"docs":{},"比":{"docs":{},"求":{"docs":{},"模":{"docs":{},"运":{"docs":{},"算":{"docs":{},"小":{"docs":{},"的":{"docs":{},"多":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{},"这":{"docs":{},"种":{"docs":{},"计":{"docs":{},"算":{"docs":{},"时":{"docs":{},"用":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{},"的":{"docs":{},"话":{"docs":{},"能":{"docs":{},"带":{"docs":{},"来":{"docs":{},"更":{"docs":{},"高":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"给":{"docs":{},"定":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"中":{"docs":{},"构":{"docs":{},"造":{"docs":{},"出":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"把":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"时":{"docs":{},"通":{"docs":{},"过":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"重":{"docs":{},"构":{"docs":{},"出":{"docs":{},"原":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"思":{"docs":{},"路":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"，":{"docs":{},"一":{"docs":{},"是":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"不":{"docs":{},"能":{"docs":{},"有":{"docs":{},"数":{"docs":{},"值":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"我":{"docs":{},"们":{"docs":{},"无":{"docs":{},"法":{"docs":{},"通":{"docs":{},"过":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"构":{"docs":{},"造":{"docs":{},"出":{"docs":{},"原":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"二":{"docs":{},"是":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"两":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"都":{"docs":{},"读":{"docs":{},"出":{"docs":{},"后":{"docs":{},"才":{"docs":{},"能":{"docs":{},"开":{"docs":{},"始":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"从":{"docs":{},"一":{"docs":{},"个":{"docs":{},"流":{"docs":{},"中":{"docs":{},"读":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"可":{"docs":{},"能":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"等":{"docs":{},"待":{"docs":{},"很":{"docs":{},"长":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"如":{"docs":{},"果":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"是":{"docs":{},"从":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"在":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"读":{"docs":{},"出":{"docs":{},"来":{"docs":{},"后":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"开":{"docs":{},"始":{"docs":{},"了":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"根":{"docs":{},"据":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"来":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"和":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"在":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"加":{"docs":{},"入":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"加":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"$":{"docs":{},"。":{"docs":{},"在":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"每":{"docs":{},"次":{"docs":{},"从":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"读":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"不":{"docs":{},"是":{"docs":{},"$":{"docs":{},"`":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"继":{"docs":{},"续":{"docs":{},"构":{"docs":{},"建":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"空":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"和":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"示":{"docs":{},"正":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"指":{"docs":{},"示":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"指":{"docs":{},"示":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"置":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"置":{"docs":{},"为":{"2":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"判":{"docs":{},"断":{"docs":{},"当":{"docs":{},"前":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"和":{"docs":{},"是":{"docs":{},"大":{"docs":{},"于":{"docs":{},"还":{"docs":{},"是":{"docs":{},"小":{"docs":{},"于":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"小":{"docs":{},"于":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"增":{"docs":{},"大":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"以":{"docs":{},"让":{"docs":{},"序":{"docs":{},"列":{"docs":{},"包":{"docs":{},"含":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"数":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"小":{"docs":{},"于":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"增":{"docs":{},"大":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"以":{"docs":{},"减":{"docs":{},"小":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"和":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"等":{"docs":{},"于":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"我":{"docs":{},"们":{"docs":{},"则":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"序":{"docs":{},"列":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"来":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"序":{"docs":{},"列":{"docs":{},"至":{"docs":{},"少":{"docs":{},"需":{"docs":{},"要":{"docs":{},"包":{"docs":{},"含":{"2":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"至":{"docs":{},"多":{"docs":{},"只":{"docs":{},"能":{"docs":{},"增":{"docs":{},"加":{"docs":{},"到":{"docs":{},"(":{"1":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"表":{"docs":{},"示":{"docs":{},"大":{"docs":{},"数":{"docs":{},"，":{"docs":{},"进":{"docs":{},"而":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"上":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"加":{"1":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"思":{"docs":{},"路":{"2":{"docs":{},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"进":{"docs":{},"行":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{},"当":{"docs":{},"s":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"和":{"docs":{},"[":{"docs":{},"i":{"docs":{},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"将":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"复":{"docs":{},"制":{"docs":{},"过":{"docs":{},"程":{"docs":{},"分":{"docs":{},"为":{"docs":{},"三":{"docs":{},"个":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"：":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"来":{"docs":{},"分":{"docs":{},"析":{"docs":{},"这":{"docs":{},"样":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"如":{"docs":{},"何":{"docs":{},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"环":{"docs":{},"？":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"一":{"docs":{},"个":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"同":{"docs":{},"时":{"docs":{},"从":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"向":{"docs":{},"前":{"docs":{},"走":{"docs":{},"，":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"2":{"docs":{},"步":{"docs":{},"，":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"1":{"docs":{},"步":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"则":{"docs":{},"说":{"docs":{},"明":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"环":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"走":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"则":{"docs":{},"说":{"docs":{},"明":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"环":{"docs":{},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"再":{"docs":{},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"p":{"docs":{},"从":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"向":{"docs":{},"前":{"docs":{},"走":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"1":{"docs":{},"步":{"docs":{},"，":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"从":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"继":{"docs":{},"续":{"docs":{},"向":{"docs":{},"前":{"docs":{},"走":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"也":{"docs":{},"走":{"1":{"docs":{},"步":{"docs":{},"，":{"docs":{},"当":{"docs":{},"p":{"docs":{},"和":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"时":{"docs":{},"，":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"和":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"操":{"docs":{},"作":{"docs":{},"来":{"docs":{},"分":{"docs":{},"析":{"docs":{},"两":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{},"表":{"docs":{},"格":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"列":{"docs":{},"表":{"docs":{},"示":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"列":{"docs":{},"表":{"docs":{},"示":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"2":{"docs":{},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"向":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"依":{"docs":{},"次":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"进":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"三":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},"和":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"2":{"docs":{},"都":{"docs":{},"是":{"docs":{},"空":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"插":{"docs":{},"入":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"不":{"docs":{},"妨":{"docs":{},"将":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"依":{"docs":{},"次":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"2":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"两":{"docs":{},"个":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"难":{"docs":{},"发":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"是":{"docs":{},"围":{"docs":{},"绕":{"docs":{},"着":{"docs":{},"它":{"docs":{},"的":{"docs":{},"中":{"docs":{},"心":{"docs":{},"进":{"docs":{},"行":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"的":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"找":{"docs":{},"到":{"2":{"docs":{},"n":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}},"拉":{"docs":{},"链":{"docs":{},"法":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"原":{"docs":{},"理":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}},"插":{"docs":{},"入":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}},"新":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}},"新":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213}}}}}}}}}}},"时":{"docs":{},"会":{"docs":{},"将":{"docs":{},"链":{"docs":{},"表":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"移":{"docs":{},"除":{"docs":{},"最":{"docs":{},"晚":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"链":{"docs":{},"表":{"docs":{},"首":{"docs":{},"部":{"docs":{},"节":{"docs":{},"点":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"维":{"docs":{},"护":{"docs":{},"的":{"docs":{},"是":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}},"：":{"docs":{},"o":{"docs":{},"(":{"2":{"docs":{},"n":{"docs":{},")":{"docs":{},"（":{"docs":{},"在":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"要":{"docs":{},"分":{"docs":{},"别":{"docs":{},"被":{"docs":{},"i":{"docs":{},"和":{"docs":{},"j":{"docs":{},"访":{"docs":{},"问":{"docs":{},"一":{"docs":{},"次":{"docs":{},"）":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"n":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.013953488372093023},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0070921985815602835}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815}}}},"k":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}},"^":{"2":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.011049723756906077}}}},"3":{"docs":{},")":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}},"docs":{}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}}}}}}}}}}}}},"确":{"docs":{},"定":{"docs":{},"桶":{"docs":{},"下":{"docs":{},"标":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0020898641588296763}},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"步":{"docs":{},"是":{"docs":{},"将":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"能":{"docs":{},"够":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"比":{"docs":{},"例":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"大":{"docs":{},"。":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}}}},"大":{"docs":{},"，":{"docs":{},"访":{"docs":{},"问":{"docs":{},"速":{"docs":{},"度":{"docs":{},"更":{"docs":{},"慢":{"docs":{},"。":{"docs":{},"最":{"docs":{},"好":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}},"数":{"docs":{},"组":{"docs":{},"容":{"docs":{},"量":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"；":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}}}}}}}},"设":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}},"定":{"docs":{},"最":{"docs":{},"大":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}},"置":{"docs":{},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}},"复":{"docs":{},"制":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}},"。":{"docs":{},"若":{"docs":{},"n":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"是":{"docs":{},"s":{"docs":{},"，":{"docs":{},"则":{"docs":{},"n":{"1":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"就":{"docs":{},"是":{"docs":{},"s":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"s":{"1":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"计":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"个":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"条":{"docs":{},"包":{"docs":{},"含":{"docs":{},"某":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"。":{"docs":{},"路":{"docs":{},"径":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"格":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"步":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"向":{"docs":{},"左":{"docs":{},"、":{"docs":{},"右":{"docs":{},"、":{"docs":{},"上":{"docs":{},"、":{"docs":{},"下":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"格":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"条":{"docs":{},"路":{"docs":{},"径":{"docs":{},"经":{"docs":{},"过":{"docs":{},"了":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"某":{"docs":{},"一":{"docs":{},"格":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"该":{"docs":{},"路":{"docs":{},"径":{"docs":{},"不":{"docs":{},"能":{"docs":{},"再":{"docs":{},"次":{"docs":{},"进":{"docs":{},"入":{"docs":{},"该":{"docs":{},"格":{"docs":{},"子":{"docs":{},"。":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"链":{"docs":{},"表":{"docs":{},"转":{"docs":{},"红":{"docs":{},"黑":{"docs":{},"树":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}}},"中":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":10}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"环":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":10}}}}}}}}}}},"键":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}},"值":{"docs":{},"对":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"，":{"docs":{},"先":{"docs":{},"计":{"docs":{},"算":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.003134796238244514}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"Java/Java容器/HashMap.html":{"ref":"Java/Java容器/HashMap.html","tf":0.0010449320794148381}}}}},"决":{"docs":{},"定":{"docs":{},"了":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}},"覆":{"docs":{},"盖":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.007220216606498195}}},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"访":{"docs":{},"问":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"移":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"是":{"docs":{},"最":{"docs":{},"近":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"链":{"docs":{},"表":{"docs":{},"首":{"docs":{},"部":{"docs":{},"就":{"docs":{},"是":{"docs":{},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"久":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"；":{"docs":{"Java/Java容器/LinkedHashMap.html":{"ref":"Java/Java容器/LinkedHashMap.html","tf":0.0036101083032490976}}}},"时":{"docs":{},"针":{"docs":{},"打":{"docs":{},"印":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":10}}}}}}}}},"指":{"docs":{},"针":{"docs":{},"：":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}},"示":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"和":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}}}}}}}}}},"入":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806}}}}}}}}}},"出":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"单":{"docs":{},"词":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"要":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}}}}}}}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"编":{"docs":{},"号":{"docs":{},"，":{"docs":{},"从":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}},"docs":{}}}}}}}}}}}}}},"正":{"docs":{},"在":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"当":{"docs":{},"前":{"docs":{},"正":{"docs":{},"在":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}}}}}},"向":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}}}}},"支":{"docs":{},"持":{"docs":{},"随":{"docs":{},"机":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Java/Java容器/LinkedList.html":{"ref":"Java/Java容器/LinkedList.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}},"样":{"docs":{},"是":{"docs":{},"用":{"docs":{},"空":{"docs":{},"间":{"docs":{},"换":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"同":{"docs":{},"于":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"思":{"docs":{},"路":{"docs":{},"中":{"docs":{},"用":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{},"存":{"docs":{},"储":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"这":{"docs":{},"次":{"docs":{},"我":{"docs":{},"们":{"docs":{},"直":{"docs":{},"接":{"docs":{},"在":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"上":{"docs":{},"完":{"docs":{},"成":{"docs":{},"复":{"docs":{},"制":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"替":{"docs":{},"代":{"docs":{},"方":{"docs":{},"案":{"docs":{"Java/Java容器/Vector.html":{"ref":"Java/Java容器/Vector.html","tf":0.012345679012345678}}}}},"换":{"docs":{},"空":{"docs":{},"格":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":10}}}}}},"主":{"docs":{},"要":{"docs":{},"用":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"使":{"docs":{},"用":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}},"区":{"docs":{},"获":{"docs":{},"取":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"找":{"docs":{},"到":{"docs":{},"的":{"docs":{},"话":{"docs":{},"再":{"docs":{},"到":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"到":{"docs":{},"就":{"docs":{},"把":{"docs":{},"对":{"docs":{},"象":{"docs":{},"放":{"docs":{},"入":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}}}}}},"，":{"docs":{},"当":{"docs":{},"从":{"docs":{"Java/Java容器/WeakHashMap.html":{"ref":"Java/Java容器/WeakHashMap.html","tf":0.006802721088435374}}}}},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"JianZhiOffer/":{"ref":"JianZhiOffer/","tf":10.333333333333334}}}}}}}}},"终":{"docs":{},"于":{"docs":{},"刷":{"docs":{},"完":{"docs":{},"《":{"docs":{},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"》":{"docs":{},"啦":{"docs":{},"！":{"docs":{},"！":{"docs":{},"！":{"docs":{},"这":{"docs":{},"里":{"docs":{},"整":{"docs":{},"理":{"docs":{},"一":{"docs":{},"下":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"题":{"docs":{},"解":{"docs":{},"。":{"docs":{},"原":{"docs":{},"书":{"docs":{},"中":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"用":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"自":{"docs":{},"己":{"docs":{},"对":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"更":{"docs":{},"熟":{"docs":{},"悉":{"docs":{},"一":{"docs":{},"些":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"里":{"docs":{},"我":{"docs":{},"选":{"docs":{},"择":{"docs":{},"用":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"在":{"docs":{},"刷":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"参":{"docs":{},"考":{"docs":{},"并":{"docs":{},"用":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"再":{"docs":{},"现":{"docs":{},"了":{"docs":{},"书":{"docs":{},"上":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"外":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"些":{"docs":{},"题":{"docs":{},"目":{"docs":{},"我":{"docs":{},"也":{"docs":{},"补":{"docs":{},"充":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"我":{"docs":{},"在":{"docs":{},"其":{"docs":{},"他":{"docs":{},"地":{"docs":{},"方":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"《":{"docs":{},"算":{"docs":{},"法":{"docs":{},"竞":{"docs":{},"赛":{"docs":{},"入":{"docs":{},"门":{"docs":{},"经":{"docs":{},"典":{"docs":{},"》":{"docs":{},"等":{"docs":{},"看":{"docs":{},"到":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"比":{"docs":{},"较":{"docs":{},"有":{"docs":{},"意":{"docs":{},"思":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"对":{"docs":{},"于":{"docs":{},"“":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"公":{"docs":{},"共":{"docs":{},"节":{"docs":{},"点":{"docs":{},"”":{"docs":{},"这":{"docs":{},"道":{"docs":{},"题":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"“":{"docs":{},"两":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"”":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"要":{"docs":{},"比":{"docs":{},"书":{"docs":{},"上":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"更":{"docs":{},"加":{"docs":{},"直":{"docs":{},"观":{"docs":{},"，":{"docs":{},"效":{"docs":{},"率":{"docs":{},"更":{"docs":{},"高":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"“":{"docs":{},"正":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"”":{"docs":{},"这":{"docs":{},"道":{"docs":{},"题":{"docs":{},"，":{"docs":{},"书":{"docs":{},"上":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"些":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"长":{"docs":{},"度":{"docs":{},"很":{"docs":{},"长":{"docs":{},"的":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"效":{"docs":{},"果":{"docs":{},"会":{"docs":{},"很":{"docs":{},"差":{"docs":{},"，":{"docs":{},"而":{"docs":{},"选":{"docs":{},"用":{"docs":{},"一":{"docs":{},"种":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"则":{"docs":{},"会":{"docs":{},"大":{"docs":{},"大":{"docs":{},"提":{"docs":{},"升":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"。":{"docs":{},"此":{"docs":{},"外":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"“":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"”":{"docs":{},"这":{"docs":{},"道":{"docs":{},"题":{"docs":{},"，":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"书":{"docs":{},"上":{"docs":{},"第":{"docs":{},"一":{"docs":{},"种":{"docs":{},"解":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"选":{"docs":{},"取":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"在":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"每":{"docs":{},"次":{"docs":{},"只":{"docs":{},"选":{"docs":{},"取":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"作":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"某":{"docs":{},"些":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{},"比":{"docs":{},"较":{"docs":{},"多":{"docs":{},"的":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"下":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"产":{"docs":{},"生":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"应":{"docs":{},"该":{"docs":{},"随":{"docs":{},"机":{"docs":{},"地":{"docs":{},"选":{"docs":{},"取":{"docs":{},"基":{"docs":{},"准":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"JianZhiOffer/":{"ref":"JianZhiOffer/","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"虽":{"docs":{},"然":{"docs":{},"刷":{"docs":{},"是":{"docs":{},"刷":{"docs":{},"了":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"自":{"docs":{},"我":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"对":{"docs":{},"于":{"docs":{},"某":{"docs":{},"些":{"docs":{},"题":{"docs":{},"目":{"docs":{},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"够":{"docs":{},"深":{"docs":{},"，":{"docs":{},"等":{"docs":{},"以":{"docs":{},"后":{"docs":{},"有":{"docs":{},"时":{"docs":{},"间":{"docs":{},"了":{"docs":{},"再":{"docs":{},"刷":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"吧":{"docs":{},"！":{"docs":{},"^":{"docs":{},"_":{"docs":{},"^":{"docs":{"JianZhiOffer/":{"ref":"JianZhiOffer/","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"路":{"1":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}},"2":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00823045267489712},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}},":":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}},"：":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}},"3":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}},"4":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}},"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.015625},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.011235955056179775},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.01639344262295082},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.0125},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.02564102564102564},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.008368200836820083},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}},"由":{"docs":{},"于":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"m":{"docs":{},",":{"docs":{},"n":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"得":{"docs":{},"到":{"docs":{},"m":{"docs":{},"n":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"里":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"而":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"采":{"docs":{},"用":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"处":{"docs":{},"理":{"docs":{},"原":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"。":{"docs":{},"处":{"docs":{},"理":{"docs":{},"时":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"保":{"docs":{},"存":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"在":{"docs":{},"处":{"docs":{},"理":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"时":{"docs":{},"，":{"docs":{},"建":{"docs":{},"立":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"接":{"docs":{},"关":{"docs":{},"系":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"递":{"docs":{},"增":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"用":{"docs":{},"l":{"docs":{},"o":{"docs":{},"指":{"docs":{},"示":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"h":{"docs":{},"i":{"docs":{},"指":{"docs":{},"示":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"当":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"数":{"docs":{},"有":{"4":{"docs":{},"个":{"docs":{},"字":{"docs":{},"节":{"docs":{},"，":{"docs":{},"共":{"3":{"2":{"docs":{},"位":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"循":{"docs":{},"环":{"3":{"2":{"docs":{},"次":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"用":{"docs":{},"n":{"docs":{},"和":{"1":{"docs":{},"进":{"docs":{},"行":{"docs":{},"位":{"docs":{},"与":{"docs":{},"运":{"docs":{},"算":{"docs":{},"判":{"docs":{},"断":{"docs":{},"其":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"位":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"1":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"1":{"docs":{},"则":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"将":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"位":{"docs":{},"移":{"docs":{},"出":{"docs":{},"继":{"docs":{},"续":{"docs":{},"判":{"docs":{},"断":{"docs":{},"余":{"docs":{},"下":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"读":{"docs":{},"出":{"docs":{},"数":{"docs":{},"据":{"docs":{},"并":{"docs":{},"计":{"docs":{},"算":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"容":{"docs":{},"器":{"docs":{},"存":{"docs":{},"储":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"据":{"docs":{},"并":{"docs":{},"同":{"docs":{},"时":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"和":{"docs":{},"读":{"docs":{},"取":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"找":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"顶":{"docs":{},"堆":{"docs":{},"保":{"docs":{},"存":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"前":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"从":{"docs":{},"k":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"层":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"右":{"docs":{},"往":{"docs":{},"左":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"先":{"docs":{},"加":{"docs":{},"入":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"再":{"docs":{},"加":{"docs":{},"入":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"奇":{"docs":{},"数":{"docs":{},"层":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"左":{"docs":{},"往":{"docs":{},"右":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"先":{"docs":{},"加":{"docs":{},"入":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"再":{"docs":{},"加":{"docs":{},"入":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"是":{"docs":{},"从":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"为":{"docs":{},"了":{"docs":{},"找":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"最":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"其":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"则":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"其":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"则":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"继":{"docs":{},"续":{"docs":{},"从":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"找":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"其":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"父":{"docs":{},"子":{"docs":{},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"即":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"没":{"docs":{},"有":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"是":{"docs":{},"先":{"docs":{},"从":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"采":{"docs":{},"用":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"每":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"进":{"docs":{},"行":{"docs":{},"累":{"docs":{},"加":{"docs":{},"，":{"docs":{},"即":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"记":{"docs":{},"录":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"编":{"docs":{},"号":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"编":{"docs":{},"号":{"docs":{},"等":{"docs":{},"于":{"docs":{},"k":{"docs":{},"时":{"docs":{},"即":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"第":{"docs":{},"k":{"docs":{},"大":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"把":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"起":{"docs":{},"来":{"docs":{},"排":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"能":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"出":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{},"{":{"3":{"docs":{},",":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"递":{"docs":{},"增":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"s":{"docs":{},"，":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"和":{"docs":{},"正":{"docs":{},"好":{"docs":{},"是":{"docs":{},"s":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"多":{"docs":{},"对":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"和":{"docs":{},"等":{"docs":{},"于":{"docs":{},"s":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"对":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"调":{"docs":{},"整":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"位":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"前":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"位":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"后":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"并":{"docs":{},"保":{"docs":{},"证":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"和":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"某":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"互":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{},"[":{"5":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"该":{"docs":{},"数":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"示":{"docs":{},"中":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{},"负":{"docs":{},"数":{"docs":{},"用":{"docs":{},"补":{"docs":{},"码":{"docs":{},"表":{"docs":{},"示":{"docs":{},"。":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"非":{"docs":{},"减":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"数":{"docs":{},"组":{"docs":{},"{":{"3":{"docs":{},",":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"从":{"docs":{},"尾":{"docs":{},"到":{"docs":{},"头":{"docs":{},"反":{"docs":{},"过":{"docs":{},"来":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"反":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{},"后":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"表":{"docs":{},"头":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}},"输":{"docs":{},"出":{"docs":{},"该":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"（":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"以":{"docs":{},"及":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"向":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"）":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"复":{"docs":{},"制":{"docs":{},"后":{"docs":{},"的":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"外":{"docs":{},"向":{"docs":{},"里":{"docs":{},"以":{"docs":{},"顺":{"docs":{},"时":{"docs":{},"针":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"依":{"docs":{},"次":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"如":{"docs":{},"下":{"4":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"英":{"docs":{},"文":{"docs":{},"句":{"docs":{},"子":{"docs":{},"，":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"句":{"docs":{},"子":{"docs":{},"中":{"docs":{},"单":{"docs":{},"词":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"但":{"docs":{},"单":{"docs":{},"词":{"docs":{},"内":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"不":{"docs":{},"变":{"docs":{},"。":{"docs":{},"为":{"docs":{},"简":{"docs":{},"单":{"docs":{},"起":{"docs":{},"见":{"docs":{},"，":{"docs":{},"标":{"docs":{},"点":{"docs":{},"符":{"docs":{},"号":{"docs":{},"和":{"docs":{},"普":{"docs":{},"通":{"docs":{},"字":{"docs":{},"母":{"docs":{},"一":{"docs":{},"样":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"\"":{"docs":{},"i":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},",":{"docs":{},"按":{"docs":{},"字":{"docs":{},"典":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"该":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},",":{"docs":{},"则":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"由":{"docs":{},"字":{"docs":{},"符":{"docs":{},"a":{"docs":{},",":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"它":{"docs":{},"的":{"docs":{},"镜":{"docs":{},"像":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}},"求":{"docs":{},"该":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"。":{"docs":{},"从":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},"依":{"docs":{},"次":{"docs":{},"经":{"docs":{},"过":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"（":{"docs":{},"含":{"docs":{},"根":{"docs":{},"、":{"docs":{},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},"）":{"docs":{},"形":{"docs":{},"成":{"docs":{},"树":{"docs":{},"的":{"docs":{},"一":{"docs":{},"条":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"最":{"docs":{},"长":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"，":{"docs":{},"将":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"要":{"docs":{},"求":{"docs":{},"不":{"docs":{},"能":{"docs":{},"创":{"docs":{},"建":{"docs":{},"任":{"docs":{},"何":{"docs":{},"新":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"调":{"docs":{},"整":{"docs":{},"树":{"docs":{},"中":{"docs":{},"结":{"docs":{},"点":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"指":{"docs":{},"向":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"对":{"docs":{},"于":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"颗":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{},"为":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"路":{"docs":{},"径":{"docs":{},"。":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{},"为":{"docs":{},"路":{"docs":{},"径":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"路":{"docs":{},"径":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"从":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"向":{"docs":{},"下":{"docs":{},"到":{"docs":{},"某":{"docs":{},"个":{"docs":{},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},"所":{"docs":{},"经":{"docs":{},"过":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"形":{"docs":{},"成":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"单":{"docs":{},"调":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"合":{"docs":{},"成":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"合":{"docs":{},"成":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"也":{"docs":{},"要":{"docs":{},"求":{"docs":{},"单":{"docs":{},"调":{"docs":{},"递":{"docs":{},"增":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"找":{"docs":{},"出":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"公":{"docs":{},"共":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"表":{"docs":{},"示":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"请":{"docs":{},"判":{"docs":{},"断":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"能":{"docs":{},"为":{"docs":{},"该":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"均":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"序":{"docs":{},"列":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"a":{"docs":{},"，":{"docs":{},"b":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"b":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"a":{"docs":{},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"约":{"docs":{},"定":{"docs":{},"空":{"docs":{},"树":{"docs":{},"不":{"docs":{},"是":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"树":{"docs":{},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"树":{"docs":{},"a":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}},"数":{"docs":{},"字":{"docs":{},"n":{"docs":{},"，":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"从":{"1":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"n":{"docs":{},"位":{"docs":{},"数":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"3":{"docs":{},"，":{"docs":{},"则":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"某":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"请":{"docs":{},"重":{"docs":{},"建":{"docs":{},"出":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"中":{"docs":{},"都":{"docs":{},"不":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"：":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}},"docs":{}}}}},"：":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082}}}}},"题":{"docs":{},"目":{"docs":{"JianZhiOffer/Array/把数组排成最小的数.html":{"ref":"JianZhiOffer/Array/把数组排成最小的数.html","tf":0.014084507042253521},"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903},"JianZhiOffer/Array/和为s的两个数字.html":{"ref":"JianZhiOffer/Array/和为s的两个数字.html","tf":0.0078125},"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674},"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809},"JianZhiOffer/Array/数组中重复的数字.html":{"ref":"JianZhiOffer/Array/数组中重复的数字.html","tf":0.034482758620689655},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"ref":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","tf":0.009900990099009901},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517},"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":0.038461538461538464},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"ref":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","tf":0.017543859649122806},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"ref":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","tf":0.008771929824561403},"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925},"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","tf":0.03571428571428571},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":0.017543859649122806},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408},"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":0.038461538461538464},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856},"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808},"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625},"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818},"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":0.01639344262295082},"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338},"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415},"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993},"JianZhiOffer/Tree/重建二叉树.html":{"ref":"JianZhiOffer/Tree/重建二叉树.html","tf":0.010869565217391304},"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}},"丑":{"docs":{},"数":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":10}}}},"习":{"docs":{},"惯":{"docs":{},"上":{"docs":{},"我":{"docs":{},"们":{"docs":{},"把":{"1":{"docs":{},"当":{"docs":{},"做":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"。":{"docs":{},"求":{"docs":{},"按":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"第":{"docs":{},"n":{"docs":{},"个":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"。":{"docs":{},"约":{"docs":{},"定":{"1":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"丑":{"docs":{},"数":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/丑数.html":{"ref":"JianZhiOffer/Array/丑数.html","tf":0.03225806451612903}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"给":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"浮":{"docs":{},"点":{"docs":{},"数":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"和":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"。":{"docs":{},"求":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"的":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"次":{"docs":{},"方":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数值的整数次方.html":{"ref":"JianZhiOffer/Array/数值的整数次方.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{},"n":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"数":{"docs":{},"组":{"docs":{},"非":{"docs":{},"空":{"docs":{},"并":{"docs":{},"且":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"n":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"至":{"docs":{},"少":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"数":{"docs":{},"组":{"docs":{},"[":{"6":{"docs":{},",":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"请":{"docs":{},"找":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"里":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"如":{"docs":{},"果":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{},"[":{"2":{"docs":{},",":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"s":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"模":{"docs":{},"式":{"docs":{},"p":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"支":{"docs":{},"持":{"docs":{},".":{"docs":{},"和":{"docs":{},"*":{"docs":{},"的":{"docs":{},"正":{"docs":{},"则":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"模":{"docs":{},"式":{"docs":{},"中":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},".":{"docs":{},"表":{"docs":{},"示":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"而":{"docs":{},"*":{"docs":{},"表":{"docs":{},"示":{"docs":{},"它":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"可":{"docs":{},"以":{"docs":{},"出":{"docs":{},"现":{"docs":{},"任":{"docs":{},"意":{"docs":{},"次":{"docs":{},"（":{"docs":{},"含":{"0":{"docs":{},"次":{"docs":{},"）":{"docs":{},"。":{"docs":{},"在":{"docs":{},"本":{"docs":{},"题":{"docs":{},"中":{"docs":{},"，":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"是":{"docs":{},"指":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"整":{"docs":{},"个":{"docs":{},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"与":{"docs":{},"模":{"docs":{},"式":{"docs":{},"\"":{"docs":{},"a":{"docs":{},".":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"和":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"b":{"docs":{},"*":{"docs":{},"a":{"docs":{},"c":{"docs":{},"*":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"但":{"docs":{},"与":{"docs":{},"“":{"docs":{},"a":{"docs":{},"a":{"docs":{},".":{"docs":{},"a":{"docs":{},"”":{"docs":{},"和":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"b":{"docs":{},"*":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"均":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"删":{"docs":{},"除":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"为":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"删":{"docs":{},"除":{"docs":{},"后":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"链":{"docs":{},"表":{"1":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"和":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"除":{"docs":{},"了":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"分":{"docs":{},"别":{"docs":{},"指":{"docs":{},"向":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"以":{"docs":{},"外":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"，":{"docs":{},"请":{"docs":{},"找":{"docs":{},"出":{"docs":{},"其":{"docs":{},"中":{"docs":{},"第":{"docs":{},"k":{"docs":{},"大":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"k":{"docs":{},"从":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"计":{"docs":{},"数":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"如":{"docs":{},"下":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"单":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"在":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"删":{"docs":{},"除":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"输":{"docs":{},"入":{"docs":{},"保":{"docs":{},"证":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"0":{"docs":{},",":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}},"1":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}},"docs":{},",":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}},"2":{"docs":{},",":{"docs":{"LeetCode/1. Two Sum.html":{"ref":"LeetCode/1. Two Sum.html","tf":0.009708737864077669}}}},"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}}}}},"[":{"1":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":0.010638297872340425}}}},"docs":{}},"docs":{}},"−":{"2":{"3":{"1":{"docs":{},",":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}},"docs":{}},"docs":{}},"docs":{}}},"找":{"docs":{},"到":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"返":{"docs":{},"回":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}},"docs":{}}}}}}}}}},"出":{"docs":{},"其":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"[":{"4":{"docs":{},",":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}},"docs":{}}}}}}}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"能":{"docs":{},"够":{"docs":{},"得":{"docs":{},"到":{"docs":{},"正":{"docs":{},"确":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"在":{"docs":{},"于":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"当":{"docs":{},"时":{"docs":{},"在":{"docs":{},"学":{"docs":{},"习":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"这":{"docs":{},"门":{"docs":{},"课":{"docs":{},"程":{"docs":{},"时":{"docs":{},"，":{"docs":{},"都":{"docs":{},"会":{"docs":{},"学":{"docs":{},"习":{"docs":{},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"而":{"docs":{},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"就":{"docs":{},"是":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"：":{"docs":{},"每":{"docs":{},"次":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"选":{"docs":{},"择":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"，":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"比":{"docs":{},"该":{"docs":{},"数":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"排":{"docs":{},"在":{"docs":{},"它":{"docs":{},"的":{"docs":{},"左":{"docs":{},"边":{"docs":{},"，":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"比":{"docs":{},"该":{"docs":{},"数":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"排":{"docs":{},"在":{"docs":{},"它":{"docs":{},"的":{"docs":{},"右":{"docs":{},"边":{"docs":{},"。":{"docs":{},"由":{"docs":{},"此":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"便":{"docs":{},"确":{"docs":{},"定":{"docs":{},"了":{"docs":{},"该":{"docs":{},"数":{"docs":{},"在":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"正":{"docs":{},"确":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"一":{"docs":{},"般":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"书":{"docs":{},"中":{"docs":{},"对":{"docs":{},"于":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"默":{"docs":{},"认":{"docs":{},"都":{"docs":{},"为":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"将":{"docs":{},"这":{"docs":{},"种":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"应":{"docs":{},"用":{"docs":{},"于":{"docs":{},"该":{"docs":{},"题":{"docs":{},"中":{"docs":{},"则":{"docs":{},"在":{"docs":{},"某":{"docs":{},"些":{"docs":{},"测":{"docs":{},"试":{"docs":{},"用":{"docs":{},"例":{"docs":{},"下":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"当":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"大":{"docs":{},"量":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"可":{"docs":{},"能":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"等":{"docs":{},"于":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"！":{"docs":{},"为":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"应":{"docs":{},"该":{"docs":{},"采":{"docs":{},"用":{"docs":{},"更":{"docs":{},"为":{"docs":{},"科":{"docs":{},"学":{"docs":{},"的":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"，":{"docs":{},"即":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"随":{"docs":{},"机":{"docs":{},"选":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"。":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"虽":{"docs":{},"然":{"docs":{},"在":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"分":{"docs":{},"析":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"是":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"，":{"docs":{},"p":{"1":{"docs":{},"和":{"docs":{},"p":{"2":{"docs":{},"同":{"docs":{},"时":{"docs":{},"指":{"docs":{},"向":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"无":{"docs":{},"论":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"还":{"docs":{},"是":{"docs":{},"最":{"docs":{},"大":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"应":{"docs":{},"该":{"docs":{},"都":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"的":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"实":{"docs":{},"现":{"docs":{},"上":{"docs":{},"只":{"docs":{},"有":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"才":{"docs":{},"指":{"docs":{},"示":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"里":{"docs":{},"只":{"docs":{},"能":{"docs":{},"返":{"docs":{},"回":{"docs":{},"最":{"docs":{},"小":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"默":{"docs":{},"认":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"是":{"docs":{},"小":{"docs":{},"顶":{"docs":{},"堆":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}},"这":{"docs":{},"里":{"docs":{},"i":{"docs":{},"是":{"docs":{},"从":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"j":{"docs":{},"是":{"docs":{},"从":{"docs":{},"p":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"上":{"docs":{},"述":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"运":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"：":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}}}}}}}}}}}}}},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"：":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.009302325581395349},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}},"（":{"docs":{},"取":{"docs":{},"决":{"docs":{},"于":{"docs":{},"所":{"docs":{},"用":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"）":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}},"docs":{},"n":{"docs":{},")":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}},"^":{"2":{"docs":{},")":{"docs":{"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}}},"docs":{}}}}}}}}}}},"统":{"docs":{},"计":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}},"字":{"docs":{},"k":{"docs":{},"在":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"ref":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","tf":0.0125}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"减":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"置":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"并":{"docs":{},"将":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"置":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"束":{"docs":{},"后":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"超":{"docs":{},"过":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"确":{"docs":{},"实":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"ref":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},")":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.011494252873563218},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.015267175572519083},"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521},"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856},"LeetCode/5. Longest Palindromic Substring.html":{"ref":"LeetCode/5. Longest Palindromic Substring.html","tf":0.0055248618784530384}}},"]":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.023952095808383235},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"ref":"JianZhiOffer/Matrix/顺时针打印矩阵.html","tf":0.007633587786259542}},";":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.011976047904191617}}}},"辅":{"docs":{},"助":{"docs":{},"数":{"docs":{},"组":{"docs":{"JianZhiOffer/Array/数组中的逆序对.html":{"ref":"JianZhiOffer/Array/数组中的逆序对.html","tf":0.005988023952095809}}}}}},";":{"docs":{"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","tf":0.007633587786259542}}},"%":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358},"LeetCode/2. Add Two Numbers.html":{"ref":"LeetCode/2. Add Two Numbers.html","tf":0.005319148936170213},"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"。":{"docs":{"JianZhiOffer/String/字符串的排列.html":{"ref":"JianZhiOffer/String/字符串的排列.html","tf":0.008771929824561403}},"在":{"docs":{},"进":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"格":{"docs":{},"子":{"docs":{},"之":{"docs":{},"前":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"能":{"docs":{},"进":{"docs":{},"入":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"能":{"docs":{},"进":{"docs":{},"入":{"docs":{},"则":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},"并":{"docs":{},"且":{"docs":{},"置":{"docs":{},"访":{"docs":{},"问":{"docs":{},"标":{"docs":{},"记":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"。":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"地":{"docs":{},"上":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"行":{"docs":{},"n":{"docs":{},"列":{"docs":{},"的":{"docs":{},"方":{"docs":{},"格":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"机":{"docs":{},"器":{"docs":{},"人":{"docs":{},"从":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":0.014925373134328358}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"机":{"docs":{},"器":{"docs":{},"人":{"docs":{},"的":{"docs":{},"运":{"docs":{},"动":{"docs":{},"范":{"docs":{},"围":{"docs":{"JianZhiOffer/Backtracking/机器人的运动范围.html":{"ref":"JianZhiOffer/Backtracking/机器人的运动范围.html","tf":10}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":10}}}}}},"的":{"docs":{},"列":{"docs":{},"数":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}}},"行":{"docs":{},"数":{"docs":{"JianZhiOffer/Backtracking/矩阵中的路径.html":{"ref":"JianZhiOffer/Backtracking/矩阵中的路径.html","tf":0.012195121951219513}}}}}}},"旋":{"docs":{},"转":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"做":{"docs":{},"是":{"docs":{},"由":{"docs":{},"两":{"docs":{},"个":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"所":{"docs":{},"构":{"docs":{},"成":{"docs":{},"，":{"docs":{},"而":{"docs":{},"这":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"分":{"docs":{},"界":{"docs":{},"点":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"借":{"docs":{},"助":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"去":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"这":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"用":{"docs":{},"l":{"docs":{},"o":{"docs":{},"指":{"docs":{},"示":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"h":{"docs":{},"i":{"docs":{},"指":{"docs":{},"示":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"指":{"docs":{},"示":{"docs":{},"l":{"docs":{},"o":{"docs":{},"和":{"docs":{},"h":{"docs":{},"i":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"数":{"docs":{},"字":{"docs":{"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"ref":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","tf":10}}}}}}}}}}},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"中":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":10}}}}}},"docs":{}}}},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":10}}}}}}}}},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"层":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}},"镜":{"docs":{},"像":{"docs":{"JianZhiOffer/Tree/二叉树的镜像.html":{"ref":"JianZhiOffer/Tree/二叉树的镜像.html","tf":10}}}},"深":{"docs":{},"度":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":10}}}},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":10}}}}}}}},"中":{"docs":{},"和":{"docs":{},"为":{"docs":{},"某":{"docs":{},"一":{"docs":{},"值":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"ref":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","tf":10}}}}}}}}}}}},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"第":{"docs":{},"k":{"docs":{},"大":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":10}}}}}}},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":10}}}}}}}}},"与":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":10}}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{},"“":{"docs":{},"(":{"docs":{},"n":{"docs":{"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"ref":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","tf":0.0196078431372549}}}}},"结":{"docs":{},"论":{"docs":{},"“":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"之":{"docs":{},"和":{"docs":{},"等":{"docs":{},"于":{"docs":{},"两":{"docs":{},"个":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"和":{"docs":{},"之":{"docs":{},"差":{"docs":{},"”":{"docs":{},"，":{"docs":{},"即":{"docs":{},"设":{"docs":{},"s":{"docs":{},"i":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":0.009259259259259259}}}}}}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","tf":0.01098901098901099}}}}}}},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":10}}}}}}}},"递":{"docs":{},"归":{"docs":{},"。":{"docs":{"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"ref":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","tf":0.015625},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"ref":"JianZhiOffer/LinkedList/从尾到头打印链表.html","tf":0.018518518518518517}},"假":{"docs":{},"设":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"已":{"docs":{},"经":{"docs":{},"反":{"docs":{},"转":{"docs":{},"完":{"docs":{},"成":{"docs":{},"了":{"docs":{},"，":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"如":{"docs":{},"何":{"docs":{},"反":{"docs":{},"转":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"将":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"置":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"。":{"docs":{},"当":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"；":{"docs":{},"当":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"只":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"ref":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","tf":10}}}}}}}}}}},"《":{"docs":{},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"》":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"。":{"docs":{},"当":{"docs":{},"没":{"docs":{},"有":{"docs":{},"*":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"情":{"docs":{},"况":{"docs":{},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"依":{"docs":{},"次":{"docs":{},"判":{"docs":{},"断":{"docs":{},"s":{"docs":{},"和":{"docs":{},"p":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"*":{"docs":{},"并":{"docs":{},"且":{"docs":{},"p":{"docs":{},"中":{"docs":{},"*":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"还":{"docs":{},"和":{"docs":{},"s":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"分":{"docs":{},"为":{"docs":{},"三":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"去":{"docs":{},"处":{"docs":{},"理":{"docs":{},"：":{"docs":{},"匹":{"docs":{},"配":{"0":{"docs":{},"个":{"docs":{},"、":{"docs":{},"匹":{"docs":{},"配":{"1":{"docs":{},"个":{"docs":{},"和":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"多":{"docs":{},"个":{"docs":{},"。":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"》":{"docs":{},"中":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"是":{"docs":{},"树":{"docs":{},"中":{"docs":{},"第":{"docs":{},"k":{"docs":{},"小":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"我":{"docs":{},"们":{"docs":{},"把":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"按":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"排":{"docs":{},"列":{"docs":{},"并":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"编":{"docs":{},"号":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"求":{"docs":{},"出":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{},"t":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"t":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"述":{"docs":{},"思":{"docs":{},"路":{"docs":{},"的":{"docs":{},"d":{"docs":{},"p":{"docs":{},"版":{"docs":{},"本":{"docs":{},"。":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"思":{"docs":{},"路":{"docs":{},"很":{"docs":{},"简":{"docs":{},"洁":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"代":{"docs":{},"码":{"docs":{},"比":{"docs":{},"较":{"docs":{},"繁":{"docs":{},"琐":{"docs":{},"。":{"docs":{},"观":{"docs":{},"察":{"docs":{},"数":{"docs":{},"字":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"规":{"docs":{},"律":{"docs":{},"：":{"0":{"0":{"0":{"docs":{},",":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":0.014084507042253521}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"题":{"docs":{},"中":{"docs":{},"假":{"docs":{},"设":{"docs":{},"在":{"docs":{},"a":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"和":{"docs":{},"b":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"后":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"求":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"所":{"docs":{},"代":{"docs":{},"表":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"和":{"docs":{},"b":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"完":{"docs":{},"全":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"而":{"docs":{},"这":{"docs":{},"里":{"docs":{},"要":{"docs":{},"求":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"所":{"docs":{},"代":{"docs":{},"表":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"b":{"docs":{},"完":{"docs":{},"全":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"即":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"及":{"docs":{},"其":{"docs":{},"所":{"docs":{},"有":{"docs":{},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{},"都":{"docs":{},"要":{"docs":{},"和":{"docs":{},"b":{"docs":{},"完":{"docs":{},"全":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{},"两":{"docs":{},"者":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"在":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"匹":{"docs":{},"配":{"0":{"docs":{},"个":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}},"1":{"docs":{},"个":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}},"docs":{}}},"正":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":10}}}}}}}}},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"对":{"docs":{},"上":{"docs":{},"述":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"做":{"docs":{},"了":{"docs":{},"简":{"docs":{},"化":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{},"s":{"docs":{},"和":{"docs":{},"p":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"接":{"docs":{},"着":{"docs":{},"看":{"docs":{},"p":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"*":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"是":{"docs":{},"*":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"判":{"docs":{},"断":{"docs":{},"s":{"docs":{},"和":{"docs":{},"p":{"docs":{},"余":{"docs":{},"下":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"*":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"匹":{"docs":{},"配":{"0":{"docs":{},"个":{"docs":{},"，":{"docs":{},"即":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"p":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"和":{"docs":{},"*":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"看":{"docs":{},"p":{"docs":{},"中":{"docs":{},"余":{"docs":{},"下":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"和":{"docs":{},"s":{"docs":{},"是":{"docs":{},"否":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"；":{"docs":{},"要":{"docs":{},"么":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"多":{"docs":{},"个":{"docs":{},"，":{"docs":{},"即":{"docs":{},"从":{"docs":{},"s":{"docs":{},"中":{"docs":{},"去":{"docs":{},"掉":{"1":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"s":{"docs":{},"中":{"docs":{},"余":{"docs":{},"下":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"和":{"docs":{},"p":{"docs":{},"是":{"docs":{},"否":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"和":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"思":{"docs":{},"路":{"docs":{},"把":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"分":{"docs":{},"为":{"docs":{},"匹":{"docs":{},"配":{"0":{"docs":{},"个":{"docs":{},"，":{"docs":{},"匹":{"docs":{},"配":{"1":{"docs":{},"个":{"docs":{},"，":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"多":{"docs":{},"个":{"docs":{},"相":{"docs":{},"比":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"把":{"docs":{},"匹":{"docs":{},"配":{"1":{"docs":{},"个":{"docs":{},"和":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"多":{"docs":{},"个":{"docs":{},"在":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"上":{"docs":{},"统":{"docs":{},"一":{"docs":{},"成":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"多":{"docs":{},"个":{"docs":{},"了":{"docs":{},"。":{"docs":{"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"ref":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"反":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":10}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}},"循":{"docs":{},"环":{"docs":{},"。":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"指":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"指":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"依":{"docs":{},"次":{"docs":{},"反":{"docs":{},"转":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"向":{"docs":{},"前":{"docs":{},"移":{"docs":{},"动":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"反":{"docs":{},"转":{"docs":{},"时":{"docs":{},"首":{"docs":{},"先":{"docs":{},"保":{"docs":{},"存":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"到":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"中":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"反":{"docs":{},"转":{"docs":{},"会":{"docs":{},"修":{"docs":{},"改":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"向":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/反转链表.html":{"ref":"JianZhiOffer/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}},"复":{"docs":{},"制":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{},"复":{"docs":{},"制":{"docs":{},"节":{"docs":{},"点":{"docs":{},"直":{"docs":{},"接":{"docs":{},"链":{"docs":{},"接":{"docs":{},"到":{"docs":{},"原":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"后":{"docs":{},"面":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"将":{"docs":{},"复":{"docs":{},"制":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"直":{"docs":{},"接":{"docs":{},"链":{"docs":{},"接":{"docs":{},"到":{"docs":{},"原":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"后":{"docs":{},"面":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"不":{"docs":{},"设":{"docs":{},"置":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"复":{"docs":{},"制":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":10}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"该":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"构":{"docs":{},"成":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"构":{"docs":{},"成":{"docs":{},"复":{"docs":{},"制":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"出":{"docs":{},"来":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/复杂链表的复制.html":{"ref":"JianZhiOffer/LinkedList/复杂链表的复制.html","tf":0.0035460992907801418}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"合":{"docs":{},"并":{"docs":{},"两":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"ref":"JianZhiOffer/LinkedList/合并两个排序的链表.html","tf":10}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"略":{"docs":{},"。":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}},"环":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}}}}},"证":{"docs":{},"明":{"docs":{},"：":{"docs":{},"设":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"为":{"docs":{},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"当":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"和":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"时":{"docs":{},"，":{"docs":{},"设":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"走":{"docs":{},"过":{"docs":{},"的":{"docs":{},"路":{"docs":{},"程":{"docs":{},"为":{"docs":{},"a":{"docs":{"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"ref":"JianZhiOffer/LinkedList/链表中环的入口节点.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"便":{"docs":{},"于":{"docs":{},"被":{"docs":{},"g":{"docs":{},"c":{"docs":{},"发":{"docs":{},"现":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.00749063670411985}}}}}}}}},"否":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.014814814814814815}},"则":{"docs":{},"，":{"docs":{},"将":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"指":{"docs":{},"向":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"JianZhiOffer/LinkedList/删除链表的节点.html":{"ref":"JianZhiOffer/LinkedList/删除链表的节点.html","tf":0.003745318352059925}}}}}}}}}}}}}}}},"。":{"docs":{"JianZhiOffer/Matrix/二维数组中的查找.html":{"ref":"JianZhiOffer/Matrix/二维数组中的查找.html","tf":0.018518518518518517}}},"作":{"docs":{},"用":{"docs":{},"等":{"docs":{},"同":{"docs":{},"于":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","tf":10}}}}}},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"[":{"docs":{},"i":{"docs":{},",":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}}}}}},"向":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","tf":0.006578947368421052}}}}}}}}}}}}},"总":{"docs":{},"结":{"docs":{},"上":{"docs":{},"述":{"docs":{},"过":{"docs":{},"程":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"以":{"docs":{},"下":{"docs":{},"结":{"docs":{},"论":{"docs":{},"：":{"docs":{},"整":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"我":{"docs":{},"们":{"docs":{},"保":{"docs":{},"持":{"docs":{},"两":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"至":{"docs":{},"少":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"。":{"docs":{},"当":{"docs":{},"执":{"docs":{},"行":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"均":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"约":{"docs":{},"定":{"docs":{},"将":{"docs":{},"元":{"docs":{},"素":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"2":{"docs":{},"中":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"一":{"docs":{},"个":{"docs":{},"未":{"docs":{},"空":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"元":{"docs":{},"素":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"那":{"docs":{},"个":{"docs":{},"非":{"docs":{},"空":{"docs":{},"的":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"。":{"docs":{},"当":{"docs":{},"执":{"docs":{},"行":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"不":{"docs":{},"断":{"docs":{},"将":{"docs":{},"非":{"docs":{},"空":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"出":{"docs":{},"队":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"该":{"docs":{},"队":{"docs":{},"列":{"docs":{},"只":{"docs":{},"含":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"即":{"docs":{},"为":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"出":{"docs":{},"队":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"各":{"docs":{},"个":{"docs":{},"值":{"docs":{},"的":{"docs":{},"含":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}}}},"的":{"docs":{},"压":{"docs":{},"入":{"docs":{},"、":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"序":{"docs":{},"列":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","tf":10}}}}}}}}}}},"现":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"对":{"docs":{},"栈":{"docs":{},"执":{"docs":{},"行":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"后":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"特":{"docs":{},"性":{"docs":{},"可":{"docs":{},"知":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"元":{"docs":{},"素":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"3":{"docs":{},"，":{"docs":{},"然":{"docs":{},"而":{"docs":{},"直":{"docs":{},"接":{"docs":{},"操":{"docs":{},"作":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"2":{"docs":{},"的":{"docs":{},"话":{"docs":{},"会":{"docs":{},"从":{"docs":{},"队":{"docs":{},"头":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"删":{"docs":{},"除":{"1":{"docs":{},"。":{"docs":{},"此":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"把":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"2":{"docs":{},"中":{"docs":{},"的":{"1":{"docs":{},",":{"2":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{},"中":{"docs":{},"，":{"docs":{},"再":{"docs":{},"从":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"2":{"docs":{},"中":{"docs":{},"删":{"docs":{},"除":{"3":{"docs":{},"。":{"docs":{},"执":{"docs":{},"行":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"后":{"docs":{},"两":{"docs":{},"个":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"。":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","tf":0.00819672131147541}}}}}}}}}}}}}}},",":{"docs":{},"h":{"docs":{},"i":{"docs":{},")":{"docs":{},";":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}}},"解":{"docs":{},"法":{"docs":{},"比":{"docs":{},"较":{"docs":{"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"ref":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","tf":0.007407407407407408}}}}}},"请":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"是":{"docs":{},"否":{"docs":{},"表":{"docs":{},"示":{"docs":{},"数":{"docs":{},"值":{"docs":{},"（":{"docs":{},"包":{"docs":{},"括":{"docs":{},"整":{"docs":{},"数":{"docs":{},"和":{"docs":{},"小":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"\"":{"docs":{},"+":{"1":{"0":{"0":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"5":{"docs":{},"e":{"2":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{"JianZhiOffer/String/表示数值的字符串.html":{"ref":"JianZhiOffer/String/表示数值的字符串.html","tf":0.0196078431372549}}}}}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"找":{"docs":{},"出":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"当":{"docs":{},"从":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"只":{"docs":{},"读":{"docs":{},"出":{"docs":{},"前":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"\"":{"docs":{},"g":{"docs":{},"o":{"docs":{},"\"":{"docs":{},"时":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"'":{"docs":{},"g":{"docs":{},"'":{"docs":{},"；":{"docs":{},"当":{"docs":{},"从":{"docs":{},"该":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"读":{"docs":{},"出":{"docs":{},"前":{"6":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"\"":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"\"":{"docs":{},"时":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"'":{"docs":{},"l":{"docs":{},"'":{"docs":{},"。":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"将":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"空":{"docs":{},"格":{"docs":{},"替":{"docs":{},"换":{"docs":{},"成":{"docs":{},"“":{"docs":{},"%":{"2":{"0":{"docs":{},"”":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"当":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"为":{"docs":{},"w":{"docs":{},"e":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"打":{"docs":{},"印":{"docs":{},"从":{"1":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"n":{"docs":{},"位":{"docs":{},"数":{"docs":{"JianZhiOffer/String/打印从1到最大的n位数.html":{"ref":"JianZhiOffer/String/打印从1到最大的n位数.html","tf":10}}}}}}}}}},"docs":{}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{"JianZhiOffer/String/第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/第一个只出现一次的字符.html","tf":10}}}}}}}}}}}},"k":{"docs":{},"大":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}}}}}},"左":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"左":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"把":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"若":{"docs":{},"干":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"转":{"docs":{},"移":{"docs":{},"到":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"。":{"docs":{},"请":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"实":{"docs":{},"现":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"左":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"g":{"docs":{},"\"":{"docs":{},"和":{"docs":{},"数":{"docs":{},"字":{"2":{"docs":{},"，":{"docs":{},"该":{"docs":{},"函":{"docs":{},"数":{"docs":{},"将":{"docs":{},"返":{"docs":{},"回":{"docs":{},"左":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"两":{"docs":{},"位":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"\"":{"docs":{},"。":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"翻":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":10}}}}},"整":{"docs":{},"个":{"docs":{},"句":{"docs":{},"子":{"docs":{},"，":{"docs":{},"将":{"docs":{},"结":{"docs":{},"果":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"中":{"docs":{"JianZhiOffer/String/翻转字符串.html":{"ref":"JianZhiOffer/String/翻转字符串.html","tf":0.00411522633744856}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"的":{"docs":{},"库":{"docs":{},"函":{"docs":{},"数":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"。":{"docs":{"JianZhiOffer/String/替换空格.html":{"ref":"JianZhiOffer/String/替换空格.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}},"记":{"docs":{},"录":{"docs":{},"字":{"docs":{},"符":{"docs":{},"流":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"情":{"docs":{},"况":{"docs":{"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"ref":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}},"保":{"docs":{},"存":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"层":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}},"奇":{"docs":{},"数":{"docs":{},"层":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/二叉树的下一个节点.html":{"ref":"JianZhiOffer/Tree/二叉树的下一个节点.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}},"按":{"docs":{},"之":{"docs":{},"字":{"docs":{},"形":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"按":{"docs":{},"照":{"docs":{},"之":{"docs":{},"字":{"docs":{},"形":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"即":{"docs":{},"第":{"docs":{},"一":{"docs":{},"层":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"左":{"docs":{},"向":{"docs":{},"右":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"层":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"右":{"docs":{},"向":{"docs":{},"左":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"进":{"docs":{},"行":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"第":{"docs":{},"三":{"docs":{},"层":{"docs":{},"再":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"左":{"docs":{},"向":{"docs":{},"右":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"进":{"docs":{},"行":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"打":{"docs":{},"印":{"docs":{},"某":{"docs":{},"一":{"docs":{},"行":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"把":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"里":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"是":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"层":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"层":{"docs":{},"是":{"docs":{},"从":{"docs":{},"左":{"docs":{},"往":{"docs":{},"右":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"其":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"右":{"docs":{},"往":{"docs":{},"左":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"栈":{"docs":{},"后":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"保":{"docs":{},"存":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"应":{"docs":{},"该":{"docs":{},"先":{"docs":{},"保":{"docs":{},"存":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"再":{"docs":{},"保":{"docs":{},"存":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"同":{"docs":{},"理":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"层":{"docs":{},"，":{"docs":{},"则":{"docs":{},"保":{"docs":{},"存":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"先":{"docs":{},"保":{"docs":{},"存":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"再":{"docs":{},"保":{"docs":{},"存":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/从上到下打印二叉树.html":{"ref":"JianZhiOffer/Tree/从上到下打印二叉树.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{},"值":{"docs":{},"大":{"docs":{},"小":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"4":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"ref":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","tf":0.008620689655172414}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"见":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/对称的二叉树.html":{"ref":"JianZhiOffer/Tree/对称的二叉树.html","tf":0.01818181818181818}}}}}},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"是":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"指":{"docs":{},"的":{"docs":{},"是":{"docs":{},"树":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"差":{"docs":{},"的":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"值":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"1":{"docs":{},"。":{"docs":{"JianZhiOffer/Tree/二叉树的深度.html":{"ref":"JianZhiOffer/Tree/二叉树的深度.html","tf":0.01282051282051282}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"后":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"是":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"换":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"ref":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","tf":0.012048192771084338}}}}}}}}}},"树":{"docs":{},"b":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.012552301255230125}}}},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":10}}}}}}},"约":{"docs":{},"定":{"docs":{},"当":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},"和":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{},"均":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{},"是":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"JianZhiOffer/Tree/树的子结构.html":{"ref":"JianZhiOffer/Tree/树的子结构.html","tf":0.0041841004184100415}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}},"例":{"docs":{},"如":{"docs":{},"给":{"docs":{},"定":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"：":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":10}}}}},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"：":{"1":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},",":{"docs":{},"$":{"docs":{},",":{"3":{"docs":{},",":{"5":{"docs":{},",":{"docs":{},"$":{"docs":{},",":{"docs":{},"$":{"docs":{},",":{"6":{"docs":{},",":{"docs":{},"$":{"docs":{},",":{"docs":{},"$":{"docs":{"JianZhiOffer/Tree/序列化二叉树.html":{"ref":"JianZhiOffer/Tree/序列化二叉树.html","tf":0.006993006993006993}}}}}}},"docs":{}}}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}},"穷":{"docs":{},"举":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"判":{"docs":{},"断":{"docs":{},"每":{"docs":{},"个":{"docs":{},"子":{"docs":{},"串":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"含":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"记":{"docs":{},"录":{"docs":{},"不":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{},"代":{"docs":{},"码":{"docs":{},"略":{"docs":{},"。":{"docs":{"LeetCode/3. Longest Substring Without Repeating Characters.html":{"ref":"LeetCode/3. Longest Substring Without Repeating Characters.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"−":{"docs":{"LeetCode/7. Reverse Integer.html":{"ref":"LeetCode/7. Reverse Integer.html","tf":0.009174311926605505}}}},"length":5497},"corpusTokens":["!=","!stack2.isempty())","\"","\"\";","\"%20\");","\");","\",","\"=\"","\"a\");","\"aba\"","\"abc\"","\"abc\",","\"abc\"，#3","\"abcabcbb\"","\"b\");","\"b\",","\"bab\"","\"babad\"","\"bb\"","\"bbb\"","\"bbb\";","\"bbbbb\"","\"c\");","\"cbbd\"","\"d\");","\"pwke\"","\"pwwkew\"","\"v1\");","\"v2\");","\"v3\");","\"wke\",","\"实例变量\";","\"静态变量\";","#18","#19","#2","#3","#4","%","&","&&","'","'#';","')","'*')","'+'","'.'));","'0'","'a.this'","'abstract'","'abstractclassexample'","'clone()'","'interfaceexample'","'java.lang.object'","'outerclass.this'","'private'","'protected'","'public'","'static'","'x'","'y'","(","(!(o","(!deque.isempty()","(!isduplicated)","(!isfound)","(!queue.isempty())","(!queue1.isempty())","(!s.isempty()","(!stack.isempty())","(!stack1.isempty()","(!stack1.isempty())","(!stack2.isempty())","((k","((num","((size","()","();","(*)","(0","(1","(1)，同时由于slow每次走1步，fast每次走2步，所以fast走过的路程又可以表示为2a","(2","(2)。联立(1)和(2)得a","(5","(;","(;;)","([ljava/lang/string;)v","(a","(accessord","(approxim","(aux[i]","(b","(begin","(c","(carri","(clonedhead","(cloneexample)super.clone();","(clonenotsupportedexcept","(curr","(curr.next","(curr.random","(curr.val","(curr1","(currclon","(diff","(e","(e)","(e.getvalue()","(e.hash","(e.key","(eldest)","(elementdata","(end","(entri","(equalexample)","(evict","(fast","(first","(first_match","(h","(head","(head1","(head1.val","(head2","(hi","(i","(index","(int","(int)(newcapac","(integercachehighpropvalu","(isbitone(num,","(isequal(base,","(isfirst)","(j","(k","(k1","(key","(l1","(last","(left","(left.val","(len","(len2","(length","(linkedhashmap.entry)e,","(listnod","(lo","(map.containskey(curr))","(map.containskey(curr.random))","(map.entri","(map.entry)o;","(matrix","(matrix[row][col]","(max.peek()","(max.size()","(meetingnod","(mincapac","(n","(newcapac","(next","(node","(node.left","(node.next","(node.right","(null","(num","(nummov","(nums.length","(nums[hi]","(nums[lo]","(nums[mid]","(o","(oldcapac","(p","(p.isempty())","(p.length()","(p1","(p2","(parent","(permgen)。而在","(phead","(preorder","(prev","(push","(queue1.isempty())","(queue1.size()","(queue2.size()","(randomlistnod","(result","(retries++","(root","(root.left","(root1","(root1.val","(root2","(rootinord","(row","(s","(s.charat(0)","(seg","(size++","(slow","(small","(stack2.isempty())","(stack_min.isempty()","(start","(startpreord","(str","(str.charat(curr)","(string","(sum","(tabl","(temp","(thi","(this.eden.size()","(threshold","(v","(v1","(val.equals(\"$\"))","(words.length","(x","(x.equals(y)","(x，编译器会自动进行这个优化。","(y","(youngest)","(如果子类的方法重写了父类的方法，那么子类中该方法的访问级别不允许低于父类的访问级别，这也是满足里式替换原则以确保可以使用父类实例的地方都可以使用子类实例)，即子类对象必须能够替换掉所有父类对象。而接口更像是一种","(而hashmap",")","*","*/","+","++modcount;","+16。","+=",",hi);","...","...,","...]。假设当前数组中最大的丑数是m，小于m的丑数已经求出，我们需要求出m的下一个丑数是多少。我们可以将m之前的丑数分别","...，我们发现每一位上其实都是执行一个0","...，现在要求输入一个整数n，请你输出斐波那契数列的第n项（从0开始，第0项为0）。n","/","/**","//","//反转字符串","//复制原链表的每个节点，并用next链接起来","//左子树序列和右子树序列的分界点，表示右子树序列的第一个元素，同时也表示左子树序列中元素的个数","//注意，这里不能直接写成\"result.add(path)\"，那样相当于把path的引用传过去了，然而我们在下面遍历的过程中会改变path中的值，这样会导致之前加入result中的路径的内容也会跟着改变。应该用一个新的arraylist来承载path的值。","//设置复制链表的random","/=","0","0)","0);","0)的格子开始移动，它每次可以向左、右、上、下移动一格，但不能进入行坐标和列坐标的数位之和大于k的格子。请问问该机器人能够到达多少个格子。例如给定threshold","0,","0.0)","0.75f,","00000010","00001111","00010000","001,","00100000","002,","009,","010,","011,","019,","0:","0;","0;i","0l;","0};","0}产生的。","0时，将path加到res中。在函数回退的时候记得在path中删除当前节点。","0，那么取模得到的结果和之前一样；","0：ascii码为i的字符出现了一次，第一次出现的位置为occurrence[i]","1","1)","1);","1)。此外，由于在寻找路径的过程中已经访问过的格子不能重复进入，因此我们还需要定义一个访问数组vis。","1)是回文子串，dp[i,","1)，也就是旧容量的","1)，以此类推，注意当exp为奇数时，例如当exp","1,","1.","1.5","1.7","1.8","10","10);","10,","1000.","100000000","10010000","10010000，它的掩码为","10110010","10;","10。","10的节点并将其链接到新链表中，同时需要设置进位carry为1。由于两个链表的长度可能不同，因此遍历两个链表的指针可能不是同时到达各自链表的末尾。若p","10，创建一个值为sum","11","11,","11011000","11111110","11111111","11111111，可以使用以下方法得到：","115%16=3。","115，使用除留余数法得到所在的桶下标","118%16=6。","118%16=6，插在","118，使用除留余数法得到所在的桶下标","11]。","12","12);","12,","120","123","123\",\"3.1416\",\"","123;","127","127);","127;","128","128;","128~127。","12]]","13,","14","14,","15,","15],","15]和数字15，输出[4,","15，所以结果打印出3个连续序列1","16","16\"都表示数值，但\"12e\",\"1a3.14\",\"1.2.3\",\"+","16,","16;","16。需要注意的是","16，也就是说默认创建","16，扩容之后","16；","17","17;","1:","1;","1]","1].","1];","1][p.length()","1]及滑动窗口的大小3，那么一共存在6个滑动窗口，它们的最大值分别是[4,","1e","1};","1。","1。之后我们需要判断exp是否为负数，如果exp为负数，在我们求出res之后还要求其倒数。在exp不为负数的前提下我们调用helper()来求base的exp次方。虽然我们可以采用连乘的方法去求，但那不是最优的。这里我们采用递归的方法去求。例如2","1个节点，之后两个指针再一起移动，当fast移动到链表的最后一个节点时，slow指示的刚好是链表中倒数第k个节点","1个这样的中心。为什么是2n","1呢？这是因为除了每个字符可以作为一个中心外，每两个字符中间的位置也可以作为中心，比如\"abba\"，b两个b之间可以作为一个中心。我们遍历每一个中心并对其进行扩展，在得到一个回文子串时检查它的长度是否是最大的。","1开始遍历数组中剩下的数，如果当前数比堆顶元素小，将堆顶元素出堆，同时将当前元素进堆。遍历完成后堆中保存的即是最小的k个数。","1开始，这是因为当s为空时也需要进行判断，比如s=\"\",p=\"a*\"，s和p也是匹配的","1是该入栈序列对应的一个出栈序列，但4,","1级台阶的跳法数和跳上n","1级台阶跳1次，1次跳1级得到，也可以从n","1，num即为该数。例如对于num","1，因此尝试次数为","1，表示所有的字符都还未出现过。之后每次insert一个字符时，设当前字符的ascii码为i，如果当前字符还未出现过，则将当前字符在字符流中的下标index赋给occurrence[i]；如果当前字符已经出现过，则我们就不需要考虑这个字符了，约定把","1，说明在最高位上发生了进位，此时需要再额外创建一个值为1的节点并将其链接到新链表中。","1，那么得到的结果为原来的结果","1：ascii码为i的字符还未出现过","2","2)","2);","2)，而2","2,","2.","20)","21","2147483647，因此在进行result","2147483648","222","222);","2249069246763182397l;","231","2:","2;","2];","2]。","2]，1,","2]，最大的子序列为[6,","2]，由于2在数组中出现了5次，因此输出2。假设数组中出现次数大于n","2b","2}为{1,","2。","2中1和2的出现次数相互抵消，3,","2中3和2的出现次数相互抵消，2,","2只能得到2，所以此时我们还要再乘一个base。","2可以看成是(2","2就不可能是该入栈序列的出栈序列。两个序列的长度相等。","2的元素一定存在。","2的数并返回。","2的数总是存在。例如给定一个长度为9的数组[1,","2级台阶的跳法数的和，即dp[n]","2级台阶跳1次，1次跳2级得到，因此跳上n级台阶的跳法数等于跳上n","2赋给occurrence[i]。在函数firstappearingonce()中，我们遍历occurrence，并用ch和minindex记录第一个只出现一次的字符和它的下标。遍历结束返回ch即可。","2，retri","2，则找到该数；当partition返回的值小于n","2，即为数组中出现次数最多的数。","2，找到第一个大于m的数，对于3和5同理，然后再从2,","2，说明中位数在右半部分，继续在右半部分找；当partition返回的值大于n","2，说明中位数在左半部分，继续在左半部分找。","2：ascii码为i的字符出现了多次","3","3)","3,","3.","31","31，因为它是一个奇素数，如果是偶数的话，当出现乘法溢出，信息就会丢失，因为与","32","32,","321","321}，则打印出这三个数字能排成的最小数字为321323。","32：","342","3:","3;","3]，那么对应的输出是重复的数字2或3。","3。","3一直到999。","3和5的数称作丑数","3，输出4。","3；","4","4)","4);","4,","4.","4.1","4.2","465","46810121416null","4:","4;","4],[5,","4],[6,","4]。","4]中，一共存在5个逆序对，分别是[7,","4]，我们可以首先可以得到[7],[5],[6],[4]这4个子数组，然后将相邻的两个子数组归并成一个数组，同时统计逆序对的数目。比如[7]和[5]归并之后得[5,","4。","4中2和5,","4可以看成是(2","4的出现次数相互抵消，最后num","4矩阵：","5","5\",\"12e+5.4\"都不是。","5,","5.","572。和一题不同的是，这要求树b和树a中的某个子树完全相同。例如给定树a：","5],[7,","5]。","5]，k","5]，由于没有哪棵二叉搜索树的后序遍历结果是这个序列，因此返回false。","5}的一个旋转，该数组的最小值为1。","5中找到一个最小的数作为下一个丑数。但是这样需要把m之前的所有丑数都乘以2,","5同理。","5时，5","5是某栈的入栈顺序，序列4,","5，其实这并不是必须的，由于数组是排好序的，对于乘以2而言，数组中肯定存在一个数t2，在它之前的丑数乘以2都小于已有的最大丑数，而它之后的丑数乘以2又太大，我们只需要记录这个丑数的位置并且在每次求出当前数组的最大丑数时更新这个t2即可。对于3,","6","6,","6.","64","6:","6],[7,","6]的最后一个元素6，mid指针指向两个子数组中间的元素，也就是第一个数组的最后一个元素7，比较i和j指向的元素7和6，同时将较大的元素保存到一个辅助数组aux中，aux的长度等于两个数组的长度之和，我们用index指示这个辅助数组，初始时index指向aux的最后一个元素。因为7","6]，则重建二叉树并返回。","6]，逆序对数目为1。接着再将[5,","6，所以7大于6前面所有的元素包括6，因此逆序对数目+","7","7)","7))","7,","7.","7],","7]和[4,6]进行归并并统计逆序对的数目。我们首先用一个指针i指向[5,","7]的最后一个元素7，另一个指针j指向[4,","7]，输出8。","7]，逆序对数目为1；[6],[4]归并之后得[4,","7，string","7，返回21。","8","8,","8.","807.","8;","8]和中序遍历序列[4,","8]，则最小的k个数字是1,","8]，返回true，因为这个整数序列是下图所示二叉搜索树的后序遍历结果。","8。","8都是丑数，但14不是，因为它包含质因子7。","9","9,","9.","9:","9中的数字，isexponential()函数用来判断e(...)是不是合法的。","9的全排列，因此我们可以用递归解决这个问题。","9的数位。如果是一个小数，则会遇到小数点。此外，如果是用科学计数法表示的数值，在整数或者小数的后面还有可能遇到e或e。函数scandigits()用来扫描0",":",";","=","=0","==","==0",">",">2",">3",">4",">5。",">5，删除值为3的节点后的链表为1",">5，删除重复节点后的链表为1",">=",">>",">>>","?","@overrid","@suppresswarnings(\"unchecked\")","[","[0,","[1,","[10,","[2,","[[10,","[][]","[−231,","\\","\\u0000","\\u007f","]","];","^","^=","a();","a)","a,","a.befor","a.x;","a.y;","a1","a2","a;","a[index];","abc","abstract","abstract;","abstractclassexampl","abstractclassexample();","abstractextendclassexampl","abstractextendclassexample();","ac1","ac2","ac2.func1();","acb,","acc_public,","acc_stat","access","accessord","accessorder;","accur","add","add(","addentry(0,","addentry(hash,","addentry(int","addtwonumbers(listnod","afternodeaccess()","afternodeaccess(nod","afternodeinsertion()","afternodeinsertion(boolean","ai","ai+1","ai，则","aj","allow","answer","answer.","args)","args_size=1","arithmet","arr","arr;","array","array[hi]","array[lo]，说明最小的数在mid和hi之间，移动lo到mid在后半数组中继续查找；如果array[mid]","arrayindexoutofboundsexception(index);","arraylist","arraylist<>(),","arraylist<>();","arraylist<>(path));","arraylist<>(pq);","arraylist。","arraylist：基于动态数组实现，支持随机访问。","arrays.copyof()","arrays.copyof(elementdata,","arrays.copyof(elements,","arrays.sort(nums);","assum","astore_1","async","aux","aux;","aux[i","aux[i];","aux[j","aux[j])","aux[j];","avoid","b","b,","b.after","b;","b=n，所以相遇节点到entry的距离和head到entry的距离是相同的。","bac,","backtrack","base,","bca,","befor","begin,","begin;","behaviour","between","big","big;","binari","bit","boolean","boolean/~","boolean[]","boolean[][]","boolean[n][n];","boolean[s.length()","boolean[str.length()],","bound","break;","bucketindex","bucketindex)","bucketindex);","bug没改好就不要去睡觉！","byte","byte/8位/1字节","byte[]","b，其中a为head到entry的路程，b为slow在环中走过的路程，n为环的长度。由于相遇时fast比slow多走了一圈，因此fast走过的路程为a","c","ca","cab和cba。","cach","cache.get(1);","cache.put(1,","cache.put(2,","cache.put(3,","cache.put(4,","cache[];","cap","cap)","capac","carri","carry;","catch","catch(","ch","chang","char","char/16位/2字节","char[256];","char[]","char[str.length()],","charact","characters.","characterstream","characterstream()","charsequ","chs,","chs.length)","class","classname，从而简化代码，但会大大降低可读性。","clear","clipboarderrorcopi","clone","clone()","clone()，其它类就不能直接去调用该类实例的","clone()，可以使用拷贝构造函数或者拷贝工厂来拷贝一个对象。","cloneabl","cloneconstructorexampl","cloneconstructorexample()","cloneconstructorexample();","cloneconstructorexample(e1);","clonedcurr","clonedcurr.next","clonedcurr.next;","clonedhead","clonedhead;","clonednod","clonednode);","clonednode.next","clonednode.next;","clonednode.random","clonednode;","cloneexampl","cloneexample();","clonenod","clonenodes(phead);","clonenotsupportedexcept","clonenotsupportedexception。","clonenotsupportedexception，这是因为","close","code","code:","coder","coder;","col","collect","collections.synchronizedlist();","collections.synchronizedlist(list);","collis","cols)","com.xxx.classname.*","combin","combination1","combination1.compareto(combination2);","combination2","compar","comparable,","comparator()","compare(integ","compare(str","compareto()","compat","concurr","concurrentcach","concurrentcache(int","concurrenthashmap","concurrenthashmap<>(size);","concurrentmodificationexception。","configur","connectnod","connectnodes(phead);","consciou","constant","contain","containsvalu","context","continu","convert(treenod","convertcore(root);","convertcore(root.left);","convertcore(root.right);","convertcore(treenod","copyonwritearraylist","copyonwritearraylist<>();","count","count++;","count,","count.","count;","createentry(hash,","createentry(int","creek","curr","curr++;","curr,","curr.left;","curr.next","curr.next;","curr.random.next;","curr.val","curr.val)","curr1","curr1.next;","curr1;","curr2","curr2)","curr2.next;","curr2;","curr;","curr_long","curr_short","currclon","currcloned.random","currcloned=null;","currsum","c所能排列出来的所有字符串abc,","data","deal","deepcloneexampl","deepcloneexample()","deepcloneexample();","default","default_initial_capac","defaultcapacity_empty_elementdata)","deleteduplicatednodes(listnod","deletenode(listnod","deletenodes(listnod","depth(root.right))","depth(treenod","dequ","deque.offer(i);","deque.peekfirst()","deque.pollfirst();","deque.polllast();","descriptor:","deserialize(str","deserializecore(string[]","deserializecore(strs);","dfs(str,","dfs(string","diff","differ","digit","digit.","digit可能会发生溢出，由于32位int类型的范围是","digit更新结果。但是要注意，result","digit运算前也应该先判断是否可能发生溢出。可以参考下面这种写法。","dir_i","dir_x","dog","dog(\"a\");","dog(\"b\");","dog(str","dog)","dog.setname(\"b\");","dog@4554617c","dog@74a14482","doubl","double/64位/8字节","doubli","dp","dp[0]","dp[i","dp[i]","dp[i][j]表示s(i,","dp[i][j]表示s(i:)和p(j:)是否匹配","dp[n","dp[s.length()][p.length()]","dp。","dp。dp[i,","dp。dp[i]表示nums[0,","dp。我们先来分析跳上2级台阶总共有多少种跳法。可以跳2次，1次跳1级，也可以一次跳2级，这样就有2种跳法。现在假设跳上n级台阶总共有dp[n]种跳法，n级台阶从n","due","dummyhead","dummyhead.next;","dummyhead;","dup","dynam","dynamicarray","dynamicarray()","e","e)","e);","e.getkey();","e.getvalue();","e.key)","e.next","e.next)","e.next;","e.printstacktrace();","e.recordaccess(this);","e.valu","e.value;","e1","e1.clone();","e1.set(2,","e2","e;","each","eden","eden;","eldest","eldest)","element","elementcount)","elementdata","elementdata(index);","elementdata,","elementdata.length","elementdata.length;","elementdata[","elementdata[elementcount++]","elementdata[size++]","elements.","elements.length;","empti","empty_table)","encod","end","end));","end+1;","endi","endinorder)","endpreord","endpreorder,","endx","ensur","ensurecapacityhelper(elementcount","ensurecapacityinternal()","ensurecapacityinternal(int","ensurecapacityinternal(s","ensureexplicitcapacity(int","ensureexplicitcapacity(mincapacity);","entri","entry(int","entry<>(hash,","entry[]","entry[newcapacity];","entrynodeofloop(listnod","entry。","environ","equalexampl","equalexample(1,","equalexample(int","equals()","equals(object","error","evennum","evennum++;","evict","evict)","exactli","exampl","example:","except","exception。其中","exception，此时程序崩溃并且无法恢复。","exp)","expandaroundcenter(str","expectedmodcount","explanation:","expon","extend","factor).","fail","failur","fals","false,","false;","false。jvm","false，在这里为","false，如果需要让它为","false，此时维护的是插入顺序，当设置为","false；","fast","fast)","fast.next","fast.next.next;","few","fibonacci(int","fibonacci(n","field","final","finalize()","final和stat","final，因此它不可被继承。","final，如果在子类中定义的方法和基类中的一个","final，这意味着","find","findcontinuoussequence(int","findduplicatednumber(int[]","findfirstbitone(int","findfirstbitone(temp);","findfirstcommonnod","findgreatestsumofsubarray(int[]","findkthtotail(listnod","findmeetingnode(head);","findnumberswithsum(int[]","findnumsappearonce(int[]","findpath(treenod","first","first.key;","first;","first_match","firstappearingonce()","firstnotrepeatingchar(str","first。","flags:","float","float/32位/4字节","for(int","fun3();","func(dog","func(dog);","func1()","func1();","func1(){","func2()","func2();","func2(){","function","gc","get()","get(int","get(k","get(object[]","getarray();","getclass()","getfirstk(int[]","getfirstk(nums,","getkey()","getkey();","getlastk(nums,","getleastknumbers(int[]","getlength(head1);","getlength(head2);","getmedian()","getname()","getnextnode(nod","getnumberofk(int[]","getobjectaddress()","getuglynumber(int","getvalue()","getvalue();","given","grow()","grow(int","grow(mincapacity);","h","h,","h;","happy.则经过替换之后的字符串为we%20are%20happy。","hascode()","hash","hash(key)","hash(key);","hash(object","hash,","hash;","hashcod","hashcode()","hashentri","hashentry[]","hashmap","hashmap<>();","hashmap，因此具有和","hashmap，默认大小为","hashmap：基于哈希表实现。","hashseed;","hashset","hashset<>();","hashset，hashset","hashset：基于哈希表实现，支持快速查找，但不支持有序性操作。并且失去了元素的插入顺序信息，也就是说使用","hashtabl","hashtable：和","haspath(char[][]","hassubtree(root1.left,","hassubtree(root1.right,","hassubtree(treenod","head","head)","head,","head.next","head.next;","head1","head1,","head1;","head2","head2)","head2;","head;","helper(char[]","helper(chs,","helper(int[]","helper(left.left,","helper(left.right,","helper(nums,","helper(preorder,","helper(root,","helper(root.left,","helper(root.right,","helper(root1,","helper(root1.left,","helper(root1.right,","helper(treenod","here","hi","hi)","hi);","hi,","hi]中的最小数字","hi]拷贝给aux，nums用来承载排序后的结果","hidden","high","high;","hi为止。","hi，说明当前子数组中只有一个元素，直接返回tru","hugecapacity(mincapacity);","i\"。","i)","i);","i;","i=0;","i]中包含nums[i]的最大连续子序列的和，状态转移方程如下：","i]中每个元素累加的和","identifi","ie1","ie2","ie2.func1();","if(root==null)","ignor","illeg","immut","implement","import","imposs","increment","index","index)","index))","index++;","index+1","index+1,","index,","index;","indexfor(e.hash,","indexfor(hash,","indexfor(int","indic","inflatetable(threshold);","initi","initialordertest()","innerclass","innerclass();","inord","inorder)","inorder,","inorder.length","input","input:","insert(int","instanceof","instanti","int","int,","int/32位/4字节","int[10];","int[256];","int[2];","int[]","int[]{};","int[nums.length];","integ","integer(1);","integer(123)","integer(123),","integer(123);","integer,","integer.","integer.max_valu","integer.max_value;","integer.min_value;","integer.valueof(123)","integer.valueof(123);","integer[(high","integercache.low","integercachehighpropvalu","integers,","integers.","interfac","interfaceexampl","interfaceexample();","interfaceimplementexampl","interfaceimplementexample();","intern()","interning?","interruptedexcept","int，使用","inversepairs(int[]","inversepairscore(int[]","inversepairscore(nums,","invokespeci","isbalanc","isbalanced;","isbalancedtree(treenod","isbalancedtreecore(root);","isbalancedtreecore(root.left);","isbalancedtreecore(root.right);","isbalancedtreecore(treenod","isbitone(int","isdupl","isfirst","isfound","isfound;","ismatch(s,","ismatch(s.substring(1),","ismatch(str","ismatchcore(s,","ismatchcore(str","isn't","isnumeric(str","ispoporder(int[]","issymmetrical(treenod","it.","item;","iter","itself.","i，我们对所有i重复执行上述步骤以求得最后的结果。","j","j);","j)中的所有字符，然后我们向右移动j，如果s[j]不在set中，我们继续移动j，直到s[j]在set中，此时，我们找到了以为起点的子串的最大长度，即j","j)指示的窗口中的某个字符重复时，假设这个字符的下标为j'，我们没有必要一点点地去移动i，我们只需要将i移动到j'的下一个位置nextpos即可。我们使用一个map记录字符串中每个字符的下一个字符的位置。","j)是否可以构成一个回文子串。如果s(i)","j)构成的子串是否是回文的","j)表示窗口。我们用一个set保存当前窗口[i,","j++;","j]为true。同时，当我们找到一个回文子串时，检查它的长度是否是最大的。","j]表示s(i,","java","java.io.ioexception{","java.io.serializable,","java.lang.clonenotsupportedexception:","java/lang/str","java/lang/string.\"\":(ljava/lang/string;)v","java?","javap","java®","java基础","java容器","java异常处理框架只能处理运行时错误，编译错误不在其考虑范围之内。","java异常的层级结构","jdk","jumpingstairs(int","jvm","k","k)","k);","k)这种方式调用，则kthnodecore()应相应修改为：","k,","k.hashcode();","k1","k1.equals(k2)))","k2","k3","k;","key","key)","key,","key.equals(k)))","key;","key。不可变的特性可以使得","key，","kthnode(treenod","kthnodecore(root.right,","kthnodecore(treenod","k最后一次出现的位置","k次即可得到倒数第k个节点。注意，这种方法要求k不能大于链表的长度，为此需要先求出链表的长度。","k第一次出现的位置","k，说明当前节点就是第k小的节点；如果t","k，说明第k小的节点在根节点的左子树中，因此需要继续在左子树中寻找第k小的节点；如果t","l","l1,","l1;","l2","l2)","l2;","label)","label;","last","last.aft","last;","ldc","lead","leetcod","left","left,","left;","leftrotatestring(str","len","len1","len1)","len2","len2);","length","length(head))","length)","lengthoflongestsubstring(str","levelorder(treenod","link","linkedhashmap","linkedhashmap.entri","linkedhashmap：使用双向链表来维护元素的顺序，顺序为插入顺序或者最近最少使用（lru）顺序。","linkedhashset：具有","linkedlist","linkedlist<>();","linkedlist：可以用它来实现队列或双向队列。","linkedlist：基于双向链表实现，只能顺序访问，但是可以快速地在链表中间插入和删除元素。不仅如此，linkedlist","list","list.","list>","listnod","listnode(0);","listnode(1);","listnode(sum","lo","lo)","lo,","lo;","load","load_factor。","loadfactor","loadfactor);","loadfactor;","loadfactor。","locals=2,","lock","lock.lock();","lock.unlock();","locking.","long","long/64位/8字节","longest","longestpalindrome(str","longterm","longterm;","longterm，longterm","low","low)","low;","lru","lrucach","lrucache()","lrucache<>();","lru缓存","m","m,","m;","machin","main","main(java.lang.string[]);","main(string[]","maintain","majorityelement(int[]","make","manipul","map","map.entri","map.entry))","map.entryset())","map.get(curr);","map.get(curr.random);","map.getordefault(num,","map.put(\"k1\",","map.put(\"k2\",","map.put(\"k3\",","map.put(curr,","map.put(num,","map.put(s.charat(j),","map。将复杂链表的复制分为两步，第一步，复制原链表的每个节点，并用next链接起来，同时将原节点和复制节点存到map中（原节点作为key，复制节点作为value）；第二步，设置复制链表中每个节点的random指针。遍历原链表，如果节点n的random为s，则通过map可以在o(1)时间内找到n1和s1，设置n1.random","mask","mask+1","math.abs(left","math.abs(len1","math.max(default_capacity,","math.max(depth(root.left),","math.max(i,","math.max(left,","math.max(result,","math.min(i,","matrix","matrix)","matrix,","matrix.length","matrix.length()","matrix.length;","matrix.length[0];","matrix[0].length","matrix[0].length;","matrix[i][j]，说明当前字符能够构成路径，我们继续从当前字符出发分别沿着上、下、左、右4个方向继续寻找路径中的下一个字符str(curr","matrix[i][j]，说明矩阵中的当前字符不能构成路径，需要进行回溯。如果str(curr)","max","max.offer(num);","max.size()","max;","max_entri","max_entries;","max_scan_retri","maximum","maximum_capac","maximum_capacity)","maxinwindows(int[]","max{nums[i],","meetingnod","meetingnode)","meetingnode;","merge(listnod","method","mid","mid)","mid);","mid)，之后我们将7放到aux的index处，同时i和index向前移动一个单位。接着判断5和6，因为5","mid;","mid指向的数字相同时，此时无法判断mid指向的数字属于前一个子数组还是后一个子数组，此时需要用顺序遍历找到nums[lo,","min","min.offer(num);","min.peek())","min.peek();","min.poll();","min.size();","min;","mincapac","mincapacity)","mincapacity);","minindex","minnumberinrotatearray(int[]","mirror(root.left);","mirror(root.right);","mirror(treenod","modcount","modcount!!","modcount++;","modcount;","modif","modifi","modifiers:","move","movingcount(int","multipl","myqueu","myqueue()","mystack","mystack()","m，需要存储的键值对数量为","n","n)","n);","n/m","n/m，因此平均查找次数的复杂度为","n1","n2","n2m","n2m+1","n;","name)","name;","nanos)","nativ","neg","new","new_head","new_head;","newcapac","newcapacity)","newcapacity);","newel","newelements[len]","newstringtest","newtabl","newtable)","newtable.length;","newtable;","newtable[i]","newtable[i];","newvalue)","newvalue;","next","next.next","next.next;","next.val)","next.val;","next;","nextpos;","next分别表示前一个节点，当前节点和下一个节点。遍历链表，如果当前节点的值不等于target，移动prev和curr继续判断下一个节点；否则，我们需要将prev的next指向next以删除当前节点，如果prev为null，说明头结点是需要删除的节点，将next赋给head。","nfe)","nm","nm+1","nm+2","node","node)","node.next","node.next;","node.parent;","node.right;","node.v","node;","nodesinloop","nodesinloop++;","non","note","note:","note：给出的所有元素都大于0，若数组大小为0，请返回0。","notify()","notifyall()","null","null)","null);","null,","null;","null，也可以返回tru","null，借由上一条语句知root2","null，即一个链表已经遍历到了末尾，另一个链表还没有遍历末尾，此时需要把p表示的数当做0再和q表示的数相加。此外，如果两个链表都已经遍历完了但是carri","null，所以root1和root2的结构不相同，返回fals","null，说明root1和root2之前的结构完全相同，这时就算root1","num","num)","num,","num;","number","numberformatexcept","numberof1(int","number。例如6,","nummov","nummoved);","nums)","nums,","nums.length","nums.length)","nums.length;","nums[0]","nums[0];","nums[1]","nums[deque.peeklast()])","nums[hi]","nums[hi])","nums[hi];","nums[i]}","nums[i]是否在map中，如果在，我们就找到了这两个数，如果不在，我们把当前元素和它的下标值加入map。这里也可以将数组排序后用双指针法做，但是由于题目要求返回两个数的下标，排序后会打乱元素的下标，因此这里用这个方法不合适。","nums[index","nums[lo])","nums[lo];","nums[mid]","nums[n","n中每个数是不是丑数的方法，因为那样对每个数即使是非丑数都要进行求余和除法的操作，时间效率很低。可以事先求出1","n操作可以将n的二进制表示中最右边的1变成0”这个结论，我们可以写出如下代码进一步提高运算效率。","n的每个丑数并将其排好序存在一个数组里，例如[1,","n的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。找出数组中任意一个重复的数字。例如如果输入长度为7的数[2,","n，因此我们可以根据下标来重排这个数组。从头到尾扫描这个数组，当扫描到下标为i的数字时，首先比较这个数字（用m表示）是不是等于i，如果是，说明m已经被放在了正确的位置上，接着扫描下一个数字。如果不是，拿它和下标为m的数字进行比较，如果它和下标为m的数字相等，我们就找到了一个重复的数字（该数字在下标为i和m的位置都出现了）。如果它和下标为m的数字不等，就把第i个数字和第m个数字进行交换，把m放到它正确的位置上去。接下来重复这个过程，直到我们找到了一个重复的数字，返回true，否则，数组中没有重复数字并且算法结束后所有的数字都放置了它正确的位置上个，返回false。备注：代码中尽管有一个两重循环，但是对于每个数字最多只需要进行一次交换和一次遍历就能找到其正确的位置，因此总的时间复杂度是o(n)。","n，如果哈希函数满足均匀性的要求，那么每条链表的长度大约为","o(1)，treeset","o(logn)。","o(n)","o(n)，可以看出","o(n/m)。","o(nlogk)","o)","o.getclass())","o1,","o1;","o2","o2)","o;","obj)","object","object[]","objects.hashcode(getkey())","objects.hashcode(getvalue());","objects.hashcode(key)","objects.hashcode(value);","object类中的方法","obtain","occurr","occurrence;","occurrence[c]","occurrence[i]","oddnum","oddnum++;","offer(int","oldcapac","oldtabl","oldtable.length;","oldvalu","oldvalue;","on","order","order.","original)","original.hash;","original.value;","out","outerclass","outerclass();","outerclass.new","outofmemoryerror","output:","overflow","overflow;","overflows.","p","p)","p));","p,","p.after","p.after;","p.befor","p.before,","p.charat(0)","p.charat(1)","p.length","p.length()","p.next;","p.substring(1));","p.substring(2))","p1","p1,","p1.next;","p1.val;","p2","p2)","p2.next;","p2.val;","p;","palindrom","parent","parent.parent;","parent.right)","parent;","pars","parseint(integercachehighpropvalue);","partition(nums,","passbyvalueexampl","path,","path.add(root.val);","path.remove(path.size()","permutation(str","phead)","phead;","poll()","pool","pool:","pool。","pool）保存着所有字符串字面量（liter","pool，即字符串常量池中取得引用。只有","pop","pop()","pop)","pop.length","posit","possibl","power(doubl","pq","preorder,","preorder.length","preorder[startpreorder];","prev","prev.left","prev.left;","prev.next","prev.right","prev;","previou","primit","print(treenod","printlistfromtailtohead(head.next);","printlistfromtailtohead(listnod","printmatrix(int","printminnumber(int[]","printtomaxdigits(int","priorityqueu","priorityqueue<>();","priorityqueue<>(new","priorityqueue：基于堆结构实现，可以用它来实现优先队列。","privat","problem,","program","proper","properti","protect","protected。","public","public。","public，一个类不显式去重写","purpos","push(int","push,int[]","push.length","push时将数push到stack1中，pop时，从stack2中pop，如果stack2为空，则先将stack1中的所有数pop到stack2中再从stack2中pop。","put","put()","put(k","putfornullkey(v","putfornullkey(value);","put、get","put操作","p的下一个字符是'*'","q","queue","queue.offer(root);","queue.size();","queue1","queue1.offer(num);","queue1.offer(queue2.poll());","queue1.poll();","queue1;","queue2","queue2.offer(num);","queue2.offer(queue1.poll());","queue2.poll();","r","random;","randomaccess","randomclon","randomcloned;","randomcloned=null;","randomlistnod","randomlistnode(curr.label);","rang","range:","rangecheck(index);","read","reconnectnod","reconnectnodes(phead);","reconstructbinarytree(int[]","redund","reentrantlock","reentrantlock。","reentrantlock，并发度与","referenc","reference”","remov","remove(int","removeeldestentry()","removeeldestentry(first))","removeeldestentry(map.entri","removenode(hash(key),","reorderarray(int[]","repeat","replacespace(stringbuild","repres","resize()","resize(2","resize(int","resort","result","result)","result);","result.","result.add(matrix[endy][i]);","result.add(matrix[i][start]);","result.add(new","result.add(nums[deque.peekfirst()]);","result.add(string.valueof(chs));","result.add(string.valueof(selected));","result.add(temp);","result.length()))","result;","result[0]","result[1]","retri","retries_before_lock","retries_before_lock)","return","return;","revers","reverse(int","reverse(reverse(left)","reverse(right));","reverse(str","reverse(str);","reverse(temp.substring(start));","reverse(temp.substring(start,","reverselist(listnod","reverselist(next);","reversesentence(str","right","right)","right);","right.left);","right.right)","right.val)","right;","root","root)","root){","root,","root,int","root.left","root.left;","root.right","root.right);","root.right;","root.val);","root.val;","root.val，同时将当前节点加入到path中。当遍历到叶节点并且target","root1,","root1和root2同时访问到null才返回true，一个为null一个不为null或者两个节点的val值不相同都返回fals","root2","root2)","root2);","root2.left)","root2.right);","root2.val)","root;","rootinord","rootvalu","rootvalue)","row","rows,","runtime.getruntime().availableprocessors()","s","s(j)并且s(i","s)","s,","s.","s.defaultwriteobject();","s.isempty();","s.length","s.length()","s.length())","s.length();","s.substring(0,","s.substring(i,","s.substring(n);","s.substring(start,","s.writeint(size);","s1","s1.intern()","s1.intern();","s1即可。","s2","s2);","s3","s4","s4);","s5","s6","s6);","s[0]","s[i]表示s[0,","same","sb","sb)","sb);","sb.append(\"","sb.append(\"$\");","sb.append(\",\"","sb.append(\",$\");","sb.append(root.val);","sb.append(str);","sb.append(word);","sb.append(words[i]);","sb.charat(i)","sb.length()","sb.tostring();","scandigits(str);","search","searchmatrix(int[][]","seg","seg.count;","seg.modcount;","segment","segment[]","segmentat(segments,","segments;","segment。","segment，它继承自重入锁","selected,","serializ","serialize(treenod","serializecore(root,","serializecore(root.left,","serializecore(root.right,","serializecore(treenod","serialversionuid","set","set.add(e1);","set.add(e2);","setarray(newelements);","setarray(object[]","setname(str","setvalue(v","shallowcloneexampl","shallowcloneexample()","shallowcloneexample();","short","short/16位/2字节","si","sign","singl","size","size()","size(root.left)+size(root.right)+1;","size(root.left);","size(treenod","size)","size++;","size,","size;","size]","size操作","size，那么就将","sj","slow","slow)","slow.next;","small","small;","solution,","special","specif","src","src[j]","src[j];","stack","stack.pop();","stack.push(curr);","stack1","stack1.pop();","stack1.push(node.left);","stack1.push(node.right);","stack1.push(num);","stack1.push(root);","stack1;","stack2","stack2.pop();","stack2.push(node.left);","stack2.push(node.right);","stack2.push(stack1.pop());","stack2;","stack<>();","stack=3,","stack_data","stack_data.push(num);","stack_min","stackoverflow","stackoverflow:","start","start);","start++;","start;","startinord","startinorder,","startinorder;","startpreorder,","static","staticfield","staticinnerclass","staticinnerclass();","storage.","store","str","str)","str,","str.charat(curr)","str.length()","str.length())","str.split(\"","str.split(\",\");","str.tochararray();","str.tostring().replaceall(\"","str;","string","string#intern","string(\"aaa\");","string(\"abc\")","string(\"abc\");","string()","string(str","string)","string,","string[]","string[nums.length];","stringbuff","stringbuffer,","stringbuild","stringbuilder();","stringbuilder(s).reverse().tostring();","strings），这些字面量在编译时期就确定。不仅如此，还可以使用","strs)","strs[curr++];","student\"，则输出\"student.","stuff","subsequ","substr","substring,","substring.","such","sum","sum)","sum;","sum时，减小hi；当array[lo]","sum时，即找到了这两个数。","sun.misc.hashing.stringhash32((string)","sun.misc.vm.getsavedproperty(\"java.lang.integer.integercache.high\");","super","super(max_entries,","super.clone();","super.tostring();","synchron","synchronized，jdk","synchronized，而且1.8","synlist","system.arraycopy()","system.arraycopy(elementdata,","system.out.println(\"123\");","system.out.println(\"func1\");","system.out.println(\"func2\");","system.out.println(\"普通语句块\");","system.out.println(\"构造函数\");","system.out.println(\"静态语句块\");","system.out.println(cache.keyset());","system.out.println(dog.getname());","system.out.println(dog.getobjectaddress());","system.out.println(e1.equals(e2));","system.out.println(e2.get(2));","system.out.println(head.val);","system.out.println(interfaceexample.x);","system.out.println(m","system.out.println(node.val);","system.out.println(s1","system.out.println(s3","system.out.println(s5","system.out.println(set.size());","system.out.println(x","system.out.println(x.equals(y));","system.out.println(z","t","t)","tabl","table,","table.length);","table;","table[0];","table[bucketindex]","table[bucketindex]))","table[bucketindex];","table[i];","tablesizefor(int","table。","tail","tail)","tail;","target","target)","target,","target.","temp","temp.add(node.val);","temp.indexof(\"","temp.next;","temp.val","temp;","temp[p1++]","temp[p2++]","that.x)","that.y)","that.z;","this.eden","this.eden.clear();","this.eden.get(k);","this.eden.put(k,","this.hash","this.i","this.label","this.lock;","this.longterm","this.longterm.get(k);","this.longterm.putall(this.eden);","this.nam","this.name;","this.segments;","this.siz","this.valu","this.x","this.y;","this.z","threshold","threshold)","threshold,","threshold;","throw","throwabl","time","timeout)","timeout,","tomcat","tostring()","totalblank","transfer(entry[]","transfer(newtable);","transient","tree","treemap：基于红黑树实现。","treenod","treenode(integer.parseint(val));","treenode(rootvalue);","treeset：基于红黑树实现，支持有序性操作，例如根据一个范围查找元素的操作。但是查找效率不如","tri","true","true);","true;","true。","true，0","true，则会将该节点移到链表尾部。也就是说指定为","true，开启","true，需要继承","true；","try...catch...","twice.","two","twosum(int[]","type","ugli","unbound","undergo","unsynchron","up","us","usual","utf8","v","v)","v);","v,","v1","v1.equals(v2)))","v2","v;","val","val;","valid","valu","value)","value,","value;","value[];","valueof()","valueof(int","value}.","value”?","variabl","vector","vector，因为同步操作完全可以由程序员自己来控制；","vector：和","verbos","verifysequenceofbst(int[]","verifysequenceofbstcore(int[]","verifysequenceofbstcore(nums,","virtual","vis,","visibility.","void","volatil","wait()","wait(long","weakhashmap","weakhashmap<>(size);","weakrefer","weakreference，被","win:","within","without","word","word);","words.length","words[i]);","work","write","writeobject(java.io.objectoutputstream","x","x)","x,","x.equals(null)","x.equals(null);","x.equals(x);","x.equals(y)","x.equals(y);","x.equals(z);","x;","y","y%x","y&(x","y);","y,","y.equals(x);","y.equals(z))","y;","z","z)","z;","zero,","{","{0,","{@code","{}","|","|=","||","|括起来的部分表示r进制整数中的一位。","|，|","}","});","}copi","“pass","“两次迭代”法，即通过两次迭代即可找出两个链表的第一个公共节点。用两个指针分别指示两条链表，第一次迭代时如果第一条链表的指针到达第一条链表的末尾时，将其置为第二条链表的头结点；如果第二条链表的指针到达第二条链表的末尾时，将其置为第一条链表的头结点。这样经过一轮迭代后就消除了两个链表之间的长度差，之后两个指针每次向前前进一个节点，最终到达两个链表的第一个公共节点。采用这种方法免去了分别计算两个链表长度的麻烦。","ⅰ","ⅱ","ⅲ","ⅳ","ⅴ","−","。","《algorithm》中的方法。要求的是树中第k小的节点，假设我们把树中的节点按节点值从小到大排列并从0开始编号，首先求出根节点左子树的节点数t，如果t","《剑指offer》的解法。当没有*的时候，情况比较简单，我们只需要从左到右依次判断s和p的当前字符是否匹配即可。如果有*并且p中*前面的字符还和s的当前字符相同，我们分为三种情况去处理：匹配0个、匹配1个和匹配多个。","一个可以用回溯法解决的典型题。首先在矩阵中任选一个格子作为路径的起点。设矩阵中的当前字符为matrix[i][j]，路径字符串的当前字符为str(curr)。如果str(curr)","一个数与","一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是o(n)，空间复杂度是o(1)。","一个链表中包含环，找到环的入口节点。","一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个n级的台阶总共有多少种跳法。","一样的快速查找特性。","一次性分配辅助数组的空间","一致性","一般取","上一题中假设在a中找到了和b的根节点的值相同的节点root后，只要求root所代表的子树中包含和b的结构完全一样的结构即可。而这里要求root所代表的子树和b完全一样，即root及其所有后继节点都要和b完全一样。两者的区别在helper()函数的不同。","上述代码虽然思路很简洁，但是代码比较繁琐。观察数字产生的规律：000,","上述思路的dp版本。","下面是对","下面的代码中，新建了两个等价的对象，并将它们添加到","下面示例中，s1","下面这个方法是书中该题的第一个方法。数组中有一个数字出现的次数超过数组长度的一半，也就是说它出现的次数比其他所有数字出现次数的和还要多。因此我们在遍历数组的时候用一个变量num保存当前出现次数最多的数，用另一个变量count保存它的出现次数和其他数的出现次数抵消后的值。如果当前数和num相同，则count++；如果当前数和num不同，则count","下面这个方法是书中该题的第一个方法，我们称它为partition方法。它的思路是由于partition方法每次可以确定一个数在排序数组中的正确位置，因此当partition返回的值是n","不可变","不可变。","不可变性可以保证参数不可变。例如在作为网络连接参数的情况下如果","不可变性天生具备线程安全，可以在多个线程中安全地使用。","不可变的好处","不可变，因此是线程安全的","不常用的对象放入","不支持；","不是插在","不是线程安全的","不能保证随着时间的推移","不过这里为什么要","不适合内存敏感以及对实时性要求很高的场景。","与","与arraylist的比较","丑数","两个链表的第一个公共节点","两种，collect","个","个桶存放键为","中hashcode()","中。","中。我们希望将这两个对象当成一样的，只在集合中添加一个对象，但是因为","中创建一个字符串对象，指向这个","中字符串的引用；否则，就会在","中已经存在一个字符串和该字符串值相等（使用","中添加一个新的字符串，并返回这个新字符串的引用。","中由于每个元素都有一个桶去引用，因此不会被垃圾回收器回收)。","中的","中的元素次序是不变的。","中的字符串对象作为","中的所有对象都放入","中的键值对个数。","中计算数组容量的代码：","中还没有","中，#19","中，eden","中，integ","中，string","中，从而保证经常被访问的节点不容易被回收。","中，利用虚拟机回收掉一部分不经常使用的对象。","中，因此这一步是很费时的。","中，然后返回这个字符串引用。因此","为","为主。","为了便于理解，以下源码分析以","为了让查找的成本降低，应该尽可能使得","为原来的两倍。","主要用来实现缓存，通过使用","之前，string","之前，如果一个接口想要添加新的方法，那么要修改所有实现了该接口的类。","之前，它可以看成是一个完全抽象的类，也就是说它不能有任何的方法实现。","之后，string","也作了很多优化。","也可以使用","习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第n个丑数。约定1是第一个丑数。","书上c++代码的java改写。用变量curr指示当前字符。判断的过程是，首先看第一个字符是不是正负号。如果是，在字符串上移动一个字符，继续扫描剩余的字符串中0","书上的思路。求字符串的排列可以分成两步：首先求所有可能出现在第一个位置的字符，即把第一个字符和后面的字符依次交换（也可以和它自己交换）；第二步固定第一个字符，求后面所有字符的排列。这个时候仍把后面的所有字符分成两部分，后面字符的第一个字符以及这个字符之后的所有字符，然后把第一个字符逐一和它后面的字符交换。这是一个递归的过程。为了方便交换，我们在代码中将字符串转换为字符数组。","书上的方法。定义两个指针，设环中有n个节点，先让第一个指针从链表头开始在链表上走n个单位，然后两个指针再一起走，每次走一个单位。当两个指针相遇时，相遇节点就是环的入口节点。关键是如何求出环中的节点个数。借由上一题的分析，我们可以让slow从相遇节点处继续向前走，并记录走过的节点个数，当再次回到这个节点时，即可得出环中的节点个数。","书上讲到，最好不要去使用","二叉搜索树与双向链表","二叉搜索树的后序遍历序列","二叉搜索树的第k大节点","二叉树中和为某一值的路径","二叉树的下一个节点","二叉树的层次遍历。","二叉树的深度","二叉树的镜像","二维数组中的查找","二进制中1的个数","什么是java异常","介绍","从","从“数组中出现次数超过一半的数字”中我们可以得到启发，我们同样可以用partition函数来解决这个问题。我们基于数组的第k个数字来进行调整，使得所有小于第k个数字的数都排在它的左边，所有大于第k个数字的数都排在它的右边。这样调整之后，位于数组左边的k个数字就是最小的k个数字（但是这k个数字不一定是排好序的）。","从上到下打印二叉树","从上往下打印出二叉树的每个节点，同层节点从左至右打印。","从下向上（至少要有三行两列）","从下面的添加元素代码中可以看出，当需要扩容时，令","从使用上来看，一个类可以实现多个接口，但是不能继承多个抽象类。","从头开始遍历数组，同时用一个map保存遍历过的元素和它的下标。每遍历一个元素时，我们先判断target","从头开始遍历链表，用一个set保存已经走过的节点。当当前节点已经存在于set中时，说明链表中有环并且当前节点就是环的入口节点。","从头部删除队列中已经滑出窗口的元素","从尾到头打印链表","从尾部删除队列中等于或小于当前元素的元素，因为这些元素不可能成为滑动窗口的最大值","从左向右","从设计层面上看，抽象类提供了一种","代码略。","令","令一个数","以上抛出了","以下代码中","以下是","以下是使用","以二维数组矩阵中右上角的数字为基准，如果该数字等于target，我们就找到了这个数；如果该数字小于target，则该数字所在行的所有数都小于target，剔除该行，即row++；如果该数字大于target，则该数字所在列的所有数字都大于target，剔除该列，即col","会使用缓存池中的对象，多次调用会取得同一个对象的引用。","会在编译时期将","会引发","传递性","但是","但是当n非常大导致int和long都不能表示最大的n位数时，程序会产生溢出，因此我们需要尝试其他的方法。","位上为","位以上数：","位级表示的第","位置上，该操作的时间复杂度为","作用等同于deque.offerlast()","使引用不变，也就不能引用其它对象，但是被引用的对象本身是可以修改的。","使数值不变；","使用","使用一个辅助栈stack。如果出栈序列中的当前元素刚好是栈顶元素，那么直接弹出。否则，我们把入栈序列中还没有入栈的数字压入stack，直到把下一个需要出栈的元素压入栈为止。如果入栈序列中所有的数字都入栈了仍然没有找到下一个需要出栈的数字，那么该序列不可能是一个出栈序列。","使用一个辅助栈即可。","使用了","使用了一个特殊的机制，可以降低重新计算桶下标的操作。","使用分段锁机制来实现并发更新操作，核心类为","使用抽象类：","使用拉链法来解决冲突，同一个链表中存放哈希值相同的","使用接口：","使用第","使用这种方式一共会创建两个字符串对象（前提是","使用选择","使用链表的头插法，也就是新的键值对插在链表的头部，而不是链表的尾部。","例如给定如下的二叉树：","便于被gc发现","保存偶数层的节点","保存奇数层的节点","保存当前节点的中序遍历的下一个节点","修饰的，保证了获取时的可见性。","倍。","倍空间，而","值","值也不可变，因此只需要进行一次计算。","值对桶个数取模：hash%capacity，如果能保证","值来调整","值经常被使用，例如","值，使得空间效率和时间效率都能得到保证。","假设原数组长度","假设数据在容器中已经排好序，中位数可以由p1和p2两个指针指向的数得到。如果容器中数据的数目是奇数，则中位数由p1和p2共同指向；如果容器中数据的数目是偶数，则中位数是p1和p2指向的数的平均值。注意到整个数据容器被我们分成了两部分，左边部分的数据比右边部分的数据小，并且p1指向的数据是左边部分最大的数，p2指向的数据是右边部分最小的数，见下图：","做与运算，可以去除","允许插入键为","先于","先反转字符串的前n个字符，再反转字符串的后面部分，再反转整个字符串，即可得到字符串左旋转n位的结果。","先在长链表上走diff步","先对整个句子作一个翻转，再依次将句子中的每个单词作一个翻转，即得到结果。","先将句子划分成一个个单词，然后从后向前构造出结果。注意，如果原先的句子中没有单词，则直接返回原先的句子即可。","先找出是否已经存在键为","先根据前序序列的第一个数字创建根节点，接下来在中序序列中找到根节点的位置，这样就能确定左右子树节点的数量，然后在新的前序序列和中序序列中递归地构建其左子树和右子树。前序序列用startpreorder和endpreorder两个变量确定，中序序列可以用startinorder和endinorder两个变量确定。","先求出最大的n位数number，然后用一个循环打印出从1到number的每一个数。","先求出长链表的长度len1，短链表的长度len2，两个链表的长度差diff。之后，先在长链表上走diff步，然后两个链表再一起走，直到或者两个链表中有一个为null（没有公共结点）或者找到第一个公共节点。","先考虑一种简单的情况，数组中只有一个数出现1次，其他数都是出现2次。我们可以从头到尾遍历数组，对每个数求异或，（因为一个数和自己异或的结果为0，因此所有出现两次的数都抵消掉了），最后得到的结果就是那个只出现一次的数。现在我们考虑数组中恰有两个数出现1次，其他数都是出现两次。首先，从头到尾遍历数组，对每个数求异或，得到数temp。在异或的过程中，由于所有出现2次的数都抵消掉了，所以temp是数组中那两个只出现1次的数异或的结果。由于这两个数不相同，所以temp肯定不为0，即temp的二进制表示中一定有一位为1。假设其第n位为1。我们根据数组中每个数的二进制中的第n位是否为1,可以把原数组分成两个数组，可知，出现2次的数一定被分到了一个数组当中。接着，我们分别对两个数组按照开始的思路求异或，即可得到两个出现1次的数。","先考虑如何求一个数的掩码，对于","先遍历一遍字符串，用一个map统计每个字符的出现次数，接着再遍历一遍字符串，找到第一个出现次数为1的字符，并返回它的位置。","先遍历一遍链表，将每一个节点都压入一个stack中，将stack","入栈","入门之异常处理","关系。","关系，它只是提供一种方法实现契约，并不要求接口和实现接口的类具有","关系，那么就必须满足里式替换原则","关联的对象在下一次垃圾回收时会被回收","关键字。","关键字修饰，因此是线程安全的。","关键字进行声明。抽象类一般会包含抽象方法，抽象方法一定位于抽象类中。","内存占用：在写操作时需要复制一个新的数组，使得内存占用为原来的两倍左右；","内部使用","内部包含了一个","内部没有改变","内部维护了一个双向链表，用来维护插入顺序或者","写操作在一个复制的数组上进行，读操作还是在原始数组中进行，读写分离，互不影响。","写操作结束之后需要把原始数组指向新的复制数组。","写操作需要加锁，防止并发写入时导致写入数据丢失。","决定了顺序，默认为","函数执行完后prev指向的是双向链表的尾节点","分为两种：","则为","创建一个大顶堆","创建一个新的链表用来保存相加后的结果。同时遍历两个链表，将两个链表当前节点的值相加得到sum，如果sum","创建一个测试类，其","初始值为","初始化dp，当s和p同时到达末尾时匹配成功","初始化顺序","删除元素","删除元素的代价是非常高的。","删除链表的节点","判断s的当前字符和p的当前字符是否匹配","判断两个值是否相等，基本类型没有","判断两个变量是否引用同一个对象，而","判断引用的对象是否等价。","判断每个关键域是否相等。","前序遍历该树，对每个非叶节点交换其左右两个子节点。","前面。","剑指offer","加锁","加锁。","包含min函数的栈","包装类型","匹配0个","匹配1个","匹配1个或多个","区获取，如果没有找到的话再到","单独处理","原链表的当前节点","参数","参数传递","反序列化","反转字符串","反转链表","取字符串的前n位作为子串left，取余下的部分作为子串right，将left和right进行拼接即可。","取模","取模效果是一样的：","受检异常","变量来统计该","只有两个值：true、false，可以使用","只有在构建","只要在java语句执行中产生了异常，一个异常对象就会被创建，jre就会试图寻找异常处理程序来处理异常。如果有合适的异常处理程序，异常对象就会被异常处理程序接管，否则，将引发运行环境异常，jre终止程序执行。","可以使用","可以先对数组进行排序，然后从头到尾遍历数组找到重复的数字，时间复杂度为o(nlogn)。也可以用一个set保存已经扫描过的数字，如果当前数字已经包含在了set里，那么就找到了一个重复的数字，时间复杂度为o(n)，空间复杂度为o(n)。接下来我们看看能不能把空间复杂度优化为o(1)。注意到题目中说所有数字的范围都在0","可以在类中使用一个stringbuilder记录字符流，每次insert时向sb中append。当需要找出字符流中第一个不重复的字符时，根据题目“第一个只出现一次的字符”中的方法，先遍历一遍sb，用一个map记录sb中每个字符的出现次数，然后再遍历一遍sb，根据map找到第一个不重复的字符。但是使用这种方法，当字符流中的字符很多时，每次调用firstappearingonce()找当前字符流中第一个不重复的字符时都要遍历一遍字符流，那么时间开销会很大。更好的做法是用一个数组occurrence记录当前字符流中各个字符的出现情况，occurrence的大小为256。初始时，occurrence中的每个元素置为","可以将原数组中的奇数和偶数按照一定的顺序放入一个新数组中。先遍历一遍原数组，求出奇数和偶数的个数，确定新数组中指示奇数的下标p1和指示偶数的下标p2，然后向新数组中按照顺序放入奇数和偶数。","可以插入键为","可以用来表示任何可以作为异常抛出的类，分为两种：","可以缓存","可变","可变性","可知b是a的子结构。","合并两个排序的链表","同样是用空间换时间的思想，但是不同于上一个思路中用额外的存储空间存储节点和节点的random之间的映射关系，这次我们直接在原链表上完成复制。","同步","后序遍历该二叉树，求出当前节点左子树的深度left和右子树的深度right，判断left和right的差的绝对值是否大于1，如果是，说明该二叉树不是平衡二叉树。下面的代码中函数isbalanced()返回当前节点的深度。","后面的元素都复制到","后面，而是插入在链表头部。","向数据流中插入一个数据","否","否则，将prev指向next","含义","呢？","和","和hashtable的比较","和为s的两个数字","和为s的连续正数序列。输入一个正数sum，打印出所有和为s的连续正数序列（至少含有两个数）。例如输入15，由于1","和扩容相关的参数主要有：capacity、size、threshold","回溯法。","回溯法。在进入一个新的格子之前先判断是否能进入，如果能进入则count++并且置访问标记为true。","因为","因此我们可以用一个最大堆保存左边部分的数据，用一个最小堆保存右边部分的数据，p1和p2分别指向最大堆和最小堆的堆顶。","在","在1前面会多打印出来一个空行，这是因为\"000\"也会打印出来，这个空行是由print(temp),","在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。","在一个字符串(0","在一个排序的链表中，删除重复的结点。例如给定链表1","在一个长度为n的数组中，所有的数字都在0","在二叉搜索树的后序遍历序列中，最后一个是根节点，在根节点前所有小于根节点的数构成根节点的左子树，所有大于根节点的数构成根节点的右子树。据此可以在原数组中划分出左子树序列和右子树序列，其中左子树序列中的所有数都比根节点的值小，右子树序列中所有数的值都比根节点的值大。如果在右子树序列中出现小于根节点值的数，说明该序列不是二叉搜索树的后序遍历结果，返回false。接着递归得在左子树序列和右子树序列中继续判断。","在任意位置添加删除元素更快。","在使用这些基本类型对应的包装类型时，就可以直接使用缓冲池中的对象。","在使用静态变量和方法时不用再指明","在写操作的同时允许读操作，大大提高了读操作的性能，因此很适合读多写少的应用场景。","在堆中创建一个字符串对象，并且使用","在很多情况下，接口优先于抽象类。因为接口没有抽象类严格的类层次结构要求，可以灵活地为一个类添加行为。并且从","在我们的循环不变式中，lo指向前一个递增子数组，hi指向后一个递增子数组，因此这里循环条件是nums[lo]","在执行","在插入数据时我们需要确保数据被平均分配到两个堆中，即两个堆中数据的数目之差不能超过1。为了实现实现平均分配，我们约定在数据的总数目是偶数时把数据插入到最小堆中，否则插入到最大堆中。同时，我们还要保证最大堆中的所有数据都要小于最小堆中的数据。当数据的总数目是偶数时，按照我们的约定会把数据插入到最小堆中，如果这个数据比最大堆中的一些数据要小该怎么办呢？我们可以先把数据插入到最大堆中，然后拿出此时最大堆中最大的元素，即堆顶元素，将其插入到最小堆中，这样就保证了最小堆中的所有数字都大于最大堆中的数字。当需要把一个数据插入到最大堆但是这个数据比最小堆中的一些数据要大时同理进行分析。","在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组,求出这个数组中的逆序对的总数p。如果前一个数字大于后一个数字，则这两个数字组成一个逆序对。输入一个数组，求出在这个数组中的逆序对的总数。例如，在数组[7,","在覆盖","在进行序列化或者迭代等操作时，需要比较操作前后","在进行扩容时，需要把键值对重新放到对应的桶上。hashmap","在链表上顺序查找，时间复杂度显然和链表的长度成正比。","地上有一个m行n列的方格。一个机器人从坐标(0,","基于partition函数的解法","基于动态数组实现，linkedlist","基于双向链表实现，使用","基于双向链表实现；","基于堆或红黑树的解法","基本类型","基本类型对应的缓冲池如下：","基本类型都有对应的包装类型，基本类型与其对应的包装类型之间的赋值使用自动装箱与拆箱完成。","声明数据为常量，可以是编译时常量，也可以是在运行时被初始化后不能被改变的常量。","声明方法不能被子类重写。","声明类不允许被继承。","复制链表中每个节点，将复制节点直接链接到原节点的后面","复制链表中的每个节点并将复制的节点直接链接到原节点的后面，此时不设置每个节点的random。","复制链表的头结点","复制链表的当前节点","复杂链表的复制","多次调用","大于等于","大体思路同上，用prev,","大家都知道斐波那契数列，即1,","头插法，链表头部指向新的键值对","如何得到一个数据流中的中位数？如果从数据流中读出奇数个数值，那么中位数就是所有数值排序之后位于中间的数值。如果从数据流中读出偶数个数值，那么中位数就是所有数值排序之后中间两个数值的平均值。","如果curr和next不是重复节点，继续判断下一个节点","如果curr和next是重复节点，找到第一个比curr的值大的节点并将其赋值给next","如果lo","如果node不是链表的尾节点","如果node是链表的尾节点","如果roo1","如果root2","如果一个","如果不要求返回两个数在数组中的下标而是两个数的值的话可以用双指针法做。先对数组进行排序，用lo和hi两个指针分别指向数组的开头和结尾，当两个指针指向的元素的和等于target时，即找到了这两个数；当和小于target时，我们向后移动lo以增大和；当和大于target时我们向前移动hi以减小和。","如果为","如果以kthnodecore(root,","如果再执行一次pop的话，我们就把queue1中的1插入到queue2中，然后从queue1中删除1。","如果在方法中改变对象的字段值会改变原对象该字段值，因为改变的是同一个地址指向的内容。","如果头节点是重复节点，将next作为新的头节点","如果尝试的次数超过","如果当前字符已经出现过，将occurrence[c]赋为","如果当前数据流中数据的总数是偶数，将其插入到最小堆中","如果我们将数组按从小到大进行排序，那么数组中出现次数超过一半的数字就是数组的中位数，直接返回排序后数组中间位置的那个数即可。","如果数据流中数据的总数为偶数，返回中间的两个数的平均值","如果数据流中数据的总数为奇数，返回中间的数","如果数组本身已经是排好序的，第一个数字是最小的数字","如果是采用","如果要求调整后奇数和奇数，偶数和偶数之间的相对顺序保持不变，应该怎么做呢？","如果输入数组是[7,","如果采用二叉搜索树作为数据容器的话，插入数据的平均时间复杂度是o(logn)，读取中位数的平均时间复杂度为o(logn)，但是在最坏情况下，即二叉搜索树退化为一个单链表时，插入和读取的时间复杂度是o(n)。我们可以使用一个改进的avl树作为数据容器，将平衡因子定义为左右子树节点数据之差，这样插入的时间复杂度为o(logn)，读取的时间复杂为o(1)（根节点的值或根节点和左子节点或右子节点的值的平均值）。但是大部分的编程语言没有实现我们定义的这种avl树，因此我们需要再分析其他的方法。","如果采用暴力法，可以扫描每一个滑动窗口中的所有数字找出其中的最大值，如果滑动窗口的大小为k，数组的大小为n，则这种方法时间复杂度为o(kn)，显然不是最优的。实际上，一个滑动窗口可以看成是一个队列。当窗口滑动时，处于窗口的第一个数字被删除，同时在窗口的末尾添加一个新的数字。这符合队列先进先出的特性。正常情况下我们需要扫描整个队列才能找到队列中的最大数，我们看看能不能在o(1)的时间内找到队列中的最大数。我们并不把滑动窗口里的每一个数都存入队列中，而是只把有可能成为滑动窗口最大值的数存入到一个双端队列中。我们使用队列的队头保存当前滑动窗口的最大值。当把数组前k个元素加入到队列中时，由于此时窗口还没有开始滑动，我们只需要在队列中保存前k个数字中最大的数即可，此时队列的队头就是当前窗口中最大的数。当窗口开始滑动时，一方面我们需要将当前数字和队列中的数字进行比较，如果当前数字比队列中的数字大，则队列中比当前数字小的元素不可能成为窗口的最大值，将其从队列中移除，另一方面，我们需要判断代表当前窗口最大值的队头元素是否已经滑出窗口，如果已经滑出窗口，我们也需要将其进行移除。那么如何判断当前窗口是否包含一个数字呢？我们需要在队列里存入数字在数组中的下标，而不是数值。当队头元素的下标与当前处理的数字的下标之差大于等于窗口的大小时，说明这个数字已经从窗口中滑出了。在实现上，我们使用一个双端队列deque保存有可能是滑动窗口最大值的数字的下标。在存入一个数字的下标之前，首先要判断队列里已有数字是否小于待存入的数字。如果已有数字小于待存入的数字，说明这些数字已经不可能是滑动窗口的最大值，因此它们会依次从队列的尾部删除（调用deque.polllast()）。同时，如果队列头部的数字已经从窗口中滑出，滑出的数字也需要从队列的头部删除（调用deque.pollfirst）。由于队列头部和尾部都有可能删除数字，因此这也是我们需要双端队列的原因。","如果顺序遍历数组，对于每个元素向后继续遍历数组统计其逆序对的数目，那么时间复杂度是o(n^2)，显然效率很低。可以利用归并排序的思想。对于[7,","子类（实例变量、普通语句块）","子类（构造函数）","子类（静态变量、静态语句块）","字段我们可以看出","字符串字面量；","字符串对象）。","字符串常量池（string","字符串的排列","字符流中字符的个数","字符流中第一个只出现一次的字符","存储字符串字面量","存储着对象的集合，而","存储着键值对。它包含了四个字段，从","存储着键值对（两个对象）的映射表。","存储结构","存储链表节点信息。","存在继承的情况下，初始化顺序为：","它的哈希值如果在第","它的实现与","安全性","定义栈的数据结构，实现一个能够得到栈中最小元素的min函数（时间复杂度应为o（1））。","定义，该值为","实例使用自动装箱来创建并且值相同，那么就会引用相同的对象。","实例变量","实例变量：每创建一个实例就会产生一个实例变量，它与该实例同生共死。","实现","实现一个函数，判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。","实现上类似，最主要的差别是","实现两个函数，分别用来序列化和反序列化二叉树。","实现了","实现的一个","实现，不用担心会被回收（伊甸园）；","实现，这些老对象会被垃圾收集器回收。","实现，需要注意的是，扩容操作同样需要把","容器主要包括","容易想到的做法是每遇到一个空格，将其替换为\"%20\"，由于是把1个字符替换为2个字符，所以其后所有的字符都需要向后移动2位，效率不高。可以先求出原字符串中空格的总数，据此计算出替换后的字符串的新的长度，利用两个指针p1和p2，p1指示旧的字符串的末尾，p2指示新的字符串的末尾，从后向前进行替换。","容易想到的是用一个数组保存数据流中的所有数据，如果数据是有序的，则我们在插入一个新数据到数据流时需要移动其他数据以保持数据的有序性，时间复杂度为o(n)，读取中位数时由于数组是有序的因此直接读就可以了，时间复杂度是o(1)。如果数组是无序的，插入数据的时间复杂度是o(1)，读取中位数可以使用partition函数，时间复杂度为o(n)（关于partition的时间复杂度分析比较复杂，详见《算法导论》）。","对","对synchron","对于一个","对于基本类型，==","对于基本类型，final","对于引用类型，==","对于引用类型，final","对任何不是","对右半部分数组进行排序并统计逆序对的数目","对左半部分数组进行排序并统计逆序对的数目","对称性","对称的二叉树","对象已经被创建过了，那么就会从","对象时就指定大概的容量大小，减少扩容操作的次数。","对象的那一方以为现在连接的是其它主机，而实际情况却不一定是。","对象进行转型；","对这部分缓存进行回收。","将","将nums[lo,","将复制后的链表拆分成原链表和复制链表并返回复制链表的头结点","尝试次数使用","就会将最近最久未使用的数据移除。","就必须进行扩容操作。","尽可能大，也就是说","尽可能小，因此需要保证","属于字符串字面量，因此编译时期会在","左旋转字符串。字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的末尾。请定义一个函数实现字符串的左旋转操作。例如输入字符串\"abcdefg\"和数字2，该函数将返回左旋转两位得到的结果\"cdefgab\"。","平衡二叉树。输入一棵二叉树，判断该二叉树是否是平衡二叉树。一个二叉树是平衡二叉树指的是树中所有节点的左子树的深度和右子树的深度差的绝对值不超过1。","并不支持","并且不会导致数据不一致。它是遗留类，不应该去使用它。现在可以使用","并且覆盖这个方法的实现，这在实现","并发包下的","序列化","序列化二叉树","序列化结果为：1,2,4,$,3,5,$,$,6,$,$","应该注意到链表的插入是以头插法方式进行的，例如上面的","应该注意的是，clone()","开始，一个桶存储的链表长度大于","开始，接口也可以拥有默认的方法实现，这是因为不支持默认方法的接口的维护成本太高了。在","开始，接口也可以有默认的方法实现，使得修改接口的成本也变的很低。","异常","异常是发生在程序执行过程中阻碍程序正常执行的错误事件。比如：用户输入错误数据、硬件故障、网络阻塞等都会导致出现异常。","引入了分段锁。","引用的字符串放到","引用的是同一个字符串。","当lo,","当一个字符串调用","当一个节点被访问时，如果","当前数据流中数据的总数","当前是偶数层","当前是奇数层;","当前最长回文子串","当前节点在中序序列中的位置","当我们用二分查找在数组中找到一个k时，如果前面没有k了，那么这个k就是k第一次出现的位置；如果前面还有k，我们继续在前半部分中用二分查找寻找k第一次出现的位置；同理，我们可以得到k最后一次出现的位置。找到了k第一次出现的位置和最后一次出现的位置，我们就可以算出k在数组中的出现次数了。","当根节点为空时，返回0；否则，返回左子树的深度和右子树的深度的最大值并加1。","当然，我们可以顺序遍历数组来统计k在数组中出现的次数，也可以先用二分查找找到一个k，由于k的左边和右边也有可能有k，我们从当前位置出发分别沿左，右两个方向顺序地寻找k。因为要查找的数字在长度为n的数组中有可能出现n次，所以上面两种方法的时间复杂度都是o(n)。我们来看看有没有更好的方法。","当要删除的节点node不是链表的尾节点时，我们可以先把该节点的下一个节点next的值赋给node，然后令node的next指向next的next即可。当要删除的节点是链表的尾节点时，我们就不能这么做了，需要从从链表头开始顺序地查找该节点并删除。","当调用","很多操作都需要先确定一个键值对所在的桶下标。","得到一个线程安全的","得到以下实现：","得到的结果是不确定的。","循环。curr指示当前节点，prev指示当前节点的前一个节点，next指示当前节点的下一个节点。依次反转每个节点并向前移动指针。注意，反转时首先保存原链表中当前节点的下一个节点到next中，因为反转会修改curr的next指向。","必须保证为","思路","思路1","思路2","思路2:","思路2：","思路3","思路4","总结occurrence[i]各个值的含义如下：","总结上述过程我们可以得到以下结论：整个过程中我们保持两个队列中至少一个队列为空。当执行push时，如果两个队列均为空，我们约定将元素插入到queue2中；如果两个队列一个未空，另一个不为空，我们将元素插入到那个非空的队列中。当执行pop时，我们不断将非空的那个队列中的元素出队，直到该队列只含有一个元素，此时该元素即为出栈的元素，我们将该元素出队并返回。","我们不难发现一个回文子串是围绕着它的中心进行扩展的，对于一个长度为n的字符串，我们可以找到2n","我们先来分析这样一个问题：如何判断一个链表中是否存在环？我们可以让一个快指针fast和一个慢指针slow同时从链表的第一个节点开始向前走，fast每次走2步，slow每次走1步。如果两个指针相遇则说明链表中存在环，如果fast走到链表的末尾两个指针还没有相遇则说明链表中不存在环。现在我们再设置一个指针p从链表的第一个节点开始向前走，每次走1步，slow从相遇的地方继续向前走，每次也走1步，当p和slow相遇时，相遇节点就是环的入口节点。","我们可以对思路2进一步进行优化。当s[j]和[i,","我们可以用small和big两个指针指示正数序列，small指示序列的第一个数，big指示序列的最后一个数。初始时small置为1，big置为2，然后，我们判断当前序列的和是大于还是小于sum：如果小于sum，我们增大big以让序列包含更多的数；如果小于sum，我们增大small以减小序列的和；如果等于sum我们则将当前序列打印出来。由于序列至少需要包含2个数，因此small至多只能增加到(1","我们可以用字符串表示大数，进而我们需要在字符串上模拟整数的加1操作。","我们将复杂链表的复制过程分为三个步骤：","我们知道，位运算的代价比求模运算小的多，因此在进行这种计算时用位运算的话能带来更高的性能。","我们知道，如果给定一棵二叉树的前序遍历序列和中序遍历序列，我们可以从中构造出一棵二叉树。因此我们可以先把一棵二叉树序列化成一个前序遍历序列和一个中序遍历序列，然后在反序列化时通过这两个序列重构出原二叉树。但是这个思路有两个缺点，一是二叉树中不能有数值重复的节点，否则我们无法通过这种方法构造出原二叉树。二是只有当两个序列中的数据都读出后才能开始反序列化。如果两个序列是从一个流中读出来的，那么可能就需要等待很长的时间。实际上如果二叉树的序列化是从根节点开始的话，那么相应的反序列化在根节点的数值读出来后就可以开始了。因此我们可以根据前序遍历来序列化和反序列化二叉树。在序列化时，如果当前节点不为空，我们在字符串中加入当前节点的值；如果当前节点为空，我们在字符串中加入一个特殊字符，比如$。在反序列化时，我们每次从字符流中读入一个字符，如果当前字符不是$`，我们创建一个新节点，并继续构建该节点的左子树和右子树；否则，返回空。","我们通过一系列栈的push和pop操作来分析两个队列模拟一个栈的过程。表格的第一列表示queue1，第二列表示queue2。现在我们向栈中依次push进1,2,3三个数，由于初始时queue1和queue2都是空的，因此插入哪个queue都可以。我们不妨将1,2,3依次插入到queue2，此时两个queue中元素的情况如下图所示：","或者","所以","打印从1到最大的n位数","执行","扩容","扩容使用","扩容操作需要调用","扩展","扩展1","扩展2","找出其中最小的k个数字。例如输入[4,","找到出现次数大于n/2的元素返回","把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。","把原数组整个复制到新数组中，这个操作代价很高，因此最好在创建","把只包含质因子2,","把数组排成最小的数","把数组进行排序，排在最前面的k个数就是最小的k个数。代码略。","抽象类","抽象类与接口","抽象类和抽象方法都使用","抽象类和接口","抽象类和普通类最大的区别是，抽象类不能被实例化，需要继承抽象类才能实例化其子类。","拆箱","拉链法的工作原理","拷贝对象和原始对象的引用类型引用不同对象。","拷贝对象和原始对象的引用类型引用同一个对象。","指向当前节点的父节点","指示curr和next是否是重复节点","指示入栈序列中的元素","指示出栈序列中的元素","指示字符串str的当前字符","指示序列化字符串中当前正在反序列的字符的下标","指示当前中序遍历到的节点的编号，从1开始","指示当前单词是不是要构造的第一个单词","指示当前正在序列化的节点是不是第一个节点","指针：","按之字形顺序打印二叉树。实现一个函数按照之字形顺序打印二叉树，即第一层按照从左向右的顺序打印，第二层按照从右向左的顺序进行打印，第三层再按照从左向右的顺序进行打印，以此类推。","按之字形顺序打印二叉树需要两个栈。我们在打印某一行节点的时候，把下一层的节点保存到相应的栈里。如果当前打印的是奇数层，由于奇数层是从左往右打印，其下一层需要从右往左打印，根据栈后进先出的特性，我们在保存下一层节点的时候应该先保存左子节点，再保存右子节点。同理，如果当前打印的是偶数层，则保存下一层节点的时候先保存右子节点，再保存左子节点。","按节点数值大小排序，第三个的节点应该是4。","接口","接口。","接口中的","接口又调用了","接口只是规定，如果一个类没有实现","接口是抽象类的延伸，在","接口的字段只能是","接口的字段默认都是","接口的成员只能是","接口的成员（字段","接口的方法，而是","接口，因此支持随机访问。","插入","插入新键值对","操作失败时使用内置锁","操作时先尝试不加锁，如果连续两次不加锁操作得到的结果一致，那么可以认为这个结果是正确的。","操作时，需要遍历所有","操作来支持更高的并发度，在","支持随机访问，linkedlist","数值的整数次方","数字在排序数组中出现的次数","数据","数据不一致：读操作不能读取实时性的数据，因为部分写操作的数据还未同步到读数组中。","数据流中的中位数","数据类型","数组。","数组中出现次数超过一半的数字","数组中只出现一次的两个数字","数组中的逆序对","数组中重复的数字","数组内容，而是都会指向同一个","数组初始化之后就不能再引用其它数组。并且","数组存储字符串，同时使用","数组存储数据。","数组来表示","数组来表示。","数组的方法，因此可以保证","数组的默认大小为","数组被声明为","数组，而是使用","数量相等。","斐波那契数列","新建一个","新链表的虚拟头结点","方法","方法。","方法。cloneabl","方法中使用这种方式来创建字符串对象。","方法中，0:","方法取得一个字符串引用。intern()","方法在运行过程中将字符串添加到","方法实现，在节点多于","方法并不是","方法时应当总是覆盖","方法时，会先从","方法时，如果","方法来保证容量足够，如果不够时，需要使用","方法来拷贝一个对象即复杂又有风险，它会抛出异常，并且还需要类型转换。effect","方法的实现比较简单，就是先判断值是否在缓存池中，如果在的话就直接返回缓存池的内容。","方法的重写，r取31，r进制整数的第一位取17，因此该r进制整数可以看作|","方法签名相同，此时子类的方法不是重写基类方法，而是在子类中定义了一个新的方法。","方法结果不变","方法返回","方法进行扩容，新容量的大小为","方法进行确定），那么就会返回","方法隐式地被指定为","方法）默认都是","方法，也就无法确定该键值对的桶下标，只能通过强制指定一个桶下标来存放。hashmap","方法，保证等价的两个对象散列值也相等。","方法，因此多个","方法，因此这两个对象的散列值是不同的，最终导致集合添加了两个等价的对象。","方法，它不是","方法，就会抛出","方法；","旋转之后的数组可以看做是由两个递增的子数组所构成，而这个最小的数就是这两个子数组的分界点。可以借助二分查找的思想去寻找这个最小的数。初始时用lo指示数组的第一个数，hi指示数组的最后一个数，mid指示lo和hi中间的数。如果array[mid]","旋转数组的最小数字","无法处理的错误，而except","时会将链表转换为红黑树。","时会移除最晚的节点，也就是链表首部节点","时间复杂度","时间复杂度：o(2n)（在最坏情况下，字符串中的每个字符都要分别被i和j访问一次）","时间复杂度：o(logn)","时间复杂度：o(n)","时间复杂度：o(n)。","时间复杂度：o(n^2)","时间复杂度：o(n^3)","时间复杂度：o(nlogk)","时间复杂度：o(nlogn)","时，表示维护的是","是","是一个指针，存储的是对象的地址。在将一个参数传入一个方法时，本质上是将对象的地址以值的方式传递到形参中。因此在方法中使指针引用其它对象，那么这两个指针此时指向的是完全不同的对象，在一方改变其所指向对象的内容时对另一方没有影响。","是一个链表。即数组中的每个位置被当成一个桶，一个桶存放一个链表。hashmap","是不可变的，才可能使用","是可变的，那么在网络连接过程中，string","是同步的，因此开销就比","是否改变，如果改变了需要抛出","是否适用于海量数据","是否需要修改输入数组","是大于原始数字的最小的","是用来判断两个对象是否等价。等价的两个对象散列值一定相同，但是散列值相同的两个对象不一定等价。","是线程安全的，内部使用","是通过","替代方案","替换空格","最后才是构造函数的初始化。","最大堆","最小堆","最小的k个数","最重要的是以下用于维护顺序的函数，它们会在","最长回文子串的开始","最长回文子串的结尾","有其缺陷：","机器人的运动范围","来存储，但是具体大小没有明确规定。jvm","来实现缓存功能。","来引用缓存对象，由","来支持线程安全，并且","来标识使用了哪种编码。","来表示","来进行同步。","构造函数允许用户传入的容量不是","构造函数的参数。","构造函数的源码，可以看到，在将一个字符串对象作为另一个字符串对象的构造函数参数时，并不会完全复制","查找的时间复杂度为","查找需要分成两步进行：","栈中的元素类型为int。","栈的压入、弹出序列","树b：","树的子结构","根据“(n","根据结论“连续子序列之和等于两个前缀和之差”，即设si","根节点的值","检查是否为同一个对象的引用，如果是直接返回","检查是否是同一个类型，如果不是，直接返回","概览","次方。","次方，因为它可以自动地将传入的容量转换为","次方，那么就可以将这个操作转换为位运算。","次，就需要对每个","正则表达式匹配","此时该链表中奇数位置的节点构成原链表，偶数位置的节点构成复制链表，将其拆分出来即可。","每个","每个链表存储了","每次从矩阵的左上角开始一轮打印，每轮打印包括从左向右、从上向下、从右向左以及从下向上四个方向，每个方向的打印都有相应的前提条件，从上向下打印需要当前打印的矩阵至少包含两行，从右向左打印需要当前打印的矩阵至少包含两行两列，从下向上打印需要当前打印的矩阵至少包含三行两列。","每次取出x最后一位数digit，用result","每次扩容请求其大小的","每次选取head1和head2中的较小者作为当前结点，之后递归构造下一个节点。","每次都会新建一个对象；","比较","没有实现","注意这里i是从s.length()开始，j是从p.length()","注意，java默认创建的是小顶堆。","注意，虽然在前面的分析中，如果数据流中数据的总数是奇数，p1和p2同时指向数据流中间的那个数，这里无论是返回最小堆的堆顶元素还是最大堆的堆顶元素应该都是可以的。但是在实现上只有最小堆的堆顶才指示中间的那个数，因此这里只能返回最小堆的堆顶元素","注意，这种方法能够得到正确结果的关键在于partition函数的设计。我们当时在学习数据结构这门课程时，都会学习快速排序，而快速排序的关键就是partition函数。partition函数的思路是：每次我们从数组中选择一个数作为基准，将数组中所有比该数小的数排在它的左边，将数组中所有比该数大的数排在它的右边。由此，我们便确定了该数在排序数组中的正确位置。但是一般的数据结构书中对于partition函数的设计默认都为将数组中第一个数作为基准，但是如果将这种partition函数应用于该题中则在某些测试用例下会产生死循环，当数组中存在大量重复元素时，partition函数返回的index可能永远不等于mid！为此我们应该采用更为科学的partition函数的设计，即在当前数组中随机选取一个数作为基准。","注意：上述代码的运行结果为：","浅拷贝","深入理解","深入解析","深拷贝","添加元素时使用","滑动窗口。使用[i,","滑动窗口的最大值","然后把","父类（实例变量、普通语句块）","父类（构造函数）","父类（静态变量、静态语句块）","环中的节点个数","现在我们对栈执行pop，由于栈的后进先出特性可知出栈元素应该是3，然而直接操作queue2的话会从队头删除元素，也就是删除1。此时我们可以先把queue2中的1,2插入到queue1中，再从queue2中删除3。执行出栈后两个queue中元素的情况如下图所示：","理想的散列函数应当具有均匀性，即不相等的对象应当均匀分布到所有可能的散列值上。这就要求了散列函数要把所有域的值都考虑进来。可以将每个域都当成","用一个map统计数组中每个数字的出现次数，然后遍历map，找到出现次数大于n","用一个slow指针和一个fast指针，fast从表头开始先向后移动k","用一个辅助栈stack_min，栈顶元素记录当前栈中所有元素的最小值。入栈时，如果入栈元素num小于stack_min的栈顶元素，则同时将num加入stack_min中；出栈时，原栈和stack_min同时执行出栈。","用两个指针lo和hi，lo从头开始找到第一个偶数，hi从尾开始找到第一个奇数，然后交换lo和hi指示的这两个数，重复进行直到lo","用两个栈实现一个队列，完成队列的入队offer()和出队poll()操作。","用两个栈实现队列","用两个队列实现一个栈，完成栈的入栈push()和出栈pop()操作。","用做","用来表示","用来记录","由于java中一个int类型的数有4个字节，共32位，因此循环32次，每次用n和1进行位与运算判断其最后一位是不是1，如果是1则count++，之后将最后一位移出继续判断余下的数。","由于下一层是偶数层需要从右往左打印，因此先加入左子节点，再加入右子节点","由于下一层是奇数层需要从左往右打印，因此先加入右子节点，再加入左子节点","由于中序遍历是从左子树开始的，因此为了找出当前节点中序遍历的下一个节点，我们只需要在当前节点的右子树和父节点中寻找即可。如果当前节点的右子树不为空，则当前节点的下一个节点是右子树中最左边的那个节点；如果当前节点的右子树为空，则我们需要从当前节点的父节点中寻找当前节点的下一个节点。如果当前节点是其父节点的左子树，则当前节点的下一个节点就是其父节点；如果当前节点是父节点的右子树，则我们需要继续从当前的父节点的父节点中寻找，直到找到当前节点是其父节点的左子树，或者父子树为空，即当前节点没有下一个节点。","由于二叉搜索树的中序遍历序列是递增的，因此模拟一遍二叉搜索树的中序遍历，每次记录当前节点的编号，当前节点的编号等于k时即找到了第k大的节点。","由于前序遍历是先从根节点开始访问，因此采用前序遍历处理。每遍历一个节点将当前节点的值进行累加，即target","由于我们需要从一个数据流中读出数据并计算中位数，因此我们需要用一个数据容器存储数据流中的所有数据并同时考虑插入数据和读取中位数这两个操作的时间复杂度。","由于数组是递增排序的，初始时用lo指示数组的第一个数，hi指示数组的最后一个数，当array[lo]","由于是找最小的k个数，我们可以先用一个大顶堆保存数组的前k个数，之后从k","由于需要将m,n两个数字拼接得到mn，因此这里将数组中的每个数字转换为字符串","由于需要转换成一个排序的双向链表，而二叉搜索树的中序遍历序列是排序的，因此可以采用中序遍历处理原二叉搜索树。处理时用一个变量prev保存中序遍历的前一个节点，在处理当前节点root时，建立当前节点和prev之间的双向链接关系即可。","的","的。","的一个","的个数）。","的临界值，当","的区别在于：","的参数是以值传递的形式传入方法中，而不是引用传递。","的大小超过了","的字符串对象，它指向","的实现也在链表过长时会转换为红黑树。","的容量大小，默认为","的对象","的所有键值对重新插入","的改动","的效率会更高，因为","的方式会在堆中创建一个字符串对象。","的方式新建了两个不同字符串，而","的时候才为","的替代方案","的构造函数将","的查找效率，且内部使用双向链表维护元素的插入顺序。","的比较","的结构","的缓存中特别有用，通过移除最近最久未使用的节点，从而保证缓存空间足够，并且缓存的数据都是热点数据。","的迭代器是","的键值对。","的键值对。但是因为无法调用","的键值对，如果存在的话就更新这个键值对的值为","的需要","的，并且不允许定义为","的，而抽象类的成员可以有多种访问权限。","直接使用java的库函数replaceall()。","相乘可以转换成移位和减法：31*x","相乘相当于向左移一位。","矩阵中的路径","矩阵的列数","矩阵的行数","确定桶下标","确定桶下标的最后一步是将","穷举所有的子串，分别判断每个子串中是否含有重复字符，记录不含重复字符的最长子串的长度。代码略。","空间复杂度：o(1)","空间复杂度：o(1)。","空间复杂度：o(1)（取决于所用的排序算法）","空间复杂度：o(n)","空间复杂度：o(n)。","空间复杂度：o(n^2)","第k大的节点","第一个只出现一次的字符","等价与相等","等价关系","等操作之后执行，当","等方法中调用。","类","类。","类似，但它是线程安全的，这意味着同一时刻多个线程可以同时写入","类似，但它的每个方法都用","类似，但是使用了","类似，唯一的区别就是其中的核心数据如","类型的数据转换为","类型的数组","类型的，而抽象类的字段没有这种限制。","类的实现改用","累计起来。","约定当root1和root2均为null，root2是root1的子结构，返回tru","线程安全","终于刷完《剑指offer》啦！！！这里整理一下自己的题解。原书中的代码是用c++实现的，由于自己对java更熟悉一些，因此这里我选择用java实现。在刷的过程中，除了参考并用java再现了书上的解法外，对于一些题目我也补充了一些我在其他地方，比如leetcode，《算法竞赛入门经典》等看到的一些比较有意思的解法，比如对于“两个链表的第一个公共节点”这道题，用一个“两次迭代”的解法要比书上的解法更加直观，效率更高，对于“正则表达式匹配”这道题，书上的解法对于一些字符串长度很长的case效果会很差，而选用一种动态规划的方法则会大大提升程序的性能。此外，对于“数组中出现次数超过一半的数字”这道题，在使用书上第一种解法的时候要注意partition函数的选取。如果在partition函数中每次只选取第一个元素作为基准元素，那么在某些数组中的重复数字比较多的case下可能会产生死循环。为了避免产生死循环，我们应该随机地选取基准元素。","经常作为参数，string","经常使用的对象放入","结构发生变化的次数。结构发生变化是指添加或者删除至少一个元素的所有操作，或者是调整内部数组的大小，仅仅只是设置元素的值不算结构发生变化。","结果都为","给定一个double类型的浮点数base和int类型的整数exp。求base的exp次方。","给定一个二叉树和其中的一个节点，找到中序遍历的下一个节点。树中的节点除了有两个分别指向左右子节点的指针以外，还有一个指向父节点的指针。","给定一个单链表，删除链表中所有节点值为target的节点，返回删除后链表的头节点。例如给定链表1","给定一个大小为n的整数数组，找到出现次数大于n/2的元素。假设数组非空并且出现次数大于n","给定一个字符串s和一个模式p，实现一个支持.和*的正则匹配。模式中的字符.表示任意一个字符，而*表示它前面的字符可以出现任意次（含0次）。在本题中，匹配是指字符串的所有字符匹配整个模式。例如字符串\"aaa\"与模式\"a.a\"和\"ab*ac*a\"匹配，但与“aa.a”和\"ab*a\"均不匹配。","给定一个数组和滑动窗口的大小，请找出所有滑动窗口里的最大值。例如如果输入数组[2,","给定一个数组，返回它的最大连续子序列的和，子序列的长度至少为1。例如给定数组[6,","给定一棵二叉搜索树，请找出其中第k大的节点，k从1开始计数。例如给定如下二叉搜索树：","给定单向链表的头指针和一个节点指针，定义一个函数在o(1)时间内删除该节点。输入保证要删除的节点在链表中。","统计数字k在排序数组中出现的次数。例如输入数组[1,","统计数组中每个数字的出现次数","继承自","维护了一个","缓存池","缓存池的大小默认为","缓存：","编译器会在自动装箱过程调用","翻转字符串","翻转整个句子，将结果保存到temp中","而不是","而使用","能够使用的比例，threshold","自反性","自定义比较规则，对于m和n两个数字，如果mn","获取到就把对象放入","获取当前数据流中所有数据的中位数","获取，当从","虽然刷是刷了一遍，但是自我感觉对于某些题目的理解还是不够深，等以后有时间了再刷一遍吧！^_^","行使用","表示","表示上、下、左、右4个方向","表示数值的字符串","被声明为","被改变，改变","被放在运行时常量池中，它属于永久代","被移到堆中。这是因为永久代的空间有限，在大量使用字符串的场景下会导致","装箱","装载因子，tabl","要大，访问速度更慢。最好使用","要尽可能大。hashmap","覆盖","见代码。","解法比较","计算hash值","计算数组容量","计算键值对所在的桶；","记录字符流中每个字符的出现情况","设","设定最大缓存空间","设置clonedhead","设置为","设置复制节点的random","设置复制节点的random。若n的random是s，则n1的random就是s的下一个节点s1。","设计一个函数，用来判断一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。","证明：设entry为环的入口节点。当slow和fast相遇时，设slow走过的路程为a","该方法对上述方法的逻辑做了简化。首先判断s和p的当前字符是否匹配，接着看p的下一个字符是不是*，如果不是*，继续判断s和p余下的字符；如果是*，或者匹配0个，即忽略p的当前字符和*，继续看p中余下的字符和s是否匹配；要么匹配多个，即从s中去掉1个字符，判断s中余下的字符和p是否匹配。和上一个思路把匹配分为匹配0个，匹配1个，匹配多个相比，这里把匹配1个和匹配多个在逻辑上统一成匹配多个了。","语句捕获并进行处理，并且可以从异常中恢复；","请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，字符串\"+100\",\"5e2\",\"","请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符\"go\"时，第一个只出现一次的字符是'g'；当从该字符流中读出前6个字符\"google\"时，第一个只出现一次的字符是'l'。","请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为we","读写分离","调整数组顺序使奇数位于偶数前面","调用","超过尝试次数，则对每个","转换后的结果为：","辅助数组","输入n个整数，","输入一个复杂链表（每个节点中有节点值以及两个指针，一个指针next指向下一个节点，另一个指针random指向链表中任意一个节点），返回结果为复制后的复杂链表的头结点。","输入一个字符串,按字典序打印出该字符串中字符的所有排列。例如输入字符串abc,则打印出由字符a,","输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。假设输入的数组的任意两个数字都互不相同。例如输入数组[5,","输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，并保证奇数和奇数。","输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。","输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。例如输入数组{3,","输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。例如输入如下4","输入一个英文句子，翻转句子中单词的顺序，但单词内字符的顺序不变。为简单起见，标点符号和普通字母一样处理。例如输入字符串\"i","输入一个递增排序的数组和一个数字s，在数组中查找两个数，使得他们的和正好是s。如果有多对数字的和等于s，输出任意一对即可。例如输入数组[1,","输入一个链表的头结点，从尾到头反过来打印出每个节点的值。","输入一个链表，反转链表后，输出新链表的表头。","输入一个链表，输出该链表中倒数第k个结点。","输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。例如数组{3,","输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。例如对于如下的二叉搜索树：","输入一棵二叉树，求该树的深度。从根结点到叶结点依次经过的结点（含根、叶结点）形成树的一条路径，最长的路径的长度为树的深度。","输入一棵二叉树，输出它的镜像。例如输入二叉树如下：","输入一颗二叉树的根节点和一个整数，打印出二叉树中所有路径和为target的所有路径。路径和为路径中所有节点的和，路径定义为从根结点向下到某个叶结点所经过的结点形成的一个序列。例如给定二叉树如下：","输入两个单调递增的链表，输出两个链表合成后的链表，合成后的链表也要求单调递增。","输入两个整数序列，第一个序列表示栈的入栈顺序，请判断第二个序列是否可能为该栈的出栈顺序。假设压入栈的所有数字均不相等。例如序列1,","输入两个链表，找出它们的第一个公共节点。","输入两棵二叉树a，b，判断b是不是a的子结构。我们约定空树不是任意一个树的子结构。例如给定树a：","输入数字n，按顺序打印出从1到最大的n位数。比如输入3，则打印出1,","输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列[1,","输出结果为：1,","输出：","返回false。","返回k在数组中第一次出现的位置","返回num的二进制表示中从右向左第一个1的位置","返回num的二进制表示的第index位是不是1","返回root中的节点总数","返回true。而给定树a：","返回散列值，而","返回该二叉树中所有路径和为22的路径，则返回结果应该为：","还可以用作栈、队列和双向队列。","这个字符串字面量。在","这个性质和","这种字面量的形式创建字符串，会自动地将字符串放入","这里对于start和end值的取定不太好想，需要找几个例子算一下","进制的整数。r","进制的某一位，然后组成一个","进行反编译，得到以下内容：","进行同步","进行同步。","连续子数组的最大和","迭代器。","适用场景","递归。","递归。假设当前节点head的下一个节点next后面的部分已经反转完成了，考虑如何反转当前节点。我们需要把next的next指针指向当前节点，并且将head的next指针置为null。当head为null，返回null；当head的next指针为null，说明链表中只剩下一个节点，直接返回该节点即可。","遍历","遍历数组，找到第一个当前数字比前一个数字小的数字，该数字就是数组中最小的数字。","都是接口，collect","都是用","采取的是分代缓存：","采用","采用了分段锁（segment），每个分段锁维护着几个桶（hashentry），多个线程可以同时访问不同分段锁上的桶，从而使其并发度更高（并发度就是","采用动态扩容来根据当前的","采用最大堆和最小堆作为数据容器时，插入数据的时间复杂度为o(logn)，读取中位数的时间复杂度为o(1)。","重写","重建二叉树","重新计算桶下标","链表中倒数第k个节点","链表中没有环","链表中环的入口节点","链表转红黑树","错误。","键为","键值对数量。","键值对，先计算","长度为","队列中的元素类型为int。","需要使用多重继承。","需要在几个相关的类中共享代码。","需要继承非静态和非常量字段。","需要能控制继承来的成员的访问权限，而不是都为","需要让不相关的类都实现一个方法，例如不相关的类都可以实现","需要调用","静态内部类","静态内部类不能访问外部类的非静态的变量和方法。","静态变量","静态变量和静态语句块优先于实例变量和普通语句块，静态变量和静态语句块的初始化顺序取决于它们在代码中的顺序。","静态变量：又称为类变量，也就是说这个变量属于类的，类所有的实例都共享静态变量，可以直接通过类名来访问它。静态变量在内存中只存在一份。","静态导包","静态方法","静态方法只能访问所属类的静态字段和静态方法，并且方法中不能有","静态方法在类加载的时候就存在了，它不依赖于任何实例。所以静态方法必须有实现，也就是说它不能是抽象方法。","静态语句块","静态语句块在类初始化时运行一次。","非受检异常","非静态内部类依赖于外部类的实例，而静态内部类不需要。","顺序。","顺序之后，在每次访问一个节点时，会将这个节点移到链表尾部，保证链表尾部是最近访问的节点，那么链表首部就是最近最久未使用的节点。","顺序；","顺时针打印矩阵","题目","首先在root1中找到和root2的根节点的值一样的节点，然后判断该节点所代表的子树是不是和root2具有相同的结构。","首先我们需要处理一些无效的输入，例如0","首先把","首先摒弃逐一判断1","首先注意到头结点也有可能是重复节点，也有可能被删除，因此函数的返回值应该为listnode。我们从头开始遍历整个链表，用curr指示当前节点，prev指示当前节点的前一个节点，next指示当前节点的下一个节点，如果curr和next的值不同，我们移动只需要移动curr和prev继续判断下一个节点即可；当curr和next相同，说明curr和next是重复节点，由于链表是排好序的，因此重复节点是连续的，我们找到第一个比curr大的节点并把该节点赋值给next，让prev指向next即删除了所有和curr的值相同的重复节点。注意在将prev指向next时，prev可能为null，这说明头结点是重复节点，此时我们需要把next赋值给head以作为新的头节点。","鬼雕のblog","默认为","默认的并发级别为","，以及","：是程序运行时错误，例如除","：需要用","；如果count减为0，则将num置为当前数字并将count置为1。遍历结束后如果数组中超过一半的数字确实存在，那么count"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"介绍","keywords":"","body":"鬼雕のblog\nbug没改好就不要去睡觉！\n"},"Java/":{"url":"Java/","title":"Java","keywords":"","body":""},"Java/Java基础/":{"url":"Java/Java基础/","title":"Java基础","keywords":"","body":""},"Java/Java基础/数据类型.html":{"url":"Java/Java基础/数据类型.html","title":"数据类型","keywords":"","body":"数据类型\n基本类型\n\nbyte/8位/1字节\nchar/16位/2字节\nshort/16位/2字节\nint/32位/4字节\nfloat/32位/4字节\nlong/64位/8字节\ndouble/64位/8字节\nboolean/~\n\nboolean 只有两个值：true、false，可以使用 1 bit 来存储，但是具体大小没有明确规定。JVM 会在编译时期将 boolean 类型的数据转换为 int，使用 1 来表示 true，0 表示 false。JVM 并不支持 boolean 数组，而是使用 byte 数组来表示 int 数组来表示。\n\nPrimitive Data Types\nThe Java® Virtual Machine Specification\n\n包装类型\n基本类型都有对应的包装类型，基本类型与其对应的包装类型之间的赋值使用自动装箱与拆箱完成。\nInteger x = 2;     // 装箱\nint y = x;         // 拆箱\n\n缓存池\nnew Integer(123) 与 Integer.valueOf(123) 的区别在于：\n\nnew Integer(123) 每次都会新建一个对象；\nInteger.valueOf(123) 会使用缓存池中的对象，多次调用会取得同一个对象的引用。\n\nInteger x = new Integer(123);\nInteger y = new Integer(123);\nSystem.out.println(x == y);    // false\nInteger z = Integer.valueOf(123);\nInteger k = Integer.valueOf(123);\nSystem.out.println(z == k);   // true\n\nvalueOf() 方法的实现比较简单，就是先判断值是否在缓存池中，如果在的话就直接返回缓存池的内容。\npublic static Integer valueOf(int i) {\n    if (i >= IntegerCache.low && i \n在 Java 8 中，Integer 缓存池的大小默认为 -128~127。\nstatic final int low = -128;\nstatic final int high;\nstatic final Integer cache[];\n\nstatic {\n    // high value may be configured by property\n    int h = 127;\n    String integerCacheHighPropValue =\n        sun.misc.VM.getSavedProperty(\"java.lang.Integer.IntegerCache.high\");\n    if (integerCacheHighPropValue != null) {\n        try {\n            int i = parseInt(integerCacheHighPropValue);\n            i = Math.max(i, 127);\n            // Maximum array size is Integer.MAX_VALUE\n            h = Math.min(i, Integer.MAX_VALUE - (-low) -1);\n        } catch( NumberFormatException nfe) {\n            // If the property cannot be parsed into an int, ignore it.\n        }\n    }\n    high = h;\n\n    cache = new Integer[(high - low) + 1];\n    int j = low;\n    for(int k = 0; k = 127;\n}\n\n编译器会在自动装箱过程调用 valueOf() 方法，因此多个 Integer 实例使用自动装箱来创建并且值相同，那么就会引用相同的对象。\nInteger m = 123;\nInteger n = 123;\nSystem.out.println(m == n); // true\n\n基本类型对应的缓冲池如下：\n\nboolean values true and false\nall byte values\nshort values between -128 and 127\nint values between -128 and 127\nchar in the range \\u0000 to \\u007F\n\n在使用这些基本类型对应的包装类型时，就可以直接使用缓冲池中的对象。\nStackOverflow : Differences between new Integer(123), Integer.valueOf(123) and just 123\n"},"Java/Java基础/String.html":{"url":"Java/Java基础/String.html","title":"String","keywords":"","body":"String\n概览\nString 被声明为 final，因此它不可被继承。\n在 Java 8 中，String 内部使用 char 数组存储数据。\npublic final class String\n    implements java.io.Serializable, Comparable, CharSequence {\n    /** The value is used for character storage. */\n    private final char value[];\n}\n\n在 Java 9 之后，String 类的实现改用 byte 数组存储字符串，同时使用 coder 来标识使用了哪种编码。\npublic final class String\n    implements java.io.Serializable, Comparable, CharSequence {\n    /** The value is used for character storage. */\n    private final byte[] value;\n\n    /** The identifier of the encoding used to encode the bytes in {@code value}. */\n    private final byte coder;\n}\n\nvalue 数组被声明为 final，这意味着 value 数组初始化之后就不能再引用其它数组。并且 String 内部没有改变 value 数组的方法，因此可以保证 String 不可变。\n不可变的好处\n1. 可以缓存 hash 值\n因为 String 的 hash 值经常被使用，例如 String 用做 HashMap 的 key。不可变的特性可以使得 hash 值也不可变，因此只需要进行一次计算。\n2. String Pool 的需要\n如果一个 String 对象已经被创建过了，那么就会从 String Pool，即字符串常量池中取得引用。只有 String 是不可变的，才可能使用 String Pool。\n\n3. 安全性\nString 经常作为参数，String 不可变性可以保证参数不可变。例如在作为网络连接参数的情况下如果 String 是可变的，那么在网络连接过程中，String 被改变，改变 String 对象的那一方以为现在连接的是其它主机，而实际情况却不一定是。\n4. 线程安全\nString 不可变性天生具备线程安全，可以在多个线程中安全地使用。\nProgram Creek : Why String is immutable in Java?\nString, StringBuffer and StringBuilder\n1. 可变性\n\nString 不可变\nStringBuffer 和 StringBuilder 可变\n\n2. 线程安全\n\nString 不可变，因此是线程安全的\nStringBuilder 不是线程安全的\nStringBuffer 是线程安全的，内部使用 synchronized 进行同步\n\nStackOverflow : String, StringBuffer, and StringBuilder\nString Pool\n字符串常量池（String Pool）保存着所有字符串字面量（literal strings），这些字面量在编译时期就确定。不仅如此，还可以使用 String 的 intern() 方法在运行过程中将字符串添加到 String Pool 中。\n当一个字符串调用 intern() 方法时，如果 String Pool 中已经存在一个字符串和该字符串值相等（使用 equals() 方法进行确定），那么就会返回 String Pool 中字符串的引用；否则，就会在 String Pool 中添加一个新的字符串，并返回这个新字符串的引用。\n下面示例中，s1 和 s2 采用 new String() 的方式新建了两个不同字符串，而 s3 和 s4 是通过 s1.intern() 方法取得一个字符串引用。intern() 首先把 s1 引用的字符串放到 String Pool 中，然后返回这个字符串引用。因此 s3 和 s4 引用的是同一个字符串。\nString s1 = new String(\"aaa\");\nString s2 = new String(\"aaa\");\nSystem.out.println(s1 == s2);           // false\nString s3 = s1.intern();\nString s4 = s1.intern();\nSystem.out.println(s3 == s4);           // true\n\n如果是采用 \"bbb\" 这种字面量的形式创建字符串，会自动地将字符串放入 String Pool 中。\nString s5 = \"bbb\";\nString s6 = \"bbb\";\nSystem.out.println(s5 == s6);  // true\n\n在 Java 7 之前，String Pool 被放在运行时常量池中，它属于永久代 (PermGen)。而在 Java 7，String Pool 被移到堆中。这是因为永久代的空间有限，在大量使用字符串的场景下会导致 OutOfMemoryError 错误。\n\nStackOverflow : What is String interning?\n深入解析 String#intern\n\nnew String(\"abc\")\n使用这种方式一共会创建两个字符串对象（前提是 String Pool 中还没有 \"abc\" 字符串对象）。\n\n\"abc\" 属于字符串字面量，因此编译时期会在 String Pool 中创建一个字符串对象，指向这个 \"abc\" 字符串字面量；\n而使用 new 的方式会在堆中创建一个字符串对象。\n\n创建一个测试类，其 main 方法中使用这种方式来创建字符串对象。\npublic class NewStringTest {\n    public static void main(String[] args) {\n        String s = new String(\"abc\");\n    }\n}\n\n使用 javap -verbose 进行反编译，得到以下内容：\n// ...\nConstant pool:\n// ...\n   #2 = Class              #18            // java/lang/String\n   #3 = String             #19            // abc\n// ...\n  #18 = Utf8               java/lang/String\n  #19 = Utf8               abc\n// ...\n\n  public static void main(java.lang.String[]);\n    descriptor: ([Ljava/lang/String;)V\n    flags: ACC_PUBLIC, ACC_STATIC\n    Code:\n      stack=3, locals=2, args_size=1\n         0: new           #2                  // class java/lang/String\n         3: dup\n         4: ldc           #3                  // String abc\n         6: invokespecial #4                  // Method java/lang/String.\"\":(Ljava/lang/String;)V\n         9: astore_1\n// ...\n\n在 Constant Pool 中，#19 存储字符串字面量 \"abc\"，#3 是 String Pool 的字符串对象，它指向 #19 这个字符串字面量。在 main 方法中，0: 行使用 new #2 在堆中创建一个字符串对象，并且使用 ldc #3 将 String Pool 中的字符串对象作为 String 构造函数的参数。\n以下是 String 构造函数的源码，可以看到，在将一个字符串对象作为另一个字符串对象的构造函数参数时，并不会完全复制 value 数组内容，而是都会指向同一个 value 数组。\npublic String(String original) {\n    this.value = original.value;\n    this.hash = original.hash;\n}\n\n"},"Java/Java基础/参数传递.html":{"url":"Java/Java基础/参数传递.html","title":"参数传递","keywords":"","body":"参数传递\nJava 的参数是以值传递的形式传入方法中，而不是引用传递。\n以下代码中 Dog dog 的 dog 是一个指针，存储的是对象的地址。在将一个参数传入一个方法时，本质上是将对象的地址以值的方式传递到形参中。因此在方法中使指针引用其它对象，那么这两个指针此时指向的是完全不同的对象，在一方改变其所指向对象的内容时对另一方没有影响。\npublic class Dog {\n\n    String name;\n\n    Dog(String name) {\n        this.name = name;\n    }\n\n    String getName() {\n        return this.name;\n    }\n\n    void setName(String name) {\n        this.name = name;\n    }\n\n    String getObjectAddress() {\n        return super.toString();\n    }\n}Copy to clipboardErrorCopied\npublic class PassByValueExample {\n    public static void main(String[] args) {\n        Dog dog = new Dog(\"A\");\n        System.out.println(dog.getObjectAddress()); // Dog@4554617c\n        func(dog);\n        System.out.println(dog.getObjectAddress()); // Dog@4554617c\n        System.out.println(dog.getName());          // A\n    }\n\n    private static void func(Dog dog) {\n        System.out.println(dog.getObjectAddress()); // Dog@4554617c\n        dog = new Dog(\"B\");\n        System.out.println(dog.getObjectAddress()); // Dog@74a14482\n        System.out.println(dog.getName());          // B\n    }\n}\n\n如果在方法中改变对象的字段值会改变原对象该字段值，因为改变的是同一个地址指向的内容。\nclass PassByValueExample {\n    public static void main(String[] args) {\n        Dog dog = new Dog(\"A\");\n        func(dog);\n        System.out.println(dog.getName());          // B\n    }\n\n    private static void func(Dog dog) {\n        dog.setName(\"B\");\n    }\n}\n\nStackOverflow: Is Java “pass-by-reference” or “pass-by-value”?\n"},"Java/Java基础/抽象类和接口.html":{"url":"Java/Java基础/抽象类和接口.html","title":"抽象类和接口","keywords":"","body":"抽象类与接口\n1. 抽象类\n抽象类和抽象方法都使用 abstract 关键字进行声明。抽象类一般会包含抽象方法，抽象方法一定位于抽象类中。\n抽象类和普通类最大的区别是，抽象类不能被实例化，需要继承抽象类才能实例化其子类。\npublic abstract class AbstractClassExample {\n\n    protected int x;\n    private int y;\n\n    public abstract void func1();\n\n    public void func2() {\n        System.out.println(\"func2\");\n    }\n}\n\npublic class AbstractExtendClassExample extends AbstractClassExample {\n    @Override\n    public void func1() {\n        System.out.println(\"func1\");\n    }\n}\n\n// AbstractClassExample ac1 = new AbstractClassExample(); // 'AbstractClassExample' is abstract; cannot be instantiated\nAbstractClassExample ac2 = new AbstractExtendClassExample();\nac2.func1();\n\n2. 接口\n接口是抽象类的延伸，在 Java 8 之前，它可以看成是一个完全抽象的类，也就是说它不能有任何的方法实现。\n从 Java 8 开始，接口也可以拥有默认的方法实现，这是因为不支持默认方法的接口的维护成本太高了。在 Java 8 之前，如果一个接口想要添加新的方法，那么要修改所有实现了该接口的类。\n接口的成员（字段 + 方法）默认都是 public 的，并且不允许定义为 private 或者 protected。\n接口的字段默认都是 static 和 final 的。\npublic interface InterfaceExample {\n\n    void func1();\n\n    default void func2(){\n        System.out.println(\"func2\");\n    }\n\n    int x = 123;\n    // int y;               // Variable 'y' might not have been initialized\n    public int z = 0;       // Modifier 'public' is redundant for interface fields\n    // private int k = 0;   // Modifier 'private' not allowed here\n    // protected int l = 0; // Modifier 'protected' not allowed here\n    // private void fun3(); // Modifier 'private' not allowed here\n}\n\npublic class InterfaceImplementExample implements InterfaceExample {\n    @Override\n    public void func1() {\n        System.out.println(\"func1\");\n    }\n}\n\n// InterfaceExample ie1 = new InterfaceExample(); // 'InterfaceExample' is abstract; cannot be instantiated\nInterfaceExample ie2 = new InterfaceImplementExample();\nie2.func1();\nSystem.out.println(InterfaceExample.x);\n\n3. 比较\n\n从设计层面上看，抽象类提供了一种 IS-A 关系，那么就必须满足里式替换原则 (如果子类的方法重写了父类的方法，那么子类中该方法的访问级别不允许低于父类的访问级别，这也是满足里式替换原则以确保可以使用父类实例的地方都可以使用子类实例)，即子类对象必须能够替换掉所有父类对象。而接口更像是一种 LIKE-A 关系，它只是提供一种方法实现契约，并不要求接口和实现接口的类具有 IS-A 关系。\n从使用上来看，一个类可以实现多个接口，但是不能继承多个抽象类。\n接口的字段只能是 static 和 final 类型的，而抽象类的字段没有这种限制。\n接口的成员只能是 public 的，而抽象类的成员可以有多种访问权限。\n\n4. 使用选择\n使用接口：\n\n需要让不相关的类都实现一个方法，例如不相关的类都可以实现 Compareable 接口中的 compareTo() 方法；\n需要使用多重继承。\n\n使用抽象类：\n\n需要在几个相关的类中共享代码。\n需要能控制继承来的成员的访问权限，而不是都为 public。\n需要继承非静态和非常量字段。\n\n在很多情况下，接口优先于抽象类。因为接口没有抽象类严格的类层次结构要求，可以灵活地为一个类添加行为。并且从 Java 8 开始，接口也可以有默认的方法实现，使得修改接口的成本也变的很低。\n\n深入理解 abstract class 和 interface\nWhen to Use Abstract Class and Interface\n\n"},"Java/Java基础/Object类中的方法.html":{"url":"Java/Java基础/Object类中的方法.html","title":"Object类中的方法","keywords":"","body":"Object类中的方法\n概览\npublic native int hashCode()\n\npublic boolean equals(Object obj)\n\nprotected native Object clone() throws CloneNotSupportedException\n\npublic String toString()\n\npublic final native Class getClass()\n\nprotected void finalize() throws Throwable {}\n\npublic final native void notify()\n\npublic final native void notifyAll()\n\npublic final native void wait(long timeout) throws InterruptedException\n\npublic final void wait(long timeout, int nanos) throws InterruptedException\n\npublic final void wait() throws InterruptedException\n\nequals()\n1. 等价关系\nⅠ 自反性\nx.equals(x); // true\n\nⅡ 对称性\nx.equals(y) == y.equals(x); // true\n\nⅢ 传递性\nif (x.equals(y) && y.equals(z))\n    x.equals(z); // true\n\nⅣ 一致性\n多次调用 equals() 方法结果不变\nx.equals(y) == x.equals(y); // true\n\nⅤ 与 null 的比较\n对任何不是 null 的对象 x 调用 x.equals(null) 结果都为 false\nx.equals(null); // false\n\n2. 等价与相等\n\n对于基本类型，== 判断两个值是否相等，基本类型没有 equals() 方法。\n对于引用类型，== 判断两个变量是否引用同一个对象，而 equals() 判断引用的对象是否等价。\n\nInteger x = new Integer(1);\nInteger y = new Integer(1);\nSystem.out.println(x.equals(y)); // true\nSystem.out.println(x == y);      // false\n\n3. 实现\n\n检查是否为同一个对象的引用，如果是直接返回 true；\n检查是否是同一个类型，如果不是，直接返回 false；\n将 Object 对象进行转型；\n判断每个关键域是否相等。\n\npublic class EqualExample {\n\n    private int x;\n    private int y;\n    private int z;\n\n    public EqualExample(int x, int y, int z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n\n        EqualExample that = (EqualExample) o;\n\n        if (x != that.x) return false;\n        if (y != that.y) return false;\n        return z == that.z;\n    }\n}\n\nhashCode()\nhashCode() 返回散列值，而 equals() 是用来判断两个对象是否等价。等价的两个对象散列值一定相同，但是散列值相同的两个对象不一定等价。\n在覆盖 equals() 方法时应当总是覆盖 hashCode() 方法，保证等价的两个对象散列值也相等。\n下面的代码中，新建了两个等价的对象，并将它们添加到 HashSet 中。我们希望将这两个对象当成一样的，只在集合中添加一个对象，但是因为 EqualExample 没有实现 hasCode() 方法，因此这两个对象的散列值是不同的，最终导致集合添加了两个等价的对象。\nEqualExample e1 = new EqualExample(1, 1, 1);\nEqualExample e2 = new EqualExample(1, 1, 1);\nSystem.out.println(e1.equals(e2)); // true\nHashSet set = new HashSet<>();\nset.add(e1);\nset.add(e2);\nSystem.out.println(set.size());   // 2\n\n理想的散列函数应当具有均匀性，即不相等的对象应当均匀分布到所有可能的散列值上。这就要求了散列函数要把所有域的值都考虑进来。可以将每个域都当成 R 进制的某一位，然后组成一个 R 进制的整数。R 一般取 31，因为它是一个奇素数，如果是偶数的话，当出现乘法溢出，信息就会丢失，因为与 2 相乘相当于向左移一位。\n一个数与 31 相乘可以转换成移位和减法：31*x == (x，编译器会自动进行这个优化。\n下面是对 EqualExample 中hashCode() 方法的重写，R取31，R进制整数的第一位取17，因此该R进制整数可以看作| 17 | x | y | z |，| |括起来的部分表示R进制整数中的一位。\n@Override\npublic int hashCode() {\n    int result = 17;\n    result = 31 * result + x;\n    result = 31 * result + y;\n    result = 31 * result + z;\n    return result;\n}\n\nclone()\n1. cloneable\nclone() 是 Object 的 protected 方法，它不是 public，一个类不显式去重写 clone()，其它类就不能直接去调用该类实例的 clone() 方法。\npublic class CloneExample {\n    private int a;\n    private int b;\n}\n\nCloneExample e1 = new CloneExample();\n// CloneExample e2 = e1.clone(); // 'clone()' has protected access in 'java.lang.Object'\n\n重写 clone() 得到以下实现：\npublic class CloneExample {\n    private int a;\n    private int b;\n\n    @Override\n    public CloneExample clone() throws CloneNotSupportedException {\n        return (CloneExample)super.clone();\n    }\n}\n\nCloneExample e1 = new CloneExample();\ntry {\n    CloneExample e2 = e1.clone();\n} catch (CloneNotSupportedException e) {\n    e.printStackTrace();\n}\n\njava.lang.CloneNotSupportedException: CloneExample\n\n以上抛出了 CloneNotSupportedException，这是因为 CloneExample 没有实现 Cloneable 接口。\n应该注意的是，clone() 方法并不是 Cloneable 接口的方法，而是 Object 的一个 protected 方法。Cloneable 接口只是规定，如果一个类没有实现 Cloneable 接口又调用了 clone() 方法，就会抛出 CloneNotSupportedException。\npublic class CloneExample implements Cloneable {\n    private int a;\n    private int b;\n\n    @Override\n    public Object clone() throws CloneNotSupportedException {\n        return super.clone();\n    }\n}\n\n2. 浅拷贝\n拷贝对象和原始对象的引用类型引用同一个对象。\npublic class ShallowCloneExample implements Cloneable {\n\n    private int[] arr;\n\n    public ShallowCloneExample() {\n        arr = new int[10];\n        for (int i = 0; i \nShallowCloneExample e1 = new ShallowCloneExample();\nShallowCloneExample e2 = null;\ntry {\n    e2 = e1.clone();\n} catch (CloneNotSupportedException e) {\n    e.printStackTrace();\n}\ne1.set(2, 222);\nSystem.out.println(e2.get(2)); // 222\n\n3. 深拷贝\n拷贝对象和原始对象的引用类型引用不同对象。\npublic class DeepCloneExample implements Cloneable {\n\n    private int[] arr;\n\n    public DeepCloneExample() {\n        arr = new int[10];\n        for (int i = 0; i \nDeepCloneExample e1 = new DeepCloneExample();\nDeepCloneExample e2 = null;\ntry {\n    e2 = e1.clone();\n} catch (CloneNotSupportedException e) {\n    e.printStackTrace();\n}\ne1.set(2, 222);\nSystem.out.println(e2.get(2)); // 2\n\n4. clone() 的替代方案\n使用 clone() 方法来拷贝一个对象即复杂又有风险，它会抛出异常，并且还需要类型转换。Effective Java 书上讲到，最好不要去使用 clone()，可以使用拷贝构造函数或者拷贝工厂来拷贝一个对象。\npublic class CloneConstructorExample {\n\n    private int[] arr;\n\n    public CloneConstructorExample() {\n        arr = new int[10];\n        for (int i = 0; i \nCloneConstructorExample e1 = new CloneConstructorExample();\nCloneConstructorExample e2 = new CloneConstructorExample(e1);\ne1.set(2, 222);\nSystem.out.println(e2.get(2)); // 2\n\n"},"Java/Java基础/final和static.html":{"url":"Java/Java基础/final和static.html","title":"final和static","keywords":"","body":"final和static\nfinal\n1. 数据\n声明数据为常量，可以是编译时常量，也可以是在运行时被初始化后不能被改变的常量。\n\n对于基本类型，final 使数值不变；\n对于引用类型，final 使引用不变，也就不能引用其它对象，但是被引用的对象本身是可以修改的。\n\n2. 方法\n声明方法不能被子类重写。\nprivate 方法隐式地被指定为 final，如果在子类中定义的方法和基类中的一个 private 方法签名相同，此时子类的方法不是重写基类方法，而是在子类中定义了一个新的方法。\n3. 类\n声明类不允许被继承。\nstatic\n1. 静态变量\n\n静态变量：又称为类变量，也就是说这个变量属于类的，类所有的实例都共享静态变量，可以直接通过类名来访问它。静态变量在内存中只存在一份。\n实例变量：每创建一个实例就会产生一个实例变量，它与该实例同生共死。\n\npublic class A {\n\n    private int x;         // 实例变量\n    private static int y;  // 静态变量\n\n    public static void main(String[] args) {\n        // int x = A.x;  // Non-static field 'x' cannot be referenced from a static context\n        A a = new A();\n        int x = a.x;\n        int y = A.y;\n    }\n}\n\n2. 静态方法\n静态方法在类加载的时候就存在了，它不依赖于任何实例。所以静态方法必须有实现，也就是说它不能是抽象方法。\npublic abstract class A {\n    public static void func1(){\n    }\n    // public abstract static void func2();  // Illegal combination of modifiers: 'abstract' and 'static'\n}\n\n静态方法只能访问所属类的静态字段和静态方法，并且方法中不能有 this 和 super 关键字。\npublic class A {\n\n    private static int x;\n    private int y;\n\n    public static void func1(){\n        int a = x;\n        // int b = y;  // Non-static field 'y' cannot be referenced from a static context\n        // int b = this.y;     // 'A.this' cannot be referenced from a static context\n    }\n}\n\n3. 静态语句块\n静态语句块在类初始化时运行一次。\npublic class A {\n    static {\n        System.out.println(\"123\");\n    }\n\n    public static void main(String[] args) {\n        A a1 = new A();\n        A a2 = new A();\n    }\n}\n\n123\n\n4. 静态内部类\n非静态内部类依赖于外部类的实例，而静态内部类不需要。\npublic class OuterClass {\n\n    class InnerClass {\n    }\n\n    static class StaticInnerClass {\n    }\n\n    public static void main(String[] args) {\n        // InnerClass innerClass = new InnerClass(); // 'OuterClass.this' cannot be referenced from a static context\n        OuterClass outerClass = new OuterClass();\n        InnerClass innerClass = outerClass.new InnerClass();\n        StaticInnerClass staticInnerClass = new StaticInnerClass();\n    }\n}\n\n静态内部类不能访问外部类的非静态的变量和方法。\n5. 静态导包\n在使用静态变量和方法时不用再指明 ClassName，从而简化代码，但会大大降低可读性。\nimport static com.xxx.ClassName.*\n\n6. 初始化顺序\n静态变量和静态语句块优先于实例变量和普通语句块，静态变量和静态语句块的初始化顺序取决于它们在代码中的顺序。\npublic static String staticField = \"静态变量\";\n\nstatic {\n    System.out.println(\"静态语句块\");\n}\n\npublic String field = \"实例变量\";\n\n{\n    System.out.println(\"普通语句块\");\n}\n\n最后才是构造函数的初始化。\npublic InitialOrderTest() {\n    System.out.println(\"构造函数\");\n}\n\n存在继承的情况下，初始化顺序为：\n\n父类（静态变量、静态语句块）\n子类（静态变量、静态语句块）\n父类（实例变量、普通语句块）\n父类（构造函数）\n子类（实例变量、普通语句块）\n子类（构造函数）\n\n"},"Java/Java基础/异常.html":{"url":"Java/Java基础/异常.html","title":"异常","keywords":"","body":"异常\n什么是Java异常\n异常是发生在程序执行过程中阻碍程序正常执行的错误事件。比如：用户输入错误数据、硬件故障、网络阻塞等都会导致出现异常。 只要在Java语句执行中产生了异常，一个异常对象就会被创建，JRE就会试图寻找异常处理程序来处理异常。如果有合适的异常处理程序，异常对象就会被异常处理程序接管，否则，将引发运行环境异常，JRE终止程序执行。 Java异常处理框架只能处理运行时错误，编译错误不在其考虑范围之内。\nJava异常的层级结构\nThrowable 可以用来表示任何可以作为异常抛出的类，分为两种： Error 和 Exception。其中 Error 用来表示 JVM 无法处理的错误，而Exception 分为两种：\n\n受检异常 ：需要用 try...catch... 语句捕获并进行处理，并且可以从异常中恢复；\n非受检异常 ：是程序运行时错误，例如除 0 会引发 Arithmetic Exception，此时程序崩溃并且无法恢复。\n\n\n\nJava 入门之异常处理\n\n"},"Java/Java容器/":{"url":"Java/Java容器/","title":"Java容器","keywords":"","body":"概览\n容器主要包括 Collection 和 Map 两种，Collection 和 Map 都是接口，Collection 存储着对象的集合，而 Map 存储着键值对（两个对象）的映射表。\nCollection\n\n1. Set\n\nTreeSet：基于红黑树实现，支持有序性操作，例如根据一个范围查找元素的操作。但是查找效率不如 HashSet，HashSet 查找的时间复杂度为 O(1)，TreeSet 则为 O(logN)。\nHashSet：基于哈希表实现，支持快速查找，但不支持有序性操作。并且失去了元素的插入顺序信息，也就是说使用 Iterator 遍历 HashSet 得到的结果是不确定的。\nLinkedHashSet：具有 HashSet 的查找效率，且内部使用双向链表维护元素的插入顺序。\n\n2. List\n\nArrayList：基于动态数组实现，支持随机访问。\nVector：和 ArrayList 类似，但它的每个方法都用 synchronized 关键字修饰，因此是线程安全的。\nLinkedList：基于双向链表实现，只能顺序访问，但是可以快速地在链表中间插入和删除元素。不仅如此，LinkedList 还可以用作栈、队列和双向队列。\n\n3. Queue\n\nLinkedList：可以用它来实现队列或双向队列。\nPriorityQueue：基于堆结构实现，可以用它来实现优先队列。\n\nMap\n\n\nTreeMap：基于红黑树实现。\nHashMap：基于哈希表实现。\nHashTable：和 HashMap 类似，但它是线程安全的，这意味着同一时刻多个线程可以同时写入 HashTable 并且不会导致数据不一致。它是遗留类，不应该去使用它。现在可以使用 ConcurrentHashMap 来支持线程安全，并且 ConcurrentHashMap 的效率会更高，因为 ConcurrentHashMap 引入了分段锁。\nLinkedHashMap：使用双向链表来维护元素的顺序，顺序为插入顺序或者最近最少使用（LRU）顺序。\n\n"},"Java/Java容器/ArrayList.html":{"url":"Java/Java容器/ArrayList.html","title":"ArrayList","keywords":"","body":"ArrayList\n1. 概览\n\n实现了 RandomAccess 接口，因此支持随机访问。\n数组的默认大小为 10。\n\n2. 扩容\n添加元素时使用 ensureCapacityInternal() 方法来保证容量足够，如果不够时，需要使用 grow() 方法进行扩容，新容量的大小为 oldCapacity + (oldCapacity >> 1)，也就是旧容量的 1.5 倍。\n扩容操作需要调用 Arrays.copyOf() 把原数组整个复制到新数组中，这个操作代价很高，因此最好在创建 ArrayList 对象时就指定大概的容量大小，减少扩容操作的次数。\npublic boolean add(E e) {\n    ensureCapacityInternal(size + 1);  // Increments modCount!!\n    elementData[size++] = e;\n    return true;\n}\n\nprivate void ensureCapacityInternal(int minCapacity) {\n    if (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) {\n        minCapacity = Math.max(DEFAULT_CAPACITY, minCapacity);\n    }\n    ensureExplicitCapacity(minCapacity);\n}\n\nprivate void ensureExplicitCapacity(int minCapacity) {\n    modCount++;\n    // overflow-conscious code\n    if (minCapacity - elementData.length > 0)\n        grow(minCapacity);\n}\n\nprivate void grow(int minCapacity) {\n    // overflow-conscious code\n    int oldCapacity = elementData.length;\n    int newCapacity = oldCapacity + (oldCapacity >> 1);\n    if (newCapacity - minCapacity  0)\n        newCapacity = hugeCapacity(minCapacity);\n    // minCapacity is usually close to size, so this is a win:\n    elementData = Arrays.copyOf(elementData, newCapacity);\n}\n\n3. 删除元素\n需要调用 System.arraycopy() 将 index+1 后面的元素都复制到 index 位置上，该操作的时间复杂度为 O(N)，可以看出 ArrayList 删除元素的代价是非常高的。\npublic E remove(int index) {\n    rangeCheck(index);\n    modCount++;\n    E oldValue = elementData(index);\n    int numMoved = size - index - 1;\n    if (numMoved > 0)\n        System.arraycopy(elementData, index+1, elementData, index, numMoved);\n    elementData[--size] = null; // clear to let GC do its work\n    return oldValue;\n}\n\n4. Fail-Fast\nmodCount 用来记录 ArrayList 结构发生变化的次数。结构发生变化是指添加或者删除至少一个元素的所有操作，或者是调整内部数组的大小，仅仅只是设置元素的值不算结构发生变化。\n在进行序列化或者迭代等操作时，需要比较操作前后 modCount 是否改变，如果改变了需要抛出 ConcurrentModificationException。\nprivate void writeObject(java.io.ObjectOutputStream s)\n    throws java.io.IOException{\n    // Write out element count, and any hidden stuff\n    int expectedModCount = modCount;\n    s.defaultWriteObject();\n\n    // Write out size as capacity for behavioural compatibility with clone()\n    s.writeInt(size);\n\n    // Write out all elements in the proper order.\n    for (int i=0; i\n"},"Java/Java容器/ConcurrentHashMap.html":{"url":"Java/Java容器/ConcurrentHashMap.html","title":"ConcurrentHashMap","keywords":"","body":"ConcurrentHashMap\n1. 存储结构\nHashEntry 的结构 和 HashMap 中的 Entry 类似，唯一的区别就是其中的核心数据如 value ，以及 next 都是用 volatile 修饰的，保证了获取时的可见性。\nstatic final class HashEntry {\n    final int hash;\n    final K key;\n    volatile V value;\n    volatile HashEntry next;\n}\n\nConcurrentHashMap 和 HashMap 实现上类似，最主要的差别是 ConcurrentHashMap 采用了分段锁（Segment），每个分段锁维护着几个桶（HashEntry），多个线程可以同时访问不同分段锁上的桶，从而使其并发度更高（并发度就是 Segment 的个数）。\nSegment 继承自 ReentrantLock。\nstatic final class Segment extends ReentrantLock implements Serializable {\n\n    private static final long serialVersionUID = 2249069246763182397L;\n\n    static final int MAX_SCAN_RETRIES =\n        Runtime.getRuntime().availableProcessors() > 1 ? 64 : 1;\n\n    transient volatile HashEntry[] table;\n\n    transient int count;\n\n    transient int modCount;\n\n    transient int threshold;\n\n    final float loadFactor;\n}\n\nfinal Segment[] segments;\n\n默认的并发级别为 16，也就是说默认创建 16 个 Segment。\n\n2. size操作\n每个 Segment 维护了一个 count 变量来统计该 Segment 中的键值对个数。\n/**\n * The number of elements. Accessed only either within locks\n * or among other volatile reads that maintain visibility.\n */\ntransient int count;\n\n在执行 size 操作时，需要遍历所有 Segment 然后把 count 累计起来。\nConcurrentHashMap 在执行 size 操作时先尝试不加锁，如果连续两次不加锁操作得到的结果一致，那么可以认为这个结果是正确的。\n尝试次数使用 RETRIES_BEFORE_LOCK 定义，该值为 2，retries 初始值为 -1，因此尝试次数为 3。\n如果尝试的次数超过 3 次，就需要对每个 Segment 加锁。\n/**\n * Number of unsynchronized retries in size and containsValue\n * methods before resorting to locking. This is used to avoid\n * unbounded retries if tables undergo continuous modification\n * which would make it impossible to obtain an accurate result.\n */\nstatic final int RETRIES_BEFORE_LOCK = 2;\n\npublic int size() {\n    // Try a few times to get accurate count. On failure due to\n    // continuous async changes in table, resort to locking.\n    final Segment[] segments = this.segments;\n    int size;\n    boolean overflow; // true if size overflows 32 bits\n    long sum;         // sum of modCounts\n    long last = 0L;   // previous sum\n    int retries = -1; // first iteration isn't retry\n    try {\n        for (;;) {\n            // 超过尝试次数，则对每个 Segment 加锁\n            if (retries++ == RETRIES_BEFORE_LOCK) {\n                for (int j = 0; j  seg = segmentAt(segments, j);\n                if (seg != null) {\n                    sum += seg.modCount;\n                    int c = seg.count;\n                    if (c  RETRIES_BEFORE_LOCK) {\n            for (int j = 0; j \n3. JDK 1.8 的改动\nJDK 1.7 使用分段锁机制来实现并发更新操作，核心类为 Segment，它继承自重入锁 ReentrantLock，并发度与 Segment 数量相等。\nJDK 1.8 使用了 CAS 操作来支持更高的并发度，在 CAS 操作失败时使用内置锁 synchronized，JDK 1.7 使用分段锁机制来实现并发更新操作，核心类为 Segment，它继承自重入锁 ReentrantLock，并发度与 Segment 数量相等。\nJDK 1.8 使用了 CAS 操作来支持更高的并发度，在 CAS 操作失败时使用内置锁 synchronized，而且1.8 对synchronized 也作了很多优化。\nJDK 1.8 的实现也在链表过长时会转换为红黑树。\n"},"Java/Java容器/CopyOnWriteArrayList.html":{"url":"Java/Java容器/CopyOnWriteArrayList.html","title":"CopyOnWriteArrayList","keywords":"","body":"CopyOnWriteArrayList\n1. 读写分离\n\n写操作在一个复制的数组上进行，读操作还是在原始数组中进行，读写分离，互不影响。\n写操作需要加锁，防止并发写入时导致写入数据丢失。\n写操作结束之后需要把原始数组指向新的复制数组。\n\npublic boolean add(E e) {\n    final ReentrantLock lock = this.lock;\n    lock.lock();\n    try {\n        Object[] elements = getArray();\n        int len = elements.length;\n        Object[] newElements = Arrays.copyOf(elements, len + 1);\n        newElements[len] = e;\n        setArray(newElements);\n        return true;\n    } finally {\n        lock.unlock();\n    }\n}\n\nfinal void setArray(Object[] a) {\n    array = a;\n}\n\n@SuppressWarnings(\"unchecked\")\nprivate E get(Object[] a, int index) {\n    return (E) a[index];\n}\n\n2. 适用场景\nCopyOnWriteArrayList 在写操作的同时允许读操作，大大提高了读操作的性能，因此很适合读多写少的应用场景。\n但是 CopyOnWriteArrayList 有其缺陷：\n\n内存占用：在写操作时需要复制一个新的数组，使得内存占用为原来的两倍左右；\n数据不一致：读操作不能读取实时性的数据，因为部分写操作的数据还未同步到读数组中。\n\n所以 CopyOnWriteArrayList 不适合内存敏感以及对实时性要求很高的场景。\n"},"Java/Java容器/HashMap.html":{"url":"Java/Java容器/HashMap.html","title":"HashMap","keywords":"","body":"HashMap\n为了便于理解，以下源码分析以 JDK 1.7 为主。\n1. 存储结构\n内部包含了一个 Entry 类型的数组 table。\ntransient Entry[] table;\n\nEntry 存储着键值对。它包含了四个字段，从 next 字段我们可以看出 Entry 是一个链表。即数组中的每个位置被当成一个桶，一个桶存放一个链表。HashMap 使用拉链法来解决冲突，同一个链表中存放哈希值相同的 Entry。\n\nstatic class Entry implements Map.Entry {\n    final K key;\n    V value;\n    Entry next;\n    int hash;\n\n    Entry(int h, K k, V v, Entry n) {\n        value = v;\n        next = n;\n        key = k;\n        hash = h;\n    }\n\n    public final K getKey() {\n        return key;\n    }\n\n    public final V getValue() {\n        return value;\n    }\n\n    public final V setValue(V newValue) {\n        V oldValue = value;\n        value = newValue;\n        return oldValue;\n    }\n\n    public final boolean equals(Object o) {\n        if (!(o instanceof Map.Entry))\n            return false;\n        Map.Entry e = (Map.Entry)o;\n        Object k1 = getKey();\n        Object k2 = e.getKey();\n        if (k1 == k2 || (k1 != null && k1.equals(k2))) {\n            Object v1 = getValue();\n            Object v2 = e.getValue();\n            if (v1 == v2 || (v1 != null && v1.equals(v2)))\n                return true;\n        }\n        return false;\n    }\n\n    public final int hashCode() {\n        return Objects.hashCode(getKey()) ^ Objects.hashCode(getValue());\n    }\n\n    public final String toString() {\n        return getKey() + \"=\" + getValue();\n    }\n}\n\n2. 拉链法的工作原理\nHashMap map = new HashMap<>();\nmap.put(\"K1\", \"V1\");\nmap.put(\"K2\", \"V2\");\nmap.put(\"K3\", \"V3\");\n\n\n新建一个 HashMap，默认大小为 16；\n插入  键值对，先计算 K1 的 hashCode 为 115，使用除留余数法得到所在的桶下标 115%16=3。\n插入  键值对，先计算 K2 的 hashCode 为 118，使用除留余数法得到所在的桶下标 118%16=6。\n插入  键值对，先计算 K3 的 hashCode 为 118，使用除留余数法得到所在的桶下标 118%16=6，插在  前面。\n\n应该注意到链表的插入是以头插法方式进行的，例如上面的  不是插在  后面，而是插入在链表头部。\n查找需要分成两步进行：\n\n计算键值对所在的桶；\n在链表上顺序查找，时间复杂度显然和链表的长度成正比。\n\n\n3. put操作\npublic V put(K key, V value) {\n    if (table == EMPTY_TABLE) {\n        inflateTable(threshold);\n    }\n    // 键为 null 单独处理\n    if (key == null)\n        return putForNullKey(value);\n    int hash = hash(key);\n    // 确定桶下标\n    int i = indexFor(hash, table.length);\n    // 先找出是否已经存在键为 key 的键值对，如果存在的话就更新这个键值对的值为 value\n    for (Entry e = table[i]; e != null; e = e.next) {\n        Object k;\n        if (e.hash == hash && ((k = e.key) == key || key.equals(k))) {\n            V oldValue = e.value;\n            e.value = value;\n            e.recordAccess(this);\n            return oldValue;\n        }\n    }\n\n    modCount++;\n    // 插入新键值对\n    addEntry(hash, key, value, i);\n    return null;\n}\n\nHashMap 允许插入键为 null 的键值对。但是因为无法调用 null 的 hashCode() 方法，也就无法确定该键值对的桶下标，只能通过强制指定一个桶下标来存放。HashMap 使用第 0 个桶存放键为 null 的键值对。\nprivate V putForNullKey(V value) {\n    for (Entry e = table[0]; e != null; e = e.next) {\n        if (e.key == null) {\n            V oldValue = e.value;\n            e.value = value;\n            e.recordAccess(this);\n            return oldValue;\n        }\n    }\n    modCount++;\n    addEntry(0, null, value, 0);\n    return null;\n}\n\n使用链表的头插法，也就是新的键值对插在链表的头部，而不是链表的尾部。\nvoid addEntry(int hash, K key, V value, int bucketIndex) {\n    if ((size >= threshold) && (null != table[bucketIndex])) {\n        resize(2 * table.length);\n        hash = (null != key) ? hash(key) : 0;\n        bucketIndex = indexFor(hash, table.length);\n    }\n\n    createEntry(hash, key, value, bucketIndex);\n}\n\nvoid createEntry(int hash, K key, V value, int bucketIndex) {\n    Entry e = table[bucketIndex];\n    // 头插法，链表头部指向新的键值对\n    table[bucketIndex] = new Entry<>(hash, key, value, e);\n    size++;\n}\n\nEntry(int h, K k, V v, Entry n) {\n    value = v;\n    next = n;\n    key = k;\n    hash = h;\n}\n\n4. 确定桶下标\n很多操作都需要先确定一个键值对所在的桶下标。\nint hash = hash(key);\nint i = indexFor(hash, table.length);\n\n4.1 计算hash值\nfinal int hash(Object k) {\n    int h = hashSeed;\n    if (0 != h && k instanceof String) {\n        return sun.misc.Hashing.stringHash32((String) k);\n    }\n\n    h ^= k.hashCode();\n\n    // This function ensures that hashCodes that differ only by\n    // constant multiples at each bit position have a bounded\n    // number of collisions (approximately 8 at default load factor).\n    h ^= (h >>> 20) ^ (h >>> 12);\n    return h ^ (h >>> 7) ^ (h >>> 4);\n}\n\npublic final int hashCode() {\n    return Objects.hashCode(key) ^ Objects.hashCode(value);\n}\n\n4.2 取模\n令 x = 1\nx   : 00010000\nx-1 : 00001111\n令一个数 y 与 x-1 做与运算，可以去除 y 位级表示的第 4 位以上数：\ny       : 10110010\nx-1     : 00001111\ny&(x-1) : 00000010\n这个性质和 y 对 x 取模效果是一样的：\ny   : 10110010\nx   : 00010000\ny%x : 00000010\n我们知道，位运算的代价比求模运算小的多，因此在进行这种计算时用位运算的话能带来更高的性能。\n确定桶下标的最后一步是将 key 的 hash 值对桶个数取模：hash%capacity，如果能保证 capacity 为 2 的 n 次方，那么就可以将这个操作转换为位运算。\nstatic int indexFor(int h, int length) {\n    return h & (length-1);\n}\n\n5. 扩容\n设 HashMap 的 table 长度为 M，需要存储的键值对数量为 N，如果哈希函数满足均匀性的要求，那么每条链表的长度大约为 N/M，因此平均查找次数的复杂度为 O(N/M)。\n为了让查找的成本降低，应该尽可能使得 N/M 尽可能小，因此需要保证 M 尽可能大，也就是说 table 要尽可能大。HashMap 采用动态扩容来根据当前的 N 值来调整 M 值，使得空间效率和时间效率都能得到保证。\n和扩容相关的参数主要有：capacity、size、threshold 和 load_factor。\n\n\n\n参数\n含义\n\n\n\n\ncapacity\ntable 的容量大小，默认为 16。需要注意的是 capacity 必须保证为 2 的 n 次方。\n\n\nsize\n键值对数量。\n\n\nthreshold\nsize 的临界值，当 size 大于等于 threshold 就必须进行扩容操作。\n\n\nloadFactor\n装载因子，table 能够使用的比例，threshold = capacity * loadFactor。\n\n\n\nstatic final int DEFAULT_INITIAL_CAPACITY = 16;\n\nstatic final int MAXIMUM_CAPACITY = 1 \n从下面的添加元素代码中可以看出，当需要扩容时，令 capacity 为原来的两倍。\nvoid addEntry(int hash, K key, V value, int bucketIndex) {\n    Entry e = table[bucketIndex];\n    table[bucketIndex] = new Entry<>(hash, key, value, e);\n    if (size++ >= threshold)\n        resize(2 * table.length);\n}\n\n扩容使用 resize() 实现，需要注意的是，扩容操作同样需要把 oldTable 的所有键值对重新插入 newTable 中，因此这一步是很费时的。\nvoid resize(int newCapacity) {\n    Entry[] oldTable = table;\n    int oldCapacity = oldTable.length;\n    if (oldCapacity == MAXIMUM_CAPACITY) {\n        threshold = Integer.MAX_VALUE;\n        return;\n    }\n    Entry[] newTable = new Entry[newCapacity];\n    transfer(newTable);\n    table = newTable;\n    threshold = (int)(newCapacity * loadFactor);\n}\n\nvoid transfer(Entry[] newTable) {\n    Entry[] src = table;\n    int newCapacity = newTable.length;\n    for (int j = 0; j  e = src[j];\n        if (e != null) {\n            src[j] = null;\n            do {\n                Entry next = e.next;\n                int i = indexFor(e.hash, newCapacity);\n                e.next = newTable[i];\n                newTable[i] = e;\n                e = next;\n            } while (e != null);\n        }\n    }\n}\n\n6. 扩容-重新计算桶下标 (*)\n在进行扩容时，需要把键值对重新放到对应的桶上。HashMap 使用了一个特殊的机制，可以降低重新计算桶下标的操作。\n假设原数组长度 capacity 为 16，扩容之后 new capacity 为 32：\ncapacity     : 00010000\nnew capacity : 00100000\n\n对于一个 Key，\n\n它的哈希值如果在第 5 位上为 0，那么取模得到的结果和之前一样；\n如果为 1，那么得到的结果为原来的结果 +16。\n\n7. 计算数组容量\nHashMap 构造函数允许用户传入的容量不是 2 的 n 次方，因为它可以自动地将传入的容量转换为 2 的 n 次方。\n先考虑如何求一个数的掩码，对于 10010000，它的掩码为 11111111，可以使用以下方法得到：\nmask |= mask >> 1    11011000    // >> 先于 |= 执行\nmask |= mask >> 2    11111110\nmask |= mask >> 4    11111111\nmask+1 是大于原始数字的最小的 2 的 n 次方。\nnum     10010000\nmask+1 100000000\n以下是 HashMap 中计算数组容量的代码：\nstatic final int tableSizeFor(int cap) {\n    int n = cap - 1;    // 不过这里为什么要 cap - 1 呢？\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    return (n = MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;\n}\n\n8. 链表转红黑树\n从 JDK 1.8 开始，一个桶存储的链表长度大于 8 时会将链表转换为红黑树。\n9. 和HashTable的比较\n\nHashTable 使用 synchronized 来进行同步。\n\nHashMap 可以插入键为 null 的 Entry。\n\nHashMap 的迭代器是 fail-fast 迭代器。\n\nHashMap 不能保证随着时间的推移 Map 中的元素次序是不变的。\n\n\n"},"Java/Java容器/LinkedHashMap.html":{"url":"Java/Java容器/LinkedHashMap.html","title":"LinkedHashMap","keywords":"","body":"LinkedHashMap\n1. 存储结构\n继承自 HashMap，因此具有和 HashMap 一样的快速查找特性。\npublic class LinkedHashMap extends HashMap implements Map\n\n内部维护了一个双向链表，用来维护插入顺序或者 LRU 顺序。\n/**\n * The head (eldest) of the doubly linked list.\n */\ntransient LinkedHashMap.Entry head;\n\n/**\n * The tail (youngest) of the doubly linked list.\n */\ntransient LinkedHashMap.Entry tail;\n\naccessOrder 决定了顺序，默认为 false，此时维护的是插入顺序，当设置为 true 时，表示维护的是 LRU 顺序。\nfinal boolean accessOrder;\n\nLinkedHashMap 最重要的是以下用于维护顺序的函数，它们会在 put、get 等方法中调用。\nvoid afterNodeAccess(Node p) { }\nvoid afterNodeInsertion(boolean evict) { }\n\n2. afterNodeAccess()\n当一个节点被访问时，如果 accessOrder 为 true，则会将该节点移到链表尾部。也就是说指定为 LRU 顺序之后，在每次访问一个节点时，会将这个节点移到链表尾部，保证链表尾部是最近访问的节点，那么链表首部就是最近最久未使用的节点。\nvoid afterNodeAccess(Node e) { // move node to last\n    LinkedHashMap.Entry last;\n    if (accessOrder && (last = tail) != e) {\n        LinkedHashMap.Entry p =\n            (LinkedHashMap.Entry)e, b = p.before, a = p.after;\n        p.after = null;\n        if (b == null)\n            head = a;\n        else\n            b.after = a;\n        if (a != null)\n            a.before = b;\n        else\n            last = b;\n        if (last == null)\n            head = p;\n        else {\n            p.before = last;\n            last.after = p;\n        }\n        tail = p;\n        ++modCount;\n    }\n}\n\n3. afterNodeInsertion()\n在 put 等操作之后执行，当 removeEldestEntry() 方法返回 true 时会移除最晚的节点，也就是链表首部节点 first。\nevict 只有在构建 Map 的时候才为 false，在这里为 true。\nvoid afterNodeInsertion(boolean evict) { // possibly remove eldest\n    LinkedHashMap.Entry first;\n    if (evict && (first = head) != null && removeEldestEntry(first)) {\n        K key = first.key;\n        removeNode(hash(key), key, null, false, true);\n    }\n}\n\nremoveEldestEntry() 默认为 false，如果需要让它为 true，需要继承 LinkedHashMap 并且覆盖这个方法的实现，这在实现 LRU 的缓存中特别有用，通过移除最近最久未使用的节点，从而保证缓存空间足够，并且缓存的数据都是热点数据。\nprotected boolean removeEldestEntry(Map.Entry eldest) {\n    return false;\n}\n\n4. LRU缓存\n以下是使用 LinkedHashMap 实现的一个 LRU 缓存：\n\n设定最大缓存空间 MAX_ENTRIES 为 3；\n使用 LinkedHashMap 的构造函数将 accessOrder 设置为 true，开启 LRU 顺序；\n覆盖 removeEldestEntry() 方法实现，在节点多于 MAX_ENTRIES 就会将最近最久未使用的数据移除。\n\nclass LRUCache extends LinkedHashMap {\n    private static final int MAX_ENTRIES = 3;\n\n    protected boolean removeEldestEntry(Map.Entry eldest) {\n        return size() > MAX_ENTRIES;\n    }\n\n    LRUCache() {\n        super(MAX_ENTRIES, 0.75f, true);\n    }\n}\n\npublic static void main(String[] args) {\n    LRUCache cache = new LRUCache<>();\n    cache.put(1, \"a\");\n    cache.put(2, \"b\");\n    cache.put(3, \"c\");\n    cache.get(1);\n    cache.put(4, \"d\");\n    System.out.println(cache.keySet());\n}\n\n"},"Java/Java容器/LinkedList.html":{"url":"Java/Java容器/LinkedList.html","title":"LinkedList","keywords":"","body":"LinkedList\n1. 概览\n基于双向链表实现，使用 Node 存储链表节点信息。\nprivate static class Node {\n    E item;\n    Node next;\n    Node prev;\n}\n\n每个链表存储了 first 和 last 指针：\ntransient Node first;\ntransient Node last;\n\n\n2. 与ArrayList的比较\n\nArrayList 基于动态数组实现，LinkedList 基于双向链表实现；\nArrayList 支持随机访问，LinkedList 不支持；\nLinkedList 在任意位置添加删除元素更快。\n\n"},"Java/Java容器/Vector.html":{"url":"Java/Java容器/Vector.html","title":"Vector","keywords":"","body":"Vector\n1. 同步\n它的实现与 ArrayList 类似，但是使用了 synchronized 进行同步。\npublic synchronized boolean add(E e) {\n    modCount++;\n    ensureCapacityHelper(elementCount + 1);\n    elementData[elementCount++] = e;\n    return true;\n}\n\npublic synchronized E get(int index) {\n    if (index >= elementCount)\n        throw new ArrayIndexOutOfBoundsException(index);\n\n    return elementData(index);\n}\n\n2. 与ArrayList的比较\n\nVector 是同步的，因此开销就比 ArrayList 要大，访问速度更慢。最好使用 ArrayList 而不是 Vector，因为同步操作完全可以由程序员自己来控制；\nVector 每次扩容请求其大小的 2 倍空间，而 ArrayList 是 1.5 倍。\n\n3. 替代方案\n可以使用 Collections.synchronizedList(); 得到一个线程安全的 ArrayList。\nList list = new ArrayList<>();\nList synList = Collections.synchronizedList(list);\n\n也可以使用 concurrent 并发包下的 CopyOnWriteArrayList 类。\nList list = new CopyOnWriteArrayList<>();\n\n"},"Java/Java容器/WeakHashMap.html":{"url":"Java/Java容器/WeakHashMap.html","title":"WeakHashMap","keywords":"","body":"WeakHashMap\n1. 存储结构\nWeakHashMap 的 Entry 继承自 WeakReference，被 WeakReference 关联的对象在下一次垃圾回收时会被回收 (而HashMap 中由于每个元素都有一个桶去引用，因此不会被垃圾回收器回收)。\nWeakHashMap 主要用来实现缓存，通过使用 WeakHashMap 来引用缓存对象，由 JVM 对这部分缓存进行回收。\nprivate static class Entry extends WeakReference implements Map.Entry\n\n2. Tomcat 中的 ConcurrentCache (*)\nTomcat 中的 ConcurrentCache 使用了 WeakHashMap 来实现缓存功能。\nConcurrentCache 采取的是分代缓存：\n\n经常使用的对象放入 eden 中，eden 使用 ConcurrentHashMap 实现，不用担心会被回收（伊甸园）；\n不常用的对象放入 longterm，longterm 使用 WeakHashMap 实现，这些老对象会被垃圾收集器回收。\n当调用 get() 方法时，会先从 eden 区获取，如果没有找到的话再到 longterm 获取，当从 longterm 获取到就把对象放入 eden 中，从而保证经常被访问的节点不容易被回收。\n当调用 put() 方法时，如果 eden 的大小超过了 size，那么就将 eden 中的所有对象都放入 longterm 中，利用虚拟机回收掉一部分不经常使用的对象。\n\npublic final class ConcurrentCache {\n\n    private final int size;\n\n    private final Map eden;\n\n    private final Map longterm;\n\n    public ConcurrentCache(int size) {\n        this.size = size;\n        this.eden = new ConcurrentHashMap<>(size);\n        this.longterm = new WeakHashMap<>(size);\n    }\n\n    public V get(K k) {\n        V v = this.eden.get(k);\n        if (v == null) {\n            v = this.longterm.get(k);\n            if (v != null)\n                this.eden.put(k, v);\n        }\n        return v;\n    }\n\n    public void put(K k, V v) {\n        if (this.eden.size() >= size) {\n            this.longterm.putAll(this.eden);\n            this.eden.clear();\n        }\n        this.eden.put(k, v);\n    }\n}\n\n"},"JianZhiOffer/":{"url":"JianZhiOffer/","title":"剑指offer","keywords":"","body":"剑指offer\n终于刷完《剑指offer》啦！！！这里整理一下自己的题解。原书中的代码是用C++实现的，由于自己对Java更熟悉一些，因此这里我选择用Java实现。在刷的过程中，除了参考并用Java再现了书上的解法外，对于一些题目我也补充了一些我在其他地方，比如LeetCode，《算法竞赛入门经典》等看到的一些比较有意思的解法，比如对于“两个链表的第一个公共节点”这道题，用一个“两次迭代”的解法要比书上的解法更加直观，效率更高，对于“正则表达式匹配”这道题，书上的解法对于一些字符串长度很长的case效果会很差，而选用一种动态规划的方法则会大大提升程序的性能。此外，对于“数组中出现次数超过一半的数字”这道题，在使用书上第一种解法的时候要注意partition函数的选取。如果在partition函数中每次只选取第一个元素作为基准元素，那么在某些数组中的重复数字比较多的case下可能会产生死循环。为了避免产生死循环，我们应该随机地选取基准元素。\n虽然刷是刷了一遍，但是自我感觉对于某些题目的理解还是不够深，等以后有时间了再刷一遍吧！^_^\n"},"JianZhiOffer/Array/":{"url":"JianZhiOffer/Array/","title":"Array","keywords":"","body":""},"JianZhiOffer/Array/把数组排成最小的数.html":{"url":"JianZhiOffer/Array/把数组排成最小的数.html","title":"把数组排成最小的数","keywords":"","body":"题目\n输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。例如输入数组{3, 32, 321}，则打印出这三个数字能排成的最小数字为321323。\n思路\n自定义比较规则，对于m和n两个数字，如果mn \npublic String PrintMinNumber(int[] nums) {\n    if (nums == null || nums.length == 0) return \"\";\n    String[] strs = new String[nums.length];\n\n    // 由于需要将m,n两个数字拼接得到mn，因此这里将数组中的每个数字转换为字符串\n    for (int i = 0; i () {\n        @Override\n        public int compare(String m, String n) {\n            String combination1 = m + n;\n            String combination2 = n + m;\n            return combination1.compareTo(combination2);\n        }\n    });\n    StringBuilder sb = new StringBuilder();\n    for (String str : strs) {\n        sb.append(str);\n    }\n    return sb.toString();\n}\n\n"},"JianZhiOffer/Array/丑数.html":{"url":"JianZhiOffer/Array/丑数.html","title":"丑数","keywords":"","body":"题目\n把只包含质因子2, 3和5的数称作丑数 Ugly Number。例如6, 8都是丑数，但14不是，因为它包含质因子7。 习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第n个丑数。约定1是第一个丑数。\n思路\n首先摒弃逐一判断1 - n中每个数是不是丑数的方法，因为那样对每个数即使是非丑数都要进行求余和除法的操作，时间效率很低。可以事先求出1 - n的每个丑数并将其排好序存在一个数组里，例如[1, 2, 3, 4, 5, 6, 8, ...]。假设当前数组中最大的丑数是M，小于M的丑数已经求出，我们需要求出M的下一个丑数是多少。我们可以将M之前的丑数分别 * 2，找到第一个大于M的数，对于3和5同理，然后再从2, 3, 5中找到一个最小的数作为下一个丑数。但是这样需要把M之前的所有丑数都乘以2, 3, 5，其实这并不是必须的，由于数组是排好序的，对于乘以2而言，数组中肯定存在一个数T2，在它之前的丑数乘以2都小于已有的最大丑数，而它之后的丑数乘以2又太大，我们只需要记录这个丑数的位置并且在每次求出当前数组的最大丑数时更新这个T2即可。对于3, 5同理。\npublic int getUglyNumber(int n) {\n    if (n \n"},"JianZhiOffer/Array/和为s的两个数字.html":{"url":"JianZhiOffer/Array/和为s的两个数字.html","title":"和为s的两个数字","keywords":"","body":"题目\n输入一个递增排序的数组和一个数字s，在数组中查找两个数，使得他们的和正好是s。如果有多对数字的和等于S，输出任意一对即可。例如输入数组[1, 2, 4, 7, 11, 15]和数字15，输出[4, 11]。\n思路\n由于数组是递增排序的，初始时用lo指示数组的第一个数，hi指示数组的最后一个数，当array[lo] + array[hi] sum时，减小hi；当array[lo] + array[hi] == sum时，即找到了这两个数。\npublic List findNumbersWithSum(int[] nums, int s) {\n    if (nums == null || nums.length == 0 || s ();\n    List result = new ArrayList<>();\n    int lo = 0;\n    int hi = nums.length - 1;\n\n    while (lo \n扩展\n和为s的连续正数序列。输入一个正数sum，打印出所有和为s的连续正数序列（至少含有两个数）。例如输入15，由于1 + 2 + 3 + 4 + 5 = 4 + 5 + 6 = 7 + 8 = 15，所以结果打印出3个连续序列1 - 5, 4 - 6, 7 - 8。\n思路\n我们可以用small和big两个指针指示正数序列，small指示序列的第一个数，big指示序列的最后一个数。初始时small置为1，big置为2，然后，我们判断当前序列的和是大于还是小于sum：如果小于sum，我们增大big以让序列包含更多的数；如果小于sum，我们增大small以减小序列的和；如果等于sum我们则将当前序列打印出来。由于序列至少需要包含2个数，因此small至多只能增加到(1 + s) / 2。\npublic List> findContinuousSequence(int sum) {\n    if (sum ();\n    List> result = new ArrayList<>();\n    int small = 1;\n    int big = 2;\n    int mid = (1 + sum) / 2;\n    int currSum = small + big;\n\n    while (small > result) {\n    List temp = new ArrayList<>();\n    for (int i = small; i \n"},"JianZhiOffer/Array/数值的整数次方.html":{"url":"JianZhiOffer/Array/数值的整数次方.html","title":"数值的整数次方","keywords":"","body":"题目\n给定一个double类型的浮点数base和int类型的整数exp。求base的exp次方。\n思路\n首先我们需要处理一些无效的输入，例如0 ^ -1。之后我们需要判断exp是否为负数，如果exp为负数，在我们求出res之后还要求其倒数。在exp不为负数的前提下我们调用helper()来求base的exp次方。虽然我们可以采用连乘的方法去求，但那不是最优的。这里我们采用递归的方法去求。例如2 ^ 4可以看成是(2 ^ 2)  (2 ^ 2)，而2 ^ 2可以看成是(2 ^ 1)  (2 ^ 1)，以此类推，注意当exp为奇数时，例如当exp = 5时，5 / 2只能得到2，所以此时我们还要再乘一个base。\npublic double Power(double base, int exp) {\n//    if (isEqual(base, 0.0) && exponent \n"},"JianZhiOffer/Array/数组中出现次数超过一半的数字.html":{"url":"JianZhiOffer/Array/数组中出现次数超过一半的数字.html","title":"数组中出现次数超过一半的数字","keywords":"","body":"题目\n给定一个大小为n的整数数组，找到出现次数大于n/2的元素。假设数组非空并且出现次数大于n / 2的数总是存在。例如给定一个长度为9的数组[1, 2, 3, 2, 2, 2, 5, 4, 2]，由于2在数组中出现了5次，因此输出2。假设数组中出现次数大于n / 2的元素一定存在。\n思路1\n如果我们将数组按从小到大进行排序，那么数组中出现次数超过一半的数字就是数组的中位数，直接返回排序后数组中间位置的那个数即可。\npublic int majorityElement(int[] nums) {\n   if (nums == null || nums.length == 0) return 0;\n   int n = nums.length;\n   Arrays.sort(nums);\n   return nums[n / 2];\n}\n\n时间复杂度：O(NlogN)\n空间复杂度：O(1)（取决于所用的排序算法）\n思路2:\n用一个map统计数组中每个数字的出现次数，然后遍历map，找到出现次数大于n / 2的数并返回。\npublic int majorityElement(int[] nums) {\n   if (nums == null || nums.length == 0) return 0;\n   int n = nums.length;\n   Map map = new HashMap<>();\n\n   // 统计数组中每个数字的出现次数\n   for (int num : nums) {\n       map.put(num, map.getOrDefault(num, 0) + 1);\n   }\n\n   // 找到出现次数大于n/2的元素返回\n   for (Map.Entry e : map.entrySet()) {\n       if (e.getValue() > n / 2) {\n           return e.getKey();\n       }\n   }\n\n   return 0;\n}\n\n时间复杂度：O(N)\n空间复杂度：O(N)\n思路3\n下面这个方法是书中该题的第一个方法，我们称它为partition方法。它的思路是由于partition方法每次可以确定一个数在排序数组中的正确位置，因此当partition返回的值是n / 2，则找到该数；当partition返回的值小于n / 2，说明中位数在右半部分，继续在右半部分找；当partition返回的值大于n / 2，说明中位数在左半部分，继续在左半部分找。\n注意，这种方法能够得到正确结果的关键在于partition函数的设计。我们当时在学习数据结构这门课程时，都会学习快速排序，而快速排序的关键就是partition函数。partition函数的思路是：每次我们从数组中选择一个数作为基准，将数组中所有比该数小的数排在它的左边，将数组中所有比该数大的数排在它的右边。由此，我们便确定了该数在排序数组中的正确位置。但是一般的数据结构书中对于partition函数的设计默认都为将数组中第一个数作为基准，但是如果将这种partition函数应用于该题中则在某些测试用例下会产生死循环，当数组中存在大量重复元素时，partition函数返回的index可能永远不等于mid！为此我们应该采用更为科学的partition函数的设计，即在当前数组中随机选取一个数作为基准。\npublic int majorityElement(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    if (nums.length == 1) return nums[0];\n    int lo = 0;\n    int hi = nums.length - 1;\n    int mid = nums.length / 2;\n    int index = partition(nums, lo, hi);\n    while (index != mid) {\n        if (index \n时间复杂度：O(N)\n空间复杂度：O(1)\n思路4\n下面这个方法是书中该题的第一个方法。数组中有一个数字出现的次数超过数组长度的一半，也就是说它出现的次数比其他所有数字出现次数的和还要多。因此我们在遍历数组的时候用一个变量num保存当前出现次数最多的数，用另一个变量count保存它的出现次数和其他数的出现次数抵消后的值。如果当前数和num相同，则count++；如果当前数和num不同，则count--；如果count减为0，则将num置为当前数字并将count置为1。遍历结束后如果数组中超过一半的数字确实存在，那么count = 1，num即为该数。例如对于nums = [1, 2, 3, 2, 2, 2, 5, 4, 2]，1, 2中1和2的出现次数相互抵消，3, 2中3和2的出现次数相互抵消，2, 2, 5, 4中2和5, 4的出现次数相互抵消，最后num = 2，即为数组中出现次数最多的数。\npublic int majorityElement(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    if (nums.length == 1) return nums[0];\n    int num = nums[0];\n    int count = 1;\n\n    for (int i = 1; i \n时间复杂度：O(N)\n空间复杂度：O(1)\n"},"JianZhiOffer/Array/数组中的逆序对.html":{"url":"JianZhiOffer/Array/数组中的逆序对.html","title":"数组中的逆序对","keywords":"","body":"题目\n在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组,求出这个数组中的逆序对的总数P。如果前一个数字大于后一个数字，则这两个数字组成一个逆序对。输入一个数组，求出在这个数组中的逆序对的总数。例如，在数组[7, 5, 6, 4]中，一共存在5个逆序对，分别是[7, 6],[7, 5],[7, 4],[6, 4],[5, 4]。\n思路\n如果顺序遍历数组，对于每个元素向后继续遍历数组统计其逆序对的数目，那么时间复杂度是O(N^2)，显然效率很低。可以利用归并排序的思想。对于[7, 5, 6, 4]，我们可以首先可以得到[7],[5],[6],[4]这4个子数组，然后将相邻的两个子数组归并成一个数组，同时统计逆序对的数目。比如[7]和[5]归并之后得[5, 7]，逆序对数目为1；[6],[4]归并之后得[4, 6]，逆序对数目为1。接着再将[5, 7]和[4,6]进行归并并统计逆序对的数目。我们首先用一个指针i指向[5, 7]的最后一个元素7，另一个指针j指向[4, 6]的最后一个元素6，mid指针指向两个子数组中间的元素，也就是第一个数组的最后一个元素7，比较i和j指向的元素7和6，同时将较大的元素保存到一个辅助数组aux中，aux的长度等于两个数组的长度之和，我们用index指示这个辅助数组，初始时index指向aux的最后一个元素。因为7 > 6，所以7大于6前面所有的元素包括6，因此逆序对数目+ (j - mid)，之后我们将7放到aux的index处，同时i和index向前移动一个单位。接着判断5和6，因为5 \nprivate int[] aux;    // 辅助数组\n\npublic int inversePairs(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    aux = new int[nums.length];    // 一次性分配辅助数组的空间\n    return inversePairsCore(nums, 0, nums.length - 1);\n}\n\nprivate int inversePairsCore(int[] nums, int lo, int hi) {\n    // special\n    if (lo >= hi) return 0;\n\n    int mid = lo + (hi - lo) / 2;\n    int left = inversePairsCore(nums, lo, mid);    // 对左半部分数组进行排序并统计逆序对的数目\n    int right = inversePairsCore(nums, mid + 1, hi);    // 对右半部分数组进行排序并统计逆序对的数目\n\n    // 将nums[lo, ..., hi]拷贝给aux，nums用来承载排序后的结果\n    for (int i = lo; i = lo && j >= mid + 1) {\n        if (aux[i] > aux[j]) {\n            count += j - mid;\n            nums[index--] = aux[i--];\n        } else {\n            nums[index--] = aux[j--];\n        }\n    }\n    for (; i >= lo; i--) {\n        nums[index--] = aux[i];\n    }\n    for (; j >= mid + 1; j--) {\n        nums[index--] = aux[j];\n    }\n\n    return left + right + count;\n}\n\n"},"JianZhiOffer/Array/数组中重复的数字.html":{"url":"JianZhiOffer/Array/数组中重复的数字.html","title":"数组中重复的数字","keywords":"","body":"题目\n在一个长度为n的数组中，所有的数字都在0 - n的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。找出数组中任意一个重复的数字。例如如果输入长度为7的数[2, 3, 1, 0, 2, 5, 3]，那么对应的输出是重复的数字2或3。\n思路\n可以先对数组进行排序，然后从头到尾遍历数组找到重复的数字，时间复杂度为O(NlogN)。也可以用一个set保存已经扫描过的数字，如果当前数字已经包含在了set里，那么就找到了一个重复的数字，时间复杂度为O(N)，空间复杂度为O(N)。接下来我们看看能不能把空间复杂度优化为O(1)。注意到题目中说所有数字的范围都在0 - n，因此我们可以根据下标来重排这个数组。从头到尾扫描这个数组，当扫描到下标为i的数字时，首先比较这个数字（用m表示）是不是等于i，如果是，说明m已经被放在了正确的位置上，接着扫描下一个数字。如果不是，拿它和下标为m的数字进行比较，如果它和下标为m的数字相等，我们就找到了一个重复的数字（该数字在下标为i和m的位置都出现了）。如果它和下标为m的数字不等，就把第i个数字和第m个数字进行交换，把m放到它正确的位置上去。接下来重复这个过程，直到我们找到了一个重复的数字，返回true，否则，数组中没有重复数字并且算法结束后所有的数字都放置了它正确的位置上个，返回false。备注：代码中尽管有一个两重循环，但是对于每个数字最多只需要进行一次交换和一次遍历就能找到其正确的位置，因此总的时间复杂度是O(N)。\npublic int findDuplicatedNumber(int[] nums) {\n    if (nums == null || nums.length == 0) return -1;\n\n    for (int i = 0;i \n"},"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html":{"url":"JianZhiOffer/Array/调整数组顺序使奇数位于偶数前面.html","title":"调整数组顺序使奇数位于偶数前面","keywords":"","body":"题目\n输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，并保证奇数和奇数。\n思路\n用两个指针lo和hi，lo从头开始找到第一个偶数，hi从尾开始找到第一个奇数，然后交换lo和hi指示的这两个数，重复进行直到lo >= hi为止。\npublic void reOrderArray(int[] nums) {\n    if (nums == null || nums.length == 0) return;\n    int lo = 0;\n    int hi = nums.length - 1;\n    while (lo  0 && (nums[hi] & 1) == 0) {\n            hi--;\n        }\n        if (lo \n扩展\n如果要求调整后奇数和奇数，偶数和偶数之间的相对顺序保持不变，应该怎么做呢？\n可以将原数组中的奇数和偶数按照一定的顺序放入一个新数组中。先遍历一遍原数组，求出奇数和偶数的个数，确定新数组中指示奇数的下标p1和指示偶数的下标p2，然后向新数组中按照顺序放入奇数和偶数。\npublic void reOrderArray(int[] nums) {\n    if (nums == null || nums.length == 0) return;\n    int oddNum = 0;\n    int evenNum = 0;\n    for (int num : nums) {\n        if ((num & 1) == 1) {\n            oddNum++;\n        } else {\n            evenNum++;\n        }\n    }\n    int[] temp = new int[nums.length];\n    int p1 = 0;\n    int p2 = evenNum >= oddNum ? nums.length / 2 : nums.length / 2 + 1;\n    for (int num : nums) {\n        if ((num & 1) == 1) {\n            temp[p1++] = num;\n        } else {\n            temp[p2++] = num;\n        }\n    }\n    for (int i = 0; i \n"},"JianZhiOffer/Backtracking/":{"url":"JianZhiOffer/Backtracking/","title":"Backtracking","keywords":"","body":""},"JianZhiOffer/Backtracking/机器人的运动范围.html":{"url":"JianZhiOffer/Backtracking/机器人的运动范围.html","title":"机器人的运动范围","keywords":"","body":"题目\n地上有一个m行n列的方格。一个机器人从坐标(0, 0)的格子开始移动，它每次可以向左、右、上、下移动一格，但不能进入行坐标和列坐标的数位之和大于k的格子。请问问该机器人能够到达多少个格子。例如给定threshold = 5, rows = 7, cols = 7，返回21。\n思路\n回溯法。在进入一个新的格子之前先判断是否能进入，如果能进入则count++并且置访问标记为true。\n// 表示上、下、左、右4个方向\nprivate static final int[] DIR_X = {0, 0, -1, 1};\nprivate static final int[] DIR_Y = {-1, 1, 0, 0};\n\npublic int movingCount(int threshold, int rows, int cols) {\n    if (threshold = 0 && i = 0 && j  0) {\n        sum += num % 10;\n        num /= 10;\n    }\n    return sum;\n}\n\n"},"JianZhiOffer/Backtracking/矩阵中的路径.html":{"url":"JianZhiOffer/Backtracking/矩阵中的路径.html","title":"矩阵中的路径","keywords":"","body":"题目\n设计一个函数，用来判断一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。\n思路\n 一个可以用回溯法解决的典型题。首先在矩阵中任选一个格子作为路径的起点。设矩阵中的当前字符为matrix[i][j]，路径字符串的当前字符为str(curr)。如果str(curr) != matrix[i][j]，说明矩阵中的当前字符不能构成路径，需要进行回溯。如果str(curr) == matrix[i][j]，说明当前字符能够构成路径，我们继续从当前字符出发分别沿着上、下、左、右4个方向继续寻找路径中的下一个字符str(curr + 1)。此外，由于在寻找路径的过程中已经访问过的格子不能重复进入，因此我们还需要定义一个访问数组vis。\n// 表示上、下、左、右4个方向\nprivate static final int[] DIR_X = {0, 0, -1, 1};\nprivate static final int[] DIR_Y = {-1, 1, 0, 0};\n\npublic boolean hasPath(char[][] matrix, String str) {\n    if (matrix == null || matrix.length() == 0 || matrix[0].length == 0 || str == null || str.length() == 0)\n        return false;\n    int rows = matrix.length;    // 矩阵的行数\n    int cols = matrix.length[0];    // 矩阵的列数\n    for (int i = 0; i = 0 && i =0 && j \n"},"JianZhiOffer/Binary Search/":{"url":"JianZhiOffer/Binary Search/","title":"Binary Search","keywords":"","body":""},"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html":{"url":"JianZhiOffer/Binary Search/数字在排序数组中出现的次数.html","title":"数字在排序数组中出现的次数","keywords":"","body":"题目\n统计数字k在排序数组中出现的次数。例如输入数组[1, 2, 3, 3, 3, 3, 4, 5]，k = 3，输出4。\n思路\n当然，我们可以顺序遍历数组来统计k在数组中出现的次数，也可以先用二分查找找到一个k，由于k的左边和右边也有可能有k，我们从当前位置出发分别沿左，右两个方向顺序地寻找k。因为要查找的数字在长度为n的数组中有可能出现n次，所以上面两种方法的时间复杂度都是O(N)。我们来看看有没有更好的方法。\n当我们用二分查找在数组中找到一个k时，如果前面没有k了，那么这个k就是k第一次出现的位置；如果前面还有k，我们继续在前半部分中用二分查找寻找k第一次出现的位置；同理，我们可以得到k最后一次出现的位置。找到了k第一次出现的位置和最后一次出现的位置，我们就可以算出k在数组中的出现次数了。\npublic int getNumberOfK(int[] nums, int k) {\n    if (nums == null || nums.length == 0) return 0;\n    int first = getFirstK(nums, k);    // k第一次出现的位置\n    int last = getLastK(nums, k);    // k最后一次出现的位置\n    if (first > -1 && last > -1) {\n        return last - first + 1;\n    }\n    return 0;\n}\n\n// 返回k在数组中第一次出现的位置\nprivate int getFirstK(int[] nums, int k) {\n    int lo = 0;\n    int hi = nums.length - 1;\n    while (lo \n"},"JianZhiOffer/Binary Search/旋转数组的最小数字.html":{"url":"JianZhiOffer/Binary Search/旋转数组的最小数字.html","title":"旋转数组的最小数字","keywords":"","body":"题目\n把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。例如数组{3, 4, 5, 1, 2}为{1, 2, 3, 4, 5}的一个旋转，该数组的最小值为1。 NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。\n思路1\n遍历数组，找到第一个当前数字比前一个数字小的数字，该数字就是数组中最小的数字。\n时间复杂度：O(N)\npublic int minNumberInRotateArray(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    for (int i = 1; i \n思路2\n旋转之后的数组可以看做是由两个递增的子数组所构成，而这个最小的数就是这两个子数组的分界点。可以借助二分查找的思想去寻找这个最小的数。初始时用lo指示数组的第一个数，hi指示数组的最后一个数，mid指示lo和hi中间的数。如果array[mid] >= array[lo]，说明最小的数在mid和hi之间，移动lo到mid在后半数组中继续查找；如果array[mid] \n时间复杂度：O(logN)\npublic int minNumberInRotateArray(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    int lo = 0;\n    int hi = nums.length - 1;\n    while (nums[lo] >= nums[hi]) {    // 在我们的循环不变式中，lo指向前一个递增子数组，hi指向后一个递增子数组，因此这里循环条件是nums[lo] >= nums[hi]\n        if (hi - lo == 1) {\n            return nums[hi];\n        }\n        int mid = lo + (hi - lo) / 2;\n        // 当lo, hi, mid指向的数字相同时，此时无法判断mid指向的数字属于前一个子数组还是后一个子数组，此时需要用顺序遍历找到nums[lo, ..., hi]中的最小数字\n        if (nums[lo] == nums[mid] && nums[mid] == nums[hi]) {\n            return helper(nums, lo, hi);\n        }\n        if (nums[mid] >= nums[lo]) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return nums[0];    // 如果数组本身已经是排好序的，第一个数字是最小的数字\n}\n\nprivate int helper(int[] nums, int lo, int hi) {\n    int min = nums[lo];\n    for (int i = lo + 1; i \n"},"JianZhiOffer/Bit Manipulation/":{"url":"JianZhiOffer/Bit Manipulation/","title":"Bit Manipulation","keywords":"","body":""},"JianZhiOffer/Bit Manipulation/二进制中1的个数.html":{"url":"JianZhiOffer/Bit Manipulation/二进制中1的个数.html","title":"二进制中1的个数","keywords":"","body":"题目\n输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。\n思路1\n由于Java中一个int类型的数有4个字节，共32位，因此循环32次，每次用n和1进行位与运算判断其最后一位是不是1，如果是1则count++，之后将最后一位移出继续判断余下的数。\npublic int numberOf1(int n) {\n    int count = 0;\n    for (int i = 0; i >= 1;\n    }\n    return count;\n}\n\n思路2\n根据“(n - 1) & n操作可以将n的二进制表示中最右边的1变成0”这个结论，我们可以写出如下代码进一步提高运算效率。\npublic int numberOf1(int n) {\n    int count = 0;\n    while (n != 0) {\n        count++;\n        n = (n - 1) & n;\n    }\n    return count;\n}\n\n"},"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html":{"url":"JianZhiOffer/Bit Manipulation/数组中只出现一次的两个数字.html","title":"数组中只出现一次的两个数字","keywords":"","body":"题目\n一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是O(N)，空间复杂度是O(1)。\n思路\n先考虑一种简单的情况，数组中只有一个数出现1次，其他数都是出现2次。我们可以从头到尾遍历数组，对每个数求异或，（因为一个数和自己异或的结果为0，因此所有出现两次的数都抵消掉了），最后得到的结果就是那个只出现一次的数。现在我们考虑数组中恰有两个数出现1次，其他数都是出现两次。首先，从头到尾遍历数组，对每个数求异或，得到数temp。在异或的过程中，由于所有出现2次的数都抵消掉了，所以temp是数组中那两个只出现1次的数异或的结果。由于这两个数不相同，所以temp肯定不为0，即temp的二进制表示中一定有一位为1。假设其第n位为1。我们根据数组中每个数的二进制中的第n位是否为1,可以把原数组分成两个数组，可知，出现2次的数一定被分到了一个数组当中。接着，我们分别对两个数组按照开始的思路求异或，即可得到两个出现1次的数。\npublic int[] findNumsAppearOnce(int[] nums) {\n    if (nums == null || nums.length == 0) return new int[]{};\n    int[] result = new int[2];\n    int temp = 0;\n\n    for (int num : nums) {\n        temp ^= num;\n    }\n    int index = findFirstBitOne(temp);\n    for (int num : nums) {\n        if (isBitOne(num, index)) {\n            result[0] ^= num;\n        } else {\n            result[1] ^= num;\n        }\n    }\n\n    return result;\n}\n\n// 返回num的二进制表示中从右向左第一个1的位置\nprivate int findFirstBitOne(int num) {\n    int index = 0;\n    for (int i = 0; i >= 1;\n        index++;\n    }\n    return index;\n}\n\n// 返回num的二进制表示的第index位是不是1\nprivate boolean isBitOne(int num, int index) {\n    return ((num >> index) & 1) == 1;\n}\n\n"},"JianZhiOffer/Dynamic Programming/":{"url":"JianZhiOffer/Dynamic Programming/","title":"Dynamic Programming","keywords":"","body":""},"JianZhiOffer/Dynamic Programming/斐波那契数列.html":{"url":"JianZhiOffer/Dynamic Programming/斐波那契数列.html","title":"斐波那契数列","keywords":"","body":"题目\n大家都知道斐波那契数列，即1, 1, 2, 3, 5, 8, ...，现在要求输入一个整数n，请你输出斐波那契数列的第n项（从0开始，第0项为0）。n \n思路1\n递归。\npublic int Fibonacci(int n) {\n    if (n == 0) return 0;\n    if (n == 1 || n == 2) return 1;\n    return Fibonacci(n -1) + Fibonacci(n - 2);\n}\n\n思路2\ndp。\npublic int Fibonacci(int n) {\n    if (n \n扩展\n一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个n级的台阶总共有多少种跳法。\n思路\ndp。我们先来分析跳上2级台阶总共有多少种跳法。可以跳2次，1次跳1级，也可以一次跳2级，这样就有2种跳法。现在假设跳上n级台阶总共有dp[n]种跳法，n级台阶从n - 1级台阶跳1次，1次跳1级得到，也可以从n - 2级台阶跳1次，1次跳2级得到，因此跳上n级台阶的跳法数等于跳上n - 1级台阶的跳法数和跳上n - 2级台阶的跳法数的和，即dp[n] = dp[n - 1] + dp[n - 2]。\npublic int jumpingStairs(int n) {\n    if (n \n"},"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html":{"url":"JianZhiOffer/Dynamic Programming/连续子数组的最大和.html","title":"连续子数组的最大和","keywords":"","body":"题目\n给定一个数组，返回它的最大连续子序列的和，子序列的长度至少为1。例如给定数组[6, -3, -2, 7, -15, 1, 2, 2]，最大的子序列为[6, -3, -2, 7]，输出8。\n思路1\n根据结论“连续子序列之和等于两个前缀和之差”，即设Si = A1 + A2 + ... + Ai，则 Ai + Ai+1 + ... + Aj = Sj - Si-1。\npublic int FindGreatestSumOfSubArray(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    int[] s = new int[nums.length];    // s[i]表示s[0, ..., i]中每个元素累加的和\n    s[0] = nums[0];\n    int result = Integer.MIN_VALUE;\n    for (int i = 1; i \n时间复杂度：O(N^2)\n思路2\ndp。dp[i]表示nums[0, ..., i]中包含nums[i]的最大连续子序列的和，状态转移方程如下：\ndp[i] = max{nums[i], dp[i - 1] + nums[i]}\npublic int FindGreatestSumOfSubArray(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    int[] dp = new int[nums.length];\n    dp[0] = nums[0];\n    int result = Integer.MIN_VALUE;\n    for (int i = 1; i \n时间复杂度：O(N)\n"},"JianZhiOffer/Dynamic Programming/正则表达式匹配.html":{"url":"JianZhiOffer/Dynamic Programming/正则表达式匹配.html","title":"正则表达式匹配","keywords":"","body":"题目\n给定一个字符串s和一个模式p，实现一个支持.和*的正则匹配。模式中的字符.表示任意一个字符，而*表示它前面的字符可以出现任意次（含0次）。在本题中，匹配是指字符串的所有字符匹配整个模式。例如字符串\"aaa\"与模式\"a.a\"和\"ab*ac*a\"匹配，但与“aa.a”和\"ab*a\"均不匹配。\n思路1\n《剑指offer》的解法。当没有*的时候，情况比较简单，我们只需要从左到右依次判断s和p的当前字符是否匹配即可。如果有*并且p中*前面的字符还和s的当前字符相同，我们分为三种情况去处理：匹配0个、匹配1个和匹配多个。\npublic boolean isMatch(String s, String p) {\n    if (s == null || p == null) return false; \n    return isMatchCore(s, p, 0, 0);\n}\n\nprivate boolean isMatchCore(String s, String p, int p1, int p2) {\n    if (p2 == p.length() && p1 == s.length()) return true;\n    if (p2 == p.length() && p1 != s.length()) return false;\n    if (p2 \n思路2\n该方法对上述方法的逻辑做了简化。首先判断s和p的当前字符是否匹配，接着看p的下一个字符是不是*，如果不是*，继续判断s和p余下的字符；如果是*，或者匹配0个，即忽略p的当前字符和*，继续看p中余下的字符和s是否匹配；要么匹配多个，即从s中去掉1个字符，判断s中余下的字符和p是否匹配。和上一个思路把匹配分为匹配0个，匹配1个，匹配多个相比，这里把匹配1个和匹配多个在逻辑上统一成匹配多个了。\npublic boolean isMatch(String s, String p) {\n    if (p.isEmpty()) return s.isEmpty();\n    boolean first_match = (!s.isEmpty() && (s.charAt(0) == p.charAt(0) || p.charAt(0) == '.'));    // 判断s的当前字符和p的当前字符是否匹配\n    if (p.length() > 1 && p.charAt(1) == '*') {    // p的下一个字符是'*'\n        return isMatch(s, p.substring(2)) ||    // 匹配0个\n            (first_match && isMatch(s.substring(1), p));    // 匹配1个或多个\n    } else {\n        return first_match && isMatch(s.substring(1), p.substring(1)); // 匹配1个\n    }\n}\n\n思路3\n上述思路的dp版本。\npublic boolean isMatch(String s, String p) {\n    if (s == null || p == null) return false;\n    boolean[][] dp = new boolean[s.length() + 1][p.length() + 1];    // dp[i][j]表示s(i:)和p(j:)是否匹配\n    dp[s.length()][p.length()] = true;    // 初始化dp，当s和p同时到达末尾时匹配成功\n    for (int i = s.length(); i >= 0; i--) {    // 注意这里i是从s.length()开始，j是从p.length()-1开始，这是因为当s为空时也需要进行判断，比如s=\"\",p=\"a*\"，s和p也是匹配的\n        for (int j = p.length - 1; j >= 0; j--) {\n            boolean first_match = (i \n"},"JianZhiOffer/LinkedList/":{"url":"JianZhiOffer/LinkedList/","title":"LinkedList","keywords":"","body":""},"JianZhiOffer/LinkedList/从尾到头打印链表.html":{"url":"JianZhiOffer/LinkedList/从尾到头打印链表.html","title":"从尾到头打印链表","keywords":"","body":"题目\n输入一个链表的头结点，从尾到头反过来打印出每个节点的值。\n思路1\n递归。\npublic void printListFromTailToHead(ListNode head) {\n    if (head == null) return;\n    printListFromTailToHead(head.next);\n    System.out.println(head.val);\n}\n\n思路2\n使用一个辅助栈即可。\npublic void printListFromTailToHead(ListNode head) {\n    if (head == null) return;\n    Stack stack = new Stack<>();\n    ListNode curr = head;\n    while (curr != null) {\n        stack.push(curr);\n        curr = curr.next;\n    }\n    while (!stack.isEmpty()) {\n        ListNode node = stack.pop();\n        System.out.println(node.val);\n    }\n}\n\n"},"JianZhiOffer/LinkedList/反转链表.html":{"url":"JianZhiOffer/LinkedList/反转链表.html","title":"反转链表","keywords":"","body":"题目\n输入一个链表，反转链表后，输出新链表的表头。\n思路1\n递归。假设当前节点head的下一个节点next后面的部分已经反转完成了，考虑如何反转当前节点。我们需要把next的next指针指向当前节点，并且将head的next指针置为null。当head为null，返回null；当head的next指针为null，说明链表中只剩下一个节点，直接返回该节点即可。\npublic ListNode reverseList(ListNode head) {\n    // special\n    if (head == null || head.next == null) return head;\n    ListNode next = head.next;\n    ListNode new_head = reverseList(next);\n    next.next = head;\n    head.next = null;\n    return new_head;\n}\n\n思路2\n循环。curr指示当前节点，prev指示当前节点的前一个节点，next指示当前节点的下一个节点。依次反转每个节点并向前移动指针。注意，反转时首先保存原链表中当前节点的下一个节点到next中，因为反转会修改curr的next指向。\npublic ListNode reverseList(ListNode head) {\n    if (head == null || head.next == null) return head;\n    ListNode curr = head;\n    ListNode prev = null;\n    while (curr != null) {\n        ListNode next = curr.next;\n        curr.next = prev;\n        prev = curr;\n        curr = next;\n    }\n    return prev;\n}\n\n"},"JianZhiOffer/LinkedList/复杂链表的复制.html":{"url":"JianZhiOffer/LinkedList/复杂链表的复制.html","title":"复杂链表的复制","keywords":"","body":"题目\n输入一个复杂链表（每个节点中有节点值以及两个指针，一个指针next指向下一个节点，另一个指针random指向链表中任意一个节点），返回结果为复制后的复杂链表的头结点。\n思路1\nMap。将复杂链表的复制分为两步，第一步，复制原链表的每个节点，并用next链接起来，同时将原节点和复制节点存到map中（原节点作为key，复制节点作为value）；第二步，设置复制链表中每个节点的random指针。遍历原链表，如果节点N的random为S，则通过Map可以在O(1)时间内找到N1和S1，设置N1.random = S1即可。\nclass RandomListNode {\n    int label;\n    RandomListNode next;\n    RandomListNode random;\n\n    RandomListNode (int label) {\n        this.label = label;\n    }\n}\n\npublic RandomListNode clone (RandomListNode pHead) {\n    if (pHead == null) return null;\n    Map map = new HashMap<>();\n    //复制原链表的每个节点，并用next链接起来\n    RandomListNode curr = pHead;    // 原链表的当前节点\n    RandomListNode clonedHead = null;    // 复制链表的头结点\n    RandomListNode clonedCurr = null;    // 复制链表的当前节点\n    while (curr != null) {\n        RandomListNode clonedNode = new RandomListNode(curr.label);\n        map.put(curr, clonedNode);\n        if (clonedHead == null) {\n            clonedHead = clonedCurr = clonedNode;\n        } else {\n            clonedCurr.next = clonedNode;\n            clonedCurr = clonedCurr.next;\n        }\n        curr = curr.next;\n    }\n    //设置复制链表的random\n    curr = pHead;\n    while (curr != null) {\n        if (curr.random != null) {\n            RandomListNode currCloned=null;\n            RandomListNode randomCloned=null;\n            if (map.containsKey(curr)) currCloned = map.get(curr);\n            if (map.containsKey(curr.random)) randomCloned = map.get(curr.random);\n            if (currCloned != null) currCloned.random = randomCloned;\n        }\n        curr = curr.next;\n    }\n    return clonedHead;\n}\n\n时间复杂度：O(N)。\n空间复杂度：O(N)。\n思路2\n同样是用空间换时间的思想，但是不同于上一个思路中用额外的存储空间存储节点和节点的random之间的映射关系，这次我们直接在原链表上完成复制。\n我们将复杂链表的复制过程分为三个步骤：\n\n复制链表中的每个节点并将复制的节点直接链接到原节点的后面，此时不设置每个节点的random。\n\n设置复制节点的random。若N的random是S，则N1的random就是S的下一个节点S1。\n\n此时该链表中奇数位置的节点构成原链表，偶数位置的节点构成复制链表，将其拆分出来即可。 \n\npublic RandomListNode clone (RandomListNode pHead) {\n   if (pHead == null) return null;\n   cloneNodes(pHead);\n   connectNodes(pHead);\n   return reConnectNodes(pHead);\n}\n\n// 复制链表中每个节点，将复制节点直接链接到原节点的后面\nprivate void cloneNodes (RandomListNode head) {\n   RandomListNode curr = head;\n   while (curr != null) {\n       RandomListNode clonedNode = new RandomListNode(curr.label);\n       clonedNode.next = curr.next;\n       clonedNode.random = null;\n       curr.next = clonedNode;\n       curr = clonedNode.next;\n   }\n}\n\n// 设置复制节点的random\nprivate void connectNodes (RandomListNode head) {\n   RandomListNode curr = head;\n   while (curr != null) {\n       RandomListNode clonedNode = curr.next;\n       if (curr.random != null) {\n           clonedNode.random = curr.random.next;\n       }\n       curr = clonedNode.next;\n   }\n}\n\n// 将复制后的链表拆分成原链表和复制链表并返回复制链表的头结点\nprivate RandomListNode reConnectNodes (RandomListNode head) {\n   RandomListNode curr = head;\n   RandomListNode clonedHead = null;\n   RandomListNode clonedCurr = null;\n   // 设置clonedHead\n   if (curr != null) {\n       clonedHead = clonedCurr = curr.next;\n       curr.next = clonedCurr.next;\n       curr = curr.next;\n   }\n   while (curr != null) {\n       clonedCurr.next = curr.next;\n       clonedCurr = clonedCurr.next;\n       curr.next = clonedCurr.next;\n       curr = curr.next;\n   }\n   return clonedHead;\n}\n\n时间复杂度：O(N)。\n空间复杂度：O(1)。\n"},"JianZhiOffer/LinkedList/合并两个排序的链表.html":{"url":"JianZhiOffer/LinkedList/合并两个排序的链表.html","title":"合并两个排序的链表","keywords":"","body":"题目\n输入两个单调递增的链表，输出两个链表合成后的链表，合成后的链表也要求单调递增。\n思路\n每次选取head1和head2中的较小者作为当前结点，之后递归构造下一个节点。\npublic ListNode merge(ListNode head1, ListNode head2) {\n    if (head1 == null) return head2;\n    if (head2 == null) return head1;\n    ListNode curr = null;\n    if (head1.val \n"},"JianZhiOffer/LinkedList/链表中倒数第k个节点.html":{"url":"JianZhiOffer/LinkedList/链表中倒数第k个节点.html","title":"链表中倒数第k个节点","keywords":"","body":"题目\n输入一个链表，输出该链表中倒数第k个结点。\n思路1\n先遍历一遍链表，将每一个节点都压入一个stack中，将stack pop k次即可得到倒数第k个节点。注意，这种方法要求k不能大于链表的长度，为此需要先求出链表的长度。\npublic ListNode FindKthToTail(ListNode head, int k) {\n    if (head == null || k  length(head)) return null;\n    Stack stack = new Stack<>();\n    ListNode curr = head;\n    while (curr != null) {\n        stack.push(curr);\n        curr = curr.next;\n    }\n    for (int i = 0; i \n思路2\n用一个slow指针和一个fast指针，fast从表头开始先向后移动k - 1个节点，之后两个指针再一起移动，当fast移动到链表的最后一个节点时，slow指示的刚好是链表中倒数第k个节点\npublic ListNode FindKthToTail(ListNode head, int k) {\n    if (head == null || k \n"},"JianZhiOffer/LinkedList/链表中环的入口节点.html":{"url":"JianZhiOffer/LinkedList/链表中环的入口节点.html","title":"链表中环的入口节点","keywords":"","body":"题目\n一个链表中包含环，找到环的入口节点。\n思路1\n从头开始遍历链表，用一个set保存已经走过的节点。当当前节点已经存在于set中时，说明链表中有环并且当前节点就是环的入口节点。\n代码略。\n思路2：\n我们先来分析这样一个问题：如何判断一个链表中是否存在环？我们可以让一个快指针fast和一个慢指针slow同时从链表的第一个节点开始向前走，fast每次走2步，slow每次走1步。如果两个指针相遇则说明链表中存在环，如果fast走到链表的末尾两个指针还没有相遇则说明链表中不存在环。现在我们再设置一个指针p从链表的第一个节点开始向前走，每次走1步，slow从相遇的地方继续向前走，每次也走1步，当p和slow相遇时，相遇节点就是环的入口节点。\n证明：设entry为环的入口节点。当slow和fast相遇时，设slow走过的路程为A + B，其中A为head到entry的路程，B为slow在环中走过的路程，N为环的长度。由于相遇时fast比slow多走了一圈，因此fast走过的路程为A + B + N (1)，同时由于slow每次走1步，fast每次走2步，所以fast走过的路程又可以表示为2A + 2B (2)。联立(1)和(2)得A + B=N，所以相遇节点到entry的距离和head到entry的距离是相同的。\nprivate ListNode entryNodeOfLoop(ListNode head) {\n    if (head == null || head.next == null) return null;\n    ListNode slow = head;\n    ListNode fast = head;\n    while (fast != null && fast.next != null) {\n        slow = slow.next;\n        fast = fast.next.next;\n        if (slow == fast) break;\n    }\n    if (fast == null || fast.next == null) return null;    // 链表中没有环\n    ListNode p = head;\n    while (p != slow) {\n        p = p.next;\n        slow = slow.next;\n    }\n    return p;\n}\n\n思路3\n书上的方法。定义两个指针，设环中有n个节点，先让第一个指针从链表头开始在链表上走n个单位，然后两个指针再一起走，每次走一个单位。当两个指针相遇时，相遇节点就是环的入口节点。关键是如何求出环中的节点个数。借由上一题的分析，我们可以让slow从相遇节点处继续向前走，并记录走过的节点个数，当再次回到这个节点时，即可得出环中的节点个数。\npublic ListNode entryNodeOfLoop(ListNode head) {\n   if (head == null || head.next == null) return null;\n   ListNode meetingNode = findMeetingNode(head);\n   if (meetingNode == null) return null;\n   ListNode curr = meetingNode;\n   int nodesInLoop = 1;  // 环中的节点个数\n   while (curr.next != meetingNode) {\n       curr = curr.next;\n       nodesInLoop++;\n   }\n   ListNode fast = head;\n   for (int i = 0;i \n"},"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html":{"url":"JianZhiOffer/LinkedList/两个链表的第一个公共节点.html","title":"两个链表的第一个公共节点","keywords":"","body":"题目\n输入两个链表，找出它们的第一个公共节点。\n思路1\n先求出长链表的长度len1，短链表的长度len2，两个链表的长度差diff。之后，先在长链表上走diff步，然后两个链表再一起走，直到或者两个链表中有一个为null（没有公共结点）或者找到第一个公共节点。\npublic ListNode findFirstCommonNode (ListNode head1, ListNode head2) {\n    if (head1 == null || head2 == null) return null;\n    int len1 = getLength(head1);\n    int len2 = getLength(head2);\n    ListNode curr_long = head1;\n    ListNode curr_short = head2;\n    int diff = Math.abs(len1 - len2);\n    if (len2 > len1) {\n        curr_long = head2;\n        curr_short = head1;\n    }\n\n    // 先在长链表上走diff步\n    for (int i = 0; i \n思路2\n“两次迭代”法，即通过两次迭代即可找出两个链表的第一个公共节点。用两个指针分别指示两条链表，第一次迭代时如果第一条链表的指针到达第一条链表的末尾时，将其置为第二条链表的头结点；如果第二条链表的指针到达第二条链表的末尾时，将其置为第一条链表的头结点。这样经过一轮迭代后就消除了两个链表之间的长度差，之后两个指针每次向前前进一个节点，最终到达两个链表的第一个公共节点。采用这种方法免去了分别计算两个链表长度的麻烦。\npublic ListNode findFirstCommonNode (ListNode head1, ListNode head2) {\n    if (head1 == null || head2 == null) return null;\n    ListNode curr1 = head1;\n    ListNode curr2 = head2;\n    while (curr1 != curr2) {\n        curr1 = curr1 == null ? head2 : curr1.next;\n        curr2 = curr2 == null ? head1 : curr2.next;\n    }\n    return curr1; // or return curr2;\n}\n\n"},"JianZhiOffer/LinkedList/删除链表的节点.html":{"url":"JianZhiOffer/LinkedList/删除链表的节点.html","title":"删除链表的节点","keywords":"","body":"题目\n给定单向链表的头指针和一个节点指针，定义一个函数在O(1)时间内删除该节点。输入保证要删除的节点在链表中。\n思路\n当要删除的节点node不是链表的尾节点时，我们可以先把该节点的下一个节点next的值赋给node，然后令node的next指向next的next即可。当要删除的节点是链表的尾节点时，我们就不能这么做了，需要从从链表头开始顺序地查找该节点并删除。\npublic ListNode deleteNode(ListNode head, ListNode node) {\n    if (head == null || head.next == null) return null;\n    if (node == null) return head;\n    if (node.next != null) {    // 如果node不是链表的尾节点\n        ListNode next = node.next;\n        node.val = next.val;\n        node.next = next.next;\n        next = null;    // 便于被GC发现\n    } else { // 如果node是链表的尾节点\n        ListNode curr = head;\n        while (curr.next != node) {\n            curr = curr.next;\n        }\n        curr.next = null;\n        node = null;    // 便于被GC发现\n    }\n    return head;\n}\n\n扩展1\n在一个排序的链表中，删除重复的结点。例如给定链表1->2->3->3->4->4->5，删除重复节点后的链表为1->2->5。\n思路\n首先注意到头结点也有可能是重复节点，也有可能被删除，因此函数的返回值应该为ListNode。我们从头开始遍历整个链表，用curr指示当前节点，prev指示当前节点的前一个节点，next指示当前节点的下一个节点，如果curr和next的值不同，我们移动只需要移动curr和prev继续判断下一个节点即可；当curr和next相同，说明curr和next是重复节点，由于链表是排好序的，因此重复节点是连续的，我们找到第一个比curr大的节点并把该节点赋值给next，让prev指向next即删除了所有和curr的值相同的重复节点。注意在将prev指向next时，prev可能为null，这说明头结点是重复节点，此时我们需要把next赋值给head以作为新的头节点。\npublic ListNode deleteDuplicatedNodes(ListNode head) {\n    if (head == null || head.next == null) return head;\n    ListNode prev = null;\n    ListNode curr = head;\n    while (curr != null) {\n        ListNode next = curr.next;\n        boolean isDuplicated = false;    // 指示curr和next是否是重复节点\n        if (next != null && curr.val == next.val) isDuplicated = true;\n        if (!isDuplicated) {    // 如果curr和next不是重复节点，继续判断下一个节点\n            prev = curr;\n            curr = next;\n        } else {    // 如果curr和next是重复节点，找到第一个比curr的值大的节点并将其赋值给next\n            ListNode temp = next;\n            while (temp != null && temp.val == curr.val) {\n                temp = temp.next;\n            }\n            next = temp;\n            if (prev == null) {    // 如果头节点是重复节点，将next作为新的头节点\n                head = next;\n            } else {    // 否则，将prev指向next\n                prev.next = next;\n            }\n            curr = next;\n        }\n    }\n    return head;\n}\n\n扩展2\n给定一个单链表，删除链表中所有节点值为target的节点，返回删除后链表的头节点。例如给定链表1->2->3->3->4->4->5，删除值为3的节点后的链表为1->2->4->4->5。\n思路\n大体思路同上，用prev, curr, next分别表示前一个节点，当前节点和下一个节点。遍历链表，如果当前节点的值不等于target，移动prev和curr继续判断下一个节点；否则，我们需要将prev的next指向next以删除当前节点，如果prev为null，说明头结点是需要删除的节点，将next赋给head。\npublic ListNode deleteNodes(ListNode head, int target) {\n    if (head == null) return null;\n    ListNode prev = null;\n    ListNode curr = head;\n    while (curr != null) {\n        ListNode next = curr.next;\n        if (curr.val == target) {\n            if (prev == null) {\n                head = next;\n            } else {\n                prev.next = next;\n            }\n            curr = next;\n        } else {\n            prev = curr;\n            curr = next;\n        }\n    }\n    return head;\n}\n\n"},"JianZhiOffer/Matrix/":{"url":"JianZhiOffer/Matrix/","title":"Matrix","keywords":"","body":""},"JianZhiOffer/Matrix/二维数组中的查找.html":{"url":"JianZhiOffer/Matrix/二维数组中的查找.html","title":"二维数组中的查找","keywords":"","body":"题目\n在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。\n思路\n以二维数组矩阵中右上角的数字为基准，如果该数字等于target，我们就找到了这个数；如果该数字小于target，则该数字所在行的所有数都小于target，剔除该行，即row++；如果该数字大于target，则该数字所在列的所有数字都大于target，剔除该列，即col--。\npublic boolean searchMatrix(int[][] matrix, int target) {\n    if (matrix == null || matrix.length == 0 || matrix[0].length == 0) return false;\n    int rows = matrix.length;\n    int cols = matrix[0].length;\n    int row = 0;\n    int col = cols - 1;\n    while (row = 0) {\n        if (matrix[row][col] == target) {\n            return true;\n        } else if (matrix[row][col] \n"},"JianZhiOffer/Matrix/顺时针打印矩阵.html":{"url":"JianZhiOffer/Matrix/顺时针打印矩阵.html","title":"顺时针打印矩阵","keywords":"","body":"题目\n输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。例如输入如下4  * 4矩阵：\n[\n    1, 2, 3, 4,\n    5, 6, 7, 8,\n    9, 10, 11, 12,\n    13, 14, 15, 16\n]\n输出结果为：1, 2, 3, 4, 8, 12, 16, 15, 14, 13, 9, 5, 6, 7, 11, 10。\n思路\n每次从矩阵的左上角开始一轮打印，每轮打印包括从左向右、从上向下、从右向左以及从下向上四个方向，每个方向的打印都有相应的前提条件，从上向下打印需要当前打印的矩阵至少包含两行，从右向左打印需要当前打印的矩阵至少包含两行两列，从下向上打印需要当前打印的矩阵至少包含三行两列。\npublic List printMatrix(int [][] matrix) {\n    if (matrix == null || matrix.length == 0 || matrix[0].length == 0) return new ArrayList<>();\n    List result = new ArrayList<>();\n    int rows = matrix.length;\n    int cols = matrix[0].length;\n    int start = 0;\n    while (rows > start * 2 && cols > start * 2) {\n        int endX = cols - 1 - start;\n        int endY = rows - 1 - start;\n        // 从左向右\n        for (int i = start; i = start; i--) {\n                result.add(matrix[endY][i]);\n            }\n        }\n        // 从下向上（至少要有三行两列）\n        if (start = start + 1; i--) {\n                result.add(matrix[i][start]);\n            }\n        }\n        start++;\n    }    // while\n    return result;\n}\n\n"},"JianZhiOffer/Stack & Queue & PriorityQueue/":{"url":"JianZhiOffer/Stack & Queue & PriorityQueue/","title":"Stack & Queue & PriorityQueue","keywords":"","body":""},"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html":{"url":"JianZhiOffer/Stack & Queue & PriorityQueue/包含min函数的栈.html","title":"包含min函数的栈","keywords":"","body":"题目\n定义栈的数据结构，实现一个能够得到栈中最小元素的min函数（时间复杂度应为O（1））。\n思路\n用一个辅助栈stack_min，栈顶元素记录当前栈中所有元素的最小值。入栈时，如果入栈元素num小于stack_min的栈顶元素，则同时将num加入stack_min中；出栈时，原栈和stack_min同时执行出栈。\nclass MyStack {\n    Stack stack_data = new Stack<>();\n    Stack stack_min = new Stack<>();\n\n    // 入栈\n    public void push(int num) {\n        stack_data.push(num);\n        if (stack_min.isEmpty() || num\n"},"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html":{"url":"JianZhiOffer/Stack & Queue & PriorityQueue/滑动窗口的最大值.html","title":"滑动窗口的最大值","keywords":"","body":"题目\n给定一个数组和滑动窗口的大小，请找出所有滑动窗口里的最大值。例如如果输入数组[2, 3, 4, 2, 6, 2, 5, 1]及滑动窗口的大小3，那么一共存在6个滑动窗口，它们的最大值分别是[4, 4, 6, 6, 6, 5]。\n思路\n如果采用暴力法，可以扫描每一个滑动窗口中的所有数字找出其中的最大值，如果滑动窗口的大小为k，数组的大小为n，则这种方法时间复杂度为O(kn)，显然不是最优的。实际上，一个滑动窗口可以看成是一个队列。当窗口滑动时，处于窗口的第一个数字被删除，同时在窗口的末尾添加一个新的数字。这符合队列先进先出的特性。正常情况下我们需要扫描整个队列才能找到队列中的最大数，我们看看能不能在O(1)的时间内找到队列中的最大数。我们并不把滑动窗口里的每一个数都存入队列中，而是只把有可能成为滑动窗口最大值的数存入到一个双端队列中。我们使用队列的队头保存当前滑动窗口的最大值。当把数组前k个元素加入到队列中时，由于此时窗口还没有开始滑动，我们只需要在队列中保存前k个数字中最大的数即可，此时队列的队头就是当前窗口中最大的数。当窗口开始滑动时，一方面我们需要将当前数字和队列中的数字进行比较，如果当前数字比队列中的数字大，则队列中比当前数字小的元素不可能成为窗口的最大值，将其从队列中移除，另一方面，我们需要判断代表当前窗口最大值的队头元素是否已经滑出窗口，如果已经滑出窗口，我们也需要将其进行移除。那么如何判断当前窗口是否包含一个数字呢？我们需要在队列里存入数字在数组中的下标，而不是数值。当队头元素的下标与当前处理的数字的下标之差大于等于窗口的大小时，说明这个数字已经从窗口中滑出了。在实现上，我们使用一个双端队列deque保存有可能是滑动窗口最大值的数字的下标。在存入一个数字的下标之前，首先要判断队列里已有数字是否小于待存入的数字。如果已有数字小于待存入的数字，说明这些数字已经不可能是滑动窗口的最大值，因此它们会依次从队列的尾部删除（调用deque.pollLast()）。同时，如果队列头部的数字已经从窗口中滑出，滑出的数字也需要从队列的头部删除（调用deque.pollFirst）。由于队列头部和尾部都有可能删除数字，因此这也是我们需要双端队列的原因。\npublic List maxInWindows(int[] nums, int size) {\n    if (nums == null || nums.length == 0 || size  nums.length) return new ArrayList<>();\n    List result = new ArrayList<>();\n    Deque deque = new LinkedList<>();\n\n    for (int i = 0; i = nums[deque.peekLast()]) {\n            deque.pollLast();\n        }\n        deque.offer(i); // 作用等同于deque.offerLast()\n    }\n    for (int i = size; i = nums[deque.peekLast()]) { // 从尾部删除队列中等于或小于当前元素的元素，因为这些元素不可能成为滑动窗口的最大值\n            deque.pollLast();\n        }\n        while (!deque.isEmpty() && i - deque.peekFirst() >= size) { // 从头部删除队列中已经滑出窗口的元素\n            deque.pollFirst();\n        }\n        deque.offer(i);\n    }\n    result.add(nums[deque.peekFirst()]);\n\n    return result;\n}\n\n"},"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html":{"url":"JianZhiOffer/Stack & Queue & PriorityQueue/数据流中的中位数.html","title":"数据流中的中位数","keywords":"","body":"题目\n如何得到一个数据流中的中位数？如果从数据流中读出奇数个数值，那么中位数就是所有数值排序之后位于中间的数值。如果从数据流中读出偶数个数值，那么中位数就是所有数值排序之后中间两个数值的平均值。\n思路\n由于我们需要从一个数据流中读出数据并计算中位数，因此我们需要用一个数据容器存储数据流中的所有数据并同时考虑插入数据和读取中位数这两个操作的时间复杂度。\n容易想到的是用一个数组保存数据流中的所有数据，如果数据是有序的，则我们在插入一个新数据到数据流时需要移动其他数据以保持数据的有序性，时间复杂度为O(N)，读取中位数时由于数组是有序的因此直接读就可以了，时间复杂度是O(1)。如果数组是无序的，插入数据的时间复杂度是O(1)，读取中位数可以使用partition函数，时间复杂度为O(N)（关于partition的时间复杂度分析比较复杂，详见《算法导论》）。\n如果采用二叉搜索树作为数据容器的话，插入数据的平均时间复杂度是O(logN)，读取中位数的平均时间复杂度为O(logN)，但是在最坏情况下，即二叉搜索树退化为一个单链表时，插入和读取的时间复杂度是O(N)。我们可以使用一个改进的AVL树作为数据容器，将平衡因子定义为左右子树节点数据之差，这样插入的时间复杂度为O(logN)，读取的时间复杂为O(1)（根节点的值或根节点和左子节点或右子节点的值的平均值）。但是大部分的编程语言没有实现我们定义的这种AVL树，因此我们需要再分析其他的方法。\n假设数据在容器中已经排好序，中位数可以由p1和p2两个指针指向的数得到。如果容器中数据的数目是奇数，则中位数由p1和p2共同指向；如果容器中数据的数目是偶数，则中位数是p1和p2指向的数的平均值。注意到整个数据容器被我们分成了两部分，左边部分的数据比右边部分的数据小，并且p1指向的数据是左边部分最大的数，p2指向的数据是右边部分最小的数，见下图：\n\n\n\nN1\nN2\n...\nNm\nNm+1\nNm+2\n...\nN2m\nN2m+1\n\n\n\n\n\n\n\n\nP1, P2\n\n\n\n\n\n\n\n\n\nN1\nN2\n...\nNm\nNm+1\n...\nN2m-1\nN2m\n\n\n\n\n\n\n\nP1\nP2\n\n\n\n\n\n因此我们可以用一个最大堆保存左边部分的数据，用一个最小堆保存右边部分的数据，p1和p2分别指向最大堆和最小堆的堆顶。\n在插入数据时我们需要确保数据被平均分配到两个堆中，即两个堆中数据的数目之差不能超过1。为了实现实现平均分配，我们约定在数据的总数目是偶数时把数据插入到最小堆中，否则插入到最大堆中。同时，我们还要保证最大堆中的所有数据都要小于最小堆中的数据。当数据的总数目是偶数时，按照我们的约定会把数据插入到最小堆中，如果这个数据比最大堆中的一些数据要小该怎么办呢？我们可以先把数据插入到最大堆中，然后拿出此时最大堆中最大的元素，即堆顶元素，将其插入到最小堆中，这样就保证了最小堆中的所有数字都大于最大堆中的数字。当需要把一个数据插入到最大堆但是这个数据比最小堆中的一些数据要大时同理进行分析。\n采用最大堆和最小堆作为数据容器时，插入数据的时间复杂度为O(logN)，读取中位数的时间复杂度为O(1)。\nclass DynamicArray {\n\n    private PriorityQueue max; // 最大堆\n    private PriorityQueue min; // 最小堆\n\n    DynamicArray() {\n        min = new PriorityQueue<>();\n        max = new PriorityQueue<>(new Comparator() {\n            @Override\n            public int compare(Integer o1, Integer o2) {\n                return o2 - o1;\n            }\n        });\n    }\n\n    // 向数据流中插入一个数据\n    public void insert(int num) {\n        int size = max.size() + min.size();    // 当前数据流中数据的总数\n        if ((size & 1) == 0) {    // 如果当前数据流中数据的总数是偶数，将其插入到最小堆中\n            if (max.size() > 0 && num  0 && num > min.peek()) {\n                min.offer(num);\n                num = min.poll();\n            }\n            max.offer(num);\n        }\n    }\n\n    // 获取当前数据流中所有数据的中位数\n    public int getMedian() {\n        int size = max.size() + min.size();    // 当前数据流中数据的总数\n        if ((size & 1) == 0) {    // 如果数据流中数据的总数为偶数，返回中间的两个数的平均值\n            return (max.peek() + min.peek()) / 2;    // 如果数据流中数据的总数为奇数，返回中间的数\n        } else {\n            return min.peek();  // 注意，虽然在前面的分析中，如果数据流中数据的总数是奇数，p1和p2同时指向数据流中间的那个数，这里无论是返回最小堆的堆顶元素还是最大堆的堆顶元素应该都是可以的。但是在实现上只有最小堆的堆顶才指示中间的那个数，因此这里只能返回最小堆的堆顶元素\n        }\n    }\n}\n\n"},"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html":{"url":"JianZhiOffer/Stack & Queue & PriorityQueue/用两个栈实现队列.html","title":"用两个栈实现队列","keywords":"","body":"题目\n用两个栈实现一个队列，完成队列的入队offer()和出队poll()操作。 队列中的元素类型为int。\n思路\npush时将数push到stack1中，pop时，从stack2中pop，如果stack2为空，则先将stack1中的所有数pop到stack2中再从stack2中pop。\nclass MyQueue {\n\n    Stack stack1;\n    Stack stack2;\n\n    public MyQueue() {\n        stack1 = new Stack<>();\n        stack2 = new Stack<>();\n    }\n\n    public void offer(int num) {\n        stack1.push(num);\n    }\n\n    public int poll() {\n        if (stack2.isEmpty()) {\n            while (!stack1.isEmpty()) {\n                stack2.push(stack1.pop());\n            }\n        }\n        return stack2.pop();\n    }\n}\n\n扩展\n用两个队列实现一个栈，完成栈的入栈push()和出栈pop()操作。 栈中的元素类型为int。\n思路\n我们通过一系列栈的push和pop操作来分析两个队列模拟一个栈的过程。表格的第一列表示queue1，第二列表示queue2。现在我们向栈中依次push进1,2,3三个数，由于初始时queue1和queue2都是空的，因此插入哪个queue都可以。我们不妨将1,2,3依次插入到queue2，此时两个queue中元素的情况如下图所示：\nqueue1    queue2\n          3\n          2\n          1\n现在我们对栈执行pop，由于栈的后进先出特性可知出栈元素应该是3，然而直接操作queue2的话会从队头删除元素，也就是删除1。此时我们可以先把queue2中的1,2插入到queue1中，再从queue2中删除3。执行出栈后两个queue中元素的情况如下图所示：\nqueue1    queue2\n\n  2\n  1\n如果再执行一次pop的话，我们就把queue1中的1插入到queue2中，然后从queue1中删除1。\n总结上述过程我们可以得到以下结论：整个过程中我们保持两个队列中至少一个队列为空。当执行push时，如果两个队列均为空，我们约定将元素插入到queue2中；如果两个队列一个未空，另一个不为空，我们将元素插入到那个非空的队列中。当执行pop时，我们不断将非空的那个队列中的元素出队，直到该队列只含有一个元素，此时该元素即为出栈的元素，我们将该元素出队并返回。\nclass MyStack {\n\n    Queue queue1;\n    Queue queue1;\n\n    public MyStack() {\n        queue1 = new LinkedList<>();\n        queue2 = new LinkedList<>();\n    }\n\n    public void push(int num) {\n        if (queue1.isEmpty()) {\n            queue2.offer(num);\n        } else {\n            queue1.offer(num);\n        }\n    }\n\n    public int pop() {\n        if (!queue1.isEmpty()) {\n            while (queue1.size() > 1) {\n                queue2.offer(queue1.poll());\n            }\n            return queue1.poll();\n        } else {\n            while (queue2.size() > 1) {\n                queue1.offer(queue2.poll());\n            }\n            return queue2.poll();\n        }\n    }\n}\n\n"},"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html":{"url":"JianZhiOffer/Stack & Queue & PriorityQueue/栈的压入、弹出序列.html","title":"栈的压入、弹出序列","keywords":"","body":"题目\n输入两个整数序列，第一个序列表示栈的入栈顺序，请判断第二个序列是否可能为该栈的出栈顺序。假设压入栈的所有数字均不相等。例如序列1, 2, 3, 4, 5是某栈的入栈顺序，序列4, 5, 3, 2, 1是该入栈序列对应的一个出栈序列，但4, 3, 5, 1, 2就不可能是该入栈序列的出栈序列。两个序列的长度相等。\n思路\n使用一个辅助栈stack。如果出栈序列中的当前元素刚好是栈顶元素，那么直接弹出。否则，我们把入栈序列中还没有入栈的数字压入stack，直到把下一个需要出栈的元素压入栈为止。如果入栈序列中所有的数字都入栈了仍然没有找到下一个需要出栈的数字，那么该序列不可能是一个出栈序列。\npublic boolean isPopOrder(int[] push,int[] pop) {\n    if (push == null || push.length == 0 || pop == null || pop.length == 0) return false;\n    Stack stack = new Stack<>();\n    int p1 = 0;    // 指示入栈序列中的元素\n    int p2 = 0;    // 指示出栈序列中的元素\n    while (p2 \n"},"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html":{"url":"JianZhiOffer/Stack & Queue & PriorityQueue/最小的k个数.html","title":"最小的k个数","keywords":"","body":"题目\n输入n个整数， 找出其中最小的k个数字。例如输入[4, 5, 1, 6, 2, 7, 3, 8]，则最小的k个数字是1, 2, 3, 4。\n思路1\n把数组进行排序，排在最前面的k个数就是最小的k个数。代码略。\n时间复杂度：O(NlogN)\n思路2\n从“数组中出现次数超过一半的数字”中我们可以得到启发，我们同样可以用partition函数来解决这个问题。我们基于数组的第k个数字来进行调整，使得所有小于第k个数字的数都排在它的左边，所有大于第k个数字的数都排在它的右边。这样调整之后，位于数组左边的k个数字就是最小的k个数字（但是这k个数字不一定是排好序的）。\npublic List GetLeastKNumbers(int[] nums, int k) {\n    if (nums == null || nums.length == 0 || k  nums.length) return new ArrayList<>();\n    List result = new ArrayList<>();\n    int lo = 0;\n    int hi = nums.length - 1;\n    int index = partition(nums, lo ,hi);\n\n    while (index != k - 1) {\n        if (index \n时间复杂度：O(NlogN)\n思路3\n由于是找最小的k个数，我们可以先用一个大顶堆保存数组的前k个数，之后从k + 1开始遍历数组中剩下的数，如果当前数比堆顶元素小，将堆顶元素出堆，同时将当前元素进堆。遍历完成后堆中保存的即是最小的k个数。\n注意，Java默认创建的是小顶堆。\npublic List GetLeastKNumbers(int[] nums, int k) {\n    if (nums == null || nums.length == 0 || k  nums.length) return new ArrayList<>();\n    // 创建一个大顶堆\n    PriorityQueue pq = new PriorityQueue<>(new Comparator() {\n        @Override\n        public int compare(Integer o1, Integer o2) {\n            return o2 - o1;\n        }\n    });\n\n    for (int i = 0; i  result = new ArrayList<>(pq);\n\n    return result;\n}\n\n时间复杂度：O(NlogK)\n解法比较\n\n\n\n\n基于partition函数的解法\n基于堆或红黑树的解法\n\n\n\n\n时间复杂度\nO(N)\nO(NlogK)\n\n\n是否需要修改输入数组\n是\n否\n\n\n是否适用于海量数据\n否\n是\n\n\n\n"},"JianZhiOffer/String/":{"url":"JianZhiOffer/String/","title":"String","keywords":"","body":""},"JianZhiOffer/String/表示数值的字符串.html":{"url":"JianZhiOffer/String/表示数值的字符串.html","title":"表示数值的字符串","keywords":"","body":"题目\n请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，字符串\"+100\",\"5e2\",\"-123\",\"3.1416\",\"-1E-16\"都表示数值，但\"12e\",\"1a3.14\",\"1.2.3\",\"+-5\",\"12e+5.4\"都不是。\n思路\n书上C++代码的Java改写。用变量curr指示当前字符。判断的过程是，首先看第一个字符是不是正负号。如果是，在字符串上移动一个字符，继续扫描剩余的字符串中0 - 9的数位。如果是一个小数，则会遇到小数点。此外，如果是用科学计数法表示的数值，在整数或者小数的后面还有可能遇到e或E。函数scanDigits()用来扫描0 - 9中的数字，isExponential()函数用来判断E(...)是不是合法的。\nprivate int curr = 0;    // 指示字符串str的当前字符\n\npublic boolean isNumeric(String str) {\n    if (str == null || str.length() == 0) return false;\n    if (str.charAt(curr) == '+' || str.charAt(curr) == '-') curr++;\n    if (curr == str.length()) return false;\n    scanDigits(str);\n    if (curr = '0' && str.charAt(curr) \n"},"JianZhiOffer/String/打印从1到最大的n位数.html":{"url":"JianZhiOffer/String/打印从1到最大的n位数.html","title":"打印从1到最大的n位数","keywords":"","body":"题目\n输入数字n，按顺序打印出从1到最大的n位数。比如输入3，则打印出1, 2, 3一直到999。\n思路1\n先求出最大的n位数number，然后用一个循环打印出从1到number的每一个数。\npublic void printToMaxDigits(int n) {\n    if (n \n但是当n非常大导致int和long都不能表示最大的n位数时，程序会产生溢出，因此我们需要尝试其他的方法。\n思路2\n我们可以用字符串表示大数，进而我们需要在字符串上模拟整数的加1操作。\npublic void printToMaxDigits(int n) {\n    if (n = 0; i--) {\n        int curr = sb.charAt(i) - '0' + carry;\n        if (i == sb.length() - 1) curr += 1;\n        if (curr \n思路3\n上述代码虽然思路很简洁，但是代码比较繁琐。观察数字产生的规律：000, 001, 002, ..., 009, 010, 011, ..., 019, ...，我们发现每一位上其实都是执行一个0 - 9的全排列，因此我们可以用递归解决这个问题。\npublic void printToMaxDigits(int n) {\n    if (n \n注意：上述代码的运行结果为：\n\n1\n2\n3\n4\n5\n...\n在1前面会多打印出来一个空行，这是因为\"000\"也会打印出来，这个空行是由print(temp), temp = {0, 0, 0}产生的。\n"},"JianZhiOffer/String/第一个只出现一次的字符.html":{"url":"JianZhiOffer/String/第一个只出现一次的字符.html","title":"第一个只出现一次的字符","keywords":"","body":"题目\n在一个字符串(0 \n思路\n先遍历一遍字符串，用一个Map统计每个字符的出现次数，接着再遍历一遍字符串，找到第一个出现次数为1的字符，并返回它的位置。\npublic int FirstNotRepeatingChar(String str) {\n    if (str == null || str.length() == 0) return -1;\n    char[] map = new char[256];\n\n    for (int i = 0; i \n"},"JianZhiOffer/String/翻转字符串.html":{"url":"JianZhiOffer/String/翻转字符串.html","title":"翻转字符串","keywords":"","body":"题目\n输入一个英文句子，翻转句子中单词的顺序，但单词内字符的顺序不变。为简单起见，标点符号和普通字母一样处理。例如输入字符串\"I am a student\"，则输出\"student. a am I\"。\n思路1\n先将句子划分成一个个单词，然后从后向前构造出结果。注意，如果原先的句子中没有单词，则直接返回原先的句子即可。\npublic String ReverseSentence(String str) {\n   if (str == null || str.length() == 0) return \"\";\n   String[] words = str.split(\" \");\n   if (words.length == 0) return str;\n   StringBuilder sb = new StringBuilder();\n   boolean isFirst = true;    // 指示当前单词是不是要构造的第一个单词\n   for (int i = words.length - 1; i >= 0; i--) {\n       if (isFirst) {\n           sb.append(words[i]);\n           isFirst = false;\n       } else {\n           sb.append(\" \" + words[i]);\n       }\n   }\n   return sb.toString();\n}\n\n思路2\n先对整个句子作一个翻转，再依次将句子中的每个单词作一个翻转，即得到结果。\npublic String reverseSentence(String str) {\n    if (str == null || str.length() == 0) return \"\";\n    String temp = reverse(str);    // 翻转整个句子，将结果保存到temp中\n    int start = 0;\n    int end = temp.indexOf(\" \", start);\n    StringBuilder sb = new StringBuilder();\n    boolean isFirst = true;\n    while (end != -1) {\n        String word = reverse(temp.substring(start, end));\n        if (isFirst) {\n            sb.append(word);\n            isFirst = false;\n        } else {\n            sb.append(\" \" + word);\n        }\n        start = end+1;\n        end = temp.indexOf(\" \", start);\n    }\n    String word = reverse(temp.substring(start));\n    if (isFirst) sb.append(word);\n    else sb.append(\" \" + word);\n    return sb.toString();\n}\n\n// 反转字符串s\nprivate String reverse(String s) {\n    return new StringBuilder(s).reverse().toString();\n}\n\n扩展\n左旋转字符串。字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的末尾。请定义一个函数实现字符串的左旋转操作。例如输入字符串\"abcdefg\"和数字2，该函数将返回左旋转两位得到的结果\"cdefgab\"。\n思路1\n取字符串的前n位作为子串left，取余下的部分作为子串right，将left和right进行拼接即可。\npublic String leftRotateString(String s, int n) {\n   if (s == null || s.length() == 0 || n  s.length()) return \"\";\n   String left = s.substring(0, n);\n   String right = s.substring(n);\n   return right + left;\n}\n\n思路2\n先反转字符串的前n个字符，再反转字符串的后面部分，再反转整个字符串，即可得到字符串左旋转n位的结果。\npublic String leftRotateString(String s, int n) {\n    if (s == null || s.length() ==0 || n  s.length()) return \"\";\n    String left = s.substring(0, n);\n    String right = s.substring(n);\n    return reverse(reverse(left) + reverse(right));\n}\n\n//反转字符串\nprivate String reverse(String s) {\n    return new StringBuilder(s).reverse().toString();\n}\n\n"},"JianZhiOffer/String/替换空格.html":{"url":"JianZhiOffer/String/替换空格.html","title":"替换空格","keywords":"","body":"题目\n请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为We Are Happy.则经过替换之后的字符串为We%20Are%20Happy。\n思路1\n直接使用Java的库函数replaceAll()。\npublic String replaceSpace(StringBuilder str) {\n    return str.toString().replaceAll(\" \", \"%20\");\n}\n\n思路2\n容易想到的做法是每遇到一个空格，将其替换为\"%20\"，由于是把1个字符替换为2个字符，所以其后所有的字符都需要向后移动2位，效率不高。可以先求出原字符串中空格的总数，据此计算出替换后的字符串的新的长度，利用两个指针p1和p2，p1指示旧的字符串的末尾，p2指示新的字符串的末尾，从后向前进行替换。\npublic String replaceSpace(StringBuilder str) {\n    if (str == null || str.length() == 0) return \"\";\n    int totalBlanks = 0;\n    for (int i = 0; i = 0 && p1 \n"},"JianZhiOffer/String/字符串的排列.html":{"url":"JianZhiOffer/String/字符串的排列.html","title":"字符串的排列","keywords":"","body":"题目\n输入一个字符串,按字典序打印出该字符串中字符的所有排列。例如输入字符串abc,则打印出由字符a, b, c所能排列出来的所有字符串abc, acb, bac, bca, cab和cba。\n思路1\n回溯法。\npublic List permutation(String str) {\n    if (str == null || str.length() == 0) return new ArrayList<>();\n    List result = new ArrayList<>();\n    dfs(str, new char[str.length()], 0, new boolean[str.length()], result);\n    return result;\n}\n\nprivate void dfs(String str, char[] selected, int curr, boolean[] vis, List result) {\n    if (curr == str.length()) {\n        result.add(String.valueOf(selected));\n    } else {\n        for (int i = 0; i \n思路2\n书上的思路。求字符串的排列可以分成两步：首先求所有可能出现在第一个位置的字符，即把第一个字符和后面的字符依次交换（也可以和它自己交换）；第二步固定第一个字符，求后面所有字符的排列。这个时候仍把后面的所有字符分成两部分，后面字符的第一个字符以及这个字符之后的所有字符，然后把第一个字符逐一和它后面的字符交换。这是一个递归的过程。为了方便交换，我们在代码中将字符串转换为字符数组。\npublic List permutation(String str) {\n    if (str == null || str.length() == 0) return new ArrayList<>();\n    List result = new ArrayList<>();\n    char[] chs = str.toCharArray();\n    helper(chs, 0, result);\n    return result;\n}\n\nprivate void helper(char[] chs, int begin, List result) {\n    if (begin == chs.length) {\n        result.add(String.valueOf(chs));\n    } else {\n        for (int i = begin; i \n"},"JianZhiOffer/String/字符流中第一个只出现一次的字符.html":{"url":"JianZhiOffer/String/字符流中第一个只出现一次的字符.html","title":"字符流中第一个只出现一次的字符","keywords":"","body":"题目\n请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符\"go\"时，第一个只出现一次的字符是'g'；当从该字符流中读出前6个字符\"google\"时，第一个只出现一次的字符是'l'。\n思路\n可以在类中使用一个StringBuilder记录字符流，每次insert时向sb中append。当需要找出字符流中第一个不重复的字符时，根据题目“第一个只出现一次的字符”中的方法，先遍历一遍sb，用一个Map记录sb中每个字符的出现次数，然后再遍历一遍sb，根据Map找到第一个不重复的字符。但是使用这种方法，当字符流中的字符很多时，每次调用firstAppearingOnce()找当前字符流中第一个不重复的字符时都要遍历一遍字符流，那么时间开销会很大。更好的做法是用一个数组occurrence记录当前字符流中各个字符的出现情况，occurrence的大小为256。初始时，occurrence中的每个元素置为-1，表示所有的字符都还未出现过。之后每次insert一个字符时，设当前字符的ASCII码为i，如果当前字符还未出现过，则将当前字符在字符流中的下标index赋给occurrence[i]；如果当前字符已经出现过，则我们就不需要考虑这个字符了，约定把-2赋给occurrence[i]。在函数firstAppearingOnce()中，我们遍历occurrence，并用ch和minIndex记录第一个只出现一次的字符和它的下标。遍历结束返回ch即可。\n总结occurrence[i]各个值的含义如下：\n\noccurrence[i] = -1：ASCII码为i的字符还未出现过\n\noccurrence[i] >= 0：ASCII码为i的字符出现了一次，第一次出现的位置为occurrence[i]\n\noccurrence[i] = -2：ASCII码为i的字符出现了多次\n\n\nclass CharacterStream {\n\n    private int[] occurrence;    // 记录字符流中每个字符的出现情况\n    private int index;    // 字符流中字符的个数\n\n    public CharacterStream() {\n        occurrence = new int[256];\n        for (int i = 0; i = 0) {    // 如果当前字符已经出现过，将occurrence[c]赋为-2\n            occurrence[c] = -2;\n        }\n    }\n\n    public char firstAppearingOnce() {\n        char c = '#';\n        int minIndex = Integer.MAX_VALUE;\n        for (int i = 0; i = 0 && occurrence[i] \n"},"JianZhiOffer/Tree/":{"url":"JianZhiOffer/Tree/","title":"Tree","keywords":"","body":""},"JianZhiOffer/Tree/从上到下打印二叉树.html":{"url":"JianZhiOffer/Tree/从上到下打印二叉树.html","title":"从上到下打印二叉树","keywords":"","body":"题目\n从上往下打印出二叉树的每个节点，同层节点从左至右打印。\n思路\n二叉树的层次遍历。\nprivate void levelOrder(TreeNode root) {\n    if (root == null) return;\n    List> result = new ArrayList<>();\n    Queue queue = new LinkedList<>();\n    queue.offer(root);\n    while (!queue.isEmpty()) {\n        int size = queue.size();\n        List temp = new ArrayList<>();\n        for (int i = 0; i \n扩展\n按之字形顺序打印二叉树。实现一个函数按照之字形顺序打印二叉树，即第一层按照从左向右的顺序打印，第二层按照从右向左的顺序进行打印，第三层再按照从左向右的顺序进行打印，以此类推。\n思路\n按之字形顺序打印二叉树需要两个栈。我们在打印某一行节点的时候，把下一层的节点保存到相应的栈里。如果当前打印的是奇数层，由于奇数层是从左往右打印，其下一层需要从右往左打印，根据栈后进先出的特性，我们在保存下一层节点的时候应该先保存左子节点，再保存右子节点。同理，如果当前打印的是偶数层，则保存下一层节点的时候先保存右子节点，再保存左子节点。\npublic List> print(TreeNode root) {\n    if (root == null) return new ArrayList<>();\n    List> result = new ArrayList<>();\n    Stack stack1 = new Stack<>();    // 保存奇数层的节点\n    Stack stack2 = new Stack<>();    // 保存偶数层的节点\n    int curr = 0;    // curr = 0 : 当前是奇数层; curr = 1 : 当前是偶数层\n    stack1.push(root);\n    while (!stack1.isEmpty() || !stack2.isEmpty()) {\n        if (curr == 0) {\n            List temp = new ArrayList<>();\n            while (!stack1.isEmpty()) {\n                TreeNode node = stack1.pop();\n                temp.add(node.val);\n                // 由于下一层是偶数层需要从右往左打印，因此先加入左子节点，再加入右子节点\n                if (node.left != null) stack2.push(node.left);\n                if (node.right != null) stack2.push(node.right);\n            }\n            result.add(temp);\n            curr = 1 - curr;\n        } else {\n            List temp = new ArrayList<>();\n            while (!stack2.isEmpty()) {\n                TreeNode node = stack2.pop();\n                temp.add(node.val);\n                // 由于下一层是奇数层需要从左往右打印，因此先加入右子节点，再加入左子节点\n                if (node.right != null) stack1.push(node.right);\n                if (node.left != null) stack1.push(node.left);\n            }\n            result.add(temp);\n            curr = 1 - curr;\n        }\n    }    // while\n    return result;\n}\n\n"},"JianZhiOffer/Tree/对称的二叉树.html":{"url":"JianZhiOffer/Tree/对称的二叉树.html","title":"对称的二叉树","keywords":"","body":"题目\n实现一个函数，判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。\n思路\n见代码。\npublic boolean isSymmetrical(TreeNode root) {\n    if (root == null) return true;\n    return helper(root.left, root.right);\n}\n\nprivate boolean helper(TreeNode left, TreeNode right) {\n    if (left == null && right == null) return true;\n    if (left == null || right == null) return false;\n    if (left.val != right.val) return false;\n    return helper(left.left, right.right) && helper(left.right, right.left);\n}\n\n"},"JianZhiOffer/Tree/二叉树的镜像.html":{"url":"JianZhiOffer/Tree/二叉树的镜像.html","title":"二叉树的镜像","keywords":"","body":"题目\n输入一棵二叉树，输出它的镜像。例如输入二叉树如下：\n     8\n    / \\\n   6   10\n  / \\ /  \\\n 5  7 9  11\n输出：\n     8\n    / \\\n   10  6\n  / \\ / \\\n 11 9 7  5\n思路\n前序遍历该树，对每个非叶节点交换其左右两个子节点。\npublic void mirror(TreeNode root) {\n    if (root == null) return;\n    if (root.left == null && root.right == null) return;\n    TreeNode temp = root.left;\n    root.left = root.right;\n    root.right = temp;\n    mirror(root.left);\n    mirror(root.right);\n}\n\n"},"JianZhiOffer/Tree/二叉树的深度.html":{"url":"JianZhiOffer/Tree/二叉树的深度.html","title":"二叉树的深度","keywords":"","body":"题目\n输入一棵二叉树，求该树的深度。从根结点到叶结点依次经过的结点（含根、叶结点）形成树的一条路径，最长的路径的长度为树的深度。\n思路\n当根节点为空时，返回0；否则，返回左子树的深度和右子树的深度的最大值并加1。\npublic int depth(TreeNode root) {\n    if (root == null) return 0;\n    return Math.max(depth(root.left), depth(root.right)) + 1;\n}\n\n扩展\n平衡二叉树。输入一棵二叉树，判断该二叉树是否是平衡二叉树。一个二叉树是平衡二叉树指的是树中所有节点的左子树的深度和右子树的深度差的绝对值不超过1。\n思路\n后序遍历该二叉树，求出当前节点左子树的深度left和右子树的深度right，判断left和right的差的绝对值是否大于1，如果是，说明该二叉树不是平衡二叉树。下面的代码中函数isBalanced()返回当前节点的深度。\nboolean isBalanced;\n\npublic boolean isBalancedTree(TreeNode root) {\n    if (root == null) return true;\n    isBalanced = true;\n    isBalancedTreeCore(root);\n    return isBalanced;\n}\n\nprivate int isBalancedTreeCore(TreeNode root) {\n    if (root == null) return 0;\n    int left = isBalancedTreeCore(root.left);\n    int right = isBalancedTreeCore(root.right);\n    int diff = Math.abs(left - right);\n    if (diff > 1) isBalanced = false;\n    return Math.max(left, right) + 1;\n}\n\n"},"JianZhiOffer/Tree/二叉树的下一个节点.html":{"url":"JianZhiOffer/Tree/二叉树的下一个节点.html","title":"二叉树的下一个节点","keywords":"","body":"题目\n给定一个二叉树和其中的一个节点，找到中序遍历的下一个节点。树中的节点除了有两个分别指向左右子节点的指针以外，还有一个指向父节点的指针。\n思路\n由于中序遍历是从左子树开始的，因此为了找出当前节点中序遍历的下一个节点，我们只需要在当前节点的右子树和父节点中寻找即可。如果当前节点的右子树不为空，则当前节点的下一个节点是右子树中最左边的那个节点；如果当前节点的右子树为空，则我们需要从当前节点的父节点中寻找当前节点的下一个节点。如果当前节点是其父节点的左子树，则当前节点的下一个节点就是其父节点；如果当前节点是父节点的右子树，则我们需要继续从当前的父节点的父节点中寻找，直到找到当前节点是其父节点的左子树，或者父子树为空，即当前节点没有下一个节点。\nclass Node {\n    public int val;\n    public Node left;\n    public Node right;\n    public Node parent;    // 指向当前节点的父节点\n}\n\npublic Node getNextNode(Node node) {\n    if (nodee == null) return null;\n    Node next = null;    // 保存当前节点的中序遍历的下一个节点\n    if (node.right != null) {\n        Node curr = node.right;\n        while (curr != null) {\n            curr = curr.left;\n        }\n        next = curr;\n    } else {\n        Node curr = node;\n        Node parent = node.parent;\n        while (parent != null && curr == parent.right) {\n            curr = parent;\n            parent = parent.parent;\n        }\n        next = parent;\n    }\n    return next;\n}\n\n"},"JianZhiOffer/Tree/二叉树中和为某一值的路径.html":{"url":"JianZhiOffer/Tree/二叉树中和为某一值的路径.html","title":"二叉树中和为某一值的路径","keywords":"","body":"题目\n输入一颗二叉树的根节点和一个整数，打印出二叉树中所有路径和为target的所有路径。路径和为路径中所有节点的和，路径定义为从根结点向下到某个叶结点所经过的结点形成的一个序列。例如给定二叉树如下：\n     10\n    /  \\\n   5   12\n  / \\\n 4   7\n返回该二叉树中所有路径和为22的路径，则返回结果应该为：\n[[10, 5, 7], [10, 12]]\n思路\n由于前序遍历是先从根节点开始访问，因此采用前序遍历处理。每遍历一个节点将当前节点的值进行累加，即target - root.val，同时将当前节点加入到path中。当遍历到叶节点并且target == 0时，将path加到res中。在函数回退的时候记得在path中删除当前节点。\npublic List> findPath(TreeNode root, int target) {\n    if (root == null) return new ArrayList<>();\n    List> result = new ArrayList<>();\n    helper(root, target, new ArrayList<>(), result);\n    return result;\n}\n\nprivate void helper(TreeNode root, int target, List path, List> result) {\n    if (root == null) return;\n    target -= root.val;\n    path.add(root.val);\n    if (root.left == null && root.right == null && target == 0) {\n        result.add(new ArrayList<>(path));    //注意，这里不能直接写成\"result.add(path)\"，那样相当于把path的引用传过去了，然而我们在下面遍历的过程中会改变path中的值，这样会导致之前加入result中的路径的内容也会跟着改变。应该用一个新的ArrayList来承载path的值。\n    }\n    helper(root.left, target, path, result);\n    helper(root.right, target, path, result);\n    path.remove(path.size() - 1);\n}\n\n"},"JianZhiOffer/Tree/二叉搜索树的第k大节点.html":{"url":"JianZhiOffer/Tree/二叉搜索树的第k大节点.html","title":"二叉搜索树的第k大节点","keywords":"","body":"题目\n给定一棵二叉搜索树，请找出其中第k大的节点，k从1开始计数。例如给定如下二叉搜索树：\n     5\n    / \\\n   3   7\n  / \\ / \\\n 2  4 6  8\n按节点数值大小排序，第三个的节点应该是4。\n思路1\n由于二叉搜索树的中序遍历序列是递增的，因此模拟一遍二叉搜索树的中序遍历，每次记录当前节点的编号，当前节点的编号等于k时即找到了第k大的节点。\nprivate TreeNode result;    // 第k大的节点\nprivate int index;    // 指示当前中序遍历到的节点的编号，从1开始\n\npublic TreeNode kthNode(TreeNode root, int k) {\n    if (root == null || k \n思路2\n《Algorithm》中的方法。要求的是树中第k小的节点，假设我们把树中的节点按节点值从小到大排列并从0开始编号，首先求出根节点左子树的节点数t，如果t == k，说明当前节点就是第k小的节点；如果t > k，说明第k小的节点在根节点的左子树中，因此需要继续在左子树中寻找第k小的节点；如果t \npublic TreeNode kthNode(TreeNode root,int k) {\n    if (root == null || k  t) {\n        return kthNodeCore(root.right, k-t-1);\n    } else {\n        return root;\n    }\n}\n\n// 返回root中的节点总数\nprivate int size(TreeNode root){\n    if(root==null) return 0;\n    return size(root.left)+size(root.right)+1;\n}\n\n如果以kthNodeCore(root, k)这种方式调用，则kthNodeCore()应相应修改为：\nprivate TreeNode kthNodeCore(TreeNode root, int k) {\n    if (root == null) return null;\n    int t = size(root.left);\n    if (k  t + 1) {\n        return kthNodeCore(root.right, k-t-1);\n    } else {\n        return root;\n    }\n}\n\n"},"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html":{"url":"JianZhiOffer/Tree/二叉搜索树的后序遍历序列.html","title":"二叉搜索树的后序遍历序列","keywords":"","body":"题目\n输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。假设输入的数组的任意两个数字都互不相同。例如输入数组[5, 7, 6, 9, 11, 10, 8]，返回true，因为这个整数序列是下图所示二叉搜索树的后序遍历结果。\n     8\n    / \\\n   6   10\n  / \\ /  \\\n 5  7 9  11\n如果输入数组是[7, 4, 6, 5]，由于没有哪棵二叉搜索树的后序遍历结果是这个序列，因此返回false。\n思路\n在二叉搜索树的后序遍历序列中，最后一个是根节点，在根节点前所有小于根节点的数构成根节点的左子树，所有大于根节点的数构成根节点的右子树。据此可以在原数组中划分出左子树序列和右子树序列，其中左子树序列中的所有数都比根节点的值小，右子树序列中所有数的值都比根节点的值大。如果在右子树序列中出现小于根节点值的数，说明该序列不是二叉搜索树的后序遍历结果，返回false。接着递归得在左子树序列和右子树序列中继续判断。\npublic boolean verifySequenceOfBST(int[] nums) {\n    if (nums == null || nums.length == 0) return false;\n    return verifySequenceOfBSTCore(nums, 0, nums.length - 1);\n}\n\nprivate boolean verifySequenceOfBSTCore(int[] nums, int lo, int hi) {\n    // special\n    if (lo > hi) return false;\n    if (lo == hi) return true;    // 如果lo == hi，说明当前子数组中只有一个元素，直接返回true\n    int rootValue = nums[hi];    // 根节点的值\n    int mid = lo;    //左子树序列和右子树序列的分界点，表示右子树序列的第一个元素，同时也表示左子树序列中元素的个数\n    for (; mid  rootValue) break;\n    }\n    for (int i = mid; i \n"},"JianZhiOffer/Tree/二叉搜索树与双向链表.html":{"url":"JianZhiOffer/Tree/二叉搜索树与双向链表.html","title":"二叉搜索树与双向链表","keywords":"","body":"题目\n输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。例如对于如下的二叉搜索树：\n     10\n    /  \\\n   6   14\n  / \\ /  \\\n 4  8 12 16\n转换后的结果为：\n46810121416NULL\n思路\n由于需要转换成一个排序的双向链表，而二叉搜索树的中序遍历序列是排序的，因此可以采用中序遍历处理原二叉搜索树。处理时用一个变量prev保存中序遍历的前一个节点，在处理当前节点root时，建立当前节点和prev之间的双向链接关系即可。\nprivate TreeNode prev = null;\n\npublic TreeNode convert(TreeNode root) {\n    if (root == null) return null;\n    convertCore(root);    // 函数执行完后prev指向的是双向链表的尾节点\n    while (prev != null && prev.left != null) {\n        prev = prev.left;\n    }\n    return prev;\n}\n\nprivate void convertCore(TreeNode root) {\n    if (root == null) return;\n    convertCore(root.left);\n    if (prev == null) {\n        prev = root;\n    } else {\n        prev.right = root;\n        root.left = prev;\n        prev = root;\n    }\n    convertCore(root.right);\n}\n\n"},"JianZhiOffer/Tree/树的子结构.html":{"url":"JianZhiOffer/Tree/树的子结构.html","title":"树的子结构","keywords":"","body":"题目\n输入两棵二叉树A，B，判断B是不是A的子结构。我们约定空树不是任意一个树的子结构。例如给定树A：\n    8\n   / \\\n  8   7\n / \\\n9   2\n   / \\\n  4   7\n树B：\n  8\n / \\\n9   2\n可知B是A的子结构。\n思路\n首先在root1中找到和root2的根节点的值一样的节点，然后判断该节点所代表的子树是不是和root2具有相同的结构。\npublic boolean hasSubtree(TreeNode root1, TreeNode root2) {\n    if (root1 == null && root2 == null) return true;    // 约定当root1和root2均为null，root2是root1的子结构，返回true\n    if (root1 == null || root2 == null) return false;\n    boolean isFound = false;\n    if (root1.val == root2.val) isFound = helper(root1, root2);\n    if (!isFound) isFound = hasSubtree(root1.left, root2) || hasSubtree(root1.right, root2);\n    return isFound;\n}\n\nprivate boolean helper(TreeNode root1, TreeNode root2) {\n    if (root2 == null) return true;    // 如果root2 == null，说明root1和root2之前的结构完全相同，这时就算root1 != null，也可以返回true\n    if (root1 == null) return false;    // 如果roo1 == null，借由上一条语句知root2 != null，所以root1和root2的结构不相同，返回false\n    if (root1.val != root2.val) return false;\n    return helper(root1.left, root2.left) && helper(root1.right, root2.right);\n}\n\n扩展\nLeetCode 572。和一题不同的是，这要求树B和树A中的某个子树完全相同。例如给定树A：\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n树B：\n   4 \n  / \\\n 1   2\n返回true。而给定树A：\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n    /\n   0\n树B：\n   4\n  / \\\n 1   2\n返回false。\n思路\n上一题中假设在A中找到了和B的根节点的值相同的节点root后，只要求root所代表的子树中包含和B的结构完全一样的结构即可。而这里要求root所代表的子树和B完全一样，即root及其所有后继节点都要和B完全一样。两者的区别在helper()函数的不同。\npublic boolean hasSubtree(TreeNode root1, TreeNode root2) {\n    if (root1 == null && root2 == null) return true;\n    if (root1 == null || root2 == null) return false;\n    boolean isFound = false;\n    if (root1.val == root2.val) isFound = helper(root1, root2);\n    if (!isFound) isFound = hasSubtree(root1.left, root2) || hasSubtree(root1.right, root2);\n    return isFound;\n}\n\nprivate boolean helper(TreeNode root1, TreeNode root2) {\n    // root1和root2同时访问到null才返回true，一个为null一个不为null或者两个节点的val值不相同都返回false\n    if (root1 == null && root2 == null) return true;\n    if (root1 == null || root2 == null) return false;\n    if (root1.val != root2.val) return false;\n    return helper(root1.left, root2.left) && helper(root1.right, root2.right);\n}\n\n"},"JianZhiOffer/Tree/序列化二叉树.html":{"url":"JianZhiOffer/Tree/序列化二叉树.html","title":"序列化二叉树","keywords":"","body":"题目\n实现两个函数，分别用来序列化和反序列化二叉树。\n思路\n我们知道，如果给定一棵二叉树的前序遍历序列和中序遍历序列，我们可以从中构造出一棵二叉树。因此我们可以先把一棵二叉树序列化成一个前序遍历序列和一个中序遍历序列，然后在反序列化时通过这两个序列重构出原二叉树。但是这个思路有两个缺点，一是二叉树中不能有数值重复的节点，否则我们无法通过这种方法构造出原二叉树。二是只有当两个序列中的数据都读出后才能开始反序列化。如果两个序列是从一个流中读出来的，那么可能就需要等待很长的时间。实际上如果二叉树的序列化是从根节点开始的话，那么相应的反序列化在根节点的数值读出来后就可以开始了。因此我们可以根据前序遍历来序列化和反序列化二叉树。在序列化时，如果当前节点不为空，我们在字符串中加入当前节点的值；如果当前节点为空，我们在字符串中加入一个特殊字符，比如$。在反序列化时，我们每次从字符流中读入一个字符，如果当前字符不是$`，我们创建一个新节点，并继续构建该节点的左子树和右子树；否则，返回空。\n例如给定如下的二叉树：\n     1\n    / \\\n   2   3\n  /   / \\\n 4   5   6\n序列化结果为：1,2,4,$,3,5,$,$,6,$,$\n// 序列化\nprivate boolean isFirst = true;    // 指示当前正在序列化的节点是不是第一个节点\n\npublic String serialize(TreeNode root) {\n    if (root == null) return \"\";\n    StringBuilder sb = new StringBuilder();\n    serializeCore(root, sb);\n    return sb.toString();\n}\n\nprivate void serializeCore(TreeNode root, StringBuilder sb) {\n    if (root == null) {\n        if (isFirst) {\n            sb.append(\"$\");\n            isFirst = false;\n        } else {\n            sb.append(\",$\");\n        }\n    } else {\n        if (isFirst) {\n            sb.append(root.val);\n            isFirst = false;\n        } else {\n            sb.append(\",\" + root.val);\n        }\n        serializeCore(root.left, sb);\n        serializeCore(root.right, sb);\n    }\n}\n\n// 反序列化\nprivate int curr = 0;   // 指示序列化字符串中当前正在反序列的字符的下标\n\npublic TreeNode deserialize(String str) {\n    if (str == null || str.length() == 0) return null;\n    String[] strs = str.split(\",\");\n    return deserializeCore(strs);\n}\n\nprivate TreeNode deserializeCore(String[] strs) {\n    String val = strs[curr++];\n    if (val.equals(\"$\")) return null;\n    TreeNode root = new TreeNode(Integer.parseInt(val));\n    root.left = deserializeCore(strs);\n    root.right = deserializeCore(strs);\n    return root;\n}\n\n"},"JianZhiOffer/Tree/重建二叉树.html":{"url":"JianZhiOffer/Tree/重建二叉树.html","title":"重建二叉树","keywords":"","body":"题目\n输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列[1, 2, 4, 7, 3, 5, 6, 8]和中序遍历序列[4, 7, 2, 1, 5, 3, 8, 6]，则重建二叉树并返回。\n思路\n先根据前序序列的第一个数字创建根节点，接下来在中序序列中找到根节点的位置，这样就能确定左右子树节点的数量，然后在新的前序序列和中序序列中递归地构建其左子树和右子树。前序序列用startPreorder和endPreorder两个变量确定，中序序列可以用startInorder和endInorder两个变量确定。\npublic TreeNode reConstructBinaryTree(int[] preOrder, int[] inOrder) {\n    if (preOrder == null || preOrder.length == 0 || inOrder == null || inOrder.length == 0)\n        return null;\n    return helper(preOrder, inOrder, 0, preOrder.length - 1, 0, inOrder.length - 1);\n}\n\nprivate TreeNode helper(int[] preOrder, int[] inOrder, int startPreorder, int endPreorder, int startInorder, int endInorder) {\n    if (startPreorder > endPreorder || startInorder > endInorder) return null;\n    int rootValue = preOrder[startPreorder];\n    TreeNode root = new TreeNode(rootValue);\n    int rootInorder = startInorder;    // 当前节点在中序序列中的位置\n    while (rootInorder \n"},"LeetCode/":{"url":"LeetCode/","title":"LeetCode","keywords":"","body":"LeetCode\n"},"LeetCode/1. Two Sum.html":{"url":"LeetCode/1. Two Sum.html","title":"1. Two Sum","keywords":"","body":"题目\nGiven an array of integers, return indices of the two numbers such that they add up to a specific target.\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\nExample:\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n思路\n从头开始遍历数组，同时用一个map保存遍历过的元素和它的下标。每遍历一个元素时，我们先判断target - nums[i]是否在map中，如果在，我们就找到了这两个数，如果不在，我们把当前元素和它的下标值加入map。这里也可以将数组排序后用双指针法做，但是由于题目要求返回两个数的下标，排序后会打乱元素的下标，因此这里用这个方法不合适。\npublic int[] twoSum(int[] nums, int target) {\n    if (nums == null || nums.length == 0) return new int[]{};\n    Map map = new HashMap<>();\n    for (int i = 0; i \n扩展\n如果不要求返回两个数在数组中的下标而是两个数的值的话可以用双指针法做。先对数组进行排序，用lo和hi两个指针分别指向数组的开头和结尾，当两个指针指向的元素的和等于target时，即找到了这两个数；当和小于target时，我们向后移动lo以增大和；当和大于target时我们向前移动hi以减小和。\npublic int[] twoSum(int[] nums, int target) {\n    if (nums == null || nums.length == 0) return new int[]{};\n    int lo = 0;\n    int hi = nums.length - 1;\n    while (lo \n"},"LeetCode/2. Add Two Numbers.html":{"url":"LeetCode/2. Add Two Numbers.html","title":"2. Add Two Numbers","keywords":"","body":"题目\nYou are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\nExample:\nInput: (2 -> 4 -> 3) + (5 -> 6 -> 4)\nOutput: 7 -> 0 -> 8\nExplanation: 342 + 465 = 807.\n思路\n创建一个新的链表用来保存相加后的结果。同时遍历两个链表，将两个链表当前节点的值相加得到sum，如果sum  10，创建一个值为sum - 10的节点并将其链接到新链表中，同时需要设置进位carry为1。由于两个链表的长度可能不同，因此遍历两个链表的指针可能不是同时到达各自链表的末尾。若p == null, q != null，即一个链表已经遍历到了末尾，另一个链表还没有遍历末尾，此时需要把p表示的数当做0再和q表示的数相加。此外，如果两个链表都已经遍历完了但是carry = 1，说明在最高位上发生了进位，此时需要再额外创建一个值为1的节点并将其链接到新链表中。\npublic ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n    if (l1 == null || l2 == null) return null;\n    ListNode dummyHead = new ListNode(0);    // 新链表的虚拟头结点\n    ListNode curr = dummyHead;\n    ListNode p1 = l1;\n    ListNode p2 = l2;\n    int carry = 0;\n\n    while (p1 != null || p2 != null) {\n        int x = p1 == null ? 0 : p1.val;\n        int y = p2 == null ? 0 : p2.val;\n        int sum = x + y + carry;\n        int carry = sum / 10;\n        curr.next = new ListNode(sum % 10);\n        curr = curr.next;\n        if (p1 != null) p1 = p1.next;\n        if (p2 != null) p2 = p2.next;\n    }\n    if (carry == 1) {\n        curr.next = new ListNode(1);\n    }\n\n    return dummyHead.next;\n}\n\n"},"LeetCode/3. Longest Substring Without Repeating Characters.html":{"url":"LeetCode/3. Longest Substring Without Repeating Characters.html","title":"3. Longest Substring Without Repeating Characters","keywords":"","body":"题目\nGiven a string, find the length of the longest substring without repeating characters.\nExample 1:\nInput: \"abcabcbb\"\nOutput: 3 \nExplanation: The answer is \"abc\", with the length of 3.\nExample 2:\nInput: \"bbbbb\"\nOutput: 1\nExplanation: The answer is \"b\", with the length of 1.\nExample 3:\nInput: \"pwwkew\"\nOutput: 3\nExplanation: The answer is \"wke\", with the length of 3. \n             Note that the answer must be a substring, \"pwke\" is a subsequence and not a substring.\n思路1\n穷举所有的子串，分别判断每个子串中是否含有重复字符，记录不含重复字符的最长子串的长度。代码略。\n时间复杂度：O(N^3)\n思路2\n滑动窗口。使用[i, j)表示窗口。我们用一个set保存当前窗口[i, j)中的所有字符，然后我们向右移动j，如果s[j]不在set中，我们继续移动j，直到s[j]在set中，此时，我们找到了以为起点的子串的最大长度，即j - i，我们对所有i重复执行上述步骤以求得最后的结果。\npublic int lengthOfLongestSubstring(String s) {\n    if (s == null || s.length() == 0) return 0;\n    int i = 0, j = 0;\n    Set set = new HashSet<>();\n    int result = 0;\n\n    while (i \n时间复杂度：O(2N)（在最坏情况下，字符串中的每个字符都要分别被i和j访问一次）\n思路3\n我们可以对思路2进一步进行优化。当s[j]和[i, j)指示的窗口中的某个字符重复时，假设这个字符的下标为j'，我们没有必要一点点地去移动i，我们只需要将i移动到j'的下一个位置nextPos即可。我们使用一个map记录字符串中每个字符的下一个字符的位置。\npublic int lengthOfLongestSubstring(String s) {\n    if (s == null || s.length == 0) return 0;\n    int i = 0, j = 0;\n    Map map = new HashMap<>();\n    int result = 0;\n\n    while (j  i) i = nextPos;\n        }\n        result = Math.max(result, j - i + 1);\n        map.put(s.charAt(j), j + 1);\n        j++;\n    }\n\n    return result;\n}\n\n时间复杂度：O(N)\n"},"LeetCode/5. Longest Palindromic Substring.html":{"url":"LeetCode/5. Longest Palindromic Substring.html","title":"5. Longest Palindromic Substring","keywords":"","body":"题目\nGiven a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.\nExample 1:\nInput: \"babad\"\nOutput: \"bab\"\nNote: \"aba\" is also a valid answer.\nExample 2:\nInput: \"cbbd\"\nOutput: \"bb\"\n思路1\n我们不难发现一个回文子串是围绕着它的中心进行扩展的，对于一个长度为n的字符串，我们可以找到2n - 1个这样的中心。为什么是2n - 1呢？这是因为除了每个字符可以作为一个中心外，每两个字符中间的位置也可以作为中心，比如\"abba\"，b两个b之间可以作为一个中心。我们遍历每一个中心并对其进行扩展，在得到一个回文子串时检查它的长度是否是最大的。\npublic String longestPalindrome(String s) {\n    if (s == null || s.length() == 0) return \"\";\n    int start = 0;    // 最长回文子串的开始\n    int end = 0;    // 最长回文子串的结尾\n\n    for (int i = 0; i  end - start + 1) {\n            // 这里对于start和end值的取定不太好想，需要找几个例子算一下\n            start = i - (len - 1) / 2;\n            end = i + len / 2;\n        }\n    }\n    return s.substring(start, end + 1);\n}\n\nprivate int expandAroundCenter(String s, int lo, int hi) {\n    while (lo >= 0 && hi \n时间复杂度：O(N^2)\n空间复杂度：O(1)\n思路2\ndp。dp[i, j]表示s(i, ..., j)是否可以构成一个回文子串。如果s(i) == s(j)并且s(i + 1, ..., j - 1)是回文子串，dp[i, j]为true。同时，当我们找到一个回文子串时，检查它的长度是否是最大的。\npublic String longestPalindrome(String s) {\n    if (s == null || s.length() == 0) return \"\";\n    int n = s.length();\n    String result = \"\";    // 当前最长回文子串\n    boolean[][] dp = new boolean[n][n];    // dp[i][j]表示s(i, ..., j)构成的子串是否是回文的\n\n    for (int i = n - 1; i >= 0; i--) {\n        for (int j = i; j  result.length())) {\n                result = s.substring(i, j + 1);\n            }\n        }\n    }\n\n    return result;\n}\n\n时间复杂度：O(N^2)\n空间复杂度：O(N^2)\n"},"LeetCode/7. Reverse Integer.html":{"url":"LeetCode/7. Reverse Integer.html","title":"7. Reverse Integer","keywords":"","body":"题目\nGiven a 32-bit signed integer, reverse digits of an integer.\nExample 1:\nInput: 123\nOutput: 321\nExample 2:\nInput: -123\nOutput: -321\nExample 3:\nInput: 120\nOutput: 21\nNote:\nAssume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.\n思路\n每次取出x最后一位数digit，用result = result  10 + digit更新结果。但是要注意，result = result  10 + digit可能会发生溢出，由于32位int类型的范围是-2147483648 - 2147483647，因此在进行result = result * 10 + digit运算前也应该先判断是否可能发生溢出。可以参考下面这种写法。\n public int reverse(int x) {\n    int result = 0;\n    while (x != 0) {\n        int digit = x % 10;\n        if (result > Integer.MAX_VALUE / 10 || (result == Integer.MAX_VALUE / 10 && digit > 7)) return 0;\n        if (result \n"}}}